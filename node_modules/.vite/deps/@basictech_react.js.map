{
  "version": 3,
  "sources": ["../../dexie/node_modules/.pnpm/tslib@2.3.1/node_modules/tslib/tslib.es6.js", "../../dexie/src/globals/global.ts", "../../dexie/src/functions/utils.ts", "../../dexie/src/errors/errors.js", "../../dexie/src/functions/chaining-functions.js", "../../dexie/src/helpers/debug.ts", "../../dexie/src/helpers/promise.js", "../../dexie/src/functions/temp-transaction.ts", "../../dexie/src/globals/constants.ts", "../../dexie/src/functions/combine.ts", "../../dexie/src/dbcore/keyrange.ts", "../../dexie/src/functions/workaround-undefined-primkey.ts", "../../dexie/src/classes/entity/Entity.ts", "../../dexie/src/functions/cmp.ts", "../../dexie/src/classes/table/table.ts", "../../dexie/src/helpers/Events.js", "../../dexie/src/functions/make-class-constructor.ts", "../../dexie/src/classes/table/table-constructor.ts", "../../dexie/src/classes/collection/collection-helpers.ts", "../../dexie/src/helpers/prop-modification.ts", "../../dexie/src/classes/collection/collection.ts", "../../dexie/src/classes/collection/collection-constructor.ts", "../../dexie/src/functions/compare-functions.ts", "../../dexie/src/classes/where-clause/where-clause-helpers.ts", "../../dexie/src/classes/where-clause/where-clause.ts", "../../dexie/src/classes/where-clause/where-clause-constructor.ts", "../../dexie/src/functions/event-wrappers.ts", "../../dexie/src/globals/global-events.ts", "../../dexie/src/classes/transaction/transaction.ts", "../../dexie/src/classes/transaction/transaction-constructor.ts", "../../dexie/src/helpers/index-spec.ts", "../../dexie/src/helpers/table-schema.ts", "../../dexie/src/functions/quirks.ts", "../../dexie/src/dbcore/get-key-extractor.ts", "../../dexie/src/dbcore/dbcore-indexeddb.ts", "../../dexie/src/classes/dexie/generate-middleware-stacks.ts", "../../dexie/src/classes/version/schema-helpers.ts", "../../dexie/src/classes/version/version.ts", "../../dexie/src/classes/version/version-constructor.ts", "../../dexie/src/helpers/database-enumerator.ts", "../../dexie/src/classes/dexie/vip.ts", "../../dexie/node_modules/.pnpm/safari-14-idb-fix@3.0.0/node_modules/safari-14-idb-fix/dist/index.js", "../../dexie/src/helpers/rangeset.ts", "../../dexie/src/live-query/extend-observability-set.ts", "../../dexie/src/live-query/obs-sets-overlap.ts", "../../dexie/src/live-query/cache/cache.ts", "../../dexie/src/live-query/cache/signalSubscribers.ts", "../../dexie/src/classes/dexie/dexie-open.ts", "../../dexie/src/helpers/yield-support.ts", "../../dexie/src/classes/dexie/transaction-helpers.ts", "../../dexie/src/dbcore/virtual-index-middleware.ts", "../../dexie/src/functions/get-object-diff.ts", "../../dexie/src/dbcore/get-effective-keys.ts", "../../dexie/src/hooks/hooks-middleware.ts", "../../dexie/src/dbcore/cache-existing-values-middleware.ts", "../../dexie/src/live-query/cache/is-cachable-context.ts", "../../dexie/src/live-query/cache/is-cachable-request.ts", "../../dexie/src/live-query/observability-middleware.ts", "../../dexie/src/live-query/cache/adjust-optimistic-request-from-failures.ts", "../../dexie/src/live-query/cache/is-within-range.ts", "../../dexie/src/live-query/cache/apply-optimistic-ops.ts", "../../dexie/src/live-query/cache/are-ranges-equal.ts", "../../dexie/src/live-query/cache/is-super-range.ts", "../../dexie/src/live-query/cache/find-compatible-query.ts", "../../dexie/src/live-query/cache/subscribe-cachentry.ts", "../../dexie/src/live-query/cache/cache-middleware.ts", "../../dexie/src/helpers/vipify.ts", "../../dexie/src/classes/dexie/dexie.ts", "../../dexie/src/classes/observable/observable.ts", "../../dexie/src/classes/dexie/dexie-dom-dependencies.ts", "../../dexie/src/live-query/live-query.ts", "../../dexie/src/classes/dexie/dexie-static-props.ts", "../../dexie/src/live-query/propagate-locally.ts", "../../dexie/src/live-query/enable-broadcast.ts", "../../dexie/src/support-bfcache.ts", "../../dexie/src/functions/propmods/add.ts", "../../dexie/src/functions/propmods/remove.ts", "../../dexie/src/functions/propmods/replace-prefix.ts", "../../dexie/src/index.ts", "../../dexie/src/index-umd.ts", "../../@basictech/react/node_modules/ajv/lib/compile/codegen/code.ts", "../../@basictech/react/node_modules/ajv/lib/compile/codegen/scope.ts", "../../@basictech/react/node_modules/ajv/lib/compile/codegen/index.ts", "../../@basictech/react/node_modules/ajv/lib/compile/util.ts", "../../@basictech/react/node_modules/ajv/lib/compile/names.ts", "../../@basictech/react/node_modules/ajv/lib/compile/errors.ts", "../../@basictech/react/node_modules/ajv/lib/compile/validate/boolSchema.ts", "../../@basictech/react/node_modules/ajv/lib/compile/rules.ts", "../../@basictech/react/node_modules/ajv/lib/compile/validate/applicability.ts", "../../@basictech/react/node_modules/ajv/lib/compile/validate/dataType.ts", "../../@basictech/react/node_modules/ajv/lib/compile/validate/defaults.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/code.ts", "../../@basictech/react/node_modules/ajv/lib/compile/validate/keyword.ts", "../../@basictech/react/node_modules/ajv/lib/compile/validate/subschema.ts", "../../fast-deep-equal/index.js", "../../@basictech/react/node_modules/json-schema-traverse/index.js", "../../@basictech/react/node_modules/ajv/lib/compile/resolve.ts", "../../@basictech/react/node_modules/ajv/lib/compile/validate/index.ts", "../../@basictech/react/node_modules/ajv/lib/runtime/validation_error.ts", "../../@basictech/react/node_modules/ajv/lib/compile/ref_error.ts", "../../@basictech/react/node_modules/ajv/lib/compile/index.ts", "../../@basictech/react/node_modules/ajv/dist/refs/data.json", "../../fast-uri/lib/scopedChars.js", "../../fast-uri/lib/utils.js", "../../fast-uri/lib/schemes.js", "../../fast-uri/index.js", "../../@basictech/react/node_modules/ajv/lib/runtime/uri.ts", "../../@basictech/react/node_modules/ajv/lib/core.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/core/id.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/core/ref.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/core/index.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/limitNumber.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/multipleOf.ts", "../../@basictech/react/node_modules/ajv/lib/runtime/ucs2length.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/limitLength.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/pattern.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/limitProperties.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/required.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/limitItems.ts", "../../@basictech/react/node_modules/ajv/lib/runtime/equal.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/const.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/enum.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/validation/index.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/items.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/items2020.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/contains.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/dependencies.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/properties.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/not.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/anyOf.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/oneOf.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/allOf.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/if.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/thenElse.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/applicator/index.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/format/format.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/format/index.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/metadata.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/draft7.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/discriminator/types.ts", "../../@basictech/react/node_modules/ajv/lib/vocabularies/discriminator/index.ts", "../../@basictech/react/node_modules/ajv/dist/refs/json-schema-draft-07.json", "../../@basictech/react/node_modules/ajv/lib/ajv.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/codegen/code.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/codegen/scope.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/codegen/index.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/util.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/names.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/errors.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/validate/boolSchema.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/rules.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/validate/applicability.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/validate/dataType.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/validate/defaults.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/code.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/validate/keyword.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/validate/subschema.ts", "../../@basictech/schema/node_modules/json-schema-traverse/index.js", "../../@basictech/schema/node_modules/ajv/lib/compile/resolve.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/validate/index.ts", "../../@basictech/schema/node_modules/ajv/lib/runtime/validation_error.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/ref_error.ts", "../../@basictech/schema/node_modules/ajv/lib/compile/index.ts", "../../@basictech/schema/node_modules/ajv/dist/refs/data.json", "../../@basictech/schema/node_modules/ajv/lib/runtime/uri.ts", "../../@basictech/schema/node_modules/ajv/lib/core.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/core/id.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/core/ref.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/core/index.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/limitNumber.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/multipleOf.ts", "../../@basictech/schema/node_modules/ajv/lib/runtime/ucs2length.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/limitLength.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/pattern.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/limitProperties.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/required.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/limitItems.ts", "../../@basictech/schema/node_modules/ajv/lib/runtime/equal.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/const.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/enum.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/validation/index.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/items.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/items2020.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/contains.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/dependencies.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/properties.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/not.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/anyOf.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/oneOf.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/allOf.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/if.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/thenElse.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/applicator/index.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/format/format.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/format/index.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/metadata.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/draft7.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/discriminator/types.ts", "../../@basictech/schema/node_modules/ajv/lib/vocabularies/discriminator/index.ts", "../../@basictech/schema/node_modules/ajv/dist/refs/json-schema-draft-07.json", "../../@basictech/schema/node_modules/ajv/lib/ajv.ts", "../../@basictech/react/src/AuthContext.tsx", "../../@basictech/react/src/sync/index.ts", "../../@basictech/react/src/sync/syncProtocol.js", "../../@basictech/react/src/config.ts", "../../@basictech/react/src/schema.ts", "../../@basictech/react/src/db.ts", "../../@basictech/react/package.json", "../../@basictech/react/src/index.ts", "../../jwt-decode/build/esm/index.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../uuid/dist/esm-browser/v7.js", "../../dexie/import-wrapper.mjs", "../../dexie-observable/src/utils.js", "../../dexie-observable/src/override-create-transaction.js", "../../dexie-observable/src/wakeup-observers.js", "../../dexie-observable/src/change_types.js", "../../dexie-observable/src/hooks/creating.js", "../../dexie-observable/src/hooks/updating.js", "../../dexie-observable/src/hooks/deleting.js", "../../dexie-observable/src/hooks/crud-monitor.js", "../../dexie-observable/src/on-storage.js", "../../dexie-observable/src/override-open.js", "../../dexie-observable/src/intercomm.js", "../../dexie-observable/src/override-parse-stores-spec.js", "../../dexie-observable/src/delete-old-changes.js", "../../dexie-observable/src/Dexie.Observable.js", "../../dexie-syncable/dist/dexie-syncable.es.js", "../../@basictech/schema/index.ts", "../../dexie-react-hooks/src/useObservable.ts", "../../dexie-react-hooks/src/useLiveQuery.ts", "../../dexie-react-hooks/src/usePermissions.ts"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n", "declare var global;\nexport const _global: any =\n    typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n    typeof window !== 'undefined' ? window :\n    global;\n", "﻿import { _global } from \"../globals/global\";\nexport const keys = Object.keys;\nexport const isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise){\n    // In jsdom, this it can be the case that Promise is not put on the global object.\n    // If so, we need to patch the global object for the rest of the code to work as expected.\n    // Other dexie code expects Promise to be on the global object (like normal browser environments)\n    _global.Promise = Promise;\n}\nexport { _global }\n\nexport function extend<T extends object,X extends object>(obj: T, extension: X): T & X  {\n    if (typeof extension !== 'object') return obj as T & X;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj as T & X;\n}\n\nexport const getProto = Object.getPrototypeOf;\nexport const _hasOwn = {}.hasOwnProperty;\nexport function hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\n\nexport function props (proto, extension) {\n    if (typeof extension === 'function') extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\n\nexport const defineProperty = Object.defineProperty;\n\nexport function setProp(obj, prop, functionOrGetSet, options?) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        {get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true} :\n        {value: functionOrGetSet, configurable: true, writable: true}, options));\n}\n\nexport function derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\n\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\nexport function getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor (proto, prop);\n}\n\nconst _slice = [].slice;\nexport function slice(args, start?, end?) {\n    return _slice.call(args, start, end);\n}\n\nexport function override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\n\nexport function assert (b) {\n    if (!b) throw new Error(\"Assertion Failed\");\n}\n\nexport function asap(fn) {\n    // @ts-ignore\n    if (_global.setImmediate) setImmediate(fn); else setTimeout(fn, 0);\n}\n\nexport function getUniqueArray(a) {\n    return a.filter((value, index, self) => self.indexOf(value) === index);\n}\n\n/** Generate an object (hash map) based on given array.\n * @param extractor Function taking an array item and its index and returning an array of 2 items ([key, value]) to\n *        instert on the resulting object for each item in the array. If this function returns a falsy value, the\n *        current item wont affect the resulting object.\n */\nexport function arrayToObject<T,R> (array: T[], extractor: (x:T, idx: number)=>[string, R]): {[name: string]: R} {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue) result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\n\nexport function trycatcher(fn, reject) {\n    return function () {\n        try {\n            fn.apply(this, arguments);\n        } catch (e) {\n            reject(e);\n        }\n    };\n}\n\nexport function tryCatch(fn: (...args: any[])=>void, onerror, args?) : void {\n    try {\n        fn.apply(null, args);\n    } catch (ex) {\n        onerror && onerror(ex);\n    }\n}\n\nexport function getByKeyPath(obj, keyPath) {\n    // http://www.w3.org/TR/IndexedDB/#steps-for-extracting-a-key-from-a-value-using-a-key-path\n    if (typeof keyPath === 'string' && hasOwn(obj, keyPath)) return obj[keyPath]; // This line is moved from last to first for optimization purpose.\n    if (!keyPath) return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj == null ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\n\nexport function setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined) return;\n    if ('isFrozen' in Object && Object.isFrozen(obj)) return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    } else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath))) obj.splice(currentKeyPath, 1);\n                    else delete obj[currentKeyPath];\n                } else obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath)) innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        } else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath))) obj.splice(keyPath, 1);\n                else delete obj[keyPath];\n            } else obj[keyPath] = value;\n        }\n    }\n}\n\nexport function delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function(kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\n\nexport function shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m)) rv[m] = obj[m];\n    }\n    return rv;\n}\n\nconst concat = [].concat;\nexport function flatten<T> (a: (T | T[])[]) : T[] {\n    return concat.apply([], a);\n}\n\n//https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\nconst intrinsicTypeNames =\n    \"BigUint64Array,BigInt64Array,Array,Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(\n        flatten([8,16,32,64].map(num=>[\"Int\",\"Uint\",\"Float\"].map(t=>t+num+\"Array\")))\n    ).filter(t=>_global[t]);\nconst intrinsicTypes = new Set(intrinsicTypeNames.map(t=>_global[t]));\n\n/** Deep clone a simple object tree.\n * \n * Copies object tree deeply, but does not deep-copy arrays,\n * typed arrays, Dates or other intrinsic types.\n * \n * Does not check for cyclic references.\n * \n * This function is 6 times faster than structuredClone() on chromium 111.\n * \n * This function can safely be used for cloning ObservabilitySets and RangeSets.\n * \n * @param o Object to clone\n * @returns Cloned object\n */\nexport function cloneSimpleObjectTree<T extends object>(o: T): T {\n    const rv = {} as T;\n    for (const k in o) if (hasOwn(o, k)) {\n        const v = o[k];\n        rv[k] = !v || typeof v !== 'object' || intrinsicTypes.has(v.constructor) ? v : cloneSimpleObjectTree(v);\n    }\n    return rv;\n}\n\nexport function objectIsEmpty(o: object) {\n    for (const k in o) if (hasOwn(o, k)) return false;\n    return true;\n}\n\nlet circularRefs: null | WeakMap<any,any> = null;\n\n/** Deep clone an object or array.\n * \n * \n * @param any \n * @returns \n */\nexport function deepClone<T>(any: T): T {\n    circularRefs = new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\n\nfunction innerDeepClone<T>(x: T): T {\n    if (!x || typeof x !== 'object') return x;\n    let rv = circularRefs.get(x); // Resolve circular references\n    if (rv) return rv;\n    if (isArray(x)) {\n        rv = [];\n        circularRefs.set(x, rv);\n        for (var i = 0, l = x.length; i < l; ++i) {\n            rv.push(innerDeepClone(x[i]));\n        }\n    } else if (intrinsicTypes.has(x.constructor)) {\n        // For performance, we're less strict than structuredClone - we're only\n        // cloning arrays and custom objects.\n        // Typed arrays, Dates etc are not cloned.\n        rv = x;\n    } else {\n        // We're nicer to custom classes than what structuredClone() is -\n        // we preserve the proto of each object.\n        const proto = getProto(x);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs.set(x, rv);\n        for (var prop in x) {\n            if (hasOwn(x, prop)) {\n                rv[prop] = innerDeepClone(x[prop]);\n            }\n        }\n    }\n    return rv;\n}\n\nconst {toString} = {};\nexport function toStringTag(o: Object) {\n    return toString.call(o).slice(8, -1);\n}\n\n// If first argument is iterable or array-like, return it as an array\nexport const iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nexport const getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function(x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nexport const asyncIteratorSymbol = typeof Symbol !== 'undefined'\n    ? Symbol.asyncIterator || Symbol.for(\"Symbol.asyncIterator\")\n    : '@asyncIterator';\n\nexport function delArrayItem(a: any[], x: any) {\n    const i = a.indexOf(x);\n    if (i >= 0) a.splice(i, 1);\n    return i >= 0;\n}\n\nexport const NO_CHAR_ARRAY = {};\n// Takes one or several arguments and returns an array based on the following criteras:\n// * If several arguments provided, return arguments converted to an array in a way that\n//   still allows javascript engine to optimize the code.\n// * If single argument is an array, return a clone of it.\n// * If this-pointer equals NO_CHAR_ARRAY, don't accept strings as valid iterables as a special\n//   case to the two bullets below.\n// * If single argument is an iterable, convert it to an array and return the resulting array.\n// * If single argument is array-like (has length of type number), convert it to an array.\nexport function getArrayOf (arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike)) return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string') return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done) a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null) return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--) a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--) a[i] = arguments[i];\n    return a;\n}\nexport const isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn: Function) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : ()=>false;\n", "import { derive, setProp } from '../functions/utils';\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\n\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\n\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\n\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\n\n//\n// DexieError - base class of all out exceptions.\n//\nexport function DexieError (name, msg) {\n    // Reason we don't use ES6 classes is because:\n    // 1. It bloats transpiled code and increases size of minified code.\n    // 2. It doesn't give us much in this case.\n    // 3. It would require sub classes to call super(), which\n    //    is not needed when deriving from Error.\n    this.name = name;\n    this.message = msg;\n}\n\nderive(DexieError).from(Error).extend({\n    toString: function(){ return this.name + \": \" + this.message; }\n});\n\nfunction getMultiErrorMessage (msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key=>failures[key].toString())\n        .filter((v,i,s)=>s.indexOf(v) === i) // Only unique error strings\n        .join('\\n');\n}\n\n//\n// ModifyError - thrown in Collection.modify()\n// Specific constructor because it contains members failures and failedKeys.\n//\nexport function ModifyError (msg, failures, successCount, failedKeys) {\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\n\nexport function BulkError (msg, failures) {\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, this.failures);\n}\nderive(BulkError).from(DexieError);\n\n//\n//\n// Dynamically generate error names and exception classes based\n// on the names in errorList.\n//\n//\n\n// Map of {ErrorName -> ErrorName + \"Error\"}\nexport var errnames = errorList.reduce((obj,name)=>(obj[name]=name+\"Error\",obj),{});\n\n// Need an alias for DexieError because we're gonna create subclasses with the same name.\nconst BaseException = DexieError;\n// Map of {ErrorName -> exception constructor}\nexport var exceptions = errorList.reduce((obj,name)=>{\n    // Let the name be \"DexieError\" because this name may\n    // be shown in call stack and when debugging. DexieError is\n    // the most true name because it derives from DexieError,\n    // and we cannot change Function.name programatically without\n    // dynamically create a Function object, which would be considered\n    // 'eval-evil'.\n    var fullName = name + \"Error\";\n    function DexieError (msgOrInner, inner){\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        } else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        } else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name]=DexieError;\n    return obj;\n},{});\n\n// Use ECMASCRIPT standard exceptions where applicable:\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\n\nexport var exceptionMap = idbDomErrorNames.reduce((obj, name)=>{\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\n\nexport function mapError (domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        // Derive stack from inner exception if it has a stack\n        setProp(rv, \"stack\", {get: function(){\n            return this.inner.stack;\n        }});\n    }\n    return rv;\n}\n\nexport var fullNameExceptions = errorList.reduce((obj, name)=>{\n    if ([\"Syntax\",\"Type\",\"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\n\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n", "import {extend} from './utils';\n\nexport function nop() { }\nexport function mirror(val) { return val; }\nexport function pureFunctionChain(f1, f2) {\n    // Enables chained events that takes ONE argument and returns it to the next function in chain.\n    // This pattern is used in the hook(\"reading\") event.\n    if (f1 == null || f1 === mirror) return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\n\nexport function callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\n\nexport function hookCreatingChain(f1, f2) {\n    // Enables chained events that takes several arguments and may modify first argument by making a modification and then returning the same instance.\n    // This pattern is used in the hook(\"creating\") event.\n    if (f1 === nop) return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined) arguments[0] = res;\n        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess\n            onerror = this.onerror;     // In case event listener has set this.onerror\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\n\nexport function hookDeletingChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess\n            onerror = this.onerror;     // In case event listener has set this.onerror\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\n\nexport function hookUpdatingChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res); // If f1 returns new modifications, extend caller's modifications with the result before calling next in chain.\n        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess\n            onerror = this.onerror;     // In case event listener has set this.onerror\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\n\nexport function reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false) return false;\n        return f1.apply(this, arguments);\n    };\n}\n\nexport function nonStoppableEventChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function () {\n        f1.apply(this, arguments);\n        f2.apply(this, arguments);\n    };\n}\n\nexport function promisableChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this,\n                i = arguments.length,\n                args = new Array(i);\n            while (i--) args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n", "// By default, debug will be true only if platform is a web platform and its page is served from localhost.\n// When debug = true, error's stacks will contain asyncronic long stacks.\nexport var debug = typeof location !== 'undefined' &&\n        // By default, use debug mode if served from localhost.\n        /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\n\nexport function setDebug(value, filter) {\n    debug = value;\n}\n\nexport function deprecated<T> (what: string, fn: (...args)=>T) {\n    return function () {\n        console.warn(`${what} is deprecated. See https://dexie.org/docs/Deprecations}`);\n        return fn.apply(this, arguments);\n    } as (...args)=>T\n}\n", "/*\n * Copyright (c) 2014-2017 David Fahlander\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/LICENSE-2.0\n */\nimport { _global } from '../globals/global';\nimport {tryCatch, props, setProp,\n    getPropertyDescriptor, getArrayOf, extend, getProto} from '../functions/utils';\nimport {nop, callBoth, mirror} from '../functions/chaining-functions';\nimport {debug} from './debug';\nimport {exceptions} from '../errors';\n\n//\n// Promise and Zone (PSD) for Dexie library\n//\n// I started out writing this Promise class by copying promise-light (https://github.com/taylorhakes/promise-light) by\n// https://github.com/taylorhakes - an A+ and ECMASCRIPT 6 compliant Promise implementation.\n//\n// In previous versions this was fixed by not calling setTimeout when knowing that the resolve() or reject() came from another\n// tick. In Dexie v1.4.0, I've rewritten the Promise class entirely. Just some fragments of promise-light is left. I use\n// another strategy now that simplifies everything a lot: to always execute callbacks in a new micro-task, but have an own micro-task\n// engine that is indexedDB compliant across all browsers.\n// Promise class has also been optimized a lot with inspiration from bluebird - to avoid closures as much as possible.\n//\n// Specific non-standard features of this Promise class:\n// * Custom zone support (a.k.a. PSD) with ability to keep zones also when using native promises as well as\n//   native async / await.\n// * Promise.follow() method built upon the custom zone engine, that allows user to track all promises created from current stack frame\n//   and below + all promises that those promises creates or awaits.\n// * Detect any unhandled promise in a PSD-scope (PSD.onunhandled). \n//\n// David Fahlander, https://github.com/dfahlander\n//\n\n// Just a pointer that only this module knows about.\n// Used in Promise constructor to emulate a private constructor.\nvar INTERNAL = {};\n\nconst\n    ZONE_ECHO_LIMIT = 100,\n    [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n        [] :\n        (()=>{\n            let globalP = Promise.resolve();\n            if (typeof crypto === 'undefined' || !crypto.subtle)\n                return [globalP, getProto(globalP), globalP];\n            // Generate a native promise (as window.Promise may have been patched)\n            const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n            return [\n                nativeP,\n                getProto(nativeP),\n                globalP\n            ];\n        })(),\n    nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\n\nexport const NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\n\n/* The default function used only for the very first promise in a promise chain.\n   As soon as then promise is resolved or rejected, all next tasks will be executed in micro ticks\n   emulated in this module. For indexedDB compatibility, this means that every method needs to \n   execute at least one promise before doing an indexedDB operation. Dexie will always call \n   db.ready().then() for every operation to make sure the indexedDB event is started in an\n   indexedDB-compatible emulated micro task loop.\n*/\nfunction schedulePhysicalTick() {\n    queueMicrotask(physicalTick);\n}\n\n// Configurable through Promise.scheduler.\n// Don't export because it would be unsafe to let unknown\n// code call it unless they do try..catch within their callback.\n// This function can be retrieved through getter of Promise.scheduler though,\n// but users must not do Promise.scheduler = myFuncThatThrowsException\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\n\nvar isOutsideMicroTick = true, // True when NOT in a virtual microTick.\n    needsNewPhysicalTick = true, // True when a push to microtickQueue must also schedulePhysicalTick()\n    unhandledErrors = [], // Rejected promises that has occured. Used for triggering 'unhandledrejection'.\n    rejectingErrors = [], // Tracks if errors are being re-rejected during onRejected callback.\n    rejectionMapper = mirror; // Remove in next major when removing error mapping of DOMErrors and DOMExceptions\n    \nexport var globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: nop,\n    pgp: false,\n    env: {},\n    finalize: nop\n};\n\nexport var PSD = globalPSD;\n\nexport var microtickQueue = []; // Callbacks to call in this or next physical tick.\nexport var numScheduledCalls = 0; // Number of listener-calls left to do in this physical tick.\nexport var tickFinalizers = []; // Finalizers to call when there are no more async calls scheduled within current physical tick.\n\nexport default function DexiePromise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');    \n    this._listeners = [];\n    \n    // A library may set `promise._lib = true;` after promise is created to make resolve() or reject()\n    // execute the microtask engine implicitely within the call to resolve() or reject().\n    // To remain A+ compliant, a library must only set `_lib=true` if it can guarantee that the stack\n    // only contains library code when calling resolve() or reject().\n    // RULE OF THUMB: ONLY set _lib = true for promises explicitely resolving/rejecting directly from\n    // global scope (event handler, timer etc)!\n    this._lib = false;\n    // Current async scope\n    var psd = (this._PSD = PSD);\n    \n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL) throw new TypeError('Not a function');\n        // Private constructor (INTERNAL, state, value).\n        // Used internally by Promise.resolve() and Promise.reject().\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value); // Map error, set stack and addPossiblyUnhandledError().\n        return;\n    }\n    \n    this._state = null; // null (=pending), false (=rejected) or true (=resolved)\n    this._value = null; // error or result\n    ++psd.ref; // Refcounting current scope\n    executePromiseTask(this, fn);\n}\n\n// Prepare a property descriptor to put onto Promise.prototype.then\nconst thenProp = {\n    get: function() {\n        var psd = PSD, microTaskId = totalEchoes;\n\n        function then (onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(\n                    nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup),\n                    nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup),\n                    resolve,\n                    reject,\n                    psd));\n            });\n            if (this._consoleTask) rv._consoleTask = this._consoleTask;\n            return rv;\n        }\n\n        then.prototype = INTERNAL; // For idempotense, see setter below.\n\n        return then;\n    },\n    // Be idempotent and allow another framework (such as zone.js or another instance of a Dexie.Promise module) to replace Promise.prototype.then\n    // and when that framework wants to restore the original property, we must identify that and restore the original property descriptor.\n    set: function (value) {\n        setProp (this, 'then', value && value.prototype === INTERNAL ?\n            thenProp : // Restore to original property descriptor.\n            {\n                get: function(){\n                    return value; // Getter returning provided value (behaves like value is just changed)\n                },\n                set: thenProp.set // Keep a setter that is prepared to restore original.\n            }\n        );\n    }\n};\n\nprops(DexiePromise.prototype, {\n    then: thenProp, // Defined above.\n    _then: function (onFulfilled, onRejected) {\n        // A little tinier version of then() that don't have to create a resulting promise.\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));        \n    },\n\n    catch: function (onRejected) {\n        if (arguments.length === 1) return this.then(null, onRejected);\n        // First argument is the Error type to catch\n        var type = arguments[0],\n            handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n            // Catching errors by its constructor type (similar to java / c++ / c#)\n            // Sample: promise.catch(TypeError, function (e) { ... });\n            err instanceof type ? handler(err) : PromiseReject(err))\n        : this.then(null, err =>\n            // Catching errors by the error.name property. Makes sense for indexedDB where error type\n            // is always DOMError but where e.name tells the actual error type.\n            // Sample: promise.catch('ConstraintError', function (e) { ... });\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n\n    finally: function (onFinally) {\n        return this.then(value => {\n            return DexiePromise.resolve(onFinally()).then(()=>value);\n        }, err => {\n            return DexiePromise.resolve(onFinally()).then(()=>PromiseReject(err));\n        });\n    },\n    \n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\n\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\n\n// Now that Promise.prototype is defined, we have all it takes to set globalPSD.env.\n// Environment globals snapshotted on leaving global zone\nglobalPSD.env = snapShot();\n\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\n\n// Promise Static Properties\nprops (DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments) // Supports iterables, implicit arguments and array-like.\n            .map(onPossibleParallellAsync); // Handle parallell async/awaits \n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0) resolve([]);\n            var remaining = values.length;\n            values.forEach((a,i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining) resolve(values);\n            }, reject));\n        });\n    },\n    \n    resolve: value => {\n        if (value instanceof DexiePromise) return value;\n        if (value && typeof value.then === 'function') return new DexiePromise((resolve, reject)=>{\n            value.then(resolve, reject);\n        });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        return rv;\n    },\n    \n    reject: PromiseReject,\n    \n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n\n    PSD: {\n        get: ()=>PSD,\n        set: value => PSD = value\n    },\n\n    totalEchoes: {get: ()=>totalEchoes},\n\n    //task: {get: ()=>task},\n    \n    newPSD: newScope,\n    \n    usePSD: usePSD,\n    \n    scheduler: {\n        get: () => asap,\n        set: value => {asap = value}\n    },\n    \n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => {rejectionMapper = value;} // Map reject failures\n    },\n            \n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = []; // For unhandled standard- or 3rd party Promises. Checked at psd.finalize()\n                psd.onunhandled = reject; // Triggered directly on unhandled promises of this library.\n                psd.finalize = callBoth(function () {\n                    // Unhandled standard or 3rd part promises are put in PSD.unhandleds and\n                    // examined upon scope completion while unhandled rejections in this Promise\n                    // will trigger directly through psd.onunhandled\n                    run_at_end_of_this_or_next_physical_tick(()=>{\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\n\nif (NativePromise) {\n    if (NativePromise.allSettled) setProp (DexiePromise, \"allSettled\", function() {\n        const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise(resolve => {\n            if (possiblePromises.length === 0) resolve([]);\n            let remaining = possiblePromises.length;\n            const results = new Array(remaining);\n            possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(\n                value => results[i] = {status: \"fulfilled\", value},\n                reason => results[i] = {status: \"rejected\", reason})\n                .then(()=>--remaining || resolve(results)));\n        });\n    });\n    if (NativePromise.any && typeof AggregateError !== 'undefined') setProp(DexiePromise, \"any\", function() {\n        const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            if (possiblePromises.length === 0) reject(new AggregateError([]));\n            let remaining = possiblePromises.length;\n            const failures = new Array(remaining);\n            possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(\n                value => resolve(value),\n                failure => {\n                    failures[i] = failure;\n                    if (!--remaining) reject(new AggregateError(failures));\n                }));\n        });\n    });\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers\n    if (NativePromise.withResolvers) DexiePromise.withResolvers = NativePromise.withResolvers;\n}\n\n/**\n* Take a potentially misbehaving resolver function and make sure\n* onFulfilled and onRejected are only called once.\n*\n* Makes no guarantees about asynchrony.\n*/\nfunction executePromiseTask (promise, fn) {\n    // Promise Resolution Procedure:\n    // https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    try {\n        fn(value => {\n            if (promise._state !== null) return; // Already settled\n            if (value === promise) throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            } else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick) endMicroTickScope();\n        }, handleRejection.bind(null, promise)); // If Function.bind is not supported. Exception is handled in catch below\n    } catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\n\nfunction handleRejection (promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null) return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    // Add the failure to a list of possibly uncaught errors\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick) endMicroTickScope();\n}\n\nfunction propagateAllListeners (promise) {\n    //debug && linkToPreviousPromise(promise);\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize(); // if psd.ref reaches zero, call psd.finalize();\n    if (numScheduledCalls === 0) {\n        // If numScheduledCalls is 0, it means that our stack is not in a callback of a scheduled call,\n        // and that no deferreds where listening to this rejection or success.\n        // Since there is a risk that our stack can contain application code that may\n        // do stuff after this code is finished that may generate new calls, we cannot\n        // call finalizers here.\n        ++numScheduledCalls;\n        asap(()=>{\n            if (--numScheduledCalls === 0) finalizePhysicalTick(); // Will detect unhandled errors\n        }, []);\n    }\n}\n\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        // This Listener doesnt have a listener for the event being triggered (onFulfilled or onReject) so lets forward the event to any eventual listeners on the Promise instance returned by then() or catch()\n        return (promise._state ? listener.resolve : listener.reject) (promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap (callListener, [cb, promise, listener]);\n}\n\nfunction callListener (cb, promise, listener) {\n    try {\n        // Call callback and resolve our listener with it's return value.\n        var ret, value = promise._value;\n            \n        if (!promise._state && rejectingErrors.length) rejectingErrors = [];\n        // cb is onResolved\n        ret = debug && promise._consoleTask ? promise._consoleTask.run(()=>cb (value)) : cb (value);\n        if (!promise._state && rejectingErrors.indexOf(value) === -1) {\n            markErrorAsHandled(promise); // Callback didnt do Promise.reject(err) nor reject(err) onto another promise.\n        }\n        listener.resolve(ret);\n    } catch (e) {\n        // Exception thrown in callback. Reject our listener.\n        listener.reject(e);\n    } finally {\n        if (--numScheduledCalls === 0) finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\n\n/* The callback to schedule with queueMicrotask().\n   It runs a virtual microtick and executes any callback registered in microtickQueue.\n */\nfunction physicalTick() {\n    usePSD(globalPSD, ()=>{\n        // Make sure to reset the async context to globalPSD before\n        // executing any of the microtick subscribers.\n        beginMicroTickScope() && endMicroTickScope();\n    });\n}\n\nexport function beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\n\n/* Executes micro-ticks without doing try..catch.\n   This can be possible because we only use this internally and\n   the registered functions are exception-safe (they do try..catch\n   internally before calling any external method). If registering\n   functions in the microtickQueue that are not exception-safe, this\n   would destroy the framework and make it instable. So we don't export\n   our asap method.\n*/\nexport function endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\n\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0); // Clone first because finalizer may remove itself from list.\n    var i = finalizers.length;\n    while (i) finalizers[--i]();    \n}\n\nfunction run_at_end_of_this_or_next_physical_tick (fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(()=>{\n        if (--numScheduledCalls === 0) finalizePhysicalTick();\n    }, []);\n}\n\nfunction addPossiblyUnhandledError(promise) {\n    // Only add to unhandledErrors if not already there. The first one to add to this list\n    // will be upon the first rejection so that the root cause (first promise in the\n    // rejection chain) is the one listed.\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\n\nfunction markErrorAsHandled(promise) {\n    // Called when a reject handled is actually being called.\n    // Search in unhandledErrors for any promise whos _value is this promise_value (list\n    // contains only rejected promises, and only one item per error)\n    var i = unhandledErrors.length;\n    while (i) if (unhandledErrors[--i]._value === promise._value) {\n        // Found a promise that failed with this same error object pointer,\n        // Remove that since there is a listener that actually takes care of it.\n        unhandledErrors.splice(i, 1);\n        return;\n    }\n}\n\nfunction PromiseReject (reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\n\nexport function wrap (fn, errorCatcher) {\n    var psd = PSD;\n    return function() {\n        var wasRootExec = beginMicroTickScope(),\n            outerScope = PSD;\n\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        } catch (e) {\n            errorCatcher && errorCatcher(e);\n        } finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec) endMicroTickScope();\n        }\n    };\n}\n\n\n//\n// variables used for native await support\n//\nconst task = { awaits: 0, echoes: 0, id: 0}; // The ongoing macro-task when using zone-echoing.\nvar taskCounter = 0; // ID counter for macro tasks.\nvar zoneStack = []; // Stack of left zones to restore asynchronically.\nvar zoneEchoes = 0; // When > 0, zoneLeaveEcho is queued. When 0 and task.echoes is also 0, nothing is queued.\nvar totalEchoes = 0; // ID counter for micro-tasks. Used to detect possible native await in our Promise.prototype.then.\n\n\nvar zone_id_counter = 0;\nexport function newScope (fn, props, a1, a2) {\n    var parent = PSD,\n        psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    // Prepare for promise patching (done in usePSD):\n    var globalEnv = globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise, // Changing window.Promise could be omitted for Chrome and Edge, where IDB+Promise plays well!\n        PromiseProp: {value: DexiePromise, configurable: true, writable: true},\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n    } : {};\n    if (props) extend(psd, props);\n    \n    // unhandleds and onunhandled should not be specifically set here.\n    // Leave them on parent prototype.\n    // unhandleds.push(err) will push to parent's prototype\n    // onunhandled() will call parents onunhandled (with this scope's this-pointer though!)\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    }\n    var rv = usePSD (psd, fn, a1, a2);\n    if (psd.ref === 0) psd.finalize();\n    return rv;\n}\n\n// Function to call if scopeFunc returns NativePromise\n// Also for each NativePromise in the arguments to Promise.all()\nexport function incrementExpectedAwaits() {\n    if (!task.id) task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\n\n// Function to call when 'then' calls back on a native promise where onAwaitExpected() had been called.\n// Also call this when a native await calls then method on a promise. In that case, don't supply\n// sourceTaskId because we already know it refers to current task.\nexport function decrementExpectedAwaits() {\n    if (!task.awaits) return false;\n    if (--task.awaits === 0) task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT; // Will reset echoes to 0 if awaits is 0.\n    return true;\n}\n\nif ((''+nativePromiseThen).indexOf('[native code]') === -1) {\n    // If the native promise' prototype is patched, we cannot rely on zone echoing.\n    // Disable that here:\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\n\n// Call from Promise.all() and Promise.race()\nexport function onPossibleParallellAsync (possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits(); \n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\n\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    //console.log(\"Total echoes \", totalEchoes);\n    //if (task.echoes === 1) console.warn(\"Cancelling echoing of async context.\");\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.awaits = task.id = 0; // Cancel echoing.\n    }\n\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\n\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length-1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\n\nfunction switchToZone (targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        // Enter or leave zone asynchronically as well, so that tasks initiated during current tick\n        // will be surrounded by the zone when they are invoked.\n        queueMicrotask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD) return;\n\n    PSD = targetZone; // The actual zone switch occurs at this line.\n\n    // Snapshot on every leave from global zone.\n    if (currentZone === globalPSD) globalPSD.env = snapShot();\n\n    if (patchGlobalPromise) {\n        // Let's patch the global and native Promises (may be same or may be different)\n        var GlobalPromise = globalPSD.env.Promise;\n        // Swich environments (may be PSD-zone or the global zone. Both apply.)\n        var targetEnv = targetZone.env;\n\n        if (currentZone.global || targetZone.global) {\n            // Leaving or entering global zone. It's time to patch / restore global Promise.\n\n            // Set this Promise to window.Promise so that transiled async functions will work on Firefox, Safari and IE, as well as with Zonejs and angular.\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n\n            // Support Promise.all() etc to work indexedDB-safe also when people are including es6-promise as a module (they might\n            // not be accessing global.Promise but a local reference to it)\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled) GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any) GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\n\nfunction snapShot () {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n    } : {};\n}\n\nexport function usePSD (psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    } finally {\n        switchToZone(outerScope, false);\n    }\n}\n\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait) incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        } finally {\n            switchToZone(outerZone, false);\n            if (cleanup) queueMicrotask(decrementExpectedAwaits);\n        }\n    };\n}\n\n/** Execute callback in global context */\nexport function execInGlobalContext(cb) {\n    if (Promise === NativePromise && task.echoes === 0) {\n        if (zoneEchoes === 0) {\n            cb();\n        } else {\n            enqueueNativeMicroTask(cb);\n        }\n    } else {\n        setTimeout(cb, 0);\n    }\n}\n\nexport var rejection = DexiePromise.reject;\n\nexport {DexiePromise};\n", "import { PSD, rejection, newScope } from \"../helpers/promise\";\nimport { DexieOptions } from \"../public/types/dexie-constructor\";\nimport { errnames, exceptions } from \"../errors\";\nimport { nop } from \"./chaining-functions\";\nimport { Transaction } from \"../classes/transaction\";\nimport { Dexie } from '../classes/dexie';\n\n/* Generate a temporary transaction when db operations are done outside a transaction scope.\n*/\nexport function tempTransaction (\n  db: Dexie,\n  mode: IDBTransactionMode,\n  storeNames: string[],\n  fn: (resolve, reject, trans: Transaction) => any)\n  // Last argument is \"writeLocked\". But this doesnt apply to oneshot direct db operations, so we ignore it.\n{\n  if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n    if (db._state.openComplete) {\n      // db.idbdb is falsy but openComplete is true. Must have been an exception durin open.\n      // Don't wait for openComplete as it would lead to infinite loop.\n      return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n    }\n    if (!db._state.isBeingOpened) {\n      if (!db._state.autoOpen)\n        return rejection(new exceptions.DatabaseClosed());\n      db.open().catch(nop); // Open in background. If if fails, it will be catched by the final promise anyway.\n    }\n    return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n  } else {\n    var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n    try {\n      trans.create();\n      db._state.PR1398_maxLoop = 3;\n    } catch (ex) {\n      if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n        console.warn('Dexie: Need to reopen db');\n        db.close({disableAutoOpen: false});\n        return db.open().then(()=>tempTransaction(db, mode, storeNames, fn));\n      }\n      return rejection(ex);\n    }\n    return trans._promise(mode, (resolve, reject) => {\n      return newScope(() => { // OPTIMIZATION POSSIBLE? newScope() not needed because it's already done in _promise.\n        PSD.trans = trans;\n        return fn(resolve, reject, trans);\n      });\n    }).then(result => {\n      // Instead of resolving value directly, wait with resolving it until transaction has completed.\n      // Otherwise the data would not be in the DB if requesting it in the then() operation.\n      // Specifically, to ensure that the following expression will work:\n      //\n      //   db.friends.put({name: \"Arne\"}).then(function () {\n      //       db.friends.where(\"name\").equals(\"Arne\").count(function(count) {\n      //           assert (count === 1);\n      //       });\n      //   });\n      //\n      if (mode === 'readwrite') try {trans.idbtrans.commit();} catch {}\n      return mode === 'readonly' ? result : trans._completion.then(() => result);\n    });/*.catch(err => { // Don't do this as of now. If would affect bulk- and modify methods in a way that could be more intuitive. But wait! Maybe change in next major.\n          trans._reject(err);\n          return rejection(err);\n      });*/\n  }\n}\n", "import { Dexie } from \"../classes/dexie\";\n\nexport const DEXIE_VERSION = '{version}'; // Replaced by build-script.\nexport const maxString = String.fromCharCode(65535);\nexport const minKey = -Infinity; // minKey can be constant. maxKey must be a prop of Dexie (_maxKey)\nexport const INVALID_KEY_ARGUMENT =\n  \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nexport const STRING_EXPECTED = \"String expected.\";\nexport const connections: Dexie[] = [];\nexport const dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nexport const DBNAMES_DB = '__dbnames';\nexport const READONLY = 'readonly';\nexport const READWRITE = 'readwrite';\n", "export function combine(filter1, filter2) {\n  return filter1 ?\n      filter2 ?\n          function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n          filter1 :\n      filter2;\n}\n", "import { DBCoreKeyRange, DBCoreRangeType } from '../public/types/dbcore';\n\nexport const AnyRange: DBCoreKeyRange = {\n  type: DBCoreRangeType.Any,\n  lower: -Infinity,\n  lowerOpen: false,\n  upper: [[]],\n  upperOpen: false\n}\n\nexport const NeverRange: DBCoreKeyRange = {\n  type: DBCoreRangeType.Never,\n  lower: -Infinity,\n  lowerOpen: true,\n  upper: -Infinity,\n  upperOpen: true\n}\n", "import { deepClone, delByKeyPath, getByKeyPath } from './utils';\n\n// This workaround is needed since obj could be a custom-class instance with an\n// uninitialized keyPath. See the following comment for more context:\n// https://github.com/dfahlander/Dexie.js/issues/1280#issuecomment-823557881\nexport function workaroundForUndefinedPrimKey(keyPath: string | ArrayLike<string>) {\n  // Workaround only needed for plain non-dotted keyPaths\n  return typeof keyPath === \"string\" && !/\\./.test(keyPath) \n  ? (obj: object) => {\n    if (obj[keyPath] === undefined && (keyPath in obj)) {\n      // property exists but is undefined. This will not be liked by Indexeddb.\n      // Need to remove the property before adding it but we need to clone it before\n      // doing that to not be intrusive.\n      obj = deepClone(obj);\n      delete obj[keyPath];\n    }\n    return obj;\n  }\n  : (obj: object) => obj;\n}", "import { exceptions } from \"../../errors\";\n\nexport function Entity(){\n  throw exceptions.Type();\n}\n", "// Implementation of https://www.w3.org/TR/IndexedDB-3/#compare-two-keys\n\nimport { toStringTag } from './utils';\n\n// ... with the adjustment to return NaN instead of throwing.\nexport function cmp(a: any, b: any): number {\n  try {\n    const ta = type(a);\n    const tb = type(b);\n    if (ta !== tb) {\n      if (ta === 'Array') return 1;\n      if (tb === 'Array') return -1;\n      if (ta === 'binary') return 1;\n      if (tb === 'binary') return -1;\n      if (ta === 'string') return 1;\n      if (tb === 'string') return -1;\n      if (ta === 'Date') return 1;\n      if (tb !== 'Date') return NaN;\n      return -1;\n    }\n    switch (ta) {\n      case 'number':\n      case 'Date':\n      case 'string':\n        return a > b ? 1 : a < b ? -1 : 0;\n      case 'binary': {\n        return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n      }\n      case 'Array':\n        return compareArrays(a, b);\n    }\n  } catch {}\n  return NaN; // Return value if any given args are valid keys.\n}\n\nexport function compareArrays(a: any[], b: any[]): number {\n  const al = a.length;\n  const bl = b.length;\n  const l = al < bl ? al : bl;\n  for (let i = 0; i < l; ++i) {\n    const res = cmp(a[i], b[i]);\n    if (res !== 0) return res;\n  }\n  return al === bl ? 0 : al < bl ? -1 : 1;\n}\n\nexport function compareUint8Arrays(\n  a: Uint8Array,\n  b: Uint8Array\n) {\n  const al = a.length;\n  const bl = b.length;\n  const l = al < bl ? al : bl;\n  for (let i = 0; i < l; ++i) {\n    if (a[i] !== b[i]) return a[i] < b[i] ? -1 : 1;\n  }\n  return al === bl ? 0 : al < bl ? -1 : 1;\n}\n\n// Implementation of https://www.w3.org/TR/IndexedDB-3/#key-type\nfunction type(x: any) {\n  const t = typeof x;\n  if (t !== 'object') return t;\n  if (ArrayBuffer.isView(x)) return 'binary';\n  const tsTag = toStringTag(x); // Cannot use instanceof in Safari\n  return tsTag === 'ArrayBuffer' ? 'binary' : (tsTag as 'Array' | 'Date');\n}\n\ntype BinaryType =\n  | ArrayBuffer\n  | DataView\n  | Uint8ClampedArray\n  | ArrayBufferView\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array\n  | BigInt64Array \n  | BigUint64Array;\n\nfunction getUint8Array(a: BinaryType): Uint8Array {\n  if (a instanceof Uint8Array) return a;\n  if (ArrayBuffer.isView(a))\n    // TypedArray or DataView\n    return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n  return new Uint8Array(a); // ArrayBuffer\n}\n", "import { BulkError, exceptions } from '../../errors';\nimport { Table as ITable } from '../../public/types/table';\nimport { TableSchema } from '../../public/types/table-schema';\nimport { TableHooks } from '../../public/types/table-hooks';\nimport { DexiePromise as Promise, PSD, newScope, rejection, beginMicroTickScope, endMicroTickScope } from '../../helpers/promise';\nimport { Transaction } from '../transaction';\nimport { Dexie } from '../dexie';\nimport { tempTransaction } from '../../functions/temp-transaction';\nimport { Collection } from '../collection';\nimport { isArray, keys, getByKeyPath, setByKeyPath, extend, getProto } from '../../functions/utils';\nimport { maxString } from '../../globals/constants';\nimport { combine } from '../../functions/combine';\nimport { PromiseExtended } from \"../../public/types/promise-extended\";\nimport { IndexableType } from '../../public/types/indexable-type';\nimport { debug } from '../../helpers/debug';\nimport { DBCoreTable } from '../../public/types/dbcore';\nimport { AnyRange } from '../../dbcore/keyrange';\nimport { workaroundForUndefinedPrimKey } from '../../functions/workaround-undefined-primkey';\nimport { Entity } from '../entity/Entity';\nimport { UpdateSpec } from '../../public';\nimport { cmp } from '../../functions/cmp';\n\n/** class Table\n * \n * https://dexie.org/docs/Table/Table\n */\nexport class Table implements ITable<any, IndexableType> {\n  db: Dexie;\n  _tx?: Transaction;\n  name: string;\n  schema: TableSchema;\n  hook: TableHooks;\n  core: DBCoreTable;\n\n  _trans(\n    mode: IDBTransactionMode,\n    fn: (idbtrans: IDBTransaction, dxTrans: Transaction) => PromiseLike<any> | void,\n    writeLocked?: boolean | string) : PromiseExtended<any>\n  {\n    const trans: Transaction = this._tx || PSD.trans;\n    const tableName = this.name;\n    // @ts-ignore: Use Chrome's Async Stack Tagging API to allow tracing and simplify debugging for dexie users.\n    const task = debug && typeof console !== 'undefined' && console.createTask && console.createTask(`Dexie: ${mode === 'readonly' ? 'read' : 'write' } ${this.name}`);\n    \n    function checkTableInTransaction(resolve, reject, trans: Transaction) {\n      if (!trans.schema[tableName])\n        throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n      return fn(trans.idbtrans, trans) as Promise<any>;\n    }\n    // Surround all in a microtick scope.\n    // Reason: Browsers (modern Safari + older others)\n    // still as of 2018-10-10 has problems keeping a transaction\n    // alive between micro ticks. Safari because if transaction\n    // is created but not used in same microtick, it will go\n    // away. That specific issue could be solved in DBCore\n    // by opening the transaction just before using it instead.\n    // But older Firefoxes and IE11 (with Promise polyfills)\n    // will still have probs.\n    // The beginMicrotickScope()/endMicrotickScope() works\n    // in cooperation with Dexie.Promise to orchestrate\n    // the micro-ticks in endMicrotickScope() rather than\n    // in native engine.\n    const wasRootExec = beginMicroTickScope();\n    try {\n      let p = trans && trans.db._novip === this.db._novip ?\n        trans === PSD.trans ?\n          trans._promise(mode, checkTableInTransaction, writeLocked) :\n          newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n        tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n      if (task) { // Dexie.debug = true so we trace errors\n        p._consoleTask = task;\n        p = p.catch(err => {\n          console.trace(err);\n          return rejection(err);\n        });\n      }\n      return p;  \n    } finally {\n      if (wasRootExec) endMicroTickScope();\n    }\n  }\n\n  /** Table.get()\n   * \n   * https://dexie.org/docs/Table/Table.get()\n   * \n   **/\n  get(keyOrCrit, cb?) {\n    if (keyOrCrit && keyOrCrit.constructor === Object)\n      return this.where(keyOrCrit as { [key: string]: IndexableType }).first(cb);\n    if (keyOrCrit == null) return rejection(new exceptions.Type(`Invalid argument to Table.get()`));\n\n    return this._trans('readonly', (trans) => {\n      return this.core.get({trans, key: keyOrCrit})\n        .then(res => this.hook.reading.fire(res));\n    }).then(cb);\n  }\n\n  /** Table.where()\n   * \n   * https://dexie.org/docs/Table/Table.where()\n   * \n   **/\n  where(indexOrCrit: string | string[] | { [key: string]: IndexableType }) {\n    if (typeof indexOrCrit === 'string')\n      return new this.db.WhereClause(this, indexOrCrit);\n    if (isArray(indexOrCrit))\n      return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n    // indexOrCrit is an object map of {[keyPath]:value} \n    const keyPaths = keys(indexOrCrit);\n    if (keyPaths.length === 1)\n      // Only one critera. This was the easy case:\n      return this\n        .where(keyPaths[0])\n        .equals(indexOrCrit[keyPaths[0]]);\n\n    // Multiple criterias.\n    // Let's try finding a compound index that matches all keyPaths in\n    // arbritary order:\n    const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => {\n      if (\n        ix.compound &&\n        keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0)) {\n          for (let i=0; i<keyPaths.length; ++i) {\n            if (keyPaths.indexOf(ix.keyPath[i]) === -1) return false;\n          }\n          return true;\n        }\n        return false;\n      }).sort((a,b) => a.keyPath.length - b.keyPath.length)[0];\n            \n    if (compoundIndex && this.db._maxKey !== maxString) {\n      // Cool! We found such compound index\n      // and this browser supports compound indexes (maxKey !== maxString)!\n      const keyPathsInValidOrder = (compoundIndex.keyPath as string[]).slice(0, keyPaths.length);\n      return this\n        .where(keyPathsInValidOrder)\n        .equals(keyPathsInValidOrder.map(kp => indexOrCrit[kp]));\n    }\n\n    if (!compoundIndex && debug) console.warn(\n      `The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit from a ` +\n      `compound index [${keyPaths.join('+')}]`);\n\n    // Ok, now let's fallback to finding at least one matching index\n    // and filter the rest.\n    const { idxByName } = this.schema;\n\n    function equals(a, b) {\n      return cmp(a, b) === 0; // Works with all indexable types including binary keys.\n    }\n\n    const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n      const index = idxByName[keyPath];\n      const value = indexOrCrit[keyPath];\n      return [\n        prevIndex || index, // idx::=Pick index of first matching keypath\n        prevIndex || !index ? // filter::=null if not needed, otherwise combine function filter\n          combine(\n            prevFilterFn,\n            index && index.multi ?\n              x => {\n                const prop = getByKeyPath(x, keyPath);\n                return isArray(prop) && prop.some(item => equals(value, item));\n              } : x => equals(value, getByKeyPath(x, keyPath)))\n          : prevFilterFn\n      ];\n    }, [null, null]);\n\n    return idx ?\n      this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n        .filter(filterFunction) :\n      compoundIndex ?\n        this.filter(filterFunction) : // Has compound but browser bad. Allow filter.\n        this.where(keyPaths).equals(''); // No index at all. Fail lazily with \"[a+b+c] is not indexed\"\n  }\n\n  /** Table.filter()\n   * \n   * https://dexie.org/docs/Table/Table.filter()\n   * \n   **/\n  filter(filterFunction: (obj: any) => boolean) {\n    return this.toCollection().and(filterFunction);\n  }\n\n  /** Table.count()\n   * \n   * https://dexie.org/docs/Table/Table.count()\n   * \n   **/\n  count(thenShortcut?: any) {\n    return this.toCollection().count(thenShortcut);\n  }\n\n  /** Table.offset()\n   * \n   * https://dexie.org/docs/Table/Table.offset()\n   * \n   **/\n  offset(offset: number) {\n    return this.toCollection().offset(offset);\n  }\n\n  /** Table.limit()\n   * \n   * https://dexie.org/docs/Table/Table.limit()\n   * \n   **/\n  limit(numRows: number) {\n    return this.toCollection().limit(numRows);\n  }\n\n  /** Table.each()\n   * \n   * https://dexie.org/docs/Table/Table.each()\n   * \n   **/\n  each(callback: (obj: any, cursor: { key: IndexableType, primaryKey: IndexableType }) => any) {\n    return this.toCollection().each(callback);\n  }\n\n  /** Table.toArray()\n   * \n   * https://dexie.org/docs/Table/Table.toArray()\n   * \n   **/\n  toArray(thenShortcut?: any) {\n    return this.toCollection().toArray(thenShortcut);\n  }\n\n  /** Table.toCollection()\n   * \n   * https://dexie.org/docs/Table/Table.toCollection()\n   * \n   **/\n  toCollection() {\n    return new this.db.Collection(new this.db.WhereClause(this));\n  }\n\n  /** Table.orderBy()\n   * \n   * https://dexie.org/docs/Table/Table.orderBy()\n   * \n   **/\n  orderBy(index: string | string[]) {\n    return new this.db.Collection(\n      new this.db.WhereClause(this, isArray(index) ?\n        `[${index.join('+')}]` :\n        index));\n  }\n\n  /** Table.reverse()\n   * \n   * https://dexie.org/docs/Table/Table.reverse()\n   * \n   **/\n  reverse(): Collection {\n    return this.toCollection().reverse();\n  }\n\n  /** Table.mapToClass()\n   * \n   * https://dexie.org/docs/Table/Table.mapToClass()\n   * \n   **/\n  mapToClass(constructor: Function) {\n    const {db, name: tableName} = this;\n    this.schema.mappedClass = constructor;\n    if (constructor.prototype instanceof Entity) {\n      constructor = class extends (constructor as any) {\n        get db () { return db; }\n        table() { return tableName; }\n      }\n    }\n    // Collect all inherited property names (including method names) by\n    // walking the prototype chain. This is to avoid overwriting them from\n    // database data - so application code can rely on inherited props never\n    // becoming shadowed by database object props.\n    const inheritedProps = new Set<string>();\n    for (let proto = constructor.prototype; proto; proto = getProto(proto)) {\n      Object.getOwnPropertyNames(proto).forEach(propName => inheritedProps.add(propName));\n    }\n  \n    // Now, subscribe to the when(\"reading\") event to make all objects that come out from this table inherit from given class\n    // no matter which method to use for reading (Table.get() or Table.where(...)... )\n    const readHook = (obj: Object) => {\n      if (!obj) return obj; // No valid object. (Value is null or undefined). Return as is.\n      // Create a new object that derives from constructor:\n      const res = Object.create(constructor.prototype);\n      // Clone members (but never those that collide with a property in the prototype\n      // hierchary (MUST BE ABLE TO RELY ON Entity methods and props!)):\n      for (let m in obj) if (!inheritedProps.has(m)) try { res[m] = obj[m]; } catch (_) { }\n      return res;\n    };\n\n    if (this.schema.readHook) {\n      this.hook.reading.unsubscribe(this.schema.readHook);\n    }\n    this.schema.readHook = readHook;\n    this.hook(\"reading\", readHook);\n    return constructor;\n  }\n\n  /** @deprecated */\n  defineClass() {\n    function Class (content){\n      extend(this, content);\n    };\n    return this.mapToClass(Class);\n  }\n\n  /** Table.add()\n   * \n   * https://dexie.org/docs/Table/Table.add()\n   * \n   **/\n  add(obj, key?: IndexableType): PromiseExtended<IndexableType> {\n    const {auto, keyPath} = this.schema.primKey;\n    let objToAdd = obj;\n    if (keyPath && auto) {\n      objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n    }\n    return this._trans('readwrite', trans => {\n      return this.core.mutate({trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd]});\n    }).then(res => res.numFailures ? Promise.reject(res.failures[0]) : res.lastResult)\n    .then(lastResult => {\n      if (keyPath) {\n        // This part should be here for backward compatibility.\n        // If ever feeling too bad about this, please wait to a new major before removing it,\n        // and document the change thoroughly.\n        try{setByKeyPath(obj, keyPath, lastResult);}catch(_){};\n      }\n      return lastResult;\n    });\n  }\n\n  /** Table.update()\n   * \n   * https://dexie.org/docs/Table/Table.update()\n   * \n   **/\n  update(keyOrObject, modifications: { [keyPath: string]: any; } | ((obj: any, ctx:{value: any, primKey: IndexableType}) => void | boolean)): PromiseExtended<number> {\n    if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n      const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n      if (key === undefined) return rejection(new exceptions.InvalidArgument(\n        \"Given object does not contain its primary key\"));\n      /*// object to modify. Also modify given object with the modifications:\n      // This part should be here for backward compatibility.\n      // If ever feeling too bad about mutating given object, please wait to a new major before removing it,\n      // and document the change thoroughly. TODO: Document this change!\n      if (!Object.isFrozen(keyOrObject)) try {\n        if (typeof modifications !== \"function\") {\n          keys(modifications).forEach(keyPath => {\n            setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);\n          });\n        } else {\n          // Now since we support function argument, we should have a similar behavior here as well\n          // (as long as we do this mutability stuff on the given object)\n          modifications(keyOrObject, {value: keyOrObject, primKey: key});\n        }\n      } catch {\n        // Maybe given object was frozen.\n        // This part is not essential. Just move on as nothing happened...\n      }*/\n      return this.where(\":id\").equals(key).modify(modifications);\n    } else {\n      // key to modify\n      return this.where(\":id\").equals(keyOrObject).modify(modifications);\n    }\n  }\n\n  /** Table.put()\n   * \n   * https://dexie.org/docs/Table/Table.put()\n   * \n   **/\n  put(obj, key?: IndexableType): PromiseExtended<IndexableType> {\n    const {auto, keyPath} = this.schema.primKey;\n    let objToAdd = obj;\n    if (keyPath && auto) {\n      objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n    }\n    return this._trans(\n      'readwrite',\n      trans => this.core.mutate({trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null}))\n    .then(res => res.numFailures ? Promise.reject(res.failures[0]) : res.lastResult)\n    .then(lastResult => {\n      if (keyPath) {\n        // This part should be here for backward compatibility.\n        // If ever feeling too bad about this, please wait to a new major before removing it,\n        // and document the change thoroughly.\n        try{setByKeyPath(obj, keyPath, lastResult);}catch(_){};\n      }\n      return lastResult;\n    });\n  }\n\n  /** Table.delete()\n   * \n   * https://dexie.org/docs/Table/Table.delete()\n   * \n   **/\n  delete(key: IndexableType): PromiseExtended<void> {\n    return this._trans('readwrite',\n      trans => this.core.mutate({trans, type: 'delete', keys: [key]}))\n    .then(res => res.numFailures ? Promise.reject(res.failures[0]) : undefined);\n  }\n\n  /** Table.clear()\n   * \n   * https://dexie.org/docs/Table/Table.clear()\n   * \n   **/\n  clear() {\n    return this._trans('readwrite',\n      trans => this.core.mutate({trans, type: 'deleteRange', range: AnyRange}))\n        .then(res => res.numFailures ? Promise.reject(res.failures[0]) : undefined);\n  }\n\n  /** Table.bulkGet()\n   * \n   * https://dexie.org/docs/Table/Table.bulkGet()\n   * \n   * @param keys \n   */\n  bulkGet(keys: IndexableType[]) {\n    return this._trans('readonly', trans => {\n      return this.core.getMany({\n        keys,\n        trans\n      }).then(result => result.map(res => this.hook.reading.fire(res)));\n    });\n  }\n\n  /** Table.bulkAdd()\n   * \n   * https://dexie.org/docs/Table/Table.bulkAdd()\n   * \n   **/\n  bulkAdd(\n    objects: readonly any[],\n    keysOrOptions?: ReadonlyArray<IndexableType> | { allKeys?: boolean },\n    options?: { allKeys?: boolean }\n  ) {    \n    const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n    options = options || (keys ? undefined : keysOrOptions as { allKeys?: boolean });\n    const wantResults = options ? options.allKeys : undefined;\n\n    return this._trans('readwrite', trans => {\n      const {auto, keyPath} = this.schema.primKey;\n      if (keyPath && keys)\n        throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n      if (keys && keys.length !== objects.length)\n        throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n\n      const numObjects = objects.length; // Pick length here to allow garbage collection of objects later\n      let objectsToAdd = keyPath && auto ?\n        objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n        objects;\n      return this.core.mutate(\n        {trans, type: 'add', keys: keys as IndexableType[], values: objectsToAdd, wantResults}\n      )\n        .then(({numFailures, results,lastResult, failures}) => {\n          const result = wantResults ? results : lastResult;\n          if (numFailures === 0) return result;\n          throw new BulkError(\n            `${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n        });\n    });\n  }\n\n  /** Table.bulkPut()\n   * \n   * https://dexie.org/docs/Table/Table.bulkPut()\n   * \n   **/\n  bulkPut(\n    objects: readonly any[],\n    keysOrOptions?: ReadonlyArray<IndexableType> | { allKeys?: boolean },\n    options?: { allKeys?: boolean }\n  ) {   \n    const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n    options = options || (keys ? undefined : keysOrOptions as { allKeys?: boolean });\n    const wantResults = options ? options.allKeys : undefined;\n\n    return this._trans('readwrite', trans => {\n      const {auto, keyPath} = this.schema.primKey;\n      if (keyPath && keys)\n        throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n      if (keys && keys.length !== objects.length)\n        throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n\n      const numObjects = objects.length; // Pick length here to allow garbage collection of objects later\n      let objectsToPut = keyPath && auto ?\n        objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n        objects;\n\n      return this.core.mutate(\n        {trans, type: 'put', keys: keys as IndexableType[], values: objectsToPut, wantResults}\n      )\n        .then(({numFailures, results, lastResult, failures}) => {\n          const result = wantResults ? results : lastResult;\n          if (numFailures === 0) return result;\n          throw new BulkError(\n            `${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n        });\n    });\n  }\n\n  /** Table.bulkUpdate()\n   *\n   * https://dexie.org/docs/Table.Table.bulkUpdate()\n   */\n   bulkUpdate(\n    keysAndChanges: readonly { key: any; changes: UpdateSpec<any> }[]\n  ): PromiseExtended<number> {\n    const coreTable = this.core;\n    const keys = keysAndChanges.map((entry) => entry.key);\n    const changeSpecs = keysAndChanges.map((entry) => entry.changes);\n    const offsetMap: number[] = [];\n    return this._trans('readwrite', (trans) => {\n      return coreTable.getMany({ trans, keys, cache: 'clone' }).then((objs) => {\n        const resultKeys: any[] = [];\n        const resultObjs: any[] = [];\n        keysAndChanges.forEach(({ key, changes }, idx) => {\n          const obj = objs[idx];\n          if (obj) {\n            for (const keyPath of Object.keys(changes)) {\n              const value = changes[keyPath];\n              if (keyPath === this.schema.primKey.keyPath) {\n                if (cmp(value, key) !== 0) {\n                  throw new exceptions.Constraint(\n                    `Cannot update primary key in bulkUpdate()`\n                  );\n                }\n              } else {\n                setByKeyPath(obj, keyPath, value);\n              }\n            }\n            offsetMap.push(idx);\n            resultKeys.push(key);\n            resultObjs.push(obj);\n          }\n        });\n        const numEntries = resultKeys.length;\n        return coreTable\n          .mutate({\n            trans,\n            type: 'put',\n            keys: resultKeys,\n            values: resultObjs,\n            updates: {\n              keys,\n              changeSpecs\n            }\n          })\n          .then(({ numFailures, failures }) => {\n            if (numFailures === 0) return numEntries;\n            // Failure. bulkPut() may have a subset of keys\n            // so we must translate returned 'failutes' into the offsets of given argument:\n            for (const offset of Object.keys(failures)) {\n              const mappedOffset = offsetMap[Number(offset)];\n              if (mappedOffset != null) {\n                const failure = failures[offset];\n                delete failures[offset];\n                failures[mappedOffset] = failure;\n              }\n            }\n            throw new BulkError(\n              `${this.name}.bulkUpdate(): ${numFailures} of ${numEntries} operations failed`,\n              failures\n            );\n          });\n      });\n    });\n  }\n\n  /** Table.bulkDelete()\n   * \n   * https://dexie.org/docs/Table/Table.bulkDelete()\n   * \n   **/\n  bulkDelete(keys: ReadonlyArray<IndexableType>): PromiseExtended<void> {\n    const numKeys = keys.length;\n    return this._trans('readwrite', trans => {\n      return this.core.mutate({trans, type: 'delete', keys: keys as IndexableType[]});\n    }).then(({numFailures, lastResult, failures}) => {\n      if (numFailures === 0) return lastResult;\n      throw new BulkError(\n        `${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n    });\n  }\n}\n", "import {keys, isArray, asap} from '../functions/utils';\nimport {nop, mirror, reverseStoppableEventChain} from '../functions/chaining-functions';\nimport {exceptions} from '../errors';\n\nexport default function Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            // Subscribe. If additional arguments than just the subscriber was provided, forward them as well.\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i) args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        } else if (typeof (eventName) === 'string') {\n            // Return interface allowing to fire or unsubscribe from event\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    \n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    \n    return rv;\n\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object') return addConfiguredEvents(eventName);\n        if (!chainFunction) chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction) defaultFunction = nop;\n\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n\n    function addConfiguredEvents(cfg) {\n        // events(this, {reading: [functionChain, nop]});\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            } else if (args === 'asap') {\n                // Rather than approaching event subscription using a functional approach, we here do it in a for-loop where subscriber is executed in its own stack\n                // enabling that any exception that occur wont disturb the initiator and also not nescessary be catched and forgotten.\n                var context = add(eventName, mirror, function fire() {\n                    // Optimazation-safe cloning of arguments into args.\n                    var i = arguments.length, args = new Array(i);\n                    while (i--) args[i] = arguments[i];\n                    // All each subscriber:\n                    context.subscribers.forEach(function (fn) {\n                        asap(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            } else throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n", "import { arrayToObject, derive } from './utils';\n\n\nexport function makeClassConstructor<TConstructor> (prototype: Object, constructor: Function) {\n  /*const propertyDescriptorMap = arrayToObject(\n    Object.getOwnPropertyNames(prototype),\n    propKey => [propKey, Object.getOwnPropertyDescriptor(prototype, propKey)]);\n\n  // Both derive and clone the prototype.\n  //   derive: So that x instanceof T returns true when T is the class template.\n  //   clone: Optimizes method access a bit (but actually not nescessary)\n  const derivedPrototypeClone = Object.create(prototype, propertyDescriptorMap);\n  derivedPrototypeClone.constructor = constructor;\n  constructor.prototype = derivedPrototypeClone;\n  return constructor as any as TConstructor;*/\n\n  // Keep the above code in case we want to clone AND derive the parent prototype.\n  // Reason would be optimization of property access.\n  // The code below will only create a prototypal inheritance from given constructor function\n  // to given prototype.\n  derive(constructor).from({prototype});\n  return constructor as any as TConstructor;  \n}\n", "import { Dexie } from '../dexie';\nimport { TableSchema } from '../../public/types/table-schema';\nimport { Transaction } from '../transaction/transaction';\nimport { hookCreatingChain, pureFunctionChain, nop, mirror, hookUpdatingChain, hookDeletingChain } from '../../functions/chaining-functions';\nimport { TableHooks } from '../../public/types/table-hooks';\nimport { Table } from './table';\nimport Events from '../../helpers/Events';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\n\nexport interface TableConstructor {\n  new (name: string, tableSchema: TableSchema, optionalTrans?: Transaction) : Table;\n  prototype: Table;\n}\n\n/** Generates a Table constructor bound to given Dexie instance.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createTableConstructor (db: Dexie) {\n  return makeClassConstructor<TableConstructor>(\n    Table.prototype,\n\n    function Table (this: Table, name: string, tableSchema: TableSchema, trans?: Transaction) {\n      this.db = db;\n      this._tx = trans;\n      this.name = name;\n      this.schema = tableSchema;\n      this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n        \"creating\": [hookCreatingChain, nop],\n        \"reading\": [pureFunctionChain, mirror],\n        \"updating\": [hookUpdatingChain, nop],\n        \"deleting\": [hookDeletingChain, nop]\n      }) as TableHooks;\n    }\n\n  );\n}\n", "import { combine } from \"../../functions/combine\";\nimport { exceptions } from \"../../errors\";\nimport { hasOwn } from \"../../functions/utils\";\nimport { wrap } from \"../../helpers/promise\";\nimport { Collection } from './';\nimport { DBCoreCursor, DBCoreTable, DBCoreTransaction, DBCoreTableSchema, DBCoreRangeType } from '../../public/types/dbcore';\nimport { nop } from '../../functions/chaining-functions';\n\ntype CollectionContext = Collection[\"_ctx\"];\n\nexport function isPlainKeyRange (ctx: CollectionContext, ignoreLimitFilter?: boolean) {\n  return !(ctx.filter || ctx.algorithm || ctx.or) &&\n      (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}    \n\nexport function addFilter(ctx: CollectionContext, fn: Function) {\n  ctx.filter = combine(ctx.filter, fn);\n}\n\nexport function addReplayFilter (ctx: CollectionContext, factory, isLimitFilter?) {\n  var curr = ctx.replayFilter;\n  ctx.replayFilter = curr ? ()=>combine(curr(), factory()) : factory;\n  ctx.justLimit = isLimitFilter && !curr;\n}\n\nexport function addMatchFilter(ctx: CollectionContext, fn) {\n  ctx.isMatch = combine(ctx.isMatch, fn);\n}\n\nexport function getIndexOrStore(ctx: CollectionContext, coreSchema: DBCoreTableSchema) {\n  // TODO: Rewrite this. No need to know ctx.isPrimKey. ctx.index should hold the keypath.\n  // Still, throw if not found!\n  if (ctx.isPrimKey) return coreSchema.primaryKey;\n  const index = coreSchema.getIndexByKeyPath(ctx.index);\n  if (!index) throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n  return index;\n}\n\nexport function openCursor(ctx: CollectionContext, coreTable: DBCoreTable, trans: DBCoreTransaction) {\n  const index = getIndexOrStore(ctx, coreTable.schema);\n  return coreTable.openCursor({\n    trans,\n    values: !ctx.keysOnly,\n    reverse: ctx.dir === 'prev',\n    unique: !!ctx.unique,\n    query: {\n      index, \n      range: ctx.range\n    }\n  });\n}\n\nexport function iter (\n  ctx: CollectionContext, \n  fn: (item, cursor: DBCoreCursor, advance: Function)=>void,\n  coreTrans: DBCoreTransaction,\n  coreTable: DBCoreTable): Promise<any>\n{\n  const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n  if (!ctx.or) {\n      return iterate(\n        openCursor(ctx, coreTable, coreTrans),\n        combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n  } else {\n      const set = {};\n\n      const union = (item: any, cursor: DBCoreCursor, advance) => {\n          if (!filter || filter(cursor, advance, result=>cursor.stop(result), err => cursor.fail(err))) {\n              var primaryKey = cursor.primaryKey;\n              var key = '' + primaryKey;\n              if (key === '[object ArrayBuffer]') key = '' + new Uint8Array(primaryKey);\n              if (!hasOwn(set, key)) {\n                  set[key] = true;\n                  fn(item, cursor, advance);\n              }\n          }\n      }\n\n      return Promise.all([\n        ctx.or._iterate(union, coreTrans),\n        iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n      ]);\n  }\n}\n\nfunction iterate(cursorPromise: Promise<DBCoreCursor>, filter, fn, valueMapper): Promise<any> {\n  \n  // Apply valueMapper (hook('reading') or mappped class)\n  var mappedFn = valueMapper ? (x,c,a) => fn(valueMapper(x),c,a) : fn;\n  // Wrap fn with PSD and microtick stuff from Promise.\n  var wrappedFn = wrap(mappedFn);\n  \n  return cursorPromise.then(cursor => {\n    if (cursor) {\n      return cursor.start(()=>{\n        var c = ()=>cursor.continue();\n        if (!filter || filter(cursor, advancer => c = advancer, val=>{cursor.stop(val);c=nop}, e => {cursor.fail(e);c = nop;}))\n          wrappedFn(cursor.value, cursor, advancer => c = advancer);\n        c();\n      });\n    }\n  });\n}\n", "import { isArray } from \"../functions/utils\";\nimport { PropModSpec } from \"../public/types/prop-modification\";\n\n/** Consistent change propagation across offline synced data.\n * \n * This class is executed client- and server side on sync, making\n * an operation consistent across sync for full consistency and accuracy.\n * \n * Example: An object represents a bank account with a balance.\n * One offline user adds $ 1.00 to the balance.\n * Another user (online) adds $ 2.00 to the balance.\n * When first user syncs, the balance becomes the sum of every operation (3.00).\n * \n * -- initial: balance is 0\n * 1. db.bankAccounts.update(1, { balance: new ProdModification({add: 100})}) // user 1 (offline)\n * 2. db.bankAccounts.update(1, { balance: new ProdModification({add: 200})}) // user 2 (online)\n * -- before user 1 syncs, balance is 200 (representing money with integers * 100 to avoid rounding issues)\n * <user 1 syncs>\n * -- balance is 300\n * \n * When new operations are added, they need to be added to:\n * 1. PropModSpec interface\n * 2. Here in PropModification with the logic they represent\n * 3. (Optionally) a sugar function for it, such as const mathAdd = (amount: number | BigInt) => new PropModification({mathAdd: amount})\n */\nexport class PropModification {\n  [\"@@propmod\"]: PropModSpec;\n  execute(value: any): any {\n    const spec = this[\"@@propmod\"]\n    // add (mathematical or set-wise)\n    if (spec.add !== undefined) {\n      const term = spec.add;\n      // Set-addition on array representing a set of primitive types (strings, numbers)\n      if (isArray(term)) {\n        return [...(isArray(value) ? value : []), ...term].sort();\n      }\n      // Mathematical addition:\n      if (typeof term === 'number') return (Number(value) || 0) + term; // if value is not convertible to number, return 0 + term\n      if (typeof term === 'bigint') {\n        try {\n          return BigInt(value) + term;\n        } catch {\n          return BigInt(0) + term; // Unlike Number(value) that can return NaN, BigInt(value) throws if value is not BigInt, Number or numeric string\n        }\n      }\n      throw new TypeError(`Invalid term ${term}`);\n    }\n\n    // remove (mathematical or set-wise)\n    if (spec.remove !== undefined) {\n      const subtrahend = spec.remove;\n      // Set-addition on array representing a set of primitive types (strings, numbers)\n      if (isArray(subtrahend)) {\n        return isArray(value) ? value.filter(item => !subtrahend.includes(item)).sort() : [];\n      }        \n      // Mathematical addition:\n      if (typeof subtrahend === 'number') return Number(value) - subtrahend;\n      if (typeof subtrahend === 'bigint') {\n        try {\n          return BigInt(value) - subtrahend;\n        } catch {\n          return BigInt(0) - subtrahend; // Unlike Number(value) that can return NaN, BigInt(value) throws if value is not BigInt, Number or numeric string\n        }\n      }\n      throw new TypeError(`Invalid subtrahend ${subtrahend}`);\n    }\n\n    // Replace a prefix:\n    const prefixToReplace = spec.replacePrefix?.[0];\n    if (prefixToReplace && typeof value === 'string' && value.startsWith(prefixToReplace)) {\n      return spec.replacePrefix[1] + value.substring(prefixToReplace.length);\n    }\n    return value;\n  }\n\n  constructor(spec: PropModSpec) {\n    this[\"@@propmod\"] = spec;\n  }\n}\n", "import { Collection as ICollection } from \"../../public/types/collection\";\nimport { Dexie } from \"../dexie\";\nimport { Table } from \"../table\";\nimport { IndexableType, IndexableTypeArrayReadonly } from \"../../public/types/indexable-type\";\nimport { PromiseExtended } from \"../../public/types/promise-extended\";\nimport { iter, isPlainKeyRange, getIndexOrStore, addReplayFilter, addFilter, addMatchFilter } from \"./collection-helpers\";\nimport { rejection } from \"../../helpers/promise\";\nimport { combine } from \"../../functions/combine\";\nimport { extend, hasOwn, deepClone, keys, setByKeyPath, getByKeyPath } from \"../../functions/utils\";\nimport { ModifyError } from \"../../errors\";\nimport { ThenShortcut } from \"../../public/types/then-shortcut\";\nimport { Transaction } from '../transaction';\nimport { DBCoreCursor, DBCoreTransaction, DBCoreRangeType, DBCoreMutateResponse, DBCoreKeyRange } from '../../public/types/dbcore';\nimport { cmp } from \"../../functions/cmp\";\nimport { PropModification } from \"../../helpers/prop-modification\";\nimport { UpdateSpec } from \"../../public/types/update-spec\";\n\n/** class Collection\n * \n * https://dexie.org/docs/Collection/Collection\n */\nexport class Collection implements ICollection {\n  db: Dexie;\n  _ctx: {\n    table: Table;\n    index?: string | null;\n    isPrimKey?: boolean;\n    range: DBCoreKeyRange;\n    keysOnly: boolean;\n    dir: \"next\" | \"prev\";\n    unique: \"\" | \"unique\";\n    algorithm?: Function | null;\n    filter?: Function | null;\n    replayFilter: Function | null;\n    justLimit: boolean; // True if a replayFilter is just a filter that performs a \"limit\" operation (or none at all)\n    isMatch: Function | null;\n    offset: number,\n    limit: number,\n    error: any, // If set, any promise must be rejected with this error\n    or: Collection,\n    valueMapper: (any) => any\n  }\n  \n  _ondirectionchange?: Function;\n\n  _read<T>(fn: (idbtrans: IDBTransaction, dxTrans: Transaction) => PromiseLike<T>, cb?): PromiseExtended<T> {\n    var ctx = this._ctx;\n    return ctx.error ?\n      ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n      ctx.table._trans('readonly', fn).then(cb);\n  }\n\n  _write<T>(fn: (idbtrans: IDBTransaction, dxTrans: Transaction) => PromiseLike<T>): PromiseExtended<T> {\n    var ctx = this._ctx;\n    return ctx.error ?\n      ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n      ctx.table._trans('readwrite', fn, \"locked\"); // When doing write operations on collections, always lock the operation so that upcoming operations gets queued.\n  }\n\n  _addAlgorithm(fn) {\n    var ctx = this._ctx;\n    ctx.algorithm = combine(ctx.algorithm, fn);\n  }\n\n  _iterate(\n    fn: (item, cursor: DBCoreCursor, advance: Function) => void,\n    coreTrans: DBCoreTransaction) : Promise<any>\n  {\n    return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n  }\n\n  /** Collection.clone()\n   * \n   * https://dexie.org/docs/Collection/Collection.clone()\n   * \n   **/\n  clone(props?): this {\n    var rv = Object.create(this.constructor.prototype),\n      ctx = Object.create(this._ctx);\n    if (props) extend(ctx, props);\n    rv._ctx = ctx;\n    return rv;\n  }\n\n  /** Collection.raw()\n   * \n   * https://dexie.org/docs/Collection/Collection.raw()\n   * \n   **/\n  raw(): this {\n    this._ctx.valueMapper = null;\n    return this;\n  }\n\n  /** Collection.each()\n   * \n   * https://dexie.org/docs/Collection/Collection.each()\n   * \n   **/\n  each(fn: (obj, cursor: DBCoreCursor) => any): PromiseExtended<void> {\n    var ctx = this._ctx;\n\n    return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n  }\n\n  /** Collection.count()\n   * \n   * https://dexie.org/docs/Collection/Collection.count()\n   * \n   **/\n  count(cb?) {\n    return this._read(trans => {\n      const ctx = this._ctx;\n      const coreTable = ctx.table.core;\n      if (isPlainKeyRange(ctx, true)) {\n        // This is a plain key range. We can use the count() method if the index.\n        return coreTable.count({\n          trans,\n          query: {\n            index: getIndexOrStore(ctx, coreTable.schema),\n            range: ctx.range\n          }\n        }).then(count => Math.min(count, ctx.limit));\n      } else {\n        // Algorithms, filters or expressions are applied. Need to count manually.\n        var count = 0;\n        return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n        .then(()=>count);\n      }\n    }).then(cb);\n  }\n\n  /** Collection.sortBy()\n   * \n   * https://dexie.org/docs/Collection/Collection.sortBy()\n   * \n   **/\n  sortBy(keyPath: string): PromiseExtended<any[]>;\n  sortBy<R>(keyPath: string, thenShortcut: ThenShortcut<any[], R>) : PromiseExtended<R>;\n  sortBy(keyPath: string, cb?: ThenShortcut<any[], any>) {\n    const parts = keyPath.split('.').reverse(),\n      lastPart = parts[0],\n      lastIndex = parts.length - 1;\n    function getval(obj, i) {\n      if (i) return getval(obj[parts[i]], i - 1);\n      return obj[lastPart];\n    }\n    var order = this._ctx.dir === \"next\" ? 1 : -1;\n\n    function sorter(a, b) {\n      var aVal = getval(a, lastIndex),\n        bVal = getval(b, lastIndex);\n      return cmp(aVal, bVal) * order;\n    }\n    return this.toArray(function (a) {\n      return a.sort(sorter);\n    }).then(cb);\n  }\n\n  /** Collection.toArray()\n   * \n   * https://dexie.org/docs/Collection/Collection.toArray()\n   * \n   **/\n  toArray(cb?): PromiseExtended<any[]> {\n    return this._read(trans => {\n      var ctx = this._ctx;\n      if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n        // Special optimation if we could use IDBObjectStore.getAll() or\n        // IDBKeyRange.getAll():\n        const {valueMapper} = ctx;\n        const index = getIndexOrStore(ctx, ctx.table.core.schema);\n        return ctx.table.core.query({\n          trans,\n          limit: ctx.limit,\n          values: true,\n          query: {\n            index,\n            range: ctx.range\n          }\n        }).then(({result}) => valueMapper ? result.map(valueMapper) : result);\n      } else {\n        // Getting array through a cursor.\n        const a = [];\n        return iter(ctx, item => a.push(item), trans, ctx.table.core).then(()=>a);\n      }\n    }, cb);\n  }\n\n  /** Collection.offset()\n   * \n   * https://dexie.org/docs/Collection/Collection.offset()\n   * \n   **/\n  offset(offset: number) : Collection{\n    var ctx = this._ctx;\n    if (offset <= 0) return this;\n    ctx.offset += offset; // For count()\n    if (isPlainKeyRange(ctx)) {\n      addReplayFilter(ctx, () => {\n        var offsetLeft = offset;\n        return (cursor, advance) => {\n          if (offsetLeft === 0) return true;\n          if (offsetLeft === 1) { --offsetLeft; return false; }\n          advance(() => {\n            cursor.advance(offsetLeft);\n            offsetLeft = 0;\n          });\n          return false;\n        };\n      });\n    } else {\n      addReplayFilter(ctx, () => {\n        var offsetLeft = offset;\n        return () => (--offsetLeft < 0);\n      });\n    }\n    return this;\n  }\n\n  /** Collection.limit()\n   * \n   * https://dexie.org/docs/Collection/Collection.limit()\n   * \n   **/\n  limit(numRows: number) : Collection {\n    this._ctx.limit = Math.min(this._ctx.limit, numRows); // For count()\n    addReplayFilter(this._ctx, () => {\n      var rowsLeft = numRows;\n      return function (cursor, advance, resolve) {\n        if (--rowsLeft <= 0) advance(resolve); // Stop after this item has been included\n        return rowsLeft >= 0; // If numRows is already below 0, return false because then 0 was passed to numRows initially. Otherwise we wouldnt come here.\n      };\n    }, true);\n    return this;\n  }\n\n  /** Collection.until()\n   * \n   * https://dexie.org/docs/Collection/Collection.until()\n   * \n   **/\n  until(filterFunction: (x) => boolean, bIncludeStopEntry?) {\n    addFilter(this._ctx, function (cursor, advance, resolve) {\n      if (filterFunction(cursor.value)) {\n        advance(resolve);\n        return bIncludeStopEntry;\n      } else {\n        return true;\n      }\n    });\n    return this;\n  }\n\n  /** Collection.first()\n   * \n   * https://dexie.org/docs/Collection/Collection.first()\n   * \n   **/\n  first(cb?) {\n    return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n  }\n\n  /** Collection.last()\n   * \n   * https://dexie.org/docs/Collection/Collection.last()\n   * \n   **/\n  last(cb?) {\n    return this.reverse().first(cb);\n  }\n\n  /** Collection.filter()\n   * \n   * https://dexie.org/docs/Collection/Collection.filter()\n   * \n   **/\n  filter(filterFunction: (x) => boolean): Collection {\n    /// <param name=\"jsFunctionFilter\" type=\"Function\">function(val){return true/false}</param>\n    addFilter(this._ctx, function (cursor) {\n      return filterFunction(cursor.value);\n    });\n    // match filters not used in Dexie.js but can be used by 3rd part libraries to test a\n    // collection for a match without querying DB. Used by Dexie.Observable.\n    addMatchFilter(this._ctx, filterFunction);\n    return this;\n  }\n\n  /** Collection.and()\n   * \n   * https://dexie.org/docs/Collection/Collection.and()\n   * \n   **/\n  and(filter: (x) => boolean) {\n    return this.filter(filter);\n  }\n\n  /** Collection.or()\n   * \n   * https://dexie.org/docs/Collection/Collection.or()\n   * \n   **/\n  or(indexName: string) {\n    return new this.db.WhereClause(this._ctx.table, indexName, this);\n  }\n\n  /** Collection.reverse()\n   * \n   * https://dexie.org/docs/Collection/Collection.reverse()\n   * \n   **/\n  reverse() {\n    this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n    if (this._ondirectionchange) this._ondirectionchange(this._ctx.dir);\n    return this;\n  }\n\n  /** Collection.desc()\n   * \n   * https://dexie.org/docs/Collection/Collection.desc()\n   * \n   **/\n  desc() {\n    return this.reverse();\n  }\n\n  /** Collection.eachKey()\n   * \n   * https://dexie.org/docs/Collection/Collection.eachKey()\n   * \n   **/\n  eachKey(cb?) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n  }\n\n  /** Collection.eachUniqueKey()\n   * \n   * https://dexie.org/docs/Collection/Collection.eachUniqueKey()\n   * \n   **/\n  eachUniqueKey(cb?) {\n    this._ctx.unique = \"unique\";\n    return this.eachKey(cb);\n  }\n\n  /** Collection.eachPrimaryKey()\n   * \n   * https://dexie.org/docs/Collection/Collection.eachPrimaryKey()\n   * \n   **/\n  eachPrimaryKey(cb?) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n  }\n\n  /** Collection.keys()\n   * \n   * https://dexie.org/docs/Collection/Collection.keys()\n   * \n   **/\n  keys(cb?) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    var a = [];\n    return this.each(function (item, cursor) {\n      a.push(cursor.key);\n    }).then(function () {\n      return a;\n    }).then(cb);\n  }\n\n  /** Collection.primaryKeys()\n   * \n   * https://dexie.org/docs/Collection/Collection.primaryKeys()\n   * \n   **/\n  primaryKeys(cb?) : PromiseExtended<IndexableType[]> {\n    var ctx = this._ctx;\n    if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n      // Special optimation if we could use IDBObjectStore.getAllKeys() or\n      // IDBKeyRange.getAllKeys():\n      return this._read(trans => {\n        var index = getIndexOrStore(ctx, ctx.table.core.schema);\n        return ctx.table.core.query({\n          trans,\n          values: false,\n          limit: ctx.limit,\n          query: {\n            index,\n            range: ctx.range\n          }});\n      }).then(({result})=>result).then(cb);\n    }\n    ctx.keysOnly = !ctx.isMatch;\n    var a = [];\n    return this.each(function (item, cursor) {\n      a.push(cursor.primaryKey);\n    }).then(function () {\n      return a;\n    }).then(cb);\n  }\n\n  /** Collection.uniqueKeys()\n   * \n   * https://dexie.org/docs/Collection/Collection.uniqueKeys()\n   * \n   **/\n  uniqueKeys(cb?) {\n    this._ctx.unique = \"unique\";\n    return this.keys(cb);\n  }\n\n  /** Collection.firstKey()\n   * \n   * https://dexie.org/docs/Collection/Collection.firstKey()\n   * \n   **/\n  firstKey(cb?) {\n    return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n  }\n\n  /** Collection.lastKey()\n   * \n   * https://dexie.org/docs/Collection/Collection.lastKey()\n   * \n   **/\n  lastKey(cb?) {\n    return this.reverse().firstKey(cb);\n  }\n\n  /** Collection.distinct()\n   * \n   * https://dexie.org/docs/Collection/Collection.distinct()\n   * \n   **/\n  distinct() {\n    var ctx = this._ctx,\n      idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n    if (!idx || !idx.multi) return this; // distinct() only makes differencies on multiEntry indexes.\n    var set = {};\n    addFilter(this._ctx, function (cursor: DBCoreCursor) {\n      var strKey = cursor.primaryKey.toString(); // Converts any Date to String, String to String, Number to String and Array to comma-separated string\n      var found = hasOwn(set, strKey);\n      set[strKey] = true;\n      return !found;\n    });\n    return this;\n  }\n\n  //\n  // Methods that mutate storage\n  //\n\n  /** Collection.modify()\n   * \n   * https://dexie.org/docs/Collection/Collection.modify()\n   * \n   **/\n  modify(changes: UpdateSpec<any> | ((obj: any, ctx:{value: any, primKey: IndexableType}) => void | boolean)): PromiseExtended<number> {\n    var ctx = this._ctx;\n    return this._write(trans => {\n      var modifyer: (obj: any, ctx:{value: any, primKey: IndexableType}) => void | boolean\n      if (typeof changes === 'function') {\n        // Changes is a function that may update, add or delete propterties or even require a deletion the object itself (delete this.item)\n        modifyer = changes as (obj: any, ctx:{value: any, primKey: IndexableType}) => void | boolean;\n      } else {\n        // changes is a set of {keyPath: value} and no one is listening to the updating hook.\n        var keyPaths = keys(changes);\n        var numKeys = keyPaths.length;\n        modifyer = function (item) {\n          let anythingModified = false;\n          for (let i = 0; i < numKeys; ++i) {\n            let keyPath = keyPaths[i];\n            let val = changes[keyPath];\n            let origVal = getByKeyPath(item, keyPath);\n\n            if (val instanceof PropModification) {\n              setByKeyPath(item, keyPath, val.execute(origVal));\n              anythingModified = true;\n            } else if (origVal !== val) {\n              setByKeyPath(item, keyPath, val); // Adding {keyPath: undefined} means that the keyPath should be deleted. Handled by setByKeyPath\n              anythingModified = true;\n            }\n          }\n          return anythingModified;\n        };\n      }\n\n      const coreTable = ctx.table.core;\n      const {outbound, extractKey} = coreTable.schema.primaryKey;\n      let limit = 200;\n      const modifyChunkSize = this.db._options.modifyChunkSize;\n      if (modifyChunkSize) {\n        if (typeof modifyChunkSize == 'object') {\n          limit = modifyChunkSize[coreTable.name] || modifyChunkSize['*'] || 200;\n        } else {\n          limit = modifyChunkSize;\n        }\n      }\n      const totalFailures = [];\n      let successCount = 0;\n      const failedKeys: IndexableType[] = [];\n      const applyMutateResult = (expectedCount: number, res: DBCoreMutateResponse) => {\n        const {failures, numFailures} = res;\n        successCount += expectedCount - numFailures;\n        for (let pos of keys(failures)) {\n          totalFailures.push(failures[pos]);\n        }\n      }\n      return this.clone().primaryKeys().then(keys => {\n        const criteria = isPlainKeyRange(ctx) &&\n          ctx.limit === Infinity &&\n          (typeof changes !== 'function' || changes === deleteCallback) && {\n            index: ctx.index,\n            range: ctx.range\n          };\n\n        const nextChunk = (offset: number) => {\n          const count = Math.min(limit, keys.length - offset);\n          return coreTable.getMany({\n            trans,\n            keys: keys.slice(offset, offset + count),\n            cache: \"immutable\" // Optimize for 2 things:\n            // 1) observability-middleware can track changes better.\n            // 2) hooks middleware don't have to query the existing values again when tracking changes.\n            // We can use \"immutable\" because we promise to not touch the values we retrieve here!\n          }).then(values => {\n            const addValues = [];\n            const putValues = [];\n            const putKeys = outbound ? [] : null;\n            const deleteKeys = [];\n            for (let i=0; i<count; ++i) {\n              const origValue = values[i];\n              const ctx = {\n                value: deepClone(origValue),\n                primKey: keys[offset+i]\n              };\n              if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                if (ctx.value == null) {\n                  // Deleted\n                  deleteKeys.push(keys[offset+i]);\n                } else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                  // Changed primary key of inbound\n                  deleteKeys.push(keys[offset+i]);\n                  addValues.push(ctx.value)\n                } else {\n                  // Changed value\n                  putValues.push(ctx.value);\n                  if (outbound) putKeys.push(keys[offset+i]);\n                }\n              }\n            }\n\n            return Promise.resolve(addValues.length > 0 &&\n              coreTable.mutate({trans, type: 'add', values: addValues})\n                .then(res => {\n                  for (let pos in res.failures) {\n                    // Remove from deleteKeys the key of the object that failed to change its primary key\n                    deleteKeys.splice(parseInt(pos), 1);\n                  }\n                  applyMutateResult(addValues.length, res);\n                })\n            ).then(()=>(putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                coreTable.mutate({\n                  trans,\n                  type: 'put',\n                  keys: putKeys,\n                  values: putValues,\n                  criteria,\n                  changeSpec: typeof changes !== 'function'\n                    && changes,\n                  isAdditionalChunk: offset > 0\n                }).then(res=>applyMutateResult(putValues.length, res))\n            ).then(()=>(deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                coreTable.mutate({\n                  trans,\n                  type: 'delete',\n                  keys: deleteKeys,\n                  criteria,\n                  isAdditionalChunk: offset > 0\n                }).then(res=>applyMutateResult(deleteKeys.length, res))\n            ).then(()=>{\n              return keys.length > offset + count && nextChunk(offset + limit);\n            });\n          });\n        }\n\n        return nextChunk(0).then(()=>{\n          if (totalFailures.length > 0)\n            throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys as IndexableTypeArrayReadonly);\n\n          return keys.length;\n        });\n      });\n\n    });\n  }\n\n  /** Collection.delete()\n   * \n   * https://dexie.org/docs/Collection/Collection.delete()\n   * \n   **/\n  delete() : PromiseExtended<number> {\n    var ctx = this._ctx,\n      range = ctx.range;\n      //deletingHook = ctx.table.hook.deleting.fire,\n      //hasDeleteHook = deletingHook !== nop;\n    if (isPlainKeyRange(ctx) &&\n      (ctx.isPrimKey || range.type === DBCoreRangeType.Any)) // if no range, we'll use clear().\n    {\n      // May use IDBObjectStore.delete(IDBKeyRange) in this case (Issue #208)\n      // For chromium, this is the way most optimized version.\n      // For IE/Edge, this could hang the indexedDB engine and make operating system instable\n      // (https://gist.github.com/dfahlander/5a39328f029de18222cf2125d56c38f7)\n      return this._write(trans => {\n        // Our API contract is to return a count of deleted items, so we have to count() before delete().\n        const {primaryKey} = ctx.table.core.schema;\n        const coreRange = range;\n        return ctx.table.core.count({trans, query: {index: primaryKey, range: coreRange}}).then(count => {\n          return ctx.table.core.mutate({trans, type: 'deleteRange', range: coreRange})\n          .then(({failures, lastResult, results, numFailures}) => {\n            if (numFailures) throw new ModifyError(\"Could not delete some values\",\n              Object.keys(failures).map(pos => failures[pos]),\n              count - numFailures);\n            return count - numFailures;\n          });\n        });\n      });\n    }\n\n    return this.modify(deleteCallback);\n  }\n}\n\nconst deleteCallback = (value, ctx) => ctx.value = null;\n", "import { Dexie } from '../../classes/dexie';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\nimport { Collection } from './collection';\nimport { WhereClause } from '../where-clause/where-clause';\nimport { AnyRange } from '../../dbcore/keyrange';\nimport { DBCoreKeyRange } from '../../public/types/dbcore';\nimport { mirror } from '../../functions/chaining-functions';\n\n/** Constructs a Collection instance. */\nexport interface CollectionConstructor {\n  new(whereClause?: WhereClause | null, keyRangeGenerator?: () => DBCoreKeyRange): Collection;\n  prototype: Collection;\n}\n\n/** Generates a Collection constructor bound to given Dexie instance.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createCollectionConstructor(db: Dexie) {\n  return makeClassConstructor<CollectionConstructor>(\n    Collection.prototype,\n\n    function Collection(\n      this: Collection,\n      whereClause?: WhereClause | null,\n      keyRangeGenerator?: () => DBCoreKeyRange)\n    {\n      this.db = db;\n      let keyRange = AnyRange, error = null;\n      if (keyRangeGenerator) try {\n        keyRange = keyRangeGenerator();\n      } catch (ex) {\n        error = ex;\n      }\n\n      const whereCtx = whereClause._ctx;\n      const table = whereCtx.table;\n      const readingHook = table.hook.reading.fire;\n      this._ctx = {\n        table: table,\n        index: whereCtx.index,\n        isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n        range: keyRange,\n        keysOnly: false,\n        dir: \"next\",\n        unique: \"\",\n        algorithm: null,\n        filter: null,\n        replayFilter: null,\n        justLimit: true, // True if a replayFilter is just a filter that performs a \"limit\" operation (or none at all)\n        isMatch: null,\n        offset: 0,\n        limit: Infinity,\n        error: error, // If set, any promise must be rejected with this error\n        or: whereCtx.or,\n        valueMapper: readingHook !== mirror ? readingHook : null\n      };\n    }\n  );\n}\n", "import { IndexableType } from '../public/types/indexable-type';\n\nexport function simpleCompare(a, b) {\n  return a < b ? -1 : a === b ? 0 : 1;\n}\n\nexport function simpleCompareReverse(a, b) {\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n", "import { WhereClause } from './where-clause';\nimport { Collection } from '../collection';\nimport { STRING_EXPECTED } from '../../globals/constants';\nimport { simpleCompare, simpleCompareReverse } from '../../functions/compare-functions';\nimport { IndexableType } from '../../public';\nimport { DBCoreKeyRange, DBCoreRangeType } from '../../public/types/dbcore';\n\nexport function fail(collectionOrWhereClause: Collection | WhereClause, err, T?) {\n  var collection = collectionOrWhereClause instanceof WhereClause ?\n      new collectionOrWhereClause.Collection (collectionOrWhereClause) :\n      collectionOrWhereClause;\n      \n  collection._ctx.error = T ? new T(err) : new TypeError(err);\n  return collection;\n}\n\nexport function emptyCollection(whereClause: WhereClause) {\n  return new whereClause.Collection (whereClause, () => rangeEqual(\"\")).limit(0);\n}\n\nexport function upperFactory(dir: 'next' | 'prev') {\n  return dir === \"next\" ?\n    (s: string) => s.toUpperCase() :\n    (s: string) => s.toLowerCase();\n}\n\nexport function lowerFactory(dir: 'next' | 'prev') {\n  return dir === \"next\" ?\n    (s: string) => s.toLowerCase() :\n    (s: string) => s.toUpperCase();\n}\n\nexport function nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n  var length = Math.min(key.length, lowerNeedle.length);\n  var llp = -1;\n  for (var i = 0; i < length; ++i) {\n      var lwrKeyChar = lowerKey[i];\n      if (lwrKeyChar !== lowerNeedle[i]) {\n          if (cmp(key[i], upperNeedle[i]) < 0) return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n          if (cmp(key[i], lowerNeedle[i]) < 0) return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n          if (llp >= 0) return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n          return null;\n      }\n      if (cmp(key[i], lwrKeyChar) < 0) llp = i;\n  }\n  if (length < lowerNeedle.length && dir === \"next\") return key + upperNeedle.substr(key.length);\n  if (length < key.length && dir === \"prev\") return key.substr(0, upperNeedle.length);\n  return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\n\nexport function addIgnoreCaseAlgorithm(whereClause: WhereClause, match, needles, suffix) {\n  /// <param name=\"needles\" type=\"Array\" elementType=\"String\"></param>\n  var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix,\n      needlesLen = needles.length;\n  if (!needles.every(s => typeof s === 'string')) {\n      return fail(whereClause, STRING_EXPECTED);\n  }\n  function initDirection(dir) {\n      upper = upperFactory(dir);\n      lower = lowerFactory(dir);\n      compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n      var needleBounds = needles.map(function (needle){\n          return {lower: lower(needle), upper: upper(needle)};\n      }).sort(function(a,b) {\n          return compare(a.lower, b.lower);\n      });\n      upperNeedles = needleBounds.map(function (nb){ return nb.upper; });\n      lowerNeedles = needleBounds.map(function (nb){ return nb.lower; });\n      direction = dir;\n      nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n  }\n  initDirection(\"next\");\n\n  var c = new whereClause.Collection (\n      whereClause,\n      ()=>createRange(upperNeedles[0], lowerNeedles[needlesLen-1] + suffix)\n  );\n\n  c._ondirectionchange = function (direction) {\n      // This event onlys occur before filter is called the first time.\n      initDirection(direction);\n  };\n\n  var firstPossibleNeedle = 0;\n\n  c._addAlgorithm(function (cursor, advance, resolve) {\n      /// <param name=\"cursor\" type=\"IDBCursor\"></param>\n      /// <param name=\"advance\" type=\"Function\"></param>\n      /// <param name=\"resolve\" type=\"Function\"></param>\n      var key = cursor.key;\n      if (typeof key !== 'string') return false;\n      var lowerKey = lower(key);\n      if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n          return true;\n      } else {\n          var lowestPossibleCasing = null;\n          for (var i=firstPossibleNeedle; i<needlesLen; ++i) {\n              var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n              if (casing === null && lowestPossibleCasing === null)\n                  firstPossibleNeedle = i + 1;\n              else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                  lowestPossibleCasing = casing;\n              }\n          }\n          if (lowestPossibleCasing !== null) {\n              advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n          } else {\n              advance(resolve);\n          }\n          return false;\n      }\n  });\n  return c;\n}\n\nexport function createRange (lower: IndexableType, upper: IndexableType, lowerOpen?: boolean, upperOpen?: boolean): DBCoreKeyRange {\n    return {\n        type: DBCoreRangeType.Range,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\n\nexport function rangeEqual (value: IndexableType) : DBCoreKeyRange {\n    return {\n        type: DBCoreRangeType.Equal,\n        lower: value,\n        upper: value\n    };\n}\n", "import { WhereClause as IWhereClause } from \"../../public/types/where-clause\";\nimport { Collection } from \"../collection\";\nimport { Table } from \"../table\";\nimport { IndexableType } from \"../../public/types/indexable-type\";\nimport { emptyCollection, fail, addIgnoreCaseAlgorithm, createRange, rangeEqual } from './where-clause-helpers';\nimport { INVALID_KEY_ARGUMENT, STRING_EXPECTED, maxString, minKey } from '../../globals/constants';\nimport { getArrayOf, NO_CHAR_ARRAY } from '../../functions/utils';\nimport { exceptions } from '../../errors';\nimport { Dexie } from '../dexie';\nimport { Collection as ICollection} from \"../../public/types/collection\";\n\n/** class WhereClause\n * \n * https://dexie.org/docs/WhereClause/WhereClause\n */\nexport class WhereClause implements IWhereClause {\n  db: Dexie;\n  _IDBKeyRange: typeof IDBKeyRange;\n  _ctx: {\n    table: Table;\n    index: string;\n    or: Collection;\n  }\n  _cmp: (a: IndexableType, b: IndexableType) => number;\n  _ascending: (a: IndexableType, b: IndexableType) => number;\n  _descending: (a: IndexableType, b: IndexableType) => number;\n  _min: (a: IndexableType, b: IndexableType) => IndexableType;\n  _max: (a: IndexableType, b: IndexableType) => IndexableType;\n\n  get Collection() {\n    return this._ctx.table.db.Collection;\n  }\n\n  /** WhereClause.between()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.between()\n   * \n   **/\n  between(lower: IndexableType, upper: IndexableType, includeLower?: boolean, includeUpper?: boolean) {\n    includeLower = includeLower !== false;   // Default to true\n    includeUpper = includeUpper === true;    // Default to false\n    try {\n      if ((this._cmp(lower, upper) > 0) ||\n        (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n        return emptyCollection(this); // Workaround for idiotic W3C Specification that DataError must be thrown if lower > upper. The natural result would be to return an empty collection.\n      return new this.Collection(this, ()=>createRange(lower, upper, !includeLower, !includeUpper));\n    } catch (e) {\n      return fail(this, INVALID_KEY_ARGUMENT);\n    }\n  }\n\n  /** WhereClause.equals()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.equals()\n   * \n   **/\n  equals(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => rangeEqual(value)) as ICollection;\n  }\n\n  /** WhereClause.above()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.above()\n   * \n   **/\n  above(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(value, undefined, true));\n  }\n\n  /** WhereClause.aboveOrEqual()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.aboveOrEqual()\n   * \n   **/\n  aboveOrEqual(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(value, undefined, false));\n  }\n\n  /** WhereClause.below()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.below()\n   * \n   **/\n  below(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(undefined, value, false, true));\n  }\n\n  /** WhereClause.belowOrEqual()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.belowOrEqual()\n   * \n   **/\n  belowOrEqual(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(undefined, value));\n  }\n\n  /** WhereClause.startsWith()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.startsWith()\n   * \n   **/\n  startsWith(str: string) {\n    if (typeof str !== 'string') return fail(this, STRING_EXPECTED);\n    return this.between(str, str + maxString, true, true);\n  }\n\n  /** WhereClause.startsWithIgnoreCase()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.startsWithIgnoreCase()\n   * \n   **/\n  startsWithIgnoreCase(str: string) {\n    if (str === \"\") return this.startsWith(str);\n    return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n  }\n\n  /** WhereClause.equalsIgnoreCase()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.equalsIgnoreCase()\n   * \n   **/\n  equalsIgnoreCase(str: string) {\n    return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n  }\n\n  /** WhereClause.anyOfIgnoreCase()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.anyOfIgnoreCase()\n   * \n   **/\n  anyOfIgnoreCase(...values: string[]): Collection;\n  anyOfIgnoreCase(values: string[]): Collection;\n  anyOfIgnoreCase() {\n    var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return emptyCollection(this);\n    return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n  }\n\n  /** WhereClause.startsWithAnyOfIgnoreCase()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.startsWithAnyOfIgnoreCase()\n   * \n   **/\n  startsWithAnyOfIgnoreCase(...values: string[]): Collection;\n  startsWithAnyOfIgnoreCase(values: string[]): Collection;\n  startsWithAnyOfIgnoreCase() {\n    var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return emptyCollection(this);\n    return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n  }\n\n  /** WhereClause.anyOf()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.anyOf()\n   * \n   **/\n  anyOf(...values: string[]): Collection;\n  anyOf(values: string[]): Collection;\n  anyOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    let compare = this._cmp;\n    try { set.sort(compare); } catch (e) { return fail(this, INVALID_KEY_ARGUMENT); }\n    if (set.length === 0) return emptyCollection(this);\n    const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n\n    c._ondirectionchange = direction => {\n      compare = (direction === \"next\" ?\n        this._ascending :\n        this._descending);\n      set.sort(compare);\n    };\n\n    let i = 0;\n    c._addAlgorithm((cursor, advance, resolve) => {\n      const key = cursor.key;\n      while (compare(key, set[i]) > 0) {\n        // The cursor has passed beyond this key. Check next.\n        ++i;\n        if (i === set.length) {\n          // There is no next. Stop searching.\n          advance(resolve);\n          return false;\n        }\n      }\n      if (compare(key, set[i]) === 0) {\n        // The current cursor value should be included and we should continue a single step in case next item has the same key or possibly our next key in set.\n        return true;\n      } else {\n        // cursor.key not yet at set[i]. Forward cursor to the next key to hunt for.\n        advance(() => { cursor.continue(set[i]); });\n        return false;\n      }\n    });\n    return c;\n  }\n\n  /** WhereClause.notEqual()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.notEqual()\n   * \n   **/\n  notEqual(value: IndexableType) {\n    return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n  }\n\n  /** WhereClause.noneOf()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.noneOf()\n   * \n   **/\n  noneOf(...values: string[]): Collection;\n  noneOf(values: string[]): Collection;\n  noneOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return new this.Collection(this); // Return entire collection.\n    try { set.sort(this._ascending); } catch (e) { return fail(this, INVALID_KEY_ARGUMENT); }\n    // Transform [\"a\",\"b\",\"c\"] to a set of ranges for between/above/below: [[minKey,\"a\"], [\"a\",\"b\"], [\"b\",\"c\"], [\"c\",maxKey]]\n    const ranges = set.reduce(\n      (res, val) => res ?\n        res.concat([[res[res.length - 1][1], val]]) :\n        [[minKey, val]],\n      null);\n    ranges.push([set[set.length - 1], this.db._maxKey]);\n    return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n  }\n\n  /** WhereClause.inAnyRange()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.inAnyRange()\n   * \n   **/\n  inAnyRange(\n    ranges: ReadonlyArray<{ 0: IndexableType, 1: IndexableType }>,\n    options?: { includeLowers?: boolean, includeUppers?: boolean })\n  {\n    const cmp = this._cmp,\n          ascending = this._ascending,\n          descending = this._descending,\n          min = this._min,\n          max = this._max;\n\n    if (ranges.length === 0) return emptyCollection(this);\n    if (!ranges.every(range =>\n      range[0] !== undefined &&\n      range[1] !== undefined &&\n      ascending(range[0], range[1]) <= 0)) {\n      return fail(\n        this,\n        \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\",\n        exceptions.InvalidArgument);\n    }\n    const includeLowers = !options || options.includeLowers !== false;   // Default to true\n    const includeUppers = options && options.includeUppers === true;    // Default to false\n\n    function addRange(ranges, newRange) {\n      let i = 0, l = ranges.length;\n      for (; i < l; ++i) {\n        const range = ranges[i];\n        if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n          range[0] = min(range[0], newRange[0]);\n          range[1] = max(range[1], newRange[1]);\n          break;\n        }\n      }\n      if (i === l)\n        ranges.push(newRange);\n      return ranges;\n    }\n\n    let sortDirection = ascending;\n    function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n\n    // Join overlapping ranges\n    let set;\n    try {\n      set = ranges.reduce(addRange, []);\n      set.sort(rangeSorter);\n    } catch (ex) {\n      return fail(this, INVALID_KEY_ARGUMENT);\n    }\n\n    let rangePos = 0;\n    const keyIsBeyondCurrentEntry = includeUppers ?\n      key => ascending(key, set[rangePos][1]) > 0 :\n      key => ascending(key, set[rangePos][1]) >= 0;\n\n    const keyIsBeforeCurrentEntry = includeLowers ?\n      key => descending(key, set[rangePos][0]) > 0 :\n      key => descending(key, set[rangePos][0]) >= 0;\n\n    function keyWithinCurrentRange(key) {\n      return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n    }\n\n    let checkKey = keyIsBeyondCurrentEntry;\n\n    const c = new this.Collection(\n      this,\n      () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n\n    c._ondirectionchange = direction => {\n      if (direction === \"next\") {\n        checkKey = keyIsBeyondCurrentEntry;\n        sortDirection = ascending;\n      } else {\n        checkKey = keyIsBeforeCurrentEntry;\n        sortDirection = descending;\n      }\n      set.sort(rangeSorter);\n    };\n\n    c._addAlgorithm((cursor, advance, resolve) => {\n      var key = cursor.key;\n      while (checkKey(key)) {\n        // The cursor has passed beyond this key. Check next.\n        ++rangePos;\n        if (rangePos === set.length) {\n          // There is no next. Stop searching.\n          advance(resolve);\n          return false;\n        }\n      }\n      if (keyWithinCurrentRange(key)) {\n        // The current cursor value should be included and we should continue a single step in case next item has the same key or possibly our next key in set.\n        return true;\n      } else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n        // includeUpper or includeLower is false so keyWithinCurrentRange() returns false even though we are at range border.\n        // Continue to next key but don't include this one.\n        return false;\n      } else {\n        // cursor.key not yet at set[i]. Forward cursor to the next key to hunt for.\n        advance(() => {\n          if (sortDirection === ascending) cursor.continue(set[rangePos][0]);\n          else cursor.continue(set[rangePos][1]);\n        });\n        return false;\n      }\n    });\n    return c;\n  }\n\n  /** WhereClause.startsWithAnyOf()\n   * \n   * https://dexie.org/docs/WhereClause/WhereClause.startsWithAnyOf()\n   * \n   **/\n  startsWithAnyOf(...prefixes: string[]): Collection;\n  startsWithAnyOf(prefixes: string[]): Collection;\n  startsWithAnyOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n\n    if (!set.every(s => typeof s === 'string')) {\n        return fail(this, \"startsWithAnyOf() only works with strings\");\n    }\n    if (set.length === 0) return emptyCollection(this);\n\n    return this.inAnyRange(set.map((str: string) => [str, str + maxString]));\n  }\n\n}\n", "import { Dexie } from '../dexie';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\nimport { WhereClause } from './where-clause';\nimport { Table } from '../table';\nimport { Collection } from '../collection';\nimport { exceptions } from '../../errors';\nimport { cmp } from '../../functions/cmp';\n\nexport interface WhereClauseConstructor {\n  new(table: Table, index?: string, orCollection?: Collection): WhereClause;\n  prototype: WhereClause;\n}\n\n/** Generates a WhereClause constructor.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createWhereClauseConstructor(db: Dexie) {\n  return makeClassConstructor<WhereClauseConstructor>(\n    WhereClause.prototype,\n\n    function WhereClause(this: WhereClause, table: Table, index?: string, orCollection?: Collection) {\n      this.db = db;\n      this._ctx = {\n        table: table,\n        index: index === \":id\" ? null : index,\n        or: orCollection\n      };\n      this._cmp = this._ascending = cmp;\n      this._descending = (a, b) => cmp(b, a);\n      this._max = (a, b) => cmp(a,b) > 0 ? a : b;\n      this._min = (a, b) => cmp(a,b) < 0 ? a : b;\n      this._IDBKeyRange = db._deps.IDBKeyRange;\n      if (!this._IDBKeyRange) throw new exceptions.MissingAPI();\n    }\n  );\n}\n", "import { wrap } from \"../helpers/promise\";\n\nexport function eventRejectHandler(reject) {\n  return wrap(function (event) {\n      preventDefault(event);\n      reject (event.target.error);\n      return false;\n  });\n}\n\nexport function eventSuccessHandler (resolve) {\n  return wrap(function (event){\n      resolve(event.target.result);\n  });\n}\n\nexport function hookedEventRejectHandler (reject) {\n  return wrap(function (event) {\n      // See comment on hookedEventSuccessHandler() why wrap() is needed only when supporting hooks.\n      \n      var req = event.target,\n          err = req.error,\n          ctx = req._hookCtx,// Contains the hook error handler. Put here instead of closure to boost performance.\n          hookErrorHandler = ctx && ctx.onerror;\n      hookErrorHandler && hookErrorHandler(err);\n      preventDefault(event);\n      reject (err);\n      return false;\n  });\n}\n\nexport function hookedEventSuccessHandler(resolve) {\n  // wrap() is needed when calling hooks because the rare scenario of:\n  //  * hook does a db operation that fails immediately (IDB throws exception)\n  //    For calling db operations on correct transaction, wrap makes sure to set PSD correctly.\n  //    wrap() will also execute in a virtual tick.\n  //  * If not wrapped in a virtual tick, direct exception will launch a new physical tick.\n  //  * If this was the last event in the bulk, the promise will resolve after a physical tick\n  //    and the transaction will have committed already.\n  // If no hook, the virtual tick will be executed in the reject()/resolve of the final promise,\n  // because it is always marked with _lib = true when created using Transaction._promise().\n  return wrap(function(event) {\n      var req = event.target,\n          ctx = req._hookCtx,// Contains the hook error handler. Put here instead of closure to boost performance.\n          result = ctx.value || req.result, // Pass the object value on updates. The result from IDB is the primary key.\n          hookSuccessHandler = ctx && ctx.onsuccess;\n      hookSuccessHandler && hookSuccessHandler(result);\n      resolve && resolve(result);\n  }, resolve);\n}\n\n\nexport function preventDefault(event) {\n  if (event.stopPropagation) // IndexedDBShim doesnt support this on Safari 8 and below.\n      event.stopPropagation();\n  if (event.preventDefault) // IndexedDBShim doesnt support this on Safari 8 and below.\n      event.preventDefault();\n}\n\nexport function BulkErrorHandlerCatchAll(errorList, done?, supportHooks?) {\n  return (supportHooks ? hookedEventRejectHandler : eventRejectHandler)(e => {\n      errorList.push(e);\n      done && done();\n  });\n}\n\n", "import Events from '../helpers/Events';\nimport { GlobalDexieEvents } from '../public/types/db-events';\n\nexport const DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated' as 'storagemutated';\n\n// Name of the global event fired using DOM dispatchEvent (if not in node).\n// Reason for propagating this as a DOM event is for getting reactivity across\n// multiple versions of Dexie within the same app (as long as they are\n// compatible with regards to the event data).\n// If the ObservabilitySet protocol change in a way that would not be backward\n// compatible, make sure also update the event name to a new number at the end\n// so that two Dexie instances of different versions continue to work together\n//  - maybe not able to communicate but won't fail due to unexpected data in\n// the detail property of the CustomEvent. If so, also make sure to udpate\n// docs and explain at which Dexie version the new name and format of the event\n// is being used.\nexport const STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\n\nexport const globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME) as GlobalDexieEvents;\n", "import { Transaction as ITransaction } from '../../public/types/transaction';\nimport { DexiePromise, wrap, rejection } from \"../../helpers/promise\";\nimport { DbSchema } from '../../public/types/db-schema';\nimport { assert, hasOwn } from '../../functions/utils';\nimport { PSD, usePSD } from '../../helpers/promise';\nimport { Dexie } from '../dexie';\nimport { exceptions } from '../../errors';\nimport { safariMultiStoreFix } from '../../functions/quirks';\nimport { preventDefault } from '../../functions/event-wrappers';\nimport { newScope } from '../../helpers/promise';\nimport * as Debug from '../../helpers/debug';\nimport { Table } from '../table';\nimport { globalEvents } from '../../globals/global-events';\n\n/** Transaction\n * \n * https://dexie.org/docs/Transaction/Transaction\n * \n **/\nexport class Transaction implements ITransaction {\n  db: Dexie;\n  active: boolean;\n  mode: IDBTransactionMode;\n  chromeTransactionDurability: ChromeTransactionDurability;\n  idbtrans: IDBTransaction;\n  storeNames: string[];\n  explicit?: boolean;\n  on: any;\n  parent?: Transaction;\n  schema: DbSchema;\n  _memoizedTables: {[tableName: string]: Table};\n\n  _reculock: number;\n  _blockedFuncs: { 0: () => any, 1: any }[];\n  _resolve: () => void;\n  _reject: (Error) => void;\n  _waitingFor: DexiePromise; // for waitFor()\n  _waitingQueue: Function[]; // for waitFor()\n  _spinCount: number; // Just for debugging waitFor()\n  _completion: DexiePromise;\n\n  //\n  // Transaction internal methods (not required by API users, but needed internally and eventually by dexie extensions)\n  //\n\n  /** Transaction._lock()\n   * \n   * Internal method.\n   */\n  _lock() {\n    assert(!PSD.global); // Locking and unlocking reuires to be within a PSD scope.\n    // Temporary set all requests into a pending queue if they are called before database is ready.\n    ++this._reculock; // Recursive read/write lock pattern using PSD (Promise Specific Data) instead of TLS (Thread Local Storage)\n    if (this._reculock === 1 && !PSD.global) PSD.lockOwnerFor = this;\n    return this;\n  }\n\n  /** Transaction._unlock()\n   * \n   * Internal method.\n   */\n  _unlock() {\n    assert(!PSD.global); // Locking and unlocking reuires to be within a PSD scope.\n    if (--this._reculock === 0) {\n      if (!PSD.global) PSD.lockOwnerFor = null;\n      while (this._blockedFuncs.length > 0 && !this._locked()) {\n        var fnAndPSD = this._blockedFuncs.shift();\n        try { usePSD(fnAndPSD[1], fnAndPSD[0]); } catch (e) { }\n      }\n    }\n    return this;\n  }\n\n  /** Transaction._lock()\n   * \n   * Internal method.\n   */\n  _locked() {\n    // Checks if any write-lock is applied on this transaction.\n    // To simplify the Dexie API for extension implementations, we support recursive locks.\n    // This is accomplished by using \"Promise Specific Data\" (PSD).\n    // PSD data is bound to a Promise and any child Promise emitted through then() or resolve( new Promise() ).\n    // PSD is local to code executing on top of the call stacks of any of any code executed by Promise():\n    //         * callback given to the Promise() constructor  (function (resolve, reject){...})\n    //         * callbacks given to then()/catch()/finally() methods (function (value){...})\n    // If creating a new independant Promise instance from within a Promise call stack, the new Promise will derive the PSD from the call stack of the parent Promise.\n    // Derivation is done so that the inner PSD __proto__ points to the outer PSD.\n    // PSD.lockOwnerFor will point to current transaction object if the currently executing PSD scope owns the lock.\n    return this._reculock && PSD.lockOwnerFor !== this;\n  }\n\n  /** Transaction.create()\n   * \n   * Internal method.\n   * \n   */\n  create(idbtrans?: IDBTransaction & {[prop: string]: any}) {\n    if (!this.mode) return this;\n    const idbdb = this.db.idbdb;\n    const dbOpenError = this.db._state.dbOpenError;\n    assert(!this.idbtrans);\n    if (!idbtrans && !idbdb) {\n      switch (dbOpenError && dbOpenError.name) {\n        case \"DatabaseClosedError\":\n          // Errors where it is no difference whether it was caused by the user operation or an earlier call to db.open()\n          throw new exceptions.DatabaseClosed(dbOpenError);\n        case \"MissingAPIError\":\n          // Errors where it is no difference whether it was caused by the user operation or an earlier call to db.open()\n          throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n        default:\n          // Make it clear that the user operation was not what caused the error - the error had occurred earlier on db.open()!\n          throw new exceptions.OpenFailed(dbOpenError);\n      }\n    }\n    if (!this.active) throw new exceptions.TransactionInactive();\n    assert(this._completion._state === null); // Completion Promise must still be pending.\n\n    idbtrans = this.idbtrans = idbtrans ||\n      (this.db.core \n        ? this.db.core.transaction(this.storeNames, this.mode as 'readwrite' | 'readonly', { durability: this.chromeTransactionDurability })\n        : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n      ) as IDBTransaction;\n\n    idbtrans.onerror = wrap(ev => {\n      preventDefault(ev);// Prohibit default bubbling to window.error\n      this._reject(idbtrans.error);\n    });\n    idbtrans.onabort = wrap(ev => {\n      preventDefault(ev);\n      this.active && this._reject(new exceptions.Abort(idbtrans.error));\n      this.active = false;\n      this.on(\"abort\").fire(ev);\n    });\n    idbtrans.oncomplete = wrap(() => {\n      this.active = false;\n      this._resolve();\n      if ('mutatedParts' in idbtrans) {\n        globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n      }\n    });\n    return this;\n  }\n\n  /** Transaction._promise()\n   * \n   * Internal method.\n   */\n  _promise(\n    mode: IDBTransactionMode,\n    fn: (resolve, reject, trans: Transaction) => PromiseLike<any> | void,\n    bWriteLock?: string | boolean): DexiePromise\n  {\n    if (mode === 'readwrite' && this.mode !== 'readwrite')\n      return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n\n    if (!this.active)\n      return rejection(new exceptions.TransactionInactive());\n\n    if (this._locked()) {\n      return new DexiePromise((resolve, reject) => {\n        this._blockedFuncs.push([() => {\n          this._promise(mode, fn, bWriteLock).then(resolve, reject);\n        }, PSD]);\n      });\n\n    } else if (bWriteLock) {\n      return newScope(() => {\n        var p = new DexiePromise((resolve, reject) => {\n          this._lock();\n          const rv = fn(resolve, reject, this);\n          if (rv && rv.then) rv.then(resolve, reject);\n        });\n        p.finally(() => this._unlock());\n        p._lib = true;\n        return p;\n      });\n\n    } else {\n      var p = new DexiePromise((resolve, reject) => {\n        var rv = fn(resolve, reject, this);\n        if (rv && rv.then) rv.then(resolve, reject);\n      });\n      p._lib = true;\n      return p;\n    }\n  }\n\n  /** Transaction._root()\n   * \n   * Internal method. Retrieves the root transaction in the tree of sub transactions.\n   */\n  _root() {\n    return this.parent ? this.parent._root() : this;\n  }\n\n  /** Transaction.waitFor()\n   * \n   * Internal method. Can be accessed from the public API through\n   * Dexie.waitFor(): https://dexie.org/docs/Dexie/Dexie.waitFor()\n   * \n   **/\n  waitFor(promiseLike: PromiseLike<any>) {\n    // Always operate on the root transaction (in case this is a sub stransaction)\n    var root = this._root();\n    // For stability reasons, convert parameter to promise no matter what type is passed to waitFor().\n    // (We must be able to call .then() on it.)\n    const promise = DexiePromise.resolve(promiseLike);\n    if (root._waitingFor) {\n      // Already called waitFor(). Wait for both to complete.\n      root._waitingFor = root._waitingFor.then(() => promise);\n    } else {\n      // We're not in waiting state. Start waiting state.\n      root._waitingFor = promise;\n      root._waitingQueue = [];\n      // Start interacting with indexedDB until promise completes:\n      var store = root.idbtrans.objectStore(root.storeNames[0]);\n      (function spin() {\n        ++root._spinCount; // For debugging only\n        while (root._waitingQueue.length) (root._waitingQueue.shift())();\n        if (root._waitingFor) store.get(-Infinity).onsuccess = spin;\n      }());\n    }\n    var currentWaitPromise = root._waitingFor;\n    return new DexiePromise((resolve, reject) => {\n      promise.then(\n        res => root._waitingQueue.push(wrap(resolve.bind(null, res))),\n        err => root._waitingQueue.push(wrap(reject.bind(null, err)))\n      ).finally(() => {\n        if (root._waitingFor === currentWaitPromise) {\n          // No one added a wait after us. Safe to stop the spinning.\n          root._waitingFor = null;\n        }\n      });\n    });\n  }  \n\n  /** Transaction.abort()\n   * \n   * https://dexie.org/docs/Transaction/Transaction.abort()\n   */\n  abort() {\n    if (this.active) {\n      this.active = false;\n      if (this.idbtrans) this.idbtrans.abort();\n      this._reject(new exceptions.Abort());\n    }\n  }\n\n  /** Transaction.table()\n   * \n   * https://dexie.org/docs/Transaction/Transaction.table()\n   */\n  table(tableName: string) {\n    const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n    if (hasOwn(memoizedTables, tableName))\n      return memoizedTables[tableName];\n    const tableSchema = this.schema[tableName];\n    if (!tableSchema) {\n      throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");        \n    }\n\n    const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n    transactionBoundTable.core = this.db.core.table(tableName);\n    memoizedTables[tableName] = transactionBoundTable;\n    return transactionBoundTable;\n  }\n}\n", "import { Dexie } from '../dexie';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\nimport { Transaction } from './transaction';\nimport { DbSchema } from '../../public/types/db-schema';\nimport Events from '../../helpers/Events';\nimport Promise, { rejection } from '../../helpers/promise';\n\nexport interface TransactionConstructor<T extends Transaction=Transaction> {\n  new (\n    mode: IDBTransactionMode,\n    storeNames: string[],\n    dbschema: DbSchema,\n    chromeTransactionDurability: ChromeTransactionDurability,\n    parent?: Transaction) : T;\n  prototype: T;\n}\n\n/** Generates a Transaction constructor bound to given Dexie instance.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createTransactionConstructor(db: Dexie) {\n  return makeClassConstructor<TransactionConstructor<Transaction>>(\n    Transaction.prototype,\n    function Transaction (\n      this: Transaction,\n      mode: IDBTransactionMode,\n      storeNames: string[],\n      dbschema: DbSchema,\n      chromeTransactionDurability: ChromeTransactionDurability,\n      parent?: Transaction)\n    {\n      this.db = db;\n      this.mode = mode;\n      this.storeNames = storeNames;\n      this.schema = dbschema;\n      this.chromeTransactionDurability = chromeTransactionDurability;\n      this.idbtrans = null;\n      this.on = Events(this, \"complete\", \"error\", \"abort\");\n      this.parent = parent || null;\n      this.active = true;\n      this._reculock = 0;\n      this._blockedFuncs = [];\n      this._resolve = null;\n      this._reject = null;\n      this._waitingFor = null;\n      this._waitingQueue = null;\n      this._spinCount = 0; // Just for debugging waitFor()\n      this._completion = new Promise ((resolve, reject) => {\n          this._resolve = resolve;\n          this._reject = reject;\n      });\n      \n      this._completion.then(\n          ()=> {\n              this.active = false;\n              this.on.complete.fire();\n          },\n          e => {\n              var wasActive = this.active;\n              this.active = false;\n              this.on.error.fire(e);\n              this.parent ?\n                  this.parent._reject(e) :\n                  wasActive && this.idbtrans && this.idbtrans.abort();\n              return rejection(e); // Indicate we actually DO NOT catch this error.\n          });\n    \n    });\n}\n", "import { IndexSpec } from '../public/types/index-spec';\n\nexport function createIndexSpec(\n  name: string,\n  keyPath: string | string[],\n  unique: boolean,\n  multi: boolean,\n  auto: boolean,\n  compound: boolean,\n  isPrimKey: boolean\n): IndexSpec {\n  return {\n    name,\n    keyPath,\n    unique,\n    multi,\n    auto,\n    compound,\n    src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n  }\n}\n\nexport function nameFromKeyPath (keyPath?: string | string[]): string {\n  return typeof keyPath === 'string' ?\n    keyPath :\n    keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n", "import { IndexSpec } from '../public/types/index-spec';\nimport { TableSchema } from '../public/types/table-schema';\nimport { createIndexSpec } from './index-spec';\nimport { arrayToObject } from '../functions/utils';\n\nexport function createTableSchema (\n  name: string,\n  primKey: IndexSpec,\n  indexes: IndexSpec[]\n): TableSchema {\n  return {\n    name,\n    primKey,\n    indexes,\n    mappedClass: null,\n    idxByName: arrayToObject(indexes, index => [index.name, index])\n  };\n}\n", "import { maxString } from '../globals/constants';\n\nexport function safariMultiStoreFix(storeNames: string[]) {\n  return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\n\nexport function getNativeGetDatabaseNamesFn(indexedDB) {\n  var fn = indexedDB && (indexedDB.getDatabaseNames || indexedDB.webkitGetDatabaseNames);\n  return fn && fn.bind(indexedDB);\n}\n\nexport let getMaxKey = (IdbKeyRange: typeof IDBKeyRange) => {\n  try {\n    IdbKeyRange.only([[]]);\n    getMaxKey = () => [[]];\n    return [[]];\n  } catch (e) {\n    getMaxKey = () => maxString;\n    return maxString;\n  }\n}\n", "import { getByKeyPath } from '../functions/utils';\n\nexport function getKeyExtractor (keyPath: null | string | string[]) : (a: any) => any {\n  if (keyPath == null) {\n    return () => undefined;\n  } else if (typeof keyPath === 'string') {\n    return getSinglePathKeyExtractor(keyPath);\n  } else {\n    return obj => getByKeyPath(obj, keyPath);\n  }\n}\n\nexport function getSinglePathKeyExtractor(keyPath: string) {\n  const split = keyPath.split('.');\n  if (split.length === 1) {\n    return obj => obj[keyPath];\n  } else {\n    return obj => getByKeyPath(obj, keyPath);\n  }\n}\n", "import {\n  DBCore,\n  DBCoreCursor,\n  DBCoreOpenCursorRequest,\n  DBCoreQueryRequest,\n  DBCoreIndex,\n  DBCoreKeyRange,\n  DBCoreQueryResponse,\n  DBCoreRangeType,\n  DBCoreSchema,\n  DBCoreTableSchema,\n  DBCoreTable,\n  DBCoreMutateResponse,\n} from \"../public/types/dbcore\";\nimport { isArray } from '../functions/utils';\nimport { eventRejectHandler, preventDefault } from '../functions/event-wrappers';\nimport { wrap } from '../helpers/promise';\nimport { getMaxKey } from '../functions/quirks';\nimport { getKeyExtractor } from './get-key-extractor';\n\nexport function arrayify<T>(arrayLike: {length: number, [index: number]: T}): T[] {\n  return [].slice.call(arrayLike);\n}\nexport function pick<T,Prop extends keyof T>(obj: T, props: Prop[]): Pick<T, Prop> {\n  const result = {} as Pick<T, Prop>;\n  props.forEach(prop => result[prop] = obj[prop]);\n  return result;\n}\n\nlet _id_counter = 0;\n\nexport function getKeyPathAlias(keyPath: null | string | string[]) {\n  return keyPath == null ?\n    \":id\" :\n    typeof keyPath === 'string' ?\n      keyPath :\n      `[${keyPath.join('+')}]`;\n}\n\nexport function createDBCore (\n  db: IDBDatabase,\n  IdbKeyRange: typeof IDBKeyRange,\n  tmpTrans: IDBTransaction) : DBCore\n{\n  function extractSchema(db: IDBDatabase, trans: IDBTransaction) : {schema: DBCoreSchema, hasGetAll: boolean} {\n    const tables = arrayify(db.objectStoreNames);\n    return {\n      schema: {\n        name: db.name,\n        tables: tables.map(table => trans.objectStore(table)).map(store => {\n          const {keyPath, autoIncrement} = store;\n          const compound = isArray(keyPath);\n          const outbound = keyPath == null;\n          const indexByKeyPath: {[keyPathAlias: string]: DBCoreIndex} = {};\n          const result = {\n            name: store.name,\n            primaryKey: {\n              name: null,\n              isPrimaryKey: true,\n              outbound,\n              compound,\n              keyPath,\n              autoIncrement,\n              unique: true,\n              extractKey: getKeyExtractor(keyPath)\n            } as DBCoreIndex,\n            indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n              .map(index => {\n                const {name, unique, multiEntry, keyPath} = index;\n                const compound = isArray(keyPath);\n                const result: DBCoreIndex = {\n                  name,\n                  compound,\n                  keyPath,\n                  unique,\n                  multiEntry,\n                  extractKey: getKeyExtractor(keyPath)\n                };\n                indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                return result;\n              }),\n            getIndexByKeyPath: (keyPath: null | string | string[]) => indexByKeyPath[getKeyPathAlias(keyPath)]\n          };\n          indexByKeyPath[\":id\"] = result.primaryKey;\n          if (keyPath != null) {\n            indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n          }\n          return result;\n        })\n      },\n      hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n        !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) // Bug with getAll() on Safari ver<604. See discussion following PR #579\n    };\n  }\n\n  function makeIDBKeyRange (range: DBCoreKeyRange) : IDBKeyRange | null {\n    if (range.type === DBCoreRangeType.Any) return null;\n    if (range.type === DBCoreRangeType.Never) throw new Error(\"Cannot convert never type to IDBKeyRange\");\n    const {lower, upper, lowerOpen, upperOpen} = range;\n    const idbRange = lower === undefined ?\n      upper === undefined ?\n        null : //IDBKeyRange.lowerBound(-Infinity, false) : // Any range (TODO: Should we return null instead?)\n        IdbKeyRange.upperBound(upper, !!upperOpen) : // below\n      upper === undefined ?\n        IdbKeyRange.lowerBound(lower, !!lowerOpen) : // above\n        IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n    return idbRange;\n  }\n\n  function createDbCoreTable(tableSchema: DBCoreTableSchema): DBCoreTable {\n    const tableName = tableSchema.name;\n\n    function mutate ({trans, type, keys, values, range}) {\n      return new Promise<DBCoreMutateResponse>((resolve, reject) => {\n        resolve = wrap(resolve);\n        const store = (trans as IDBTransaction).objectStore(tableName);\n        const outbound = store.keyPath == null;\n        const isAddOrPut = type === \"put\" || type === \"add\";\n        if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n          throw new Error (\"Invalid operation type: \" + type);\n\n        const {length} = keys || values || {length: 1}; // keys.length if keys. values.length if values. 1 if range.\n        if (keys && values && keys.length !== values.length) {\n          throw new Error(\"Given keys array must have same length as given values array.\");\n        }\n        if (length === 0)\n          // No items to write. Don't even bother!\n          return resolve({numFailures: 0, failures: {}, results: [], lastResult: undefined});\n\n        let req: IDBRequest;\n        const reqs: IDBRequest[] = [];\n          \n        const failures: {[operationNumber: number]: Error} = [];\n        let numFailures = 0;\n        const errorHandler = \n          event => {\n            ++numFailures;\n            preventDefault(event);\n          };\n  \n        if (type === 'deleteRange') {\n          // Here the argument is the range\n          if (range.type === DBCoreRangeType.Never)\n            return resolve({numFailures, failures, results: [], lastResult: undefined}); // Deleting the Never range shoulnt do anything.\n          if (range.type === DBCoreRangeType.Any)\n            reqs.push(req = store.clear()); // Deleting the Any range is equivalent to store.clear()\n          else\n            reqs.push(req = store.delete(makeIDBKeyRange(range)));\n        } else {\n          // No matter add, put or delete - find out arrays of first and second arguments to it.\n          const [args1, args2] = isAddOrPut ?\n            outbound ?\n              [values, keys] :\n              [values, null] :\n            [keys, null];\n\n          if (isAddOrPut) {\n            for (let i=0; i<length; ++i) {\n              reqs.push(req = (args2 && args2[i] !== undefined ?\n                store[type](args1[i], args2[i]) :\n                store[type](args1[i])) as IDBRequest);\n              req.onerror = errorHandler;\n            }\n          } else {\n            for (let i=0; i<length; ++i) {\n              reqs.push(req = store[type](args1[i]) as IDBRequest);\n              req.onerror = errorHandler;\n            }\n          }\n        }\n        const done = event => {\n          const lastResult = event.target.result;\n          reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n          resolve({\n            numFailures,\n            failures,\n            results: type === \"delete\" ? keys : reqs.map(req => req.result),\n            lastResult\n          });\n        };\n  \n        req.onerror = event => { // wrap() not needed. All paths calling outside will wrap!\n          errorHandler(event);\n          done(event);\n        };\n  \n        req.onsuccess = done;\n      });\n    }\n    \n    function openCursor ({trans, values, query, reverse, unique}: DBCoreOpenCursorRequest): Promise<DBCoreCursor>\n    {\n      return new Promise((resolve, reject) => {\n        resolve = wrap(resolve);\n        const {index, range} = query;\n        const store = (trans as IDBTransaction).objectStore(tableName);\n        // source\n        const source = index.isPrimaryKey ?\n          store :\n          store.index(index.name);\n        // direction\n        const direction = reverse ?\n          unique ?\n            \"prevunique\" :\n            \"prev\" :\n          unique ?\n            \"nextunique\" :\n            \"next\";\n        // request\n        const req = values || !('openKeyCursor' in source) ?\n          source.openCursor(makeIDBKeyRange(range), direction) :\n          source.openKeyCursor(makeIDBKeyRange(range), direction);\n          \n        // iteration\n        req.onerror = eventRejectHandler(reject);\n        req.onsuccess = wrap(ev => {\n\n          const cursor = req.result as unknown as DBCoreCursor;\n          if (!cursor) {\n            resolve(null);\n            return;\n          }\n          (cursor as any).___id = ++_id_counter;\n          (cursor as any).done = false;\n          const _cursorContinue = cursor.continue.bind(cursor);\n          let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n          if (_cursorContinuePrimaryKey) _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n          const _cursorAdvance = cursor.advance.bind(cursor);\n          const doThrowCursorIsNotStarted = ()=>{throw new Error(\"Cursor not started\");}\n          const doThrowCursorIsStopped = ()=>{throw new Error(\"Cursor not stopped\");}\n          (cursor as any).trans = trans;\n          cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n          cursor.fail = wrap(reject);\n          cursor.next = function (this: DBCoreCursor) {\n            // next() must work with \"this\" pointer in order to function correctly for ProxyCursors (derived objects)\n            // without having to re-define next() on each child.\n            let gotOne = 1;\n            return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n          };\n          cursor.start = (callback) => {\n            //console.log(\"Starting cursor\", (cursor as any).___id);\n            const iterationPromise = new Promise<void>((resolveIteration, rejectIteration) =>{\n              resolveIteration = wrap(resolveIteration);\n              req.onerror = eventRejectHandler(rejectIteration);\n              cursor.fail = rejectIteration;\n              cursor.stop = value => {\n                //console.log(\"Cursor stop\", cursor);\n                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                resolveIteration(value);\n              };\n            });\n            // Now change req.onsuccess to a callback that doesn't call initCursor but just observer.next()\n            const guardedCallback = () => {\n              if (req.result) {\n                //console.log(\"Next result\", cursor);\n                try {\n                  callback();\n                } catch (err) {\n                  cursor.fail(err);\n                }\n              } else {\n                (cursor as any).done = true;\n                cursor.start = ()=>{throw new Error(\"Cursor behind last entry\");}\n                cursor.stop();\n              }\n            }\n            req.onsuccess = wrap(ev => {\n              //cursor.continue = _cursorContinue;\n              //cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n              //cursor.advance = _cursorAdvance;\n              req.onsuccess = guardedCallback;\n              guardedCallback();\n            });\n            cursor.continue = _cursorContinue;\n            cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n            cursor.advance = _cursorAdvance;\n            guardedCallback();\n            return iterationPromise;\n          };\n          resolve(cursor);\n        }, reject); \n      });\n    }\n  \n    function query (hasGetAll: boolean) {\n      return (request: DBCoreQueryRequest) => {\n        return new Promise<DBCoreQueryResponse>((resolve, reject) => {\n          resolve = wrap(resolve);\n          const {trans, values, limit, query} = request;\n          const nonInfinitLimit = limit === Infinity ? undefined : limit;\n          const {index, range} = query;\n          const store = (trans as IDBTransaction).objectStore(tableName);\n          const source = index.isPrimaryKey ? store : store.index(index.name);\n          const idbKeyRange = makeIDBKeyRange(range);\n          if (limit === 0) return resolve({result: []});\n          if (hasGetAll) {\n            const req = values ?\n                (source as any).getAll(idbKeyRange, nonInfinitLimit) :\n                (source as any).getAllKeys(idbKeyRange, nonInfinitLimit);\n            req.onsuccess = event => resolve({result: event.target.result});\n            req.onerror = eventRejectHandler(reject);\n          } else {\n            let count = 0;\n            const req = values || !('openKeyCursor' in source) ?\n              source.openCursor(idbKeyRange) :\n              source.openKeyCursor(idbKeyRange)\n            const result = [];\n            req.onsuccess = event => {\n              const cursor = req.result as IDBCursorWithValue;\n              if (!cursor) return resolve({result});\n              result.push(values ? cursor.value : cursor.primaryKey);\n              if (++count === limit) return resolve({result});\n              cursor.continue();\n            };\n            req.onerror = eventRejectHandler(reject);\n          }\n        });\n      };\n    }\n  \n    return {\n      name: tableName,\n      schema: tableSchema,\n      \n      mutate,\n\n      getMany ({trans, keys}) {\n        return new Promise<any[]>((resolve, reject) => {\n          resolve = wrap(resolve);\n          const store = (trans as IDBTransaction).objectStore(tableName);\n          const length = keys.length;\n          const result = new Array(length);\n          let keyCount = 0;\n          let callbackCount = 0;\n          let valueCount = 0;\n          let req: IDBRequest & {_pos?: number};\n    \n          const successHandler = event => {\n            const req = event.target;\n            if ((result[req._pos] = req.result) != null) ++valueCount;\n            if (++callbackCount === keyCount) resolve(result);\n          };\n          const errorHandler = eventRejectHandler(reject);\n    \n          for (let i=0; i<length; ++i) {\n            const key = keys[i];\n            if (key != null) {\n              req = store.get(keys[i]);\n              req._pos = i;\n              req.onsuccess = successHandler;\n              req.onerror = errorHandler;\n              ++keyCount;\n            }\n          }\n          if (keyCount === 0) resolve(result);\n        });\n      },\n\n      get ({trans, key}) {\n        return new Promise<any>((resolve, reject) => {\n          resolve = wrap (resolve);\n          const store = (trans as IDBTransaction).objectStore(tableName);\n          const req = store.get(key);\n          req.onsuccess = event => resolve((event.target as any).result);\n          req.onerror = eventRejectHandler(reject);\n        });\n      },\n\n      query: query(hasGetAll),\n      \n      openCursor,\n\n      count ({query, trans}) {\n        const {index, range} = query;\n        return new Promise<number>((resolve, reject) => {\n          const store = (trans as IDBTransaction).objectStore(tableName);\n          const source = index.isPrimaryKey ? store : store.index(index.name);\n          const idbKeyRange = makeIDBKeyRange(range);\n          const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n          req.onsuccess = wrap(ev => resolve((ev.target as IDBRequest).result));\n          req.onerror = eventRejectHandler(reject);\n        });\n      }\n    };\n  }\n\n  const {schema, hasGetAll} = extractSchema(db, tmpTrans);\n  const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n  const tableMap: {[name: string]: DBCoreTable} = {};\n  tables.forEach(table => tableMap[table.name] = table);\n  return {\n    stack: \"dbcore\",\n    \n    transaction: db.transaction.bind(db),\n\n    table(name: string) {\n      const result = tableMap[name];\n      if (!result) throw new Error(`Table '${name}' not found`);\n      return tableMap[name];\n    },\n\n    MIN_KEY: -Infinity,\n\n    MAX_KEY: getMaxKey(IdbKeyRange),\n\n    schema\n\n  };\n}\n", "import { Dexie } from './';\nimport { createDBCore } from '../../dbcore/dbcore-indexeddb';\nimport { DBCore } from '../../public/types/dbcore';\nimport { DexieDOMDependencies } from '../../public/types/dexie-dom-dependencies';\nimport { DexieStacks, Middleware } from '../../public/types/middleware';\nimport { exceptions } from '../../errors';\n\nfunction createMiddlewareStack<TStack extends {stack: string}>(\n  stackImpl: {stack: string},\n  middlewares: Middleware<{stack: string}>[]): TStack {\n  return middlewares.reduce((down, {create}) => ({...down, ...create(down)}), stackImpl) as TStack;\n} \n\nfunction createMiddlewareStacks(\n  middlewares: {[StackName in keyof DexieStacks]?: Middleware<DexieStacks[StackName]>[]},\n  idbdb: IDBDatabase,\n  {IDBKeyRange, indexedDB}: DexieDOMDependencies,\n  tmpTrans: IDBTransaction): {[StackName in keyof DexieStacks]?: DexieStacks[StackName]}\n{\n  const dbcore = createMiddlewareStack<DBCore>(\n    createDBCore(idbdb, IDBKeyRange, tmpTrans),\n    middlewares.dbcore);\n  \n  // TODO: Create other stacks the same way as above. They might be dependant on the result\n  // of creating dbcore stack.\n\n  return {\n    dbcore\n  };\n}\n\nexport function generateMiddlewareStacks(db: Dexie, tmpTrans: IDBTransaction) {\n  const idbdb = tmpTrans.db;\n  const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n  db.core = stacks.dbcore!;\n  db.tables.forEach(table => {\n    const tableName = table.name;\n    if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n      table.core = db.core.table(tableName);\n      if (db[tableName] instanceof db.Table) {\n          db[tableName].core = table.core;\n      }\n    }\n  });\n}\n", "import { Dexie } from '../dexie';\nimport { DbSchema } from '../../public/types/db-schema';\nimport { _global } from \"../../globals/global\";\nimport { setProp, keys, slice, isArray, shallowClone, isAsyncFunction, defineProperty, getPropertyDescriptor } from '../../functions/utils';\nimport { Transaction } from '../transaction';\nimport { Version } from './version';\nimport Promise, { PSD, newScope, NativePromise, decrementExpectedAwaits, incrementExpectedAwaits } from '../../helpers/promise';\nimport { exceptions } from '../../errors';\nimport { TableSchema } from '../../public/types/table-schema';\nimport { IndexSpec } from '../../public/types/index-spec';\nimport { createIndexSpec, nameFromKeyPath } from '../../helpers/index-spec';\nimport { createTableSchema } from '../../helpers/table-schema';\nimport { generateMiddlewareStacks } from '../dexie/generate-middleware-stacks';\nimport { debug } from '../../helpers/debug';\nimport { PromiseExtended } from '../../public/types/promise-extended';\n\nexport function setApiOnPlace(db: Dexie, objs: Object[], tableNames: string[], dbschema: DbSchema) {\n  tableNames.forEach(tableName => {\n    const schema = dbschema[tableName];\n    objs.forEach(obj => {\n      const propDesc = getPropertyDescriptor(obj, tableName);\n      if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n        // Either the prop is not declared, or it is initialized to undefined.\n        if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n          // obj is a Transaction prototype (or prototype of a subclass to Transaction)\n          // Make the API a getter that returns this.table(tableName)\n          setProp(obj, tableName, {\n            get(this: Transaction) { return this.table(tableName); },\n            set(value: any) {\n              // Issue #1039\n              // Let \"this.schema = dbschema;\" and other props in transaction constructor work even if there's a name collision with the table name.\n              defineProperty(this, tableName, {value, writable: true, configurable: true, enumerable: true});\n            }\n          });\n        } else {\n          // Table will not be bound to a transaction (will use Dexie.currentTransaction)\n          obj[tableName] = new db.Table(tableName, schema);\n        }\n      }\n    });\n  });\n}\n\nexport function removeTablesApi(db: Dexie, objs: Object[]) {\n  objs.forEach(obj => {\n    for (let key in obj) {\n      if (obj[key] instanceof db.Table) delete obj[key];\n    }\n  });\n}\n\nexport function lowerVersionFirst(a: Version, b: Version) {\n  return a._cfg.version - b._cfg.version;\n}\n\nexport function runUpgraders(db: Dexie, oldVersion: number, idbUpgradeTrans: IDBTransaction, reject) {\n  const globalSchema = db._dbSchema;\n  if (idbUpgradeTrans.objectStoreNames.contains('$meta') && !globalSchema.$meta) {\n    globalSchema.$meta = createTableSchema(\"$meta\", parseIndexSyntax(\"\")[0], []);\n    db._storeNames.push('$meta');\n  }\n  const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n  trans.create(idbUpgradeTrans);\n  trans._completion.catch(reject);\n  const rejectTransaction = trans._reject.bind(trans);\n  const transless = PSD.transless || PSD;\n  newScope(() => {\n    PSD.trans = trans;\n    PSD.transless = transless;\n    if (oldVersion === 0) {\n      // Create tables:\n      keys(globalSchema).forEach(tableName => {\n        createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n      });\n      generateMiddlewareStacks(db, idbUpgradeTrans);\n      Promise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n    } else {\n      generateMiddlewareStacks(db, idbUpgradeTrans);\n      return getExistingVersion(db, trans, oldVersion)\n        .then(oldVersion => updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans))\n        .catch(rejectTransaction);\n    }\n  });\n}\n\nexport type UpgradeQueueItem = (idbtrans: IDBTransaction) => PromiseLike<any> | void;\n\nexport function patchCurrentVersion(db: Dexie, idbUpgradeTrans: IDBTransaction) {\n  createMissingTables(db._dbSchema, idbUpgradeTrans);\n  if (idbUpgradeTrans.db.version % 10 === 0 && !idbUpgradeTrans.objectStoreNames.contains('$meta')) {\n    // Rolled over to the next 10-ies due to many schema upgrades without bumping version.\n    // No problem! We pin the database to its expected version by adding the $meta table so that next\n    // time the programmer bumps the version and attaches, an upgrader, that upgrader will indeed run,\n    // as well any further upgraders coming after that.\n    idbUpgradeTrans.db.createObjectStore('$meta').add(Math.ceil((idbUpgradeTrans.db.version / 10) - 1), 'version');\n  }\n  const globalSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n  adjustToExistingIndexNames(db, db._dbSchema, idbUpgradeTrans);\n  const diff = getSchemaDiff(globalSchema, db._dbSchema);\n  for (const tableChange of diff.change) {\n    if (tableChange.change.length || tableChange.recreate) {\n      console.warn(`Unable to patch indexes of table ${tableChange.name} because it has changes on the type of index or primary key.`);\n      return;\n    }\n    const store = idbUpgradeTrans.objectStore(tableChange.name);\n    tableChange.add.forEach(idx => {\n      if (debug) console.debug(`Dexie upgrade patch: Creating missing index ${tableChange.name}.${idx.src}`);\n      addIndex(store, idx);\n    });\n  }\n}\n\nfunction getExistingVersion(db: Dexie, trans: Transaction, oldVersion: number): PromiseExtended<number> {\n  // In normal case, existing version is the native installed version divided by 10.\n  // However, in case more than 10 schema changes have been made on the same version (such as while\n  // developing an app), the native version may have passed beyond a multiple of 10 within the same version.\n  // When that happens, a table $meta will have been created, containing a single entry with key \"version\"\n  // and the value of the real old version to use when running upgraders going forward.\n  if (trans.storeNames.includes('$meta')) {\n    return trans.table('$meta').get('version').then(metaVersion => {\n      return metaVersion != null ? metaVersion : oldVersion\n    })\n  } else {\n    return Promise.resolve(oldVersion);\n  }\n}\n\nfunction updateTablesAndIndexes(\n  db: Dexie,\n  oldVersion: number,\n  trans: Transaction,\n  idbUpgradeTrans: IDBTransaction)\n{\n  // Upgrade version to version, step-by-step from oldest to newest version.\n  // Each transaction object will contain the table set that was current in that version (but also not-yet-deleted tables from its previous version)\n  const queue: UpgradeQueueItem[] = [];\n  const versions = db._versions;\n  let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n  let anyContentUpgraderHasRun = false;\n  \n  const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n  if (versToRun.length === 0) {\n    // Important not to continue at this point.\n    // Coming here means we've already patched schema in patchCurrentVersion() after having\n    // incremented native version to a value above the declared highest version.\n    // When being in this mode, it means that there might be different versions the db competing\n    // about it with different version of the schema. Therefore, we must avoid deleting tables\n    // or indexes here so that both versions can co-exist until the application has been upgraded to\n    // a version that declares no lower than the native version.\n    // If after that, a downgrade happens again, we'll end up here again, accepting both versions\n    // And we'll stay in this state until app developer releases a new declared version.\n    return Promise.resolve(); \n  }\n  \n  versToRun.forEach(version => {\n    queue.push(() => {\n      const oldSchema = globalSchema;\n      const newSchema = version._cfg.dbschema;\n      adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n      adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n\n      globalSchema = db._dbSchema = newSchema;\n\n      const diff = getSchemaDiff(oldSchema, newSchema);\n      // Add tables           \n      diff.add.forEach(tuple => {\n        createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n      });\n      // Change tables\n      diff.change.forEach(change => {\n        if (change.recreate) {\n          throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n        } else {\n          const store = idbUpgradeTrans.objectStore(change.name);\n          // Add indexes\n          change.add.forEach(idx => addIndex(store, idx));\n          // Update indexes\n          change.change.forEach(idx => {\n            store.deleteIndex(idx.name);\n            addIndex(store, idx);\n          });\n          // Delete indexes\n          change.del.forEach(idxName => store.deleteIndex(idxName));\n        }\n      });\n\n      const contentUpgrade = version._cfg.contentUpgrade;\n\n      if (contentUpgrade && version._cfg.version > oldVersion) {\n        // Update db.core with new tables and indexes:\n        generateMiddlewareStacks(db, idbUpgradeTrans);\n        trans._memoizedTables = {}; // Invalidate memoization as transaction shape may change between versions.\n\n        anyContentUpgraderHasRun = true;\n\n        // Add to-be-deleted tables to contentUpgrade transaction\n        let upgradeSchema = shallowClone(newSchema);\n        diff.del.forEach(table => {\n          upgradeSchema[table] = oldSchema[table];\n        });\n\n        // Safe to affect Transaction.prototype globally in this moment,\n        // because when this code runs, there may not be any other code\n        // that can access any transaction instance, else than this particular\n        // upgrader function.\n        removeTablesApi(db, [db.Transaction.prototype]);\n        setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n        trans.schema = upgradeSchema;\n\n        // Support for native async await.\n        const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n        if (contentUpgradeIsAsync) {\n          incrementExpectedAwaits();\n        }\n        \n        let returnValue: any;\n        const promiseFollowed = Promise.follow(() => {\n          // Finally, call the scope function with our table and transaction arguments.\n          returnValue = contentUpgrade(trans);\n          if (returnValue) {\n            if (contentUpgradeIsAsync) {\n              // contentUpgrade is a native async function - we know for sure returnValue is native promise.\n              var decrementor = decrementExpectedAwaits.bind(null, null);\n              returnValue.then(decrementor, decrementor);\n            }\n          }\n        });\n        return (returnValue && typeof returnValue.then === 'function' ?\n          Promise.resolve(returnValue) : promiseFollowed.then(()=>returnValue));\n      }\n    });\n    queue.push(idbtrans => {\n      const newSchema = version._cfg.dbschema;\n      // Delete old tables\n      deleteRemovedTables(newSchema, idbtrans);\n      // Restore the final API\n      removeTablesApi(db, [db.Transaction.prototype]);\n      setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n      trans.schema = db._dbSchema;\n    });\n    // Maintain the $meta table after this version's tables and indexes has been created and content upgraders have run.\n    queue.push(idbtrans => {\n      if (db.idbdb.objectStoreNames.contains('$meta')) {\n        if (Math.ceil(db.idbdb.version / 10) === version._cfg.version) {\n          // Remove $meta table if it's no more needed - we are in line with the native version\n          db.idbdb.deleteObjectStore('$meta');\n          delete db._dbSchema.$meta;\n          db._storeNames = db._storeNames.filter(name => name !== '$meta');\n        } else {\n          // We're still not in line with the native version. Make sure to update the virtual version\n          // to the successfully run version\n          idbtrans.objectStore('$meta').put(version._cfg.version, 'version');\n        }\n      }\n    }); \n  });\n\n  // Now, create a queue execution engine\n  function runQueue() {\n    return queue.length ? Promise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n      Promise.resolve();\n  }\n\n  return runQueue().then(() => {\n    createMissingTables(globalSchema, idbUpgradeTrans); // At last, make sure to create any missing tables. (Needed by addons that add stores to DB without specifying version)\n  });\n}\n\nexport interface SchemaDiff {\n  del: string[],\n  add: [string, TableSchema][];\n  change: TableSchemaDiff[];\n}\n\nexport interface TableSchemaDiff {\n  name: string,\n  recreate: boolean,\n  del: string[],\n  add: IndexSpec[],\n  change: IndexSpec[]\n}\n\nexport function getSchemaDiff(oldSchema: DbSchema, newSchema: DbSchema): SchemaDiff {\n  const diff: SchemaDiff = {\n    del: [], // Array of table names\n    add: [], // Array of [tableName, newDefinition]\n    change: [] // Array of {name: tableName, recreate: newDefinition, del: delIndexNames, add: newIndexDefs, change: changedIndexDefs}\n  };\n  let table: string;\n  for (table in oldSchema) {\n    if (!newSchema[table]) diff.del.push(table);\n  }\n  for (table in newSchema) {\n    const oldDef = oldSchema[table],\n      newDef = newSchema[table];\n    if (!oldDef) {\n      diff.add.push([table, newDef]);\n    } else {\n      const change = {\n        name: table,\n        def: newDef,\n        recreate: false,\n        del: [],\n        add: [],\n        change: []\n      };\n      if (\n          (\n             // compare keyPaths no matter if string or string[]\n             // compare falsy keypaths same no matter if they are null or empty string.\n            ''+(oldDef.primKey.keyPath||'')\n          ) !== (\n            ''+(newDef.primKey.keyPath||'')\n          ) ||\n            // Compare the autoIncrement flag also\n          (oldDef.primKey.auto !== newDef.primKey.auto))\n      {\n        // Primary key has changed. Remove and re-add table.\n        change.recreate = true;\n        diff.change.push(change);\n      } else {\n        // Same primary key. Just find out what differs:\n        const oldIndexes = oldDef.idxByName;\n        const newIndexes = newDef.idxByName;\n        let idxName: string;\n        for (idxName in oldIndexes) {\n          if (!newIndexes[idxName]) change.del.push(idxName);\n        }\n        for (idxName in newIndexes) {\n          const oldIdx = oldIndexes[idxName],\n            newIdx = newIndexes[idxName];\n          if (!oldIdx) change.add.push(newIdx);\n          else if (oldIdx.src !== newIdx.src) change.change.push(newIdx);\n        }\n        if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n          diff.change.push(change);\n        }\n      }\n    }\n  }\n  return diff;\n}\n\nexport function createTable(\n  idbtrans: IDBTransaction,\n  tableName: string,\n  primKey: IndexSpec,\n  indexes: IndexSpec[]\n) {\n  const store = idbtrans.db.createObjectStore(\n    tableName,\n    primKey.keyPath ?\n      { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n      { autoIncrement: primKey.auto }\n  );\n  indexes.forEach(idx => addIndex(store, idx));\n  return store;\n}\n\nexport function createMissingTables(newSchema: DbSchema, idbtrans: IDBTransaction) {\n  keys(newSchema).forEach(tableName => {\n    if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n      if (debug) console.debug('Dexie: Creating missing table', tableName);\n      createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n    }\n  });\n}\n\nexport function deleteRemovedTables(newSchema: DbSchema, idbtrans: IDBTransaction) {\n  [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName =>\n    newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\n\nexport function addIndex(store: IDBObjectStore, idx: IndexSpec) {\n  store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\n\nfunction buildGlobalSchema(\n  db: Dexie,\n  idbdb: IDBDatabase,\n  tmpTrans: IDBTransaction\n) {\n  const globalSchema = {};\n  const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n  dbStoreNames.forEach(storeName => {\n    const store = tmpTrans.objectStore(storeName);\n    let keyPath = store.keyPath;\n    const primKey = createIndexSpec(\n      nameFromKeyPath(keyPath),\n      keyPath || \"\",\n      true,\n      false,\n      !!store.autoIncrement,\n      keyPath && typeof keyPath !== \"string\",\n      true\n    );\n    const indexes: IndexSpec[] = [];\n    for (let j = 0; j < store.indexNames.length; ++j) {\n      const idbindex = store.index(store.indexNames[j]);\n      keyPath = idbindex.keyPath;\n      var index = createIndexSpec(\n        idbindex.name,\n        keyPath,\n        !!idbindex.unique,\n        !!idbindex.multiEntry,\n        false,\n        keyPath && typeof keyPath !== \"string\",\n        false\n      );\n      indexes.push(index);\n    }\n    globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n  });\n  return globalSchema;\n}\n\nexport function readGlobalSchema(db: Dexie, idbdb: IDBDatabase, tmpTrans: IDBTransaction) {\n  db.verno = idbdb.version / 10;\n  const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n  db._storeNames = slice(idbdb.objectStoreNames, 0);\n  setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\n\nexport function verifyInstalledSchema(db: Dexie, tmpTrans: IDBTransaction): boolean {\n  const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n  const diff = getSchemaDiff(installedSchema, db._dbSchema);\n  return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\n\nexport function adjustToExistingIndexNames(db: Dexie, schema: DbSchema, idbtrans: IDBTransaction) {\n  // Issue #30 Problem with existing db - adjust to existing index names when migrating from non-dexie db\n  const storeNames = idbtrans.db.objectStoreNames;\n\n  for (let i = 0; i < storeNames.length; ++i) {\n    const storeName = storeNames[i];\n    const store = idbtrans.objectStore(storeName);\n    db._hasGetAll = 'getAll' in store;\n\n    for (let j = 0; j < store.indexNames.length; ++j) {\n      const indexName = store.indexNames[j];\n      const keyPath = store.index(indexName).keyPath;\n      const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n      if (schema[storeName]) {\n        const indexSpec = schema[storeName].idxByName[dexieName];\n        if (indexSpec) {\n          indexSpec.name = indexName;\n          delete schema[storeName].idxByName[dexieName];\n          schema[storeName].idxByName[indexName] = indexSpec;\n        }\n      }\n    }\n  }\n\n  // Bug with getAll() on Safari ver<604 on Workers only, see discussion following PR #579\n  if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n    _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n  {\n    db._hasGetAll = false;\n  }\n}\n\nexport function parseIndexSyntax(primKeyAndIndexes: string): IndexSpec[] {\n  return primKeyAndIndexes.split(',').map((index, indexNum) => {\n    index = index.trim();\n    const name = index.replace(/([&*]|\\+\\+)/g, \"\"); // Remove \"&\", \"++\" and \"*\"\n    // Let keyPath of \"[a+b]\" be [\"a\",\"b\"]:\n    const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n\n    return createIndexSpec(\n      name,\n      keyPath || null,\n      /\\&/.test(index),\n      /\\*/.test(index),\n      /\\+\\+/.test(index),\n      isArray(keyPath),\n      indexNum === 0\n    );\n  });\n}\n", "import { Version as IVersion } from '../../public/types/version';\nimport { DbSchema } from '../../public/types/db-schema';\nimport { extend, keys } from '../../functions/utils';\nimport { Dexie } from '../dexie';\nimport { Transaction } from '../transaction';\nimport { removeTablesApi, setApiOnPlace, parseIndexSyntax } from './schema-helpers';\nimport { exceptions } from '../../errors';\nimport { createTableSchema } from '../../helpers/table-schema';\nimport { nop, promisableChain } from '../../functions/chaining-functions';\n\n/** class Version\n *\n * https://dexie.org/docs/Version/Version\n */\nexport class Version implements IVersion {\n  db: Dexie;\n  _cfg: {\n    version: number,\n    storesSource: { [tableName: string]: string | null },\n    dbschema: DbSchema,\n    tables: {},\n    contentUpgrade: Function | null\n  }\n\n  _parseStoresSpec(stores: { [tableName: string]: string | null }, outSchema: DbSchema): any {\n    keys(stores).forEach(tableName => {\n      if (stores[tableName] !== null) {\n          var indexes = parseIndexSyntax(stores[tableName]);\n          var primKey = indexes.shift();\n          primKey.unique = true;\n          if (primKey.multi) throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n          indexes.forEach(idx => {\n              if (idx.auto) throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n              if (!idx.keyPath) throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n          });\n          outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n      }\n    });\n  }\n\n  stores(stores: { [key: string]: string | null; }): IVersion {\n    const db = this.db;\n    this._cfg.storesSource = this._cfg.storesSource ?\n      extend(this._cfg.storesSource, stores) :\n      stores;\n    const versions = db._versions;\n\n    // Derive stores from earlier versions if they are not explicitely specified as null or a new syntax.\n    const storesSpec: { [key: string]: string; } = {};\n    let dbschema = {};\n    versions.forEach(version => { // 'versions' is always sorted by lowest version first.\n      extend(storesSpec, version._cfg.storesSource);\n      dbschema = (version._cfg.dbschema = {});\n      version._parseStoresSpec(storesSpec, dbschema);\n    });\n    // Update the latest schema to this version\n    db._dbSchema = dbschema;\n    // Update APIs\n    removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n    setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n    db._storeNames = keys(dbschema);\n    return this;\n  }\n\n  upgrade(upgradeFunction: (trans: Transaction) => PromiseLike<any> | void): Version {\n    this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n    return this;\n  }\n}\n", "import { Dexie } from '../dexie';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\nimport { Version } from './version';\n\nexport interface VersionConstructor {\n  new(versionNumber: number): Version;\n  prototype: Version;\n}\n\n/** Generates a Version constructor bound to given Dexie instance.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createVersionConstructor(db: Dexie) {\n  return makeClassConstructor<VersionConstructor>(\n    Version.prototype,\n\n    function Version(this: Version, versionNumber: number) {\n      this.db = db;\n      this._cfg = {\n        version: versionNumber,\n        storesSource: null,\n        dbschema: {},\n        tables: {},\n        contentUpgrade: null\n      };\n    });\n\n}\n", "import { Dexie } from \"../classes/dexie/dexie\";\nimport { Table } from \"../public/types/table\";\nimport { DBNAMES_DB } from \"../globals/constants\";\nimport { DexieDOMDependencies } from \"../public/types/dexie-dom-dependencies\";\nimport { nop } from \"../functions/chaining-functions\";\n\ntype IDBKeyNamesVar = typeof IDBKeyRange;\n\nfunction getDbNamesTable(indexedDB: IDBFactory, IDBKeyRange: IDBKeyNamesVar) {\n  let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n  if (!dbNamesDB) {\n    dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie(DBNAMES_DB, {\n      addons: [],\n      indexedDB,\n      IDBKeyRange,\n    });\n    dbNamesDB.version(1).stores({ dbnames: \"name\" });\n  }\n  return dbNamesDB.table(\"dbnames\") as Table<{ name: string }, string>;\n}\n\nfunction hasDatabasesNative(indexedDB: IDBFactory) {\n  return indexedDB && typeof indexedDB.databases === \"function\";\n}\n\nexport function getDatabaseNames({\n  indexedDB,\n  IDBKeyRange,\n}: DexieDOMDependencies) {\n  return hasDatabasesNative(indexedDB)\n    ? Promise.resolve(indexedDB.databases()).then((infos) =>\n        infos\n          // Select name prop of infos:\n          .map((info) => info.name)\n          // Filter out DBNAMES_DB as previous Dexie or browser version would not have included it in the result.\n          .filter((name) => name !== DBNAMES_DB)\n      )\n    : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\n\nexport function _onDatabaseCreated(\n  { indexedDB, IDBKeyRange }: DexieDOMDependencies,\n  name: string\n) {\n  !hasDatabasesNative(indexedDB) &&\n    name !== DBNAMES_DB &&\n    getDbNamesTable(indexedDB, IDBKeyRange).put({name}).catch(nop);\n}\n\nexport function _onDatabaseDeleted(\n  { indexedDB, IDBKeyRange }: DexieDOMDependencies,\n  name: string\n) {\n  !hasDatabasesNative(indexedDB) &&\n    name !== DBNAMES_DB &&\n    getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n", "import { newScope } from '../../helpers/promise';\nimport { PSD } from '../../helpers/promise';\n\nexport function vip (fn) {\n  // To be used by subscribers to the on('ready') event.\n  // This will let caller through to access DB even when it is blocked while the db.ready() subscribers are firing.\n  // This would have worked automatically if we were certain that the Provider was using Dexie.Promise for all asyncronic operations. The promise PSD\n  // from the provider.connect() call would then be derived all the way to when provider would call localDatabase.applyChanges(). But since\n  // the provider more likely is using non-promise async APIs or other thenable implementations, we cannot assume that.\n  // Note that this method is only useful for on('ready') subscribers that is returning a Promise from the event. If not using vip()\n  // the database could deadlock since it wont open until the returned Promise is resolved, and any non-VIPed operation started by\n  // the caller will not resolve until database is opened.\n  return newScope(function () {\n    PSD.letThrough = true; // Make sure we are let through if still blocking db due to onready is firing.\n    return fn();\n  });\n}\n\n", "/**\n * Work around Safari 14 IndexedDB open bug.\n *\n * Safari has a horrible bug where IDB requests can hang while the browser is starting up. https://bugs.webkit.org/show_bug.cgi?id=226547\n * The only solution is to keep nudging it until it's awake.\n */\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    // No point putting other browsers or older versions of Safari through this mess.\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nexport default idbReady;\n", "import { cmp } from \"../functions/cmp\";\nimport { extend, iteratorSymbol, props } from '../functions/utils';\nimport { IndexableType } from '../public';\nimport {\n  EmptyRange,\n  IntervalTree,\n  IntervalTreeNode,\n  RangeSetConstructor,\n  RangeSetPrototype,\n} from \"../public/types/rangeset\";\n\n/* An interval tree implementation to efficiently detect overlapping ranges of queried indexes.\n *\n * https://en.wikipedia.org/wiki/Interval_tree\n * \n */\n\nfunction isEmptyRange(node: IntervalTree | {from: IndexableType, to: IndexableType}): node is EmptyRange {\n  return !(\"from\" in node);\n}\n\nexport type RangeSet = RangeSetPrototype & IntervalTree;\n\nexport const RangeSet = function(fromOrTree: any, to?: any) {\n  if (this) {\n    // Called with new()\n    extend(this, arguments.length ? {d:1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree} : {d:0});\n  } else {\n    // Called without new()\n    const rv = new RangeSet();\n    if (fromOrTree && (\"d\" in fromOrTree)) {\n      extend(rv, fromOrTree);\n    }\n    return rv;\n  }\n} as RangeSetConstructor;\n\nprops(RangeSet.prototype, {\n  add(rangeSet: IntervalTree | {from: IndexableType, to: IndexableType}) {\n    mergeRanges(this, rangeSet);\n    return this;\n  },\n  addKey(key: IndexableType) {\n    addRange(this, key, key);\n    return this;\n  },\n  addKeys(keys: IndexableType[]) {\n    keys.forEach(key => addRange(this, key, key));\n    return this;\n  },\n  hasKey(key: IndexableType) {\n    const node = getRangeSetIterator(this).next(key).value;\n    return node && cmp(node.from, key) <= 0 && cmp(node.to, key) >= 0;\n  },\n\n  [iteratorSymbol](): Iterator<IntervalTreeNode, undefined, IndexableType | undefined> {\n    return getRangeSetIterator(this);\n  }\n});\n\nfunction addRange(target: IntervalTree, from: IndexableType, to: IndexableType) {\n  const diff = cmp(from, to);\n  // cmp() returns NaN if one of the args are IDB-invalid keys.\n  // Avoid storing invalid keys in rangeset:\n  if (isNaN(diff)) return;\n\n  // Caller is trying to add a range where from is greater than to:\n  if (diff > 0) throw RangeError();\n  \n  if (isEmptyRange(target)) return extend(target, { from, to, d: 1 });\n  const left = target.l;\n  const right = target.r;\n  if (cmp(to, target.from) < 0) {\n    left\n      ? addRange(left, from, to)\n      : (target.l = { from, to, d: 1, l: null, r: null });\n    return rebalance(target);\n  }\n  if (cmp(from, target.to) > 0) {\n    right\n      ? addRange(right, from, to)\n      : (target.r = { from, to, d: 1, l: null, r: null });\n    return rebalance(target);\n  }\n  // Now we have some kind of overlap. We will be able to merge the new range into the node or let it be swallowed.\n\n  // Grow left?\n  if (cmp(from, target.from) < 0) {\n    target.from = from;\n    target.l = null; // Cut off for now. Re-add later.\n    target.d = right ? right.d + 1 : 1;\n  }\n  // Grow right?\n  if (cmp(to, target.to) > 0) {\n    target.to = to;\n    target.r = null; // Cut off for now. Re-add later.\n    target.d = target.l ? target.l.d + 1 : 1;\n  }\n  const rightWasCutOff = !target.r;\n  // Re-add left?\n  if (left && !target.l) {\n    //Ranges to the left may be swallowed. Cut it of and re-add all.\n    //Could probably be done more efficiently!\n    mergeRanges(target, left);\n  }\n  // Re-add right?\n  if (right && rightWasCutOff) {\n    //Ranges to the right may be swallowed. Cut it of and re-add all.\n    //Could probably be done more efficiently!\n    mergeRanges(target, right);\n  }\n}\n\nexport function mergeRanges(target: IntervalTree, newSet: IntervalTree | {from: IndexableType, to: IndexableType}) {\n  function _addRangeSet(\n    target: IntervalTree,\n    { from, to, l, r }: IntervalTreeNode | {from: IndexableType, to: IndexableType, l?: undefined, r?: undefined}\n  ) {\n    addRange(target, from, to);\n    if (l) _addRangeSet(target, l);\n    if (r) _addRangeSet(target, r);\n  }\n\n  if(!isEmptyRange(newSet)) _addRangeSet(target, newSet);\n}\n\nexport function rangesOverlap(\n  rangeSet1: IntervalTree,\n  rangeSet2: IntervalTree\n): boolean {\n    // Start iterating other from scratch.\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done) return false;\n    let a = nextResult1.value;\n\n    // Start iterating this from start of other\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from); // Start from beginning of other range\n    let b = nextResult2.value;\n\n    while (!nextResult1.done && !nextResult2.done) {\n      if (cmp(b!.from, a.to) <= 0 && cmp(b!.to, a.from) >= 0) return true;\n      cmp(a.from, b!.from) < 0\n        ? (a = (nextResult1 = i1.next(b!.from)).value!) // a is behind. forward it to beginning of next b-range\n        : (b = (nextResult2 = i2.next(a.from)).value); // b is behind. forward it to beginning of next a-range\n    }\n  return false;\n}\n\ntype RangeSetIteratorState =\n  | {\n      up?: RangeSetIteratorState;\n      n: IntervalTreeNode;\n      s: 0 | 1 | 2 | 3;\n    }\n  | undefined\n  | null;\nexport function getRangeSetIterator(\n  node: EmptyRange | IntervalTreeNode\n): Generator<IntervalTreeNode, undefined, IndexableType | undefined> {\n  let state: RangeSetIteratorState = isEmptyRange(node) ? null : { s: 0, n: node };\n\n  return {\n    next(key?) {\n      const keyProvided = arguments.length > 0;\n      while (state) {\n        switch (state.s) {\n          case 0:\n            // Initial state for node.\n            // Fast forward to leftmost node.\n            state.s = 1;\n            if (keyProvided) {\n              while (state.n.l && cmp(key, state.n.from) < 0)\n                state = { up: state, n: state.n.l, s: 1 };\n            } else {\n              while (state.n.l) state = { up: state, n: state.n.l, s: 1 };\n            }\n          // intentionally fall into case 1:\n          case 1:\n            // We're on a node where it's left part is already handled or does not exist.\n            state.s = 2;\n            if (!keyProvided || cmp(key, state.n.to) <= 0)\n              return { value: state.n, done: false };\n          case 2:\n            // We've emitted our node and should continue with the right part or let parent take over from it's state 1\n            if (state.n.r) {\n              state.s = 3; // So when child is done, we know we're done.\n              state = { up: state, n: state.n.r, s: 0 };\n              continue; // Will fall in to case 0 with fast forward to left leaf of this subtree.\n            }\n          // intentionally fall into case 3:\n          case 3:\n            state = state.up;\n        }\n      }\n      return { done: true };\n    },\n  } as Generator<IntervalTreeNode, undefined, IndexableType>;\n}\n\nfunction rebalance(target: IntervalTreeNode) {\n  const diff = (target.r?.d || 0) - (target.l?.d || 0);\n  const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n  if (r) {\n\n    // Rotate (https://en.wikipedia.org/wiki/Tree_rotation)\n    //\n    // \n    //                    [OLDROOT]\n    //       [OLDROOT.L]            [NEWROOT]\n    //                        [NEWROOT.L] [NEWROOT.R]\n    //\n    // Is going to become:\n    //\n    // \n    //                    [NEWROOT]\n    //        [OLDROOT]             [NEWROOT.R]\n    // [OLDROOT.L] [NEWROOT.L]  \n\n    // * clone now has the props of OLDROOT\n    // Plan:\n    // * target must be given the props of NEWROOT\n    // * target[l] must point to a new OLDROOT\n    // * target[r] must point to NEWROOT.R\n    // * OLDROOT[r] must point to NEWROOT.L\n    const l = r === \"r\" ? \"l\" : \"r\"; // Support both left/right rotation\n    const rootClone = { ...target };\n    // We're gonna copy props from target's right node into target so that target will\n    // have same range as old target[r] (instead of changing pointers, we copy values.\n    // that way we do not need to adjust pointers in parents).\n    const oldRootRight = target[r]; \n    target.from = oldRootRight.from;\n    target.to = oldRootRight.to;\n    target[r] = oldRootRight[r];\n    rootClone[r] = oldRootRight[l];\n    target[l] = rootClone;\n    rootClone.d = computeDepth(rootClone);\n  }\n  target.d = computeDepth(target);\n}\n\nfunction computeDepth({ r, l }: Pick<IntervalTreeNode, \"l\" | \"r\">) {\n  return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n", "import { cloneSimpleObjectTree, deepClone, keys, objectIsEmpty } from \"../functions/utils\";\nimport { mergeRanges, RangeSet } from \"../helpers/rangeset\";\nimport { ObservabilitySet } from \"../public/types/db-events\";\n\nexport function extendObservabilitySet(\n  target: ObservabilitySet,\n  newSet: ObservabilitySet\n): ObservabilitySet {\n  keys(newSet).forEach(part => {\n    if (target[part]) mergeRanges(target[part], newSet[part]);\n    else target[part] = cloneSimpleObjectTree(newSet[part]); // Somewhat faster\n  });\n  return target;\n}\n", "import { rangesOverlap } from '../helpers/rangeset';\nimport { ObservabilitySet } from '../public/types/db-events';\n\nexport function obsSetsOverlap(os1: ObservabilitySet, os2: ObservabilitySet) {\n  return os1.all || os2.all || Object.keys(os1).some(\n    (key) => os2[key] && rangesOverlap(os2[key], os1[key])\n  );\n}\n", "import { type GlobalQueryCache } from \"../../public/types/cache\";\n\nexport const cache: GlobalQueryCache = {}\n", "import { CacheEntry, TblQueryCache } from '../../public/types/cache';\nimport { ObservabilitySet } from '../../public/types/db-events';\nimport { extendObservabilitySet } from '../extend-observability-set';\nimport { obsSetsOverlap } from '../obs-sets-overlap';\nimport { cache } from './cache';\n\nlet unsignaledParts: ObservabilitySet = {};\nlet isTaskEnqueued = false;\n\nexport function signalSubscribersLazily(part: ObservabilitySet, optimistic = false) {\n  extendObservabilitySet(unsignaledParts, part);\n  if (!isTaskEnqueued) {\n    isTaskEnqueued = true;\n    setTimeout(() => {\n      isTaskEnqueued = false;\n      const parts = unsignaledParts;\n      unsignaledParts = {};\n      signalSubscribersNow(parts, false);\n    }, 0);\n  }\n}\n\nexport function signalSubscribersNow(\n  updatedParts: ObservabilitySet,\n  deleteAffectedCacheEntries = false\n) {\n  const queriesToSignal = new Set<() => void>();\n  if (updatedParts.all) {\n    // Signal all subscribers to requery.\n    for (const tblCache of Object.values(cache)) {\n      collectTableSubscribers(\n        tblCache,\n        updatedParts,\n        queriesToSignal,\n        deleteAffectedCacheEntries\n      );\n    }\n  } else {\n    for (const key in updatedParts) {\n      const parts = /^idb\\:\\/\\/(.*)\\/(.*)\\//.exec(key);\n      if (parts) {\n        const [, dbName, tableName] = parts;\n        const tblCache = cache[`idb://${dbName}/${tableName}`];\n        if (tblCache)\n          collectTableSubscribers(\n            tblCache,\n            updatedParts,\n            queriesToSignal,\n            deleteAffectedCacheEntries\n          );\n      }\n    }\n  }\n  // Now when affected cache entries are removed, signal collected subscribers to requery.\n  queriesToSignal.forEach((requery) => requery());\n}\n\nfunction collectTableSubscribers(\n  tblCache: TblQueryCache,\n  updatedParts: ObservabilitySet,\n  outQueriesToSignal: Set<() => void>,\n  deleteAffectedCacheEntries: boolean\n) {\n  const updatedEntryLists: [string, CacheEntry[]][] = [];\n  for (const [indexName, entries] of Object.entries(tblCache.queries.query)) {\n    const filteredEntries: CacheEntry[] = [];\n    for (const entry of entries) {\n      if (obsSetsOverlap(updatedParts, entry.obsSet)) {\n        // This query is affected by the mutation. Remove it from cache\n        // and signal all subscribers to requery.\n        entry.subscribers.forEach((requery) => outQueriesToSignal.add(requery));\n      } else if (deleteAffectedCacheEntries) {\n        filteredEntries.push(entry);\n      }\n    }\n    // Collect cache entries to be updated\n    if (deleteAffectedCacheEntries)\n      updatedEntryLists.push([indexName, filteredEntries]);\n  }\n  if (deleteAffectedCacheEntries) {\n    for (const [indexName, filteredEntries] of updatedEntryLists) {\n      tblCache.queries.query[indexName] = filteredEntries;\n    }\n  }\n}\n", "import { Dexie } from './dexie';\nimport * as Debug from '../../helpers/debug';\nimport { rejection } from '../../helpers/promise';\nimport { exceptions } from '../../errors';\nimport { eventRejectHandler, preventDefault } from '../../functions/event-wrappers';\nimport Promise, { wrap } from '../../helpers/promise';\nimport { connections } from '../../globals/constants';\nimport { runUpgraders, readGlobalSchema, adjustToExistingIndexNames, verifyInstalledSchema, patchCurrentVersion } from '../version/schema-helpers';\nimport { safariMultiStoreFix } from '../../functions/quirks';\nimport { _onDatabaseCreated } from '../../helpers/database-enumerator';\nimport { vip } from './vip';\nimport { promisableChain, nop } from '../../functions/chaining-functions';\nimport { generateMiddlewareStacks } from './generate-middleware-stacks';\nimport { slice } from '../../functions/utils';\nimport safari14Workaround from 'safari-14-idb-fix';\nimport { type ObservabilitySet } from '../../public/types/db-events';\nimport { RangeSet } from '../../helpers/rangeset';\nimport { DEXIE_STORAGE_MUTATED_EVENT_NAME, globalEvents } from '../../globals/global-events';\nimport { signalSubscribersNow } from '../../live-query/cache/signalSubscribers';\n\nexport function dexieOpen (db: Dexie) {\n  const state = db._state;\n  const {indexedDB} = db._deps;\n  if (state.isBeingOpened || db.idbdb)\n      return state.dbReadyPromise.then<Dexie>(() => state.dbOpenError ?\n        rejection (state.dbOpenError) :\n        db);\n  state.isBeingOpened = true;\n  state.dbOpenError = null;\n  state.openComplete = false;\n  const openCanceller = state.openCanceller;\n  let nativeVerToOpen = Math.round(db.verno * 10);\n  let schemaPatchMode = false;\n\n  function throwIfCancelled() {\n    // If state.openCanceller object reference is replaced, it means db.close() has been called,\n    // meaning this open flow should be cancelled.\n    if (state.openCanceller !== openCanceller) throw new exceptions.DatabaseClosed('db.open() was cancelled');\n  }\n  \n  // Function pointers to call when the core opening process completes.\n  let resolveDbReady = state.dbReadyResolve,\n      // upgradeTransaction to abort on failure.\n      upgradeTransaction: (IDBTransaction | null) = null,\n      wasCreated = false;\n\n  const tryOpenDB = () => new Promise((resolve, reject) => {\n    throwIfCancelled();\n    // If no API, throw!\n    if (!indexedDB) throw new exceptions.MissingAPI();\n    const dbName = db.name;\n    \n    const req = state.autoSchema || !nativeVerToOpen ?\n      indexedDB.open(dbName) :\n      indexedDB.open(dbName, nativeVerToOpen);\n    if (!req) throw new exceptions.MissingAPI(); // May happen in Safari private mode, see https://github.com/dfahlander/Dexie.js/issues/134\n    req.onerror = eventRejectHandler(reject);\n    req.onblocked = wrap(db._fireOnBlocked);\n    req.onupgradeneeded = wrap (e => {\n        upgradeTransaction = req.transaction;\n        if (state.autoSchema && !db._options.allowEmptyDB) { // Unless an addon has specified db._allowEmptyDB, lets make the call fail.\n            // Caller did not specify a version or schema. Doing that is only acceptable for opening alread existing databases.\n            // If onupgradeneeded is called it means database did not exist. Reject the open() promise and make sure that we\n            // do not create a new database by accident here.\n            req.onerror = preventDefault; // Prohibit onabort error from firing before we're done!\n            upgradeTransaction.abort(); // Abort transaction (would hope that this would make DB disappear but it doesnt.)\n            // Close database and delete it.\n            req.result.close();\n            const delreq = indexedDB.deleteDatabase(dbName); // The upgrade transaction is atomic, and javascript is single threaded - meaning that there is no risk that we delete someone elses database here!\n            delreq.onsuccess = delreq.onerror = wrap(() => {\n                reject (new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n            });\n        } else {\n            upgradeTransaction.onerror = eventRejectHandler(reject);\n            const oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion; // Safari 8 fix.\n            wasCreated = oldVer < 1;\n            db.idbdb = req.result;\n            if (schemaPatchMode) {\n              patchCurrentVersion(db, upgradeTransaction);\n            }\n            runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n        }\n    }, reject);\n    \n    req.onsuccess = wrap (() => {\n        // Core opening procedure complete. Now let's just record some stuff.\n        upgradeTransaction = null;\n        const idbdb = db.idbdb = req.result;\n\n        const objectStoreNames = slice(idbdb.objectStoreNames);\n        if (objectStoreNames.length > 0) try {\n          const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n          if (state.autoSchema) readGlobalSchema(db, idbdb, tmpTrans);\n          else {\n              adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n              if (!verifyInstalledSchema(db, tmpTrans) && !schemaPatchMode) {\n                console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Dexie will add missing parts and increment native version number to workaround this.`);\n                idbdb.close();\n                nativeVerToOpen = idbdb.version + 1;\n                schemaPatchMode = true;\n                return resolve (tryOpenDB()); // Try again with new version (nativeVerToOpen\n              }\n          }\n          generateMiddlewareStacks(db, tmpTrans);\n        } catch (e) {\n          // Safari 8 may bail out if > 1 store names. However, this shouldnt be a showstopper. Issue #120.\n          // BUGBUG: It will bail out anyway as of Dexie 3.\n          // Should we support Safari 8 anymore? Believe all\n          // Dexie users use the shim for that platform anyway?!\n          // If removing Safari 8 support, go ahead and remove the safariMultiStoreFix() function\n          // as well as absurd upgrade version quirk for Safari.\n        }\n        \n        connections.push(db); // Used for emulating versionchange event on IE/Edge/Safari.\n        \n        idbdb.onversionchange = wrap(ev => {\n            state.vcFired = true; // detect implementations that not support versionchange (IE/Edge/Safari)\n            db.on(\"versionchange\").fire(ev);\n        });\n        \n        idbdb.onclose = wrap(ev => {\n            db.on(\"close\").fire(ev);\n        });\n\n        if (wasCreated) _onDatabaseCreated(db._deps, dbName);\n\n        resolve();\n\n    }, reject);\n  }).catch(err => {\n    switch (err?.name) {\n      case \"UnknownError\":\n        if (state.PR1398_maxLoop > 0) {\n          // Bug in Chrome after clearing site data\n          // https://github.com/dexie/Dexie.js/issues/543#issuecomment-1795736695\n          state.PR1398_maxLoop--;\n          console.warn('Dexie: Workaround for Chrome UnknownError on open()');\n          return tryOpenDB();\n        }\n        break;\n      case \"VersionError\":\n        if (nativeVerToOpen > 0) {\n          nativeVerToOpen = 0;\n          return tryOpenDB();\n        }\n        break;\n    }\n    return Promise.reject(err);\n  });\n  \n  // safari14Workaround = Workaround by jakearchibald for new nasty bug in safari 14.\n  return Promise.race([\n    openCanceller,\n    (typeof navigator === 'undefined' ? Promise.resolve() : safari14Workaround()).then(tryOpenDB)\n  ]).then(() => {\n      // Before finally resolving the dbReadyPromise and this promise,\n      // call and await all on('ready') subscribers:\n      // Dexie.vip() makes subscribers able to use the database while being opened.\n      // This is a must since these subscribers take part of the opening procedure.\n      throwIfCancelled();\n      state.onReadyBeingFired = [];\n      return Promise.resolve(vip(()=>db.on.ready.fire(db.vip))).then(function fireRemainders() {\n          if (state.onReadyBeingFired.length > 0) {\n              // In case additional subscribers to db.on('ready') were added during the time db.on.ready.fire was executed.\n              let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n              state.onReadyBeingFired = [];\n              return Promise.resolve(vip(()=>remainders(db.vip))).then(fireRemainders)\n          }\n      });\n  }).finally(()=>{\n      if (state.openCanceller === openCanceller) {\n        // Only modify state if not cancelled in the mean time.\n        state.onReadyBeingFired = null;\n        state.isBeingOpened = false;\n      }\n  }).catch(err => {\n      state.dbOpenError = err; // Record the error. It will be used to reject further promises of db operations.\n      try {\n        // Did we fail within onupgradeneeded? Make sure to abort the upgrade transaction so it doesnt commit.\n        upgradeTransaction && upgradeTransaction.abort();\n      } catch { }\n      if (openCanceller === state.openCanceller) {\n        // Still in the same open flow - The error reason was not due to external call to db.close().\n        // Make sure to call db.close() to finalize resources.\n        db._close(); // Closes and resets idbdb, removes connections, resets dbReadyPromise and openCanceller so that a later db.open() is fresh.\n      }\n      return rejection (err);\n  }).finally(()=>{\n    state.openComplete = true;\n    resolveDbReady(); // dbReadyPromise is resolved no matter if open() rejects or resolved. It's just to wake up waiters.\n  }).then(()=>{\n    if (wasCreated) {\n      // Propagate full range on primary keys and indexes on all tables now that the DB is ready and opened,\n      // and all upgraders and on('ready') subscribers have run.\n      const everything: ObservabilitySet = {};\n      db.tables.forEach(table => {\n        table.schema.indexes.forEach(idx => {\n          if (idx.name) everything[`idb://${db.name}/${table.name}/${idx.name}`] = new RangeSet(-Infinity, [[[]]]);\n        });\n        everything[`idb://${db.name}/${table.name}/`] = everything[`idb://${db.name}/${table.name}/:dels`] = new RangeSet(-Infinity, [[[]]]);\n      });\n      // Database was created. If another tab had it open when it was deleted and reopened, that tab must be updated now.\n      globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME).fire(everything);\n      // Wipe the cache and trigger optimistic queries:\n      signalSubscribersNow(everything, true);\n    }\n    // Resolve the db.open() with the db instance.\n    return db;\n  });\n}\n", "import { isArray } from '../functions/utils';\n\nexport function awaitIterator (iterator: Iterator<any>) {\n  var callNext = result => iterator.next(result),\n      doThrow = error => iterator.throw(error),\n      onSuccess = step(callNext),\n      onError = step(doThrow);\n\n  function step(getNext: (any)=>any) {\n      return (val?) => {\n          var next = getNext(val),\n              value = next.value;\n\n          return next.done ? value :\n              (!value || typeof value.then !== 'function' ?\n                  isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                  value.then(onSuccess, onError));\n      };\n  }\n\n  return step(callNext)();\n}\n", "import { TransactionMode } from '../../public/types/transaction-mode';\nimport { errnames, exceptions } from '../../errors';\nimport { flatten, isAsyncFunction } from '../../functions/utils';\nimport { Dexie } from './dexie';\nimport { Transaction } from '../transaction';\nimport { awaitIterator } from '../../helpers/yield-support';\nimport Promise, {\n  PSD,\n  NativePromise,\n  decrementExpectedAwaits,\n  rejection,\n  incrementExpectedAwaits\n} from '../../helpers/promise';\n\nexport function extractTransactionArgs(mode: TransactionMode, _tableArgs_, scopeFunc) {\n  // Let table arguments be all arguments between mode and last argument.\n  var i = arguments.length;\n  if (i < 2) throw new exceptions.InvalidArgument(\"Too few arguments\");\n  // Prevent optimzation killer (https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments)\n  // and clone arguments except the first one into local var 'args'.\n  var args = new Array(i - 1);\n  while (--i) args[i - 1] = arguments[i];\n  // Let scopeFunc be the last argument and pop it so that args now only contain the table arguments.\n  scopeFunc = args.pop();\n  var tables = flatten(args); // Support using array as middle argument, or a mix of arrays and non-arrays.\n  return [mode, tables, scopeFunc];\n}\n\nexport function enterTransactionScope(\n  db: Dexie,\n  mode: IDBTransactionMode,\n  storeNames: string[],\n  parentTransaction: Transaction | undefined,\n  scopeFunc: ()=>PromiseLike<any> | any\n) {\n  return Promise.resolve().then(() => {\n    // Keep a pointer to last non-transactional PSD to use if someone calls Dexie.ignoreTransaction().\n    const transless = PSD.transless || PSD;\n    // Our transaction.\n    //return new Promise((resolve, reject) => {\n    const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n    trans.explicit = true;\n    // Let the transaction instance be part of a Promise-specific data (PSD) value.\n    const zoneProps = {\n      trans: trans,\n      transless: transless\n    };\n\n    if (parentTransaction) {\n      // Emulate transaction commit awareness for inner transaction (must 'commit' when the inner transaction has no more operations ongoing)\n      trans.idbtrans = parentTransaction.idbtrans;\n    } else {\n      try {\n        trans.create(); // Create the native transaction so that complete() or error() will trigger even if no operation is made upon it.\n        // @ts-ignore Mark the idbtrans object with \"_explicit\". DBCore middleware won't have access to Dexie trans but will need to have this info.\n        trans.idbtrans._explicit = true;\n        db._state.PR1398_maxLoop = 3;\n      } catch (ex) {\n        if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n          console.warn('Dexie: Need to reopen db');\n          db.close({disableAutoOpen: false});\n          return db.open().then(() => enterTransactionScope(\n            db,\n            mode,\n            storeNames,\n            null,\n            scopeFunc\n          ));\n        }\n        return rejection(ex);\n      }\n    }\n\n    // Support for native async await.\n    const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n    if (scopeFuncIsAsync) {\n      incrementExpectedAwaits();\n    }\n\n    let returnValue;\n    const promiseFollowed = Promise.follow(() => {\n      // Finally, call the scope function with our table and transaction arguments.\n      returnValue = scopeFunc.call(trans, trans);\n      if (returnValue) {\n        if (scopeFuncIsAsync) {\n          // scopeFunc is a native async function - we know for sure returnValue is native promise.\n          var decrementor = decrementExpectedAwaits.bind(null, null);\n          returnValue.then(decrementor, decrementor);\n        } else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n          // scopeFunc returned an iterator with throw-support. Handle yield as await.\n          returnValue = awaitIterator(returnValue);\n        }\n      }\n    }, zoneProps);\n    return (returnValue && typeof returnValue.then === 'function' ?\n      // Promise returned. User uses promise-style transactions.\n      Promise.resolve(returnValue).then(x => trans.active ?\n        x // Transaction still active. Continue.\n        : rejection(new exceptions.PrematureCommit(\n          \"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n      // No promise returned. Wait for all outstanding promises before continuing. \n      : promiseFollowed.then(() => returnValue)\n    ).then(x => {\n      // sub transactions don't react to idbtrans.oncomplete. We must trigger a completion:\n      if (parentTransaction) trans._resolve();\n      // wait for trans._completion\n      // (if root transaction, this means 'complete' event. If sub-transaction, we've just fired it ourselves)\n      return trans._completion.then(() => x);\n    }).catch(e => {\n      trans._reject(e); // Yes, above then-handler were maybe not called because of an unhandled rejection in scopeFunc!\n      return rejection(e);\n    });\n  });\n}\n", "import {\n  DBCore,\n  DBCoreIndex,\n  DBCoreKeyRange,\n  DBCoreQueryRequest,\n  DBCoreRangeType,\n  DBCoreOpenCursorRequest,\n  DBCoreCountRequest,\n  DBCoreCursor,\n  DBCoreTable,\n} from \"../public/types/dbcore\";\nimport { isArray } from '../functions/utils';\nimport { getKeyExtractor } from './get-key-extractor';\nimport { getKeyPathAlias } from './dbcore-indexeddb';\nimport { Middleware } from '../public/types/middleware';\n\ninterface VirtualIndex extends DBCoreIndex {\n  /** True if this index is virtual, i.e. represents a compound index internally,\n   * but makes it act as as having a subset of its keyPaths.\n   */\n  isVirtual: boolean;\n\n  /** Number of keypaths that this index comprises. Can be 0..N.\n   * Note: This is the length of the *virtual index*, not the real index.\n   */\n  keyLength: number;\n\n  /** Number of popped keypaths from the real index.\n   */\n  keyTail: number;\n\n  /** LowLevelIndex represents the actual IndexedDB index behind it */\n  lowLevelIndex: DBCoreIndex;\n}\n\n// Move into some util:\nexport function pad (a: any | any[], value: any, count: number) {\n  const result = isArray(a) ? a.slice() : [a];\n  for (let i=0; i<count; ++i) result.push(value);\n  return result;\n}\n\n\nexport function createVirtualIndexMiddleware (down: DBCore) : DBCore {\n  return {\n    ...down,\n    table(tableName: string) {\n      const table = down.table(tableName);\n      const {schema} = table;\n      const indexLookup: {[indexAlias: string]: VirtualIndex[]} = {};\n      const allVirtualIndexes: VirtualIndex[] = [];\n\n      function addVirtualIndexes (keyPath: null | string | string[], keyTail: number, lowLevelIndex: DBCoreIndex): VirtualIndex {\n        const keyPathAlias = getKeyPathAlias(keyPath);\n        const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n        const keyLength = keyPath == null ? 0: typeof keyPath === 'string' ? 1 : keyPath.length;\n        const isVirtual = keyTail > 0;\n        const virtualIndex = {\n          ...lowLevelIndex,\n          name: isVirtual\n            ? `${keyPathAlias}(virtual-from:${lowLevelIndex.name})`\n            : lowLevelIndex.name,\n          lowLevelIndex,\n          isVirtual,\n          keyTail,\n          keyLength,\n          extractKey: getKeyExtractor(keyPath),\n          unique: !isVirtual && lowLevelIndex.unique\n        };\n        indexList.push(virtualIndex);\n        if (!virtualIndex.isPrimaryKey) {\n          allVirtualIndexes.push(virtualIndex);\n        }\n        if (keyLength > 1) {\n          const virtualKeyPath = keyLength === 2 ?\n            keyPath[0] : // This is a compound [a, b]. Add a virtual normal index a.\n            keyPath.slice(0, keyLength - 1); // This is compound [a,b,c]. Add virtual compound [a,b].\n          addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n        }\n        indexList.sort((a,b) => a.keyTail - b.keyTail); // Shortest keyTail is the best one (represents real index)\n        return virtualIndex;\n      }\n    \n      const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n      indexLookup[\":id\"] = [primaryKey];\n      for (const index of schema.indexes) {\n        addVirtualIndexes(index.keyPath, 0, index);\n      }\n    \n      function findBestIndex(keyPath: null | string | string[]): VirtualIndex {\n        const result = indexLookup[getKeyPathAlias(keyPath)];\n        return result && result[0];\n      }\n    \n      function translateRange (range: DBCoreKeyRange, keyTail: number): DBCoreKeyRange {\n        return {\n          type: range.type === DBCoreRangeType.Equal ?\n            DBCoreRangeType.Range :\n            range.type,\n          lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n          lowerOpen: true, // doesn't matter true or false\n          upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n          upperOpen: true // doesn't matter true or false\n        };\n      }\n    \n      function translateRequest (req: DBCoreQueryRequest): DBCoreQueryRequest;\n      function translateRequest (req: DBCoreOpenCursorRequest): DBCoreOpenCursorRequest;\n      function translateRequest (req: DBCoreCountRequest): DBCoreCountRequest {\n        const index = req.query.index as VirtualIndex;\n        return index.isVirtual ? {\n          ...req,\n          query: {\n            index: index.lowLevelIndex,\n            range: translateRange(req.query.range, index.keyTail)\n          }\n        } : req;\n      }\n    \n      const result: DBCoreTable = {\n        ...table,\n        schema: {\n          ...schema,\n          primaryKey,\n          indexes: allVirtualIndexes,\n          getIndexByKeyPath: findBestIndex\n        },\n\n        count(req) {\n          return table.count(translateRequest(req));\n        },    \n    \n        query(req) {\n          return table.query(translateRequest(req));\n        },\n    \n        openCursor(req) {\n          const {keyTail, isVirtual, keyLength} = (req.query.index as VirtualIndex);\n          if (!isVirtual) return table.openCursor(req);\n    \n          function createVirtualCursor(cursor: DBCoreCursor) : DBCoreCursor {\n            function _continue (key?: any) {\n              key != null ?\n                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                req.unique ?\n                  cursor.continue(\n                    cursor.key.slice(0, keyLength)\n                      .concat(req.reverse\n                        ? down.MIN_KEY\n                        : down.MAX_KEY, keyTail)\n                  ) :\n                  cursor.continue()\n            }\n            const virtualCursor = Object.create(cursor, {\n              continue: {value: _continue},\n              continuePrimaryKey: {\n                value(key: any, primaryKey: any) {\n                  cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                }\n              },\n              primaryKey: {\n                get() {\n                  return cursor.primaryKey;\n                }\n              },\n              key: {\n                get() {\n                  const key = cursor.key as any[]; // A virtual cursor always operates on compound key\n                  return keyLength === 1 ?\n                    key[0] : // Cursor.key should not be an array.\n                    key.slice(0, keyLength); // Cursor.key should be first part of array.\n                }\n              },\n              value: {\n                get() {\n                  return cursor.value;\n                }\n              }\n            });\n            return virtualCursor;\n          }\n    \n          return table.openCursor(translateRequest(req))\n            .then(cursor => cursor && createVirtualCursor(cursor));\n        }\n      };\n      return result;\n    }\n  }\n}\n\nexport const virtualIndexMiddleware : Middleware<DBCore> = {\n  stack: \"dbcore\",\n  name: \"VirtualIndexMiddleware\",\n  level: 1,\n  create: createVirtualIndexMiddleware\n};\n\n", "import { keys, hasOwn, toStringTag } from './utils';\n\nexport function getObjectDiff(a: any, b: any, rv?: any, prfx?: string) {\n  // Compares objects a and b and produces a diff object.\n  rv = rv || {};\n  prfx = prfx || '';\n  keys(a).forEach((prop) => {\n    if (!hasOwn(b, prop)) {\n      // Property removed\n      rv[prfx + prop] = undefined;\n    } else {\n      var ap = a[prop],\n        bp = b[prop];\n      if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n        const apTypeName = toStringTag(ap);\n        const bpTypeName = toStringTag(bp);\n\n        if (apTypeName !== bpTypeName) {\n          rv[prfx + prop] = b[prop]; // Property changed to other type\n        } else if (apTypeName === 'Object') {\n          // Pojo objects (not Date, ArrayBuffer, Array etc). Go deep.\n          getObjectDiff(ap, bp, rv, prfx + prop + '.');\n        } else if (ap !== bp) {\n          // Values differ.\n          // Could have checked if Date, arrays or binary types have same\n          // content here but I think that would be a suboptimation.\n          // Prefer simplicity.\n          rv[prfx + prop] = b[prop];\n        }\n      } else if (ap !== bp) rv[prfx + prop] = b[prop]; // Primitive value changed\n    }\n  });\n  keys(b).forEach((prop) => {\n    if (!hasOwn(a, prop)) {\n      rv[prfx + prop] = b[prop]; // Property added\n    }\n  });\n  return rv;\n}\n", "import {\n  DBCoreAddRequest,\n  DBCorePutRequest,\n  DBCoreDeleteRequest,\n  DBCoreIndex,\n  DBCoreTable,\n} from \"../public/types/dbcore\";\n\nexport function getEffectiveKeys (\n  primaryKey: DBCoreIndex,\n  req: (Pick<DBCoreAddRequest | DBCorePutRequest, \"type\" | \"values\"> & {keys?: any[]}) | Pick<DBCoreDeleteRequest, \"keys\" | \"type\">)\n{\n  //const {outbound} = primaryKey;\n  if (req.type === 'delete') return req.keys;\n  return req.keys || req.values.map(primaryKey.extractKey)\n}\n", "import {\n  DBCore,\n  DBCoreTable,\n  DBCoreMutateResponse,\n  DBCoreDeleteRangeRequest,\n  DBCoreAddRequest,\n  DBCorePutRequest,\n  DBCoreDeleteRequest,\n  DBCoreTransaction,\n  DBCoreKeyRange\n} from \"../public/types/dbcore\";\nimport { nop } from '../functions/chaining-functions';\nimport { hasOwn, setByKeyPath } from '../functions/utils';\nimport { getObjectDiff } from \"../functions/get-object-diff\";\nimport { PSD } from '../helpers/promise';\n//import { LockableTableMiddleware } from '../dbcore/lockable-table-middleware';\nimport { getEffectiveKeys } from '../dbcore/get-effective-keys';\nimport { Middleware } from '../public/types/middleware';\nimport { Transaction } from '../classes/transaction';\n\nexport const hooksMiddleware: Middleware<DBCore>  = {\n  stack: \"dbcore\",\n  name: \"HooksMiddleware\",\n  level: 2,\n  create: (downCore: DBCore) => ({\n    ...downCore,\n    table(tableName: string) {\n      const downTable = downCore.table(tableName);\n      const {primaryKey} = downTable.schema;\n  \n      const tableMiddleware: DBCoreTable = {\n        ...downTable,\n        mutate(req):Promise<DBCoreMutateResponse> {\n          const dxTrans = PSD.trans as Transaction;\n          // Hooks can be transaction-bound. Need to grab them from transaction.table and not\n          // db.table!\n          const {deleting, creating, updating} = dxTrans.table(tableName).hook;\n          switch (req.type) {\n            case 'add':\n              if (creating.fire === nop) break;\n              return dxTrans._promise('readwrite', ()=>addPutOrDelete(req), true);\n            case 'put':\n              if (creating.fire === nop && updating.fire === nop) break;\n              return dxTrans._promise('readwrite', ()=>addPutOrDelete(req), true);\n            case 'delete':\n              if (deleting.fire === nop) break;\n              return dxTrans._promise('readwrite', ()=>addPutOrDelete(req), true);\n            case 'deleteRange':\n              if (deleting.fire === nop) break;\n              return dxTrans._promise('readwrite', ()=>deleteRange(req), true);\n          }\n          // Any of the breaks above happened (no hooks) - do the default:\n          return downTable.mutate(req);\n\n\n          function addPutOrDelete(req: DBCoreAddRequest | DBCorePutRequest | DBCoreDeleteRequest): Promise<DBCoreMutateResponse> {\n            const dxTrans = PSD.trans;\n            const keys = req.keys || getEffectiveKeys(primaryKey, req);\n            if (!keys) throw new Error(\"Keys missing\");\n            // Clone Request and set keys arg\n            req = req.type === 'add' || req.type === 'put' ?\n              {...req, keys} :\n              {...req};\n            if (req.type !== 'delete') req.values = [...req.values];\n            if (req.keys) req.keys = [...req.keys];\n  \n            return getExistingValues(downTable, req, keys).then (existingValues => {\n              const contexts = keys.map((key, i) => {\n                const existingValue = existingValues[i];\n                const ctx = { onerror: null, onsuccess: null };\n                if (req.type === 'delete') {\n                  // delete operation\n                  deleting.fire.call(ctx, key, existingValue, dxTrans);\n                } else if (req.type === 'add' || existingValue === undefined) {\n                  // The add() or put() resulted in a create\n                  const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                  if (key == null && generatedPrimaryKey != null) {\n                    key = generatedPrimaryKey;\n                    req.keys[i] = key;\n                    if (!primaryKey.outbound) {\n                      setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                    }\n                  }\n                } else {\n                  // The put() operation resulted in an update\n                  const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                  const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                  if (additionalChanges) {\n                    const requestedValue = req.values[i];\n                    Object.keys(additionalChanges).forEach(keyPath => {\n                      if (hasOwn(requestedValue, keyPath)) {\n                        // keyPath is already present as a literal property of the object\n                        requestedValue[keyPath] = additionalChanges[keyPath];\n                      } else {\n                        // keyPath represents a new or existing path into the object\n                        setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                      }\n                    });\n                  }\n                }\n                return ctx;\n              });\n              return downTable.mutate(req).then(({failures, results, numFailures, lastResult}) => {\n                for (let i=0; i<keys.length; ++i) {\n                  const primKey = results ? results[i] : keys[i];\n                  const ctx = contexts[i];\n                  if (primKey == null) {\n                    ctx.onerror && ctx.onerror(failures[i]);\n                  } else {\n                    ctx.onsuccess && ctx.onsuccess(\n                      req.type === 'put' && existingValues[i] ? // the put resulted in an update\n                        req.values[i] : // update hooks expects existing value\n                        primKey // create hooks expects primary key\n                    );\n                  }\n                }\n                return {failures, results, numFailures, lastResult};\n              }).catch(error => {\n                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                return Promise.reject(error);\n              });\n            });\n          }\n  \n          function deleteRange(req: DBCoreDeleteRangeRequest): Promise<DBCoreMutateResponse> {\n            return deleteNextChunk(req.trans, req.range, 10000);\n          }\n  \n          function deleteNextChunk(trans: DBCoreTransaction, range: DBCoreKeyRange, limit: number) {\n            // Query what keys in the DB within the given range\n            return downTable.query({trans, values: false, query: {index: primaryKey, range}, limit})\n            .then(({result}) => {\n              // Given a set of keys, bulk delete those using the same procedure as in addPutOrDelete().\n              // This will make sure that deleting hook is called.\n              return addPutOrDelete({type: 'delete', keys: result, trans}).then(res => {\n                if (res.numFailures > 0) return Promise.reject(res.failures[0]);\n                if (result.length < limit) {\n                  return {failures: [], numFailures: 0, lastResult: undefined} as DBCoreMutateResponse;\n                } else {\n                  return deleteNextChunk(trans, {...range, lower: result[result.length - 1], lowerOpen: true}, limit);\n                }\n              });\n            })\n          }\n        }\n      };\n      //const {lock, lockableMiddleware} = LockableTableMiddleware(tableMiddleware);\n\n      return tableMiddleware;\n    },\n  }) as DBCore\n};\n\nfunction getExistingValues(\n  table: DBCoreTable,\n  req: DBCoreAddRequest | DBCorePutRequest | DBCoreDeleteRequest,\n  effectiveKeys: any[]\n) {\n  return req.type === \"add\"\n    ? Promise.resolve([])\n    : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n", "import { deepClone } from \"../functions/utils\";\nimport { DBCore } from \"../public/types/dbcore\";\nimport { Middleware } from \"../public/types/middleware\";\nimport Promise from \"../helpers/promise\";\nimport { cmp } from '../functions/cmp';\n\nexport function getFromTransactionCache(\n  keys: readonly any[],\n  cache: { keys: any[]; values: any[] } | undefined | null,\n  clone?: boolean\n) {\n  try {\n    if (!cache) return null;\n    if (cache.keys.length < keys.length) return null;\n    const result: any[] = [];\n    // Compare if the exact same order of keys was retrieved in same transaction:\n    // Allow some cached keys to be omitted from provided set of keys\n    // Use case: 1. getMany(keys) 2. update a subset of those 3. call put with the updated ones ==> middlewares should be able to find old values\n    for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n      if (cmp(cache.keys[i], keys[j]) !== 0) continue;\n      result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n      ++j;\n    }\n    // If got all keys caller was looking for, return result.\n    return result.length === keys.length ? result : null;\n  } catch {\n    return null;\n  }\n}\n\nexport const cacheExistingValuesMiddleware: Middleware<DBCore> = {\n  stack: \"dbcore\",\n  level: -1,\n  create: (core) => {\n    return {\n      table: (tableName) => {\n        const table = core.table(tableName);\n        return {\n          ...table,\n          getMany: (req) => {\n            if (!req.cache) {\n              return table.getMany(req);\n            }\n            const cachedResult = getFromTransactionCache(\n              req.keys,\n              req.trans[\"_cache\"],\n              req.cache === \"clone\"\n            );\n            if (cachedResult) {\n              return Promise.resolve(cachedResult);\n            }\n            return table.getMany(req).then((res) => {\n              req.trans[\"_cache\"] = {\n                keys: req.keys,\n                values: req.cache === \"clone\" ? deepClone(res) : res,\n              };\n              return res;\n            });\n          },\n          mutate: (req) => {\n            // Invalidate cache on any mutate except \"add\" which can't change existing values:\n            if (req.type !== \"add\") req.trans[\"_cache\"] = null;\n            return table.mutate(req);\n          },\n        };\n      },\n    };\n  },\n};\n", "import { DBCore, DBCoreTable } from '../../public/types/dbcore';\nimport { LiveQueryContext } from '../live-query';\n\nexport function isCachableContext(ctx: LiveQueryContext, table: DBCoreTable) {\n  return (\n    ctx.trans.mode === 'readonly' &&\n    !!ctx.subscr &&\n    !ctx.trans.explicit &&\n    ctx.trans.db._options.cache !== 'disabled' &&\n    !table.schema.primaryKey.outbound\n  );\n}\n\n", "import { DBCoreCountRequest, DBCoreGetManyRequest, DBCoreGetRequest, DBCoreOpenCursorRequest, DBCoreQueryRequest } from '../../public/types/dbcore';\n\n\nexport function isCachableRequest(type: string, req: Partial<DBCoreQueryRequest & DBCoreCountRequest & DBCoreGetManyRequest & DBCoreGetRequest & DBCoreOpenCursorRequest>) {\n  switch (type) {\n    case 'query':\n      return req.values && !req.unique;\n    case 'get':\n      return false;\n    case 'getMany':\n      return false;\n    case 'count':\n      return false;\n    case 'openCursor':\n      return false;\n  }\n}\n", "import { LiveQueryContext } from \".\";\nimport { getFromTransactionCache } from \"../dbcore/cache-existing-values-middleware\";\nimport { getEffectiveKeys } from \"../dbcore/get-effective-keys\";\nimport { exceptions } from \"../errors\";\nimport { cmp } from \"../functions/cmp\";\nimport { isArray, keys } from \"../functions/utils\";\nimport { PSD } from \"../helpers/promise\";\nimport { RangeSet } from \"../helpers/rangeset\";\nimport { ObservabilitySet } from \"../public/types/db-events\";\nimport {\n  DBCore,\n  DBCoreCountRequest,\n  DBCoreCursor,\n  DBCoreGetManyRequest,\n  DBCoreGetRequest,\n  DBCoreIndex,\n  DBCoreOpenCursorRequest,\n  DBCoreQueryRequest,\n  DBCoreQueryResponse,\n  DBCoreTable,\n  DBCoreTableSchema,\n  DBCoreTransaction,\n} from \"../public/types/dbcore\";\nimport { Middleware } from \"../public/types/middleware\";\nimport { isCachableContext } from \"./cache/is-cachable-context\";\nimport { isCachableRequest } from \"./cache/is-cachable-request\";\nimport { extendObservabilitySet } from \"./extend-observability-set\";\n\nexport const observabilityMiddleware: Middleware<DBCore> = {\n  stack: \"dbcore\",\n  level: 0,\n  name: \"Observability\",\n  create: (core) => {\n    const dbName = core.schema.name;\n    const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n\n    return {\n      ...core,\n      transaction: (stores, mode, options) => {\n        if (PSD.subscr && mode !== 'readonly') {\n          throw new exceptions.ReadOnly(`Readwrite transaction in liveQuery context. Querier source: ${(PSD as LiveQueryContext).querier}`);\n        }\n        return core.transaction(stores, mode, options);\n      },\n      table: (tableName) => {\n        const table = core.table(tableName);\n        const { schema } = table;\n        const { primaryKey, indexes } = schema;\n        const { extractKey, outbound } = primaryKey;\n        const indexesWithAutoIncPK = primaryKey.autoIncrement && indexes.filter(\n          (index) => index.compound && (index.keyPath as string[]).includes(primaryKey.keyPath as string)\n        );\n        const tableClone: DBCoreTable = {\n          ...table,\n          mutate: (req) => {\n            const trans = req.trans as DBCoreTransaction & {\n              mutatedParts?: ObservabilitySet;\n            };\n            const mutatedParts = req.mutatedParts || (req.mutatedParts = {});\n            const getRangeSet = (indexName: string) => {\n              const part = `idb://${dbName}/${tableName}/${indexName}`;\n              return (mutatedParts[part] ||\n                (mutatedParts[part] = new RangeSet())) as RangeSet;\n            };\n            const pkRangeSet = getRangeSet(\"\");\n            const delsRangeSet = getRangeSet(\":dels\");\n\n            const { type } = req;\n            let [keys, newObjs] =\n              req.type === \"deleteRange\"\n                ? [req.range] // keys will be an DBCoreKeyRange object - transformed later on to a [from,to]-style range.\n                : req.type === \"delete\"\n                ? [req.keys] // keys known already here. newObjs will be undefined.\n                : req.values.length < 50\n                ? [getEffectiveKeys(primaryKey, req).filter(id => id), req.values] // keys except autoIncremented - they will be added later on.\n                : []; // keys and newObjs will both be undefined - changeSpec will become true (changed for entire table)\n\n            const oldCache = req.trans[\"_cache\"];\n\n            // Add the mutated table and optionally keys to the mutatedTables set on the transaction.\n            // Used by subscribers to txcommit event and for Collection.prototype.subscribe().\n            if (isArray(keys)) {\n              // keys is an array - delete, add or put of less than 50 rows.\n              // Individual keys (add put or delete)\n              pkRangeSet.addKeys(keys);\n              // Only get oldObjs if they have been cached recently\n              // (This applies to Collection.modify() only, but also if updating/deleting hooks have subscribers)\n              const oldObjs = type === 'delete' || keys.length === newObjs.length ? getFromTransactionCache(keys, oldCache) : null;\n\n              // Supply detailed values per index for both old and new objects:\n              if (!oldObjs) {\n                // add, delete or put and we don't know old values.\n                // Indicate this in the \":dels\" part, for the sake of count() and primaryKeys() queries only!\n                delsRangeSet.addKeys(keys);\n              }\n              if (oldObjs || newObjs) {\n                // No matter if knowning oldObjs or not, track the indices if it's a put, add or delete.\n                trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n              }\n            } else if (keys) {\n              // keys is a DBCoreKeyRange object. Transform it to [from,to]-style range.\n              // As we can't know deleted index ranges, mark index-based subscriptions must trigger.\n              // (above/below-style ranges are not supported in RangeSet.ts, so we must replace open ends\n              // with core.MIN_KEY and core.MAX_KEY respectively. This is what solves issue #2067!\n              const range = {\n                from: keys.lower ?? core.MIN_KEY,\n                to: keys.upper ?? core.MAX_KEY\n              };\n              delsRangeSet.add(range);\n              // deleteRange. keys is a DBCoreKeyRange objects. Transform it to [from,to]-style range.\n              pkRangeSet.add(range);\n            } else {\n              // Too many requests to record the details without slowing down write performance.\n              // Let's just record a generic large range on primary key, the virtual :dels index and\n              // all secondary indices:\n              pkRangeSet.add(FULL_RANGE);\n              delsRangeSet.add(FULL_RANGE);\n              schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n            }\n\n            return table.mutate(req).then((res) => {\n              // Merge the mutated parts from the request into the transaction's mutatedParts\n              // now when the request went fine.\n              if (keys && (req.type === 'add' || req.type === 'put')) {\n                // Less than 50 requests (keys truthy) (otherwise we've added full range anyway)\n                // autoincrement means we might not have got all keys until now\n                pkRangeSet.addKeys(res.results);\n                if (indexesWithAutoIncPK) {\n                  // Dexie Issue 1946:\n                  // If an auto-incremented primary key is part of a compound index,\n                  // we need to compute the resulting value of that index after inserting\n                  // the rows.\n                  indexesWithAutoIncPK.forEach(idx => {\n                    // Extract values of this compound index where primary key is not yet set:\n                    const idxVals = req.values.map(v => idx.extractKey(v));\n                    // Find the position of the primary key in the index:\n                    const pkPos = (idx.keyPath as string[]).findIndex(prop => prop === primaryKey.keyPath);\n                    // Update idxVals with the resulting primary keys to complete the index value:\n                    for (let i = 0, len = res.results!.length; i < len; ++i) {\n                      idxVals[i][pkPos] = res.results![i];\n                    }\n                    // Add the updated index to the rangeset:\n                    getRangeSet(idx.name).addKeys(idxVals);\n                  });\n                }\n              }\n              trans.mutatedParts = extendObservabilitySet (\n                trans.mutatedParts || {},\n                mutatedParts\n              );\n              return res;\n            });\n          },\n        };\n\n        const getRange: (req: any) => [DBCoreIndex, RangeSet] = ({\n          query: { index, range },\n        }:\n          | DBCoreQueryRequest\n          | DBCoreCountRequest\n          | DBCoreOpenCursorRequest) => [\n          index,\n          new RangeSet(range.lower ?? core.MIN_KEY, range.upper ?? core.MAX_KEY),\n        ];\n\n        const readSubscribers: {[method in\n          Exclude<keyof DBCoreTable, \"name\" | \"schema\" | \"mutate\">]: \n          (req: any) => [DBCoreIndex, RangeSet]\n        } = {\n          get: (req) => [primaryKey, new RangeSet(req.key)],\n          getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n          count: getRange,\n          query: getRange,\n          openCursor: getRange,\n        }\n\n        keys(readSubscribers).forEach((method: 'get' | 'getMany' | 'count' | 'query' | 'openCursor') => {\n          tableClone[method] = function (\n            req:\n              | DBCoreGetRequest\n              | DBCoreGetManyRequest\n              | DBCoreQueryRequest\n              | DBCoreCountRequest\n              | DBCoreOpenCursorRequest\n          ) {\n            const { subscr } = PSD as LiveQueryContext;\n            const isLiveQuery = !!subscr;\n            let cachable = isCachableContext(PSD as LiveQueryContext, table) && isCachableRequest(method, req);\n            const obsSet = cachable\n              ? req.obsSet = {} // Implicit read transaction - track changes for this query only for the request's duration\n              : subscr; // Explicit read transaction - track changes across entire live query\n\n            if (isLiveQuery) {\n              // Current zone want's to track all queries so they can be subscribed to.\n              // (The query is executed within a \"liveQuery\" zone)\n              // Check whether the query applies to a certain set of ranges:\n              // Track what we should be observing:\n              const getRangeSet = (indexName: string) => {\n                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                return (obsSet[part] ||\n                  (obsSet[part] = new RangeSet())) as RangeSet;\n              };\n              const pkRangeSet = getRangeSet(\"\");\n              const delsRangeSet = getRangeSet(\":dels\");\n              const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n              // A generic rule here: queried ranges should always be subscribed to.\n              if (method === 'query' && queriedIndex.isPrimaryKey && !(req as DBCoreQueryRequest).values) {\n                // A pure primay-key based Collection where only .primaryKeys() is requested. Don't wakeup on other changes than added or deleted primary keys within queried range.\n                delsRangeSet.add(queriedRanges);\n              } else {\n                getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n              }\n              if (!queriedIndex.isPrimaryKey) {\n                // Only count(), query() and openCursor() operates on secondary indices.\n                // Since put(), delete() and deleteRange() mutations may happen without knowing oldObjs,\n                // the mutate() method will be missing what secondary indices that are being deleted from\n                // the subscribed range. We are working around this issue by recording all the resulting\n                // primary keys from the queries. This only works for those kinds of queries where we can\n                // derive the primary key from the result.\n                // In this block we are accomplishing this using various strategies depending on the properties\n                // of the query result.\n\n                if (method === \"count\") {\n                  // We've got a problem! Delete and put mutations happen without known the oldObjs.\n                  // Those mutation could change the count.\n                  // Solution: Dedicated \":dels\" url represends a subscription to all mutations without oldObjs\n                  // (specially triggered in the mutators put(), delete() and deleteRange() when they don't know oldObject)\n                  delsRangeSet.add(FULL_RANGE);\n                } else {\n                  // openCursor() or query()\n\n                  // Prepare a keysPromise in case the we're doing an IDBIndex.getAll() on a store with outbound keys.\n                  const keysPromise =\n                    method === \"query\" &&\n                    outbound &&\n                    (req as DBCoreQueryRequest).values &&\n                    table.query({\n                      ...(req as DBCoreQueryRequest),\n                      values: false,\n                    });\n\n                  return table[method].apply(this, arguments).then((res) => {\n                    if (method === \"query\") {\n                      if (outbound && (req as DBCoreQueryRequest).values) {\n                        // If keys are outbound, we can't use extractKey to map what keys to observe.\n                        // We've queried an index (like 'dateTime') on an outbound table\n                        // and retrieve a list of objects\n                        // from who we cannot know their primary keys.\n                        // \"Luckily\" though, we've prepared the keysPromise to assist us in exact this condition.\n                        return keysPromise.then(\n                          ({ result: resultingKeys }: DBCoreQueryResponse) => {\n                            pkRangeSet.addKeys(resultingKeys);\n                            return res;\n                          }\n                        );\n                      }\n                      // query() inbound values, keys or outbound keys. Secondary indexes only since\n                      // for primary keys we would only add results within the already registered range.\n                      const pKeys = (req as DBCoreQueryRequest).values\n                        ? (res as DBCoreQueryResponse).result.map(extractKey)\n                        : (res as DBCoreQueryResponse).result;\n                      if ((req as DBCoreQueryRequest).values) {\n                        // Subscribe to any mutation made on the returned keys,\n                        // so that we detect both deletions and updated properties.\n                        pkRangeSet.addKeys(pKeys);\n                      } else {\n                        // Subscribe only to mutations on the returned keys\n                        // in case the mutator was unable to know oldObjs.\n                        // If it has oldObj, the mutator won't put anything in \":dels\" because\n                        // it can more fine-grained put the exact removed and added index value in the correct\n                        // index range that we subscribe to in the queried range sets.\n                        // We don't load values so a change on a property outside our index will not\n                        // require us to re-execute the query.\n                        delsRangeSet.addKeys(pKeys);\n                      }\n                    } else if (method === \"openCursor\") {\n                      // Caller requests a cursor.\n                      // For the same reason as when method===\"query\", we only need to observe\n                      // those keys whose values are possibly used or rendered - which could\n                      // only happen on keys where they get the cursor's key, primaryKey or value.\n                      const cursor: DBCoreCursor | null = res;\n                      const wantValues = (req as DBCoreOpenCursorRequest).values;\n                      return (\n                        cursor &&\n                        Object.create(cursor, {\n                          key: {\n                            get() {\n                              delsRangeSet.addKey(cursor.primaryKey);\n                              return cursor.key;\n                            },\n                          },\n                          primaryKey: {\n                            get() {\n                              const pkey = cursor.primaryKey;\n                              delsRangeSet.addKey(pkey);\n                              return pkey;\n                            },\n                          },\n                          value: {\n                            get() {\n                              wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                              return cursor.value;\n                            },\n                          },\n                        })\n                      );\n                    }\n                    return res;\n                  });\n                }\n              }\n            }\n            return table[method].apply(this, arguments);\n          };\n        });\n        return tableClone;\n      },\n    };\n  },\n};\n\nfunction trackAffectedIndexes(\n  getRangeSet: (index: string) => RangeSet,\n  schema: DBCoreTableSchema,\n  oldObjs: readonly any[] | undefined,\n  newObjs: readonly any[] | undefined\n) {\n  function addAffectedIndex(ix: DBCoreIndex) {\n    const rangeSet = getRangeSet(ix.name || \"\");\n    function extractKey(obj: any) {\n      return obj != null ? ix.extractKey(obj) : null;\n    }\n    const addKeyOrKeys = (key: any) => ix.multiEntry && isArray(key)\n      // multiEntry and the old property was an array - add each array entry to the rangeSet:\n      ? key.forEach(key => rangeSet.addKey(key))\n      // Not multiEntry or the old property was not an array - add each array entry to the rangeSet:\n      : rangeSet.addKey(key);\n\n    (oldObjs || newObjs).forEach((_, i) => {\n      const oldKey = oldObjs && extractKey(oldObjs[i]);\n      const newKey = newObjs && extractKey(newObjs[i]);\n      if (cmp(oldKey, newKey) !== 0) {\n        // The index has changed. Add both old and new value of the index.\n        if (oldKey != null) addKeyOrKeys(oldKey); // If oldKey is invalid key, addKey() will be a noop.\n        if (newKey != null) addKeyOrKeys(newKey); // If newKey is invalid key, addKey() will be a noop.\n      }\n    });\n  }\n  schema.indexes.forEach(addAffectedIndex);\n}\n", "import { delArrayItem, isArray } from '../../functions/utils';\nimport { TblQueryCache } from '../../public/types/cache';\nimport {\n  DBCoreMutateRequest,\n  DBCoreMutateResponse,\n} from '../../public/types/dbcore';\n\nexport function adjustOptimisticFromFailures(\n  tblCache: TblQueryCache,\n  req: DBCoreMutateRequest,\n  res: DBCoreMutateResponse\n): DBCoreMutateRequest {\n  if (res.numFailures === 0) return req;\n  if (req.type === 'deleteRange') {\n    // numFailures > 0 means the deleteRange operation failed in its whole.\n    return null;\n  }\n\n  const numBulkOps = req.keys\n    ? req.keys.length\n    : 'values' in req && req.values\n    ? req.values.length\n    : 1;\n  if (res.numFailures === numBulkOps) {\n    // Same number of failures as the number of ops. This means that all ops failed.\n    return null;\n  }\n\n  const clone: DBCoreMutateRequest = { ...req };\n\n  if (isArray(clone.keys)) {\n    clone.keys = clone.keys.filter((_, i) => !(i in res.failures));\n  }\n  if ('values' in clone && isArray(clone.values)) {\n    clone.values = clone.values.filter((_, i) => !(i in res.failures));\n  }\n  return clone;\n}\n", "import { cmp } from '../../functions/cmp';\nimport { IndexableType } from '../../public';\nimport { DBCoreKeyRange } from '../../public/types/dbcore';\n\nexport function isAboveLower(key: IndexableType, range: DBCoreKeyRange) {\n  return range.lower === undefined\n    ? true // lower is less than anything because it is undefined\n    : range.lowerOpen\n    ? cmp(key, range.lower) > 0 // lowerOpen: Exclude lower bound\n    : cmp(key, range.lower) >= 0; // !lowerOpen: Include lower bound\n}\n\nexport function isBelowUpper(key: IndexableType, range: DBCoreKeyRange) {\n  return range.upper === undefined\n    ? true // upper is greater than anything because it is undefined\n    : range.upperOpen\n    ? cmp(key, range.upper) < 0 // upperOpen: Exclude upper bound\n    : cmp(key, range.upper) <= 0; // !upperOpen: Include upper bound\n}\n\nexport function isWithinRange(key: IndexableType, range: DBCoreKeyRange) {\n  return isAboveLower(key, range) && isBelowUpper(key, range);\n}\n", "import { cmp } from '../../functions/cmp';\nimport { isArray } from '../../functions/utils';\nimport { RangeSet } from '../../helpers/rangeset';\nimport { CacheEntry } from '../../public/types/cache';\nimport {\n  DBCoreMutateRequest,\n  DBCoreQueryRequest,\n  DBCoreTable,\n} from '../../public/types/dbcore';\nimport { isWithinRange } from './is-within-range';\n\nexport function applyOptimisticOps(\n  result: any[],\n  req: DBCoreQueryRequest,\n  ops: DBCoreMutateRequest[] | undefined,\n  table: DBCoreTable,\n  cacheEntry: CacheEntry,\n  immutable: boolean\n): any[] {\n  if (!ops || ops.length === 0) return result;\n  const index = req.query.index;\n  const { multiEntry } = index;\n  const queryRange = req.query.range;\n  const primaryKey = table.schema.primaryKey;\n  const extractPrimKey = primaryKey.extractKey!;\n  const extractIndex = index.extractKey!;\n  const extractLowLevelIndex = (index.lowLevelIndex || index).extractKey!;\n\n  let finalResult = ops.reduce((result, op) => {\n    let modifedResult = result;\n    const includedValues: any[] = [];\n    if (op.type === 'add' || op.type === 'put') {\n      const includedPKs = new RangeSet(); // For ignoring duplicates\n      for (let i = op.values.length - 1; i >= 0; --i) {\n        // backwards to prioritize last value of same PK\n        const value = op.values[i];\n        const pk = extractPrimKey(value);\n        if (includedPKs.hasKey(pk)) continue;\n        const key = extractIndex(value);\n        if (\n          multiEntry && isArray(key)\n            ? key.some((k) => isWithinRange(k, queryRange))\n            : isWithinRange(key, queryRange)\n        ) {\n          includedPKs.addKey(pk);\n          includedValues.push(value);\n        }\n      }\n    }\n    switch (op.type) {\n      case 'add': {\n        const existingKeys = new RangeSet().addKeys(\n          req.values ? result.map((v) => extractPrimKey(v)) : result\n        );\n\n        modifedResult = result.concat(\n          req.values\n            ? includedValues.filter((v) => {\n                const key = extractPrimKey(v);\n                if (existingKeys.hasKey(key)) return false;\n                existingKeys.addKey(key);\n                return true;\n              })\n            : includedValues\n                .map((v) => extractPrimKey(v))\n                .filter((k) => {\n                  if (existingKeys.hasKey(k)) return false;\n                  existingKeys.addKey(k);\n                  return true;\n                })\n        );\n        break;\n      }\n      case 'put': {\n        const keySet = new RangeSet().addKeys(\n          op.values.map((v) => extractPrimKey(v))\n        );\n        modifedResult = result\n          .filter(\n            // Remove all items that are being replaced\n            (item) => !keySet.hasKey(req.values ? extractPrimKey(item) : item)\n          )\n          .concat(\n            // Add all items that are being put (sorting will be done later)\n            req.values\n              ? includedValues\n              : includedValues.map((v) => extractPrimKey(v))\n          );\n        break;\n      }\n      case 'delete':\n        const keysToDelete = new RangeSet().addKeys(op.keys);\n        modifedResult = result.filter(\n          (item) =>\n            !keysToDelete.hasKey(req.values ? extractPrimKey(item) : item)\n        );\n\n        break;\n      case 'deleteRange':\n        const range = op.range;\n        modifedResult = result.filter(\n          (item) => !isWithinRange(extractPrimKey(item), range)\n        );\n        break;\n    }\n    return modifedResult;\n  }, result);\n\n  // If no changes were made, we can return the original result.\n  if (finalResult === result) return result;\n\n  // Sort the result on sortIndex:\n  finalResult.sort((a, b) =>\n    cmp(extractLowLevelIndex(a), extractLowLevelIndex(b)) ||\n    cmp(extractPrimKey(a), extractPrimKey(b))\n  );\n\n  // If we have a limit we need to respect it:\n  if (req.limit && req.limit < Infinity) {\n    if (finalResult.length > req.limit) {\n      finalResult.length = req.limit; // Cut of any extras after sorting correctly.\n    } else if (result.length === req.limit && finalResult.length < req.limit) {\n      // We're missing some items because of the limit. We need to add them back.\n      // The easiest way is to mark the cache entry as dirty, which will cause\n      // it to be requeried after the write-transaction successfully completes.\n      cacheEntry.dirty = true;\n    }\n  }\n  return immutable ? Object.freeze(finalResult) as any[] : finalResult;\n}\n", "import { cmp } from '../../functions/cmp';\nimport { DBCoreKeyRange } from '../../public/types/dbcore';\n\nexport function areRangesEqual(r1: DBCoreKeyRange, r2: DBCoreKeyRange) {\n  return (\n    cmp(r1.lower, r2.lower) === 0 &&\n    cmp(r1.upper, r2.upper) === 0 &&\n    !!r1.lowerOpen === !!r2.lowerOpen &&\n    !!r1.upperOpen === !!r2.upperOpen\n  );\n}\n", "import { cmp } from '../../functions/cmp';\nimport { DBCoreKeyRange } from '../../public/types/dbcore';\n\nexport function compareLowers(lower1: any, lower2: any, lowerOpen1: boolean, lowerOpen2: boolean) {\n  if (lower1 === undefined) return lower2 !== undefined ? -1 : 0;\n  if (lower2 === undefined) return 1; // since lower1 !== undefined\n  const c = cmp(lower1, lower2);\n  if (c === 0) {\n    if (lowerOpen1 && lowerOpen2) return 0;\n    if (lowerOpen1) return 1\n    if (lowerOpen2) return -1;\n  }\n  return c;\n}\n\nexport function compareUppers(upper1: any, upper2: any, upperOpen1: boolean, upperOpen2: boolean) {\n  if (upper1 === undefined) return upper2 !== undefined ? 1 : 0;\n  if (upper2 === undefined) return -1; // since upper1 !== undefined\n  const c = cmp(upper1, upper2);\n  if (c === 0) {\n    if (upperOpen1 && upperOpen2) return 0;\n    if (upperOpen1) return -1\n    if (upperOpen2) return 1;\n  }\n  return c;\n}\n\nexport function isSuperRange(r1: DBCoreKeyRange, r2: DBCoreKeyRange) {\n  return (\n    compareLowers(r1.lower, r2.lower, r1.lowerOpen, r2.lowerOpen) <= 0 &&\n    compareUppers(r1.upper, r2.upper, r1.upperOpen, r2.upperOpen) >= 0\n  );\n}", "import { CacheEntry, TblQueryCache } from '../../public/types/cache';\nimport {\n  DBCoreCountRequest,\n  DBCoreQueryRequest,\n} from '../../public/types/dbcore';\nimport { areRangesEqual } from './are-ranges-equal';\nimport { cache } from './cache';\nimport { isSuperRange } from './is-super-range';\n\nexport function findCompatibleQuery(\n  dbName: string,\n  tableName: string,\n  type: 'query',\n  req: DBCoreQueryRequest\n): [] | [CacheEntry, boolean, TblQueryCache, CacheEntry[]];\nexport function findCompatibleQuery(\n  dbName: string,\n  tableName: string,\n  type: 'count',\n  req: DBCoreCountRequest\n): [] | [CacheEntry, boolean, TblQueryCache, CacheEntry[]];\nexport function findCompatibleQuery(\n  dbName: string,\n  tableName: string,\n  type: 'query' | 'count',\n  req: Partial<DBCoreQueryRequest> & Partial<DBCoreCountRequest>\n): [] | [CacheEntry, boolean, TblQueryCache, CacheEntry[]] {\n  const tblCache = cache[`idb://${dbName}/${tableName}`];\n  if (!tblCache) return [];\n  const queries = tblCache.queries[type];\n  if (!queries) return [null, false, tblCache, null];\n  const indexName = req.query ? req.query.index.name : null;\n  const entries = queries[indexName || ''];\n  if (!entries) return [null, false, tblCache, null];\n\n  switch (type) {\n    case 'query':\n      const equalEntry = entries.find(\n        (entry) =>\n          (entry.req as DBCoreQueryRequest).limit === req.limit &&\n          (entry.req as DBCoreQueryRequest).values === req.values &&\n          areRangesEqual(entry.req.query.range, req.query.range)\n      );\n      if (equalEntry)\n        return [\n          equalEntry,\n          true, // exact match\n          tblCache,\n          entries,\n        ];\n      const superEntry = entries.find((entry) => {\n        const limit = 'limit' in entry.req ? entry.req.limit : Infinity;\n        return (\n          limit >= req.limit &&\n          (req.values ? (entry.req as DBCoreQueryRequest).values : true) &&\n          isSuperRange(entry.req.query.range, req.query.range)\n        );\n      });\n      return [superEntry, false, tblCache, entries];\n    case 'count':\n      const countQuery = entries.find((entry) =>\n        areRangesEqual(entry.req.query.range, req.query.range)\n      );\n      return [countQuery, !!countQuery, tblCache, entries];\n  }\n}\n", "import { delArrayItem } from \"../../functions/utils\";\nimport { CacheEntry } from \"../../public/types/cache\";\n\nexport function subscribeToCacheEntry(cacheEntry: CacheEntry, container: CacheEntry[], requery: ()=>void, signal: AbortSignal) {\n  cacheEntry.subscribers.add(requery);\n  signal.addEventListener(\"abort\", () => {\n    cacheEntry.subscribers.delete(requery);\n    if (cacheEntry.subscribers.size === 0) {\n      enqueForDeletion(cacheEntry, container);\n    }\n  });\n}\n\n\nfunction enqueForDeletion(cacheEntry: CacheEntry, container: CacheEntry[]) {\n  setTimeout(() => {\n    if (cacheEntry.subscribers.size === 0) { // Still empty (no new subscribers readded after grace time)\n      delArrayItem(container, cacheEntry);\n    }\n  }, 3000);\n}\n", "import { LiveQueryContext } from '..';\nimport type { Transaction } from '../../classes/transaction';\nimport { getEffectiveKeys } from '../../dbcore/get-effective-keys';\nimport { deepClone, delArrayItem, setByKeyPath } from '../../functions/utils';\nimport DexiePromise, { PSD } from '../../helpers/promise';\nimport { ObservabilitySet } from '../../public/types/db-events';\nimport {\n  DBCore, DBCoreMutateRequest, DBCoreMutateResponse, DBCoreQueryRequest,\n  DBCoreQueryResponse\n} from '../../public/types/dbcore';\nimport { Middleware } from '../../public/types/middleware';\nimport { obsSetsOverlap } from '../obs-sets-overlap';\nimport { adjustOptimisticFromFailures } from './adjust-optimistic-request-from-failures';\nimport { applyOptimisticOps } from './apply-optimistic-ops';\nimport { cache } from './cache';\nimport { findCompatibleQuery } from './find-compatible-query';\nimport { isCachableContext } from './is-cachable-context';\nimport { isCachableRequest } from './is-cachable-request';\nimport { signalSubscribersLazily } from './signalSubscribers';\nimport { subscribeToCacheEntry } from './subscribe-cachentry';\n\nexport const cacheMiddleware: Middleware<DBCore> = {\n  stack: 'dbcore',\n  level: 0,\n  name: 'Cache',\n  create: (core) => {\n    const dbName = core.schema.name;\n    const coreMW: DBCore = {\n      ...core,\n      transaction: (stores, mode, options) => {\n        const idbtrans = core.transaction(\n          stores,\n          mode,\n          options\n        ) as IDBTransaction & {\n          mutatedParts?: ObservabilitySet;\n          _explicit?: boolean;\n        };\n        // Maintain TblQueryCache.ops array when transactions commit or abort\n        if (mode === 'readwrite') {\n          const ac = new AbortController();\n          const { signal } = ac;\n          const endTransaction = (wasCommitted: boolean) => () => {\n            ac.abort();\n            if (mode === 'readwrite') {\n              // Collect which subscribers to notify:\n              const affectedSubscribers = new Set<()=>void>();\n\n              // Go through all tables in transaction and check if they have any optimistic updates\n              for (const storeName of stores) {\n                const tblCache = cache[`idb://${dbName}/${storeName}`];\n                if (tblCache) {\n                  const table = core.table(storeName);\n                  // Pick optimistic ops that are part of this transaction\n                  const ops = tblCache.optimisticOps.filter(\n                    (op) => op.trans === idbtrans\n                  );\n                  // Transaction was marked as _explicit in enterTransactionScope(), transaction-helpers.ts.\n                  if (idbtrans._explicit && wasCommitted && idbtrans.mutatedParts) {\n                    // Invalidate all queries that overlap with the mutated parts and signal their subscribers\n                    for (const entries of Object.values(\n                      tblCache.queries.query\n                    )) {\n                      for (const entry of entries.slice()) {\n                        if (obsSetsOverlap(entry.obsSet, idbtrans.mutatedParts)) {\n                          delArrayItem(entries, entry); // Remove the entry from the cache so it can be refreshed\n                          entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                        }\n                      }\n                    }\n                  } else if (ops.length > 0) {\n                    // Remove them from the optimisticOps array\n                    tblCache.optimisticOps = tblCache.optimisticOps.filter(\n                      (op) => op.trans !== idbtrans\n                    );\n                    // Commit or abort the optimistic updates\n                    for (const entries of Object.values(\n                      tblCache.queries.query\n                    )) {\n                      for (const entry of entries.slice()) {\n                        if (\n                          entry.res != null && // if entry.promise but not entry.res, we're fine. Query will resume now and get the result.\n                          idbtrans.mutatedParts/* &&\n                          obsSetsOverlap(entry.obsSet, idbtrans.mutatedParts)*/\n                        ) {\n                          if (wasCommitted && !entry.dirty) {\n                            const freezeResults = Object.isFrozen(entry.res);\n                            const modRes = applyOptimisticOps(\n                              entry.res as any[],\n                              entry.req,\n                              ops,\n                              table,\n                              entry,\n                              freezeResults\n                            );\n                            if (entry.dirty) {\n                              // Found out at this point that the entry is dirty - not to rely on!\n                              delArrayItem(entries, entry);\n                              entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                            } else if (modRes !== entry.res) {\n                              entry.res = modRes;\n                              // Update promise\n                              entry.promise = DexiePromise.resolve({result: modRes} satisfies DBCoreQueryResponse);\n                              \n                              // No need to notify subscribers. They already have this value.\n                              // We have just updated the value of the cache without having to\n                              // requery the database - because we know the result for this\n                              // query based on computing the operations and applying them\n                              // to the previous result.\n                            }\n                          } else {\n                            if (entry.dirty) {\n                              // If the entry is dirty we need to get rid of it so that\n                              // a new entry will be created when the query is run again.\n                              delArrayItem(entries, entry);\n                            }\n                            // If we're not committing, we need to notify subscribers that the\n                            // optimistic updates are no longer valid.\n                            entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              affectedSubscribers.forEach((requery) => requery());\n            }\n          };\n          idbtrans.addEventListener('abort', endTransaction(false), {\n            signal,\n          });\n          idbtrans.addEventListener('error', endTransaction(false), {\n            signal,\n          });\n          idbtrans.addEventListener('complete', endTransaction(true), {\n            signal,\n          });\n        }\n        return idbtrans;\n      },\n      table(tableName: string) {\n        const downTable = core.table(tableName);\n        const primKey = downTable.schema.primaryKey;\n        const tableMW = {\n          ...downTable,\n          mutate(req: DBCoreMutateRequest): Promise<DBCoreMutateResponse> {\n            const trans = PSD.trans as Transaction;\n            if (\n              primKey.outbound || // Non-inbound tables are harded to apply optimistic updates on because we can't know primary key of results\n              trans.db._options.cache === 'disabled' || // User has opted-out from caching\n              trans.explicit || // It's an explicit write transaction being made. Don't affect cache until transaction commits.\n              trans.idbtrans.mode !== 'readwrite' // We only handle 'readwrite' in our transaction override. 'versionchange' transactions don't use cache (from populate or upgraders).\n            ) {\n              // Just forward the request to the core.\n              return downTable.mutate(req);\n            }\n            // Find the TblQueryCache for this table:\n            const tblCache = cache[`idb://${dbName}/${tableName}`];\n            if (!tblCache) return downTable.mutate(req);\n\n            const promise = downTable.mutate(req);\n            if ((req.type === 'add' || req.type === 'put') && (req.values.length >= 50 || getEffectiveKeys(primKey, req).some(key => key == null))) {\n              // There are some autoIncremented keys not set yet. Need to wait for completion before we can reliably enqueue the operation.\n              // (or there are too many objects so we lazy out to avoid performance bottleneck for large bulk inserts)\n              promise.then((res) => { // We need to extract result keys and generate cloned values with the keys set (so that applyOptimisticOps can work)\n                // But we have a problem! The req.mutatedParts is still not complete so we have to actively add the keys to the unsignaledParts set manually.\n                const reqWithResolvedKeys = {\n                  ...req,\n                  values: req.values.map((value, i) => {\n                    if (res.failures[i]) return value; // No need to rewrite a failing value\n                    const valueWithKey = primKey.keyPath?.includes('.')\n                      ? deepClone(value)\n                      : {\n                        ...value,\n                      };\n                    setByKeyPath(valueWithKey, primKey.keyPath, res.results![i]);\n                    return valueWithKey;\n                  })\n                };\n                const adjustedReq = adjustOptimisticFromFailures(tblCache, reqWithResolvedKeys, res);\n                tblCache.optimisticOps.push(adjustedReq);\n                // Signal subscribers after the observability middleware has complemented req.mutatedParts with the new keys.\n                // We must queue the task so that we get the req.mutatedParts updated by observability middleware first.\n                // If we refactor the dependency between observability middleware and this middleware we might not need to queue the task.\n                queueMicrotask(()=>req.mutatedParts && signalSubscribersLazily(req.mutatedParts)); // Reason for double laziness: in user awaits put and then does another put, signal once.\n              });\n            } else {\n              // Enque the operation immediately\n              tblCache.optimisticOps.push(req);\n              // Signal subscribers that there are mutated parts\n              req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n              promise.then((res) => {\n                if (res.numFailures > 0) {\n                  // In case the operation failed, we need to remove it from the optimisticOps array.\n                  delArrayItem(tblCache.optimisticOps, req);\n                  const adjustedReq = adjustOptimisticFromFailures(tblCache, req, res);\n                  if (adjustedReq) {\n                    tblCache.optimisticOps.push(adjustedReq);\n                  }\n                  req.mutatedParts && signalSubscribersLazily(req.mutatedParts); // Signal the rolling back of the operation.\n                }\n              });\n              promise.catch(()=> {\n                // In case the operation failed, we need to remove it from the optimisticOps array.\n                delArrayItem(tblCache.optimisticOps, req);\n                req.mutatedParts && signalSubscribersLazily(req.mutatedParts); // Signal the rolling back of the operation.\n              });\n            }\n            return promise;\n          },\n          query(req: DBCoreQueryRequest): Promise<DBCoreQueryResponse> {\n            if (!isCachableContext(PSD, downTable) || !isCachableRequest(\"query\", req)) return downTable.query(req);\n            const freezeResults =\n              (PSD as LiveQueryContext).trans?.db._options.cache === 'immutable';\n            const { requery, signal } = PSD as LiveQueryContext;\n            let [cacheEntry, exactMatch, tblCache, container] =\n              findCompatibleQuery(dbName, tableName, 'query', req);\n            if (cacheEntry && exactMatch) {\n              cacheEntry.obsSet = req.obsSet!; // So that optimistic result is monitored.\n              // How? - because observability-middleware will track result where optimistic\n              // mutations are applied and record it in the cacheEntry.\n              // TODO: CHANGE THIS! The difference is resultKeys only.\n              // Wanted behavior:\n              //  * cacheEntry obsSet should represent the obsSet without optimistic updates (so it can be checked when merging ops in tx commit)\n              //  * cacheEntry optimisticObsSet should represent the obsSet with current optimistic updates. It should be updated when adding an op\n              //    by adding the primary keys of the put/add/delete operation to the set.\n              //  * observability-middleware should stop recording req.obsSet when a cache entry exact match is found because it won't be used anyway.\n              // I'm thinking of merging observability-middleware with cache-middleware into one single middleware because the dependencies are too\n              // tight between them.\n            } else {\n              // --> TODO here: If not exact match, check if we have a superset to extract\n              // the data from.\n\n              // No cached result found. We need to query the database and cache the result.\n              const promise = downTable.query(req).then((res) => {\n                // Freeze or clone results\n                const result = res.result;\n                if (cacheEntry) cacheEntry.res = result;\n                if (freezeResults) {\n                  // For performance reasons don't deep freeze.\n                  // Only freeze the top-level array and its items.\n                  // This is good enough to teach users that the result must be treated as immutable\n                  // without enforcing it recursively on the entire result (which is not even possible\n                  // for things like Date objects and typed arrays)\n                  for (let i = 0, l = result.length; i < l; ++i) {\n                    Object.freeze(result[i]);\n                  }\n                  Object.freeze(result);\n                } else {\n                  // If not frozen, we need to clone the result to avoid user mutating the cache\n                  // When we do this, user's must feel conformable with the fact that the result\n                  // can be mutated deeply - user is not expected to have any respect for immutability.\n                  res.result = deepClone(result);\n                }\n                return res;\n              }).catch(error => {\n                // In case the query operation failed, we need to remove it from the cache\n                // so that subsequent calls does not get the same error but re-evaluate\n                // the query.\n                if (container && cacheEntry) delArrayItem(container, cacheEntry);\n                return Promise.reject(error);\n              });\n              cacheEntry = {\n                obsSet: req.obsSet!,\n                promise,\n                subscribers: new Set(),\n                type: 'query',\n                req,\n                dirty: false,\n              };\n              if (container) {\n                container.push(cacheEntry);\n              } else {\n                container = [cacheEntry];\n                if (!tblCache) {\n                  tblCache = cache[`idb://${dbName}/${tableName}`] = {\n                    queries: {\n                      query: {},\n                      count: {},\n                    },\n                    objs: new Map(),\n                    optimisticOps: [],\n                    unsignaledParts: {}\n                  };\n                }\n                tblCache.queries.query[req.query.index.name || ''] = container;\n              }\n            }\n            subscribeToCacheEntry(cacheEntry, container!, requery, signal);\n            return cacheEntry.promise.then((res: DBCoreQueryResponse) => {\n              return {\n                result: applyOptimisticOps(\n                  res.result,\n                  req,\n                  tblCache?.optimisticOps,\n                  downTable,\n                  cacheEntry!,\n                  freezeResults\n                ) as any[], // readonly any[]\n              };\n            });\n          },\n        };\n        return tableMW;\n      },\n    };\n    return coreMW;\n  },\n};\n\n\n", "import { type Dexie } from \"../classes/dexie\";\nimport { type Table } from \"../classes/table\";\nimport { type Transaction } from \"../classes/transaction\";\n\nexport function vipify<T extends Table | Transaction>(\n  target: T,\n  vipDb: Dexie\n): T {\n  return new Proxy(target, {\n    get (target, prop, receiver) {\n      // The \"db\" prop of the table or transaction is the only one we need to\n      // override. The rest of the props can be accessed from the original\n      // object.\n      if (prop === 'db') return vipDb;\n      return Reflect.get(target, prop, receiver);\n    }\n  });\n}\n", "// Import types from the public API\nimport { Dexie as IDexie } from \"../../public/types/dexie\";\nimport { DexieOptions, DexieConstructor } from \"../../public/types/dexie-constructor\";\nimport { DbEvents } from \"../../public/types/db-events\";\n//import { PromiseExtended, PromiseExtendedConstructor } from '../../public/types/promise-extended';\nimport { Table as ITable } from '../../public/types/table';\nimport { TableSchema } from \"../../public/types/table-schema\";\nimport { DbSchema } from '../../public/types/db-schema';\n\n// Internal imports\nimport { Table, TableConstructor, createTableConstructor } from \"../table\";\nimport { Collection, CollectionConstructor, createCollectionConstructor } from '../collection';\nimport { WhereClause } from '../where-clause/where-clause';\nimport { WhereClauseConstructor, createWhereClauseConstructor } from '../where-clause/where-clause-constructor';\nimport { Transaction } from '../transaction';\nimport { TransactionConstructor, createTransactionConstructor } from '../transaction/transaction-constructor';\nimport { Version } from \"../version/version\";\nimport { VersionConstructor, createVersionConstructor } from '../version/version-constructor';\n\n// Other imports...\nimport { DexieEventSet } from '../../public/types/dexie-event-set';\nimport { DexieExceptionClasses } from '../../public/types/errors';\nimport { DexieDOMDependencies } from '../../public/types/dexie-dom-dependencies';\nimport { nop, promisableChain } from '../../functions/chaining-functions';\nimport Promise, { PSD, globalPSD } from '../../helpers/promise';\nimport { extend, override, keys, hasOwn } from '../../functions/utils';\nimport Events from '../../helpers/Events';\nimport { maxString, connections, READONLY, READWRITE } from '../../globals/constants';\nimport { getMaxKey } from '../../functions/quirks';\nimport { exceptions } from '../../errors';\nimport { lowerVersionFirst } from '../version/schema-helpers';\nimport { dexieOpen } from './dexie-open';\nimport { wrap } from '../../helpers/promise';\nimport { _onDatabaseDeleted } from '../../helpers/database-enumerator';\nimport { eventRejectHandler } from '../../functions/event-wrappers';\nimport { extractTransactionArgs, enterTransactionScope } from './transaction-helpers';\nimport { TransactionMode } from '../../public/types/transaction-mode';\nimport { rejection } from '../../helpers/promise';\nimport { usePSD } from '../../helpers/promise';\nimport { DBCore } from '../../public/types/dbcore';\nimport { Middleware, DexieStacks } from '../../public/types/middleware';\nimport { virtualIndexMiddleware } from '../../dbcore/virtual-index-middleware';\nimport { hooksMiddleware } from '../../hooks/hooks-middleware';\nimport { IndexableType } from '../../public';\nimport { observabilityMiddleware } from '../../live-query/observability-middleware';\nimport { cacheExistingValuesMiddleware } from '../../dbcore/cache-existing-values-middleware';\nimport { cacheMiddleware } from \"../../live-query/cache/cache-middleware\";\nimport { vipify } from \"../../helpers/vipify\";\n\nexport interface DbReadyState {\n  dbOpenError: any;\n  isBeingOpened: boolean;\n  onReadyBeingFired: undefined | Function[];\n  openComplete: boolean;\n  dbReadyResolve: () => void;\n  dbReadyPromise: Promise<any>;\n  cancelOpen: (reason?: Error) => void;\n  openCanceller: Promise<any> & { _stackHolder?: Error };\n  autoSchema: boolean;\n  vcFired?: boolean;\n  PR1398_maxLoop?: number;\n  autoOpen?: boolean;\n}\n\nexport class Dexie implements IDexie {\n  _options: DexieOptions;\n  _state: DbReadyState;\n  _versions: Version[];\n  _storeNames: string[];\n  _deps: DexieDOMDependencies;\n  _allTables: { [name: string]: Table; };\n  _createTransaction: (this: Dexie, mode: IDBTransactionMode, storeNames: ArrayLike<string>, dbschema: { [tableName: string]: TableSchema; }, parentTransaction?: Transaction) => Transaction;\n  _dbSchema: { [tableName: string]: TableSchema; };\n  _hasGetAll?: boolean;\n  _maxKey: IndexableType;\n  _fireOnBlocked: (ev: Event) => void;\n  _middlewares: {[StackName in keyof DexieStacks]?: Middleware<DexieStacks[StackName]>[]} = {};\n  _vip?: boolean;\n  _novip: Dexie;// db._novip is to escape to orig db from db.vip.\n  core: DBCore;\n\n  name: string;\n  verno: number = 0;\n  idbdb: IDBDatabase | null;\n  vip: Dexie;\n  on: DbEvents;\n\n  Table: TableConstructor;\n  WhereClause: WhereClauseConstructor;\n  Collection: CollectionConstructor;\n  Version: VersionConstructor;\n  Transaction: TransactionConstructor;\n  static disableBfCache?: boolean;\n\n  constructor(name: string, options?: DexieOptions) {\n    const deps = (Dexie as any as DexieConstructor).dependencies;\n    this._options = options = {\n      // Default Options\n      addons: (Dexie as any as DexieConstructor).addons, // Pick statically registered addons by default\n      autoOpen: true,                 // Don't require db.open() explicitely.\n      // Default DOM dependency implementations from static prop.\n      indexedDB: deps.indexedDB,      // Backend IndexedDB api. Default to browser env.\n      IDBKeyRange: deps.IDBKeyRange,  // Backend IDBKeyRange api. Default to browser env.\n      cache: 'cloned', // Default to cloned for backward compatibility. For best performance and least memory consumption use 'immutable'.\n      ...options\n    };  \n    this._deps = {\n      indexedDB: options.indexedDB as IDBFactory,\n      IDBKeyRange: options.IDBKeyRange as typeof IDBKeyRange\n    };\n    const {\n      addons,\n    } = options;\n    this._dbSchema = {};\n    this._versions = [];\n    this._storeNames = [];\n    this._allTables = {};\n    this.idbdb = null;\n    this._novip = this;\n    const state: DbReadyState = {\n      dbOpenError: null,\n      isBeingOpened: false,\n      onReadyBeingFired: null,\n      openComplete: false,\n      dbReadyResolve: nop,\n      dbReadyPromise: null as Promise,\n      cancelOpen: nop,\n      openCanceller: null as Promise,\n      autoSchema: true,\n      PR1398_maxLoop: 3,\n      autoOpen: options.autoOpen,\n    };\n    state.dbReadyPromise = new Promise(resolve => {\n      state.dbReadyResolve = resolve;\n    });\n    state.openCanceller = new Promise((_, reject) => {\n      state.cancelOpen = reject;\n    });\n    this._state = state;\n    this.name = name;\n    this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] }) as DbEvents;\n    this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n      return (subscriber, bSticky) => {\n        (Dexie as any as DexieConstructor).vip(() => {\n          const state = this._state;\n          if (state.openComplete) {\n            // Database already open. Call subscriber asap.\n            if (!state.dbOpenError) Promise.resolve().then(subscriber);\n            // bSticky: Also subscribe to future open sucesses (after close / reopen) \n            if (bSticky) subscribe(subscriber);\n          } else if (state.onReadyBeingFired) {\n            // db.on('ready') subscribers are currently being executed and have not yet resolved or rejected\n            state.onReadyBeingFired.push(subscriber);\n            if (bSticky) subscribe(subscriber);\n          } else {\n            // Database not yet open. Subscribe to it.\n            subscribe(subscriber);\n            // If bSticky is falsy, make sure to unsubscribe subscriber when fired once.\n            const db = this;\n            if (!bSticky) subscribe(function unsubscribe() {\n              db.on.ready.unsubscribe(subscriber);\n              db.on.ready.unsubscribe(unsubscribe);\n            });\n          }\n        });\n      }\n    });\n\n    // Create derived classes bound to this instance of Dexie:\n    this.Collection = createCollectionConstructor(this);\n    this.Table = createTableConstructor(this);\n    this.Transaction = createTransactionConstructor(this);\n    this.Version = createVersionConstructor(this);\n    this.WhereClause = createWhereClauseConstructor(this);\n\n    // Default subscribers to \"versionchange\" and \"blocked\".\n    // Can be overridden by custom handlers. If custom handlers return false, these default\n    // behaviours will be prevented.\n    this.on(\"versionchange\", ev => {\n      // Default behavior for versionchange event is to close database connection.\n      // Caller can override this behavior by doing db.on(\"versionchange\", function(){ return false; });\n      // Let's not block the other window from making it's delete() or open() call.\n      // NOTE! This event is never fired in IE,Edge or Safari.\n      if (ev.newVersion > 0)\n        console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n      else\n        console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n      this.close({disableAutoOpen: false});\n      // In many web applications, it would be recommended to force window.reload()\n      // when this event occurs. To do that, subscribe to the versionchange event\n      // and call window.location.reload(true) if ev.newVersion > 0 (not a deletion)\n      // The reason for this is that your current web app obviously has old schema code that needs\n      // to be updated. Another window got a newer version of the app and needs to upgrade DB but\n      // your window is blocking it unless we close it here.\n    });\n    this.on(\"blocked\", ev => {\n      if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n        console.warn(`Dexie.delete('${this.name}') was blocked`);\n      else\n        console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n    });\n\n    this._maxKey = getMaxKey(options.IDBKeyRange as typeof IDBKeyRange);\n\n    this._createTransaction = (\n      mode: IDBTransactionMode,\n      storeNames: string[],\n      dbschema: DbSchema,\n      parentTransaction?: Transaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n\n    this._fireOnBlocked = ev => {\n      this.on(\"blocked\").fire(ev);\n      // Workaround (not fully*) for missing \"versionchange\" event in IE,Edge and Safari:\n      connections\n        .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n        .map(c => c.on(\"versionchange\").fire(ev));\n    }\n\n    // Default middlewares:\n    this.use(cacheExistingValuesMiddleware);\n    this.use(cacheMiddleware);\n    this.use(observabilityMiddleware);\n    this.use(virtualIndexMiddleware);\n    this.use(hooksMiddleware);\n\n    const vipDB = new Proxy(this, {\n      get: (_, prop, receiver) => {\n        if (prop === '_vip') return true;\n        if (prop === 'table') return (tableName: string) => vipify(this.table(tableName), vipDB);\n        const rv = Reflect.get(_, prop, receiver);\n        if (rv instanceof Table) return vipify(rv, vipDB);\n        if (prop === 'tables') return (rv as Table[]).map(t => vipify(t, vipDB));\n        if (prop === '_createTransaction') return function() {\n          const tx: Transaction = (rv as typeof this._createTransaction).apply(this, arguments);\n          return vipify(tx, vipDB);\n        }\n        return rv;\n      }\n    });\n    this.vip = vipDB;\n\n    // Call each addon:\n    addons.forEach(addon => addon(this));\n  }\n\n  version(versionNumber: number): Version {\n    if (isNaN(versionNumber) || versionNumber < 0.1) throw new exceptions.Type(`Given version is not a positive number`);\n    versionNumber = Math.round(versionNumber * 10) / 10;\n    if (this.idbdb || this._state.isBeingOpened)\n      throw new exceptions.Schema(\"Cannot add version when database is open\");\n    this.verno = Math.max(this.verno, versionNumber);\n    const versions = this._versions;\n    var versionInstance = versions.filter(\n      v => v._cfg.version === versionNumber)[0];\n    if (versionInstance) return versionInstance;\n    versionInstance = new this.Version(versionNumber);\n    versions.push(versionInstance);\n    versions.sort(lowerVersionFirst);\n    versionInstance.stores({}); // Derive earlier schemas by default.\n    // Disable autoschema mode, as at least one version is specified.\n    this._state.autoSchema = false;\n    return versionInstance;\n  }\n\n  _whenReady<T>(fn: () => Promise<T>): Promise<T> {\n    return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new Promise<T>((resolve, reject) => {\n      if (this._state.openComplete) {\n        // idbdb is falsy but openComplete is true. Must have been an exception durin open.\n        // Don't wait for openComplete as it would lead to infinite loop.\n        return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n      }\n      if (!this._state.isBeingOpened) {\n        if (!this._state.autoOpen) {\n          reject(new exceptions.DatabaseClosed());\n          return;\n        }\n        this.open().catch(nop); // Open in background. If if fails, it will be catched by the final promise anyway.\n      }\n      this._state.dbReadyPromise.then(resolve, reject);\n    }).then(fn);\n  }\n\n  use({stack, create, level, name}: Middleware<DBCore>): this {\n    if (name) this.unuse({stack, name}); // Be able to replace existing middleware.\n    const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n    middlewares.push({stack, create, level: level == null ? 10 : level, name});\n    middlewares.sort((a, b) => a.level - b.level);\n    // Todo update db.core and db.tables...core ? Or should be expect this to have effect\n    // only after next open()?\n    return this;\n  }\n\n  unuse({stack, create}: Middleware<{stack: keyof DexieStacks}>): this;\n  unuse({stack, name}: {stack: keyof DexieStacks, name: string}): this;\n  unuse({stack, name, create}: {stack: keyof DexieStacks, name?: string, create?: Function}) {\n    if (stack && this._middlewares[stack]) {\n      this._middlewares[stack] = this._middlewares[stack].filter(mw =>\n        create ? mw.create !== create : // Given middleware has a create method. Match that exactly.\n        name ? mw.name !== name : // Given middleware spec \n        false);\n    }\n    return this;\n  }\n\n  open() {\n    return usePSD(\n      globalPSD, // Enforce global scope here since db.open() can be part of a live query or transaction scope\n      () => dexieOpen(this)\n    );\n  }\n\n  _close(): void {\n    const state = this._state;\n    const idx = connections.indexOf(this);\n    if (idx >= 0) connections.splice(idx, 1);\n    if (this.idbdb) {\n      try { this.idbdb.close(); } catch (e) { }\n      this.idbdb = null;\n    }    \n    // Reset dbReadyPromise promise:\n    if (!state.isBeingOpened) {\n      // Only if not being opened, reset these promises.\n      // Otherwise, keep them so existing promise consumers will resolve when db\n      // db is reopened later on, in case closing for purpose reopening, using {disableAutoOpen: false}.\n      state.dbReadyPromise = new Promise(resolve => {\n        state.dbReadyResolve = resolve;\n      });\n      state.openCanceller = new Promise((_, reject) => {\n        state.cancelOpen = reject;\n      });\n    }\n  }\n\n  close({disableAutoOpen} = {disableAutoOpen: true}): void {\n    const state = this._state;\n    if (disableAutoOpen) {\n      if (state.isBeingOpened) {\n        // cancel before the call to this._close() because this._close() will recreate dbReadyPromise and openCanceller.\n        state.cancelOpen(new exceptions.DatabaseClosed());\n      }\n      this._close();\n      state.autoOpen = false;\n      state.dbOpenError = new exceptions.DatabaseClosed();\n    } else {\n      this._close();\n      state.autoOpen = this._options.autoOpen ||\n        state.isBeingOpened; // If an open call is ongoing, that same promise will resolve when db is reopend.\n      state.openComplete = false;\n      state.dbOpenError = null;\n    }\n  }\n\n  delete(closeOptions = {disableAutoOpen: true}): Promise<void> {\n    // Prevent accidentially doing db.delete(1) when intention was to do db.[table].delete(1).\n    const hasInvalidArguments = arguments.length > 0 && typeof arguments[0] !== 'object'; \n    const state = this._state;\n    return new Promise((resolve, reject) => {\n      const doDelete = () => {\n        this.close(closeOptions);\n        var req = this._deps.indexedDB.deleteDatabase(this.name);\n        req.onsuccess = wrap(() => {\n          _onDatabaseDeleted(this._deps, this.name);\n          resolve();\n        });\n        req.onerror = eventRejectHandler(reject);\n        req.onblocked = this._fireOnBlocked;\n      }\n      // Prevent accidentially doing db.delete(1) when intention was to do db.[table].delete(1).\n      if (hasInvalidArguments) throw new exceptions.InvalidArgument(\"Invalid closeOptions argument to db.delete()\");\n      if (state.isBeingOpened) {\n        state.dbReadyPromise.then(doDelete);\n      } else {\n        doDelete();\n      }\n    });\n  }\n\n  backendDB() {\n    return this.idbdb;\n  }\n\n  isOpen() {\n    return this.idbdb !== null;\n  }\n\n  hasBeenClosed() {\n    const dbOpenError = this._state.dbOpenError;\n    return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n  }\n\n  hasFailed() {\n    return this._state.dbOpenError !== null;\n  }\n\n  dynamicallyOpened() {\n    return this._state.autoSchema;\n  }\n\n  get tables () {\n    return keys(this._allTables).map(name => this._allTables[name]);\n  }\n\n  transaction(): Promise {\n    const args = extractTransactionArgs.apply(this, arguments);\n    return this._transaction.apply(this, args);\n  }\n\n  _transaction(mode: TransactionMode, tables: Array<ITable | string>, scopeFunc: Function) {\n    let parentTransaction = PSD.trans as Transaction | undefined;\n    // Check if parent transactions is bound to this db instance, and if caller wants to reuse it\n    if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1) parentTransaction = null;\n    const onlyIfCompatible = mode.indexOf('?') !== -1;\n    mode = mode.replace('!', '').replace('?', '') as TransactionMode; // Ok. Will change arguments[0] as well but we wont touch arguments henceforth.\n    let idbMode: IDBTransactionMode,\n        storeNames;\n\n    try {\n        //\n        // Get storeNames from arguments. Either through given table instances, or through given table names.\n        //\n        storeNames = tables.map(table => {\n            var storeName = table instanceof this.Table ? table.name : table;\n            if (typeof storeName !== 'string') throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n            return storeName;\n        });\n\n        //\n        // Resolve mode. Allow shortcuts \"r\" and \"rw\".\n        //\n        if (mode == \"r\" || mode === READONLY)\n          idbMode = READONLY;\n        else if (mode == \"rw\" || mode == READWRITE)\n          idbMode = READWRITE;\n        else\n            throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n\n        if (parentTransaction) {\n            // Basic checks\n            if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                if (onlyIfCompatible) {\n                    // Spawn new transaction instead.\n                    parentTransaction = null; \n                }\n                else throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n            }\n            if (parentTransaction) {\n                storeNames.forEach(storeName => {\n                    if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                        if (onlyIfCompatible) {\n                            // Spawn new transaction instead.\n                            parentTransaction = null; \n                        }\n                        else throw new exceptions.SubTransaction(\"Table \" + storeName +\n                            \" not included in parent transaction.\");\n                    }\n                });\n            }\n            if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                // '?' mode should not keep using an inactive transaction.\n                parentTransaction = null;\n            }\n        }\n    } catch (e) {\n        return parentTransaction ?\n            parentTransaction._promise(null, (_, reject) => {reject(e);}) :\n            rejection (e);\n    }\n    // If this is a sub-transaction, lock the parent and then launch the sub-transaction.\n    const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n    return (parentTransaction ?\n        parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n        PSD.trans ?\n            // no parent transaction despite PSD.trans exists. Make sure also\n            // that the zone we create is not a sub-zone of current, because\n            // Promise.follow() should not wait for it if so.\n            usePSD(PSD.transless, ()=>this._whenReady(enterTransaction)) :\n            this._whenReady (enterTransaction));\n  }\n\n  table(tableName: string): Table;\n  table<T, TKey extends IndexableType=IndexableType>(tableName: string): ITable<T, TKey>;\n  table(tableName: string): Table {\n    if (!hasOwn(this._allTables, tableName)) {\n      throw new exceptions.InvalidTable(`Table ${tableName} does not exist`); }\n    return this._allTables[tableName];\n  }\n}\n", "import {\n  Observable as IObservable,\n  Observer,\n  Subscription,\n} from \"../../public/types/observable\";\n\nconst symbolObservable: typeof Symbol.observable =\n  typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\" as any;\n\nexport class Observable<T> implements IObservable<T> {\n  private _subscribe: (observer: Observer<T>) => Subscription;\n  hasValue?: ()=>boolean;\n  getValue?: ()=>T;\n\n  constructor(subscribe: (observer: Observer<T>) => Subscription) {\n    this._subscribe = subscribe;\n  }\n\n  subscribe(\n    onNext?: ((value: T) => void) | null,\n    onError?: ((error: any) => void) | null,\n    onComplete?: (() => void) | null\n  ): Subscription;\n  subscribe(observer?: Observer<T> | null): Subscription;\n  subscribe(x?: any, error?: any, complete?: any): Subscription {\n    return this._subscribe(\n      !x || typeof x === \"function\" ? { next: x, error, complete } : x\n    );\n  }\n\n  [symbolObservable]() {\n    return this;\n  }\n}\n", "import { _global } from '../../globals/global';\nimport { DexieDOMDependencies } from '../../public/types/dexie-dom-dependencies';\n\nexport let domDeps: DexieDOMDependencies\n\ntry {\n  domDeps = {\n    // Required:\n    indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n    IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n  };\n} catch (e) {\n  domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n", "import { _global, isAsyncFunction, keys, objectIsEmpty } from '../functions/utils';\nimport {\n  globalEvents,\n  DEXIE_STORAGE_MUTATED_EVENT_NAME,\n} from '../globals/global-events';\nimport {\n  beginMicroTickScope,\n  decrementExpectedAwaits,\n  endMicroTickScope,\n  execInGlobalContext,\n  incrementExpectedAwaits,\n  NativePromise,\n  newScope,\n  PSD,\n  usePSD,\n} from '../helpers/promise';\nimport { ObservabilitySet } from '../public/types/db-events';\nimport {\n  Observable as IObservable,\n  Subscription,\n} from '../public/types/observable';\nimport { Observable } from '../classes/observable/observable';\nimport { extendObservabilitySet } from './extend-observability-set';\nimport { rangesOverlap } from '../helpers/rangeset';\nimport { domDeps } from '../classes/dexie/dexie-dom-dependencies';\nimport { Transaction } from '../classes/transaction';\nimport { obsSetsOverlap } from './obs-sets-overlap';\n\nexport interface LiveQueryContext {\n  subscr: ObservabilitySet;\n  signal: AbortSignal;\n  requery: () => void;\n  trans: null | Transaction;\n  querier: Function; // For debugging purposes and Error messages\n}\n\nexport function liveQuery<T>(querier: () => T | Promise<T>): IObservable<T> {\n  let hasValue = false;\n  let currentValue: T;\n  const observable = new Observable<T>((observer) => {\n    const scopeFuncIsAsync = isAsyncFunction(querier);\n    function execute(ctx: LiveQueryContext) {\n      const wasRootExec = beginMicroTickScope(); // Performance: Avoid starting a new microtick scope within the async context.\n      try {\n        if (scopeFuncIsAsync) {\n          incrementExpectedAwaits();\n        }\n        let rv = newScope(querier, ctx);\n        if (scopeFuncIsAsync) {\n          // Make sure to set rv = rv.finally in order to wait to after decrementExpectedAwaits() has been called.\n          // This fixes zone leaking issue that the liveQuery zone can leak to observer's next microtask.\n          rv = (rv as Promise<any>).finally(decrementExpectedAwaits);\n        }\n        return rv;\n      } finally {\n        wasRootExec && endMicroTickScope(); // Given that we created the microtick scope, we must also end it.\n      }\n    }\n\n    let closed = false;\n    let abortController: AbortController;\n\n    let accumMuts: ObservabilitySet = {};\n    let currentObs: ObservabilitySet = {};\n\n    const subscription: Subscription = {\n      get closed() {\n        return closed;\n      },\n      unsubscribe: () => {\n        if (closed) return;\n        closed = true;\n        if (abortController) abortController.abort();\n        if (startedListening) globalEvents.storagemutated.unsubscribe(mutationListener);\n      },\n    };\n\n    observer.start && observer.start(subscription); // https://github.com/tc39/proposal-observable\n\n    let startedListening = false;\n\n    const doQuery = () => execInGlobalContext(_doQuery);\n\n    function shouldNotify() {\n      return obsSetsOverlap(currentObs, accumMuts);\n    }\n\n    const mutationListener = (parts: ObservabilitySet) => {\n      extendObservabilitySet(accumMuts, parts);\n      if (shouldNotify()) {\n        doQuery();\n      }\n    };\n\n    const _doQuery = () => {\n      if (\n        closed || // closed - don't run!\n        !domDeps.indexedDB) // SSR in sveltekit, nextjs etc\n      {\n        return;\n      }\n      accumMuts = {};\n      const subscr: ObservabilitySet = {};\n      // Abort signal fill three purposes:\n      // 1. Abort the query if the observable is unsubscribed.\n      // 2. Abort the query if a new query is made before the previous one has completed.\n      // 3. For cached queries to know if they should remain in memory or could be enqued for being freed up.\n      //    (they will remain in memory for a short time and if noone needs them again, they will eventually be freed up)\n      if (abortController) abortController.abort(); // Cancel previous query. Last query will be cancelled on unsubscribe().\n      abortController = new AbortController();\n      \n      const ctx: LiveQueryContext = {\n        subscr,\n        signal: abortController.signal,\n        requery: doQuery,\n        querier,\n        trans: null // Make the scope transactionless (don't reuse transaction from outer scope of the caller of subscribe())\n      }\n      const ret = execute(ctx);\n      Promise.resolve(ret).then(\n        (result) => {\n          hasValue = true;\n          currentValue = result;\n          if (closed || ctx.signal.aborted) {\n            // closed - no subscriber anymore.\n            // signal.aborted - new query was made before this one completed and\n            // the querier might have catched AbortError and return successful result.\n            // If so, we should not rely in that result because we know we have aborted\n            // this run, which means there's another run going on that will handle accumMuts\n            // and we must not base currentObs on the half-baked subscr.\n            return;\n          }\n          accumMuts = {};\n          // Update what we are subscribing for based on this last run:\n          currentObs = subscr;\n          if (!objectIsEmpty(currentObs) && !startedListening) {\n            globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n            startedListening = true;\n          }\n          execInGlobalContext(()=>!closed && observer.next && observer.next(result));\n        },\n        (err) => {\n          hasValue = false;\n          if (!['DatabaseClosedError', 'AbortError'].includes(err?.name)) {\n            if (!closed) execInGlobalContext(()=>{\n              if (closed) return;\n              observer.error && observer.error(err);\n            });\n          }\n        }\n      );\n    };\n\n    // Use setTimeot here to guarantee execution in a private macro task before and\n    // after. The helper executeInGlobalContext(_doQuery) is not enough here because\n    // caller of `subscribe()` could be anything, such as a frontend framework that will\n    // continue in the same tick after subscribe() is called and call other\n    // eftects, that could involve dexie operations such as writing to the DB.\n    // If that happens, the private zone echoes from a live query tast started here\n    // could still be ongoing when the other operations start and make them inherit\n    // the async context from a live query.\n    setTimeout(doQuery, 0);\n    return subscription;\n  });\n  observable.hasValue = () => hasValue;\n  observable.getValue = () => currentValue;\n  return observable;\n}\n", "import { Dexie as _Dexie } from './dexie';\nimport { _global } from '../../globals/global';\nimport { props, derive, extend, override, getByKeyPath, setByKeyPath, delByKeyPath, shallowClone, deepClone, asap } from '../../functions/utils';\nimport { getObjectDiff } from \"../../functions/get-object-diff\";\nimport { fullNameExceptions } from '../../errors';\nimport { DexieConstructor } from '../../public/types/dexie-constructor';\nimport { getDatabaseNames } from '../../helpers/database-enumerator';\nimport { PSD } from '../../helpers/promise';\nimport { usePSD } from '../../helpers/promise';\nimport { newScope } from '../../helpers/promise';\nimport { rejection } from '../../helpers/promise';\nimport { awaitIterator } from '../../helpers/yield-support';\nimport Promise from '../../helpers/promise';\nimport * as Debug from '../../helpers/debug';\nimport { dexieStackFrameFilter, minKey, connections, DEXIE_VERSION } from '../../globals/constants';\nimport Events from '../../helpers/Events';\nimport { exceptions } from '../../errors';\nimport { errnames } from '../../errors';\nimport { getMaxKey } from '../../functions/quirks';\nimport { vip } from './vip';\nimport { globalEvents } from '../../globals/global-events';\nimport { liveQuery } from '../../live-query/live-query';\nimport { extendObservabilitySet } from '../../live-query/extend-observability-set';\nimport { domDeps } from './dexie-dom-dependencies';\nimport { cmp } from '../../functions/cmp';\nimport { cache } from '../../live-query/cache/cache';\n\n/* (Dexie) is an instance of DexieConstructor, as defined in public/types/dexie-constructor.d.ts\n*  (new Dexie()) is an instance of Dexie, as defined in public/types/dexie.d.ts\n* \n* Why we're doing this?\n\n* Because we've choosen to define the public Dexie API using a DexieConstructor interface\n* rather than declaring a class. On that interface, all static props are defined.\n* In practice, class Dexie's constructor implements DexieConstructor and all member props\n* are defined in interface Dexie. We could say, it's a typescript limitation of not being\n* able to define a static interface that forces us to do the cast below.\n*/\nconst Dexie = _Dexie as any as DexieConstructor;\n\n//\n// Set all static methods and properties onto Dexie:\n// \nprops(Dexie, {\n\n  // Dexie.BulkError = class BulkError {...};\n  // Dexie.XXXError = class XXXError {...};\n  ...fullNameExceptions,\n\n  //\n  // Static delete() method.\n  //\n  delete(databaseName: string) {\n    const db = new Dexie(databaseName, {addons: []});\n    return db.delete();\n  },\n\n  //\n  // Static exists() method.\n  //\n  exists(name: string) {\n    return new Dexie(name, { addons: [] }).open().then(db => {\n      db.close();\n      return true;\n    }).catch('NoSuchDatabaseError', () => false);\n  },\n\n  //\n  // Static method for retrieving a list of all existing databases at current host.\n  //\n  getDatabaseNames(cb) {\n    try {\n      return getDatabaseNames(Dexie.dependencies).then(cb);\n    } catch {\n      return rejection(new exceptions.MissingAPI());\n    }\n  },\n\n  /** @deprecated */\n  defineClass() {\n    function Class(content) {\n      extend(this, content);\n    }\n    return Class;\n  },\n\n  ignoreTransaction(scopeFunc) {\n    // In case caller is within a transaction but needs to create a separate transaction.\n    // Example of usage:\n    //\n    // Let's say we have a logger function in our app. Other application-logic should be unaware of the\n    // logger function and not need to include the 'logentries' table in all transaction it performs.\n    // The logging should always be done in a separate transaction and not be dependant on the current\n    // running transaction context. Then you could use Dexie.ignoreTransaction() to run code that starts a new transaction.\n    //\n    //     Dexie.ignoreTransaction(function() {\n    //         db.logentries.add(newLogEntry);\n    //     });\n    //\n    // Unless using Dexie.ignoreTransaction(), the above example would try to reuse the current transaction\n    // in current Promise-scope.\n    //\n    // An alternative to Dexie.ignoreTransaction() would be setImmediate() or setTimeout(). The reason we still provide an\n    // API for this because\n    //  1) The intention of writing the statement could be unclear if using setImmediate() or setTimeout().\n    //  2) setTimeout() would wait unnescessary until firing. This is however not the case with setImmediate().\n    //  3) setImmediate() is not supported in the ES standard.\n    //  4) You might want to keep other PSD state that was set in a parent PSD, such as PSD.letThrough.\n    return PSD.trans ?\n      usePSD(PSD.transless, scopeFunc) : // Use the closest parent that was non-transactional.\n      scopeFunc(); // No need to change scope because there is no ongoing transaction.\n  },\n\n  vip,\n\n  async: function (generatorFn: Function) {\n    return function () {\n      try {\n        var rv = awaitIterator(generatorFn.apply(this, arguments));\n        if (!rv || typeof rv.then !== 'function')\n          return Promise.resolve(rv);\n        return rv;\n      } catch (e) {\n        return rejection(e);\n      }\n    };\n  },\n\n  spawn: function (generatorFn, args, thiz) {\n    try {\n      var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n      if (!rv || typeof rv.then !== 'function')\n        return Promise.resolve(rv);\n      return rv;\n    } catch (e) {\n      return rejection(e);\n    }\n  },\n\n  // Dexie.currentTransaction property\n  currentTransaction: {\n    get: () => PSD.trans || null\n  },\n\n  waitFor: function (promiseOrFunction, optionalTimeout) {\n    // If a function is provided, invoke it and pass the returning value to Transaction.waitFor()\n    const promise = Promise.resolve(\n      typeof promiseOrFunction === 'function' ?\n        Dexie.ignoreTransaction(promiseOrFunction) :\n        promiseOrFunction)\n      .timeout(optionalTimeout || 60000); // Default the timeout to one minute. Caller may specify Infinity if required.       \n\n    // Run given promise on current transaction. If no current transaction, just return a Dexie promise based\n    // on given value.\n    return PSD.trans ?\n      PSD.trans.waitFor(promise) :\n      promise;\n  },\n\n  // Export our Promise implementation since it can be handy as a standalone Promise implementation\n  Promise: Promise,\n\n  // Dexie.debug proptery:\n  // Dexie.debug = false\n  // Dexie.debug = true\n  // Dexie.debug = \"dexie\" - don't hide dexie's stack frames.\n  debug: {\n    get: () => Debug.debug,\n    set: value => {\n      Debug.setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n    }\n  },\n\n  // Export our derive/extend/override methodology\n  derive: derive, // Deprecate?\n  extend: extend, // Deprecate?\n  props: props,\n  override: override, // Deprecate?\n  // Export our Events() function - can be handy as a toolkit\n  Events: Events,\n  on: globalEvents,\n  liveQuery,\n  extendObservabilitySet,\n  // Utilities\n  getByKeyPath: getByKeyPath,\n  setByKeyPath: setByKeyPath,\n  delByKeyPath: delByKeyPath,\n  shallowClone: shallowClone,\n  deepClone: deepClone,\n  getObjectDiff: getObjectDiff,\n  cmp,\n  asap: asap,\n  //maxKey: new Dexie('',{addons:[]})._maxKey,\n  minKey: minKey,\n  // Addon registry\n  addons: [],\n  // Global DB connection list\n  connections: connections,\n\n  //MultiModifyError: exceptions.Modify, // Obsolete!\n  errnames: errnames,\n\n  // Export other static classes\n  //IndexSpec: IndexSpec, Obsolete!\n  //TableSchema: TableSchema, Obsolete!\n\n  //\n  // Dependencies\n  //\n  // These will automatically work in browsers with indexedDB support, or where an indexedDB polyfill has been included.\n  //\n  // In node.js, however, these properties must be set \"manually\" before instansiating a new Dexie().\n  // For node.js, you need to require indexeddb-js or similar and then set these deps.\n  //\n  dependencies: domDeps,\n  cache,\n\n  // API Version Number: Type Number, make sure to always set a version number that can be comparable correctly. Example: 0.9, 0.91, 0.92, 1.0, 1.01, 1.1, 1.2, 1.21, etc.\n  semVer: DEXIE_VERSION,\n  version: DEXIE_VERSION.split('.')\n    .map(n => parseInt(n))\n    .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n\n  // https://github.com/dfahlander/Dexie.js/issues/186\n  // typescript compiler tsc in mode ts-->es5 & commonJS, will expect require() to return\n  // x.default. Workaround: Set Dexie.default = Dexie.\n  // default: Dexie, // Commented because solved in index-umd.ts instead.\n  // Make it possible to import {Dexie} (non-default import)\n  // Reason 1: May switch to that in future.\n  // Reason 2: We declare it both default and named exported in d.ts to make it possible\n  // to let addons extend the Dexie interface with Typescript 2.1 (works only when explicitely\n  // exporting the symbol, not just default exporting)\n  // Dexie: Dexie // Commented because solved in index-umd.ts instead.\n});\n\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n", "import { globalEvents, DEXIE_STORAGE_MUTATED_EVENT_NAME, STORAGE_MUTATED_DOM_EVENT_NAME } from '../globals/global-events';\nimport { ObservabilitySet } from \"../public/types/db-events\";\nimport { signalSubscribersNow } from './cache/signalSubscribers';\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n  globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n    if (!propagatingLocally) {\n      let event: CustomEvent<ObservabilitySet>;\n      event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n        detail: updatedParts\n      });\n      propagatingLocally = true;\n      dispatchEvent(event);\n      propagatingLocally = false;\n    }\n  });\n  addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({detail}: CustomEvent<ObservabilitySet>) => {\n    if (!propagatingLocally) {\n      propagateLocally(detail);\n    }\n  });\n}\n\n/** Called from listeners to BroadcastChannel and DOM event to\n * propagate the event locally into dexie's storagemutated event\n * and invalidate cached queries.\n * \n * This function is only called when the event is not originating\n * from this same Dexie module - either from another redundant dexie import\n * or from a foreign tab or worker. That's why we need to invalidate\n * the cache when this happens.\n */\nexport function propagateLocally(updateParts: ObservabilitySet) {\n  let wasMe = propagatingLocally;\n  try {\n    propagatingLocally = true;\n    // Fire the \"storagemutated\" event.\n    globalEvents.storagemutated.fire(updateParts);\n    // Invalidate cached queries and signal subscribers to requery.\n    signalSubscribersNow(updateParts, true);\n  } finally {\n    propagatingLocally = wasMe;\n  }\n}\n\nexport let propagatingLocally = false;\n", "import {\n  globalEvents,\n  STORAGE_MUTATED_DOM_EVENT_NAME,\n  DEXIE_STORAGE_MUTATED_EVENT_NAME,\n} from '../globals/global-events';\nimport { propagateLocally, propagatingLocally } from './propagate-locally';\n\nexport let bc: BroadcastChannel;\n\nexport let createBC = ()=>{};\n\nif (typeof BroadcastChannel !== 'undefined') {\n  createBC = () => {\n    bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n    bc.onmessage = ev => ev.data && propagateLocally(ev.data);\n  }\n  createBC();\n\n  /**\n   * The Node.js BroadcastChannel will prevent the node process from exiting\n   * if the BroadcastChannel is not closed.\n   * Therefore we have to call unref() which allows the process to finish\n   * properly even when the BroadcastChannel is never closed.\n   * @link https://nodejs.org/api/worker_threads.html#broadcastchannelunref\n   * @link https://github.com/dexie/Dexie.js/pull/1576\n   */\n  if (typeof (bc as any).unref === 'function') {\n    (bc as any).unref();\n  }\n  \n  //\n  // Propagate local changes to remote tabs, windows and workers via BroadcastChannel\n  //\n  globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n    if (!propagatingLocally) {\n      bc.postMessage(changedParts);\n    }\n  });\n}\n", "import { Dexie } from \"./classes/dexie\";\nimport { connections } from \"./globals/constants\";\nimport { debug } from \"./helpers/debug\";\nimport { RangeSet } from \"./helpers/rangeset\";\nimport { bc, createBC } from \"./live-query/enable-broadcast\";\nimport { propagateLocally } from \"./live-query/propagate-locally\";\n\n\nif (typeof addEventListener !== 'undefined') {\n  addEventListener('pagehide', (event) => {\n    if (!Dexie.disableBfCache && event.persisted) {\n      if (debug) console.debug('Dexie: handling persisted pagehide');\n      bc?.close();\n      for (const db of connections) {\n        db.close({disableAutoOpen: false});\n      }\n    }\n  });\n  addEventListener('pageshow', (event) => {\n    if (!Dexie.disableBfCache && event.persisted) {\n      if (debug) console.debug('Dexie: handling persisted pageshow');\n      createBC();\n      propagateLocally({all: new RangeSet(-Infinity, [[]])}); // Trigger all queries to requery\n    }\n  });\n}\n", "import { PropModification } from \"../../helpers/prop-modification\";\n\nexport function add(value: number | bigint | Array<string | number>) {\n  return new PropModification({add: value});\n}\n", "import { PropModification } from \"../../helpers/prop-modification\";\n\nexport function remove(value: number | bigint | Array<string | number>) {\n  return new PropModification({remove: value});\n}\n", "import { PropModification } from \"../../helpers/prop-modification\";\n\nexport function replacePrefix(a: string, b:string) {\n  return new PropModification({replacePrefix: [a, b]});\n}\n", "import { Dexie } from './classes/dexie';\nimport { DexieConstructor } from './public/types/dexie-constructor';\nimport { DexiePromise } from './helpers/promise';\nimport { mapError } from './errors';\nimport * as Debug from './helpers/debug';\nimport { dexieStackFrameFilter } from './globals/constants';\n\n// Generate all static properties such as Dexie.maxKey etc\n// (implement interface DexieConstructor):\nimport './classes/dexie/dexie-static-props';\nimport './live-query/enable-broadcast';\nimport './support-bfcache';\nimport { liveQuery } from './live-query/live-query';\nimport { Entity } from './classes/entity/Entity';\nimport { cmp } from './functions/cmp';\nimport { PropModification } from './helpers/prop-modification';\nimport { replacePrefix, add, remove } from './functions/propmods';\n\n\n// Set rejectionMapper of DexiePromise so that it generally tries to map\n// DOMErrors and DOMExceptions to a DexieError instance with same name but with\n// async stack support and with a prototypal inheritance from DexieError and Error.\n// of Map DOMErrors and DOMExceptions to corresponding Dexie errors.\nDexiePromise.rejectionMapper = mapError;\n\n// Let the async stack filter focus on app code and filter away frames from dexie.min.js:\nDebug.setDebug(Debug.debug, dexieStackFrameFilter);\n\nexport { RangeSet, mergeRanges, rangesOverlap } from \"./helpers/rangeset\";\nexport { Dexie, liveQuery }; // Comply with public/index.d.ts.\nexport { Entity };\nexport { cmp };\nexport { PropModification, replacePrefix, add, remove };\nexport default Dexie;\n", "// Issue #1127. Need another index.ts for the UMD module with only a default export\n// like it was before.\n// In practice though, the UMD export will also export the named export in \n// https://github.com/dfahlander/Dexie.js/blob/c9187ae60c0d7a424f85bab3af179fbbc9901c8e/src/classes/dexie/dexie-static-props.ts#L223-L228\nimport Dexie from \"./index\";\nimport * as namedExports from \"./index\";\nimport { __assign } from 'tslib';\n__assign(Dexie, namedExports, {default: Dexie});\nexport default Dexie;\n", "// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n", "import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n", "import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private rhs?: SafeExpr\n  ) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(\n    readonly lhs: Code,\n    public rhs: SafeExpr,\n    private readonly sideEffects?: boolean\n  ) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(\n    lhs: Code,\n    private readonly op: Code,\n    rhs: SafeExpr,\n    sideEffects?: boolean\n  ) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(\n    private condition: Code | boolean,\n    nodes?: ChildNode[]\n  ) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(\n    public name: Name,\n    public args: Code,\n    public async?: boolean\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n", "import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n", "import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n", "import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n", "import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n", "import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = (typeof _jsonTypes)[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n", "import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n", "import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n", "import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n", "import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n", "import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n", "import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponent} from \"fast-uri\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponent): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let innerBaseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") innerBaseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = innerBaseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n", "import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n", "import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n", "import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n", "import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport {URIComponent} from \"fast-uri\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URIComponent,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n", "{\n  \"$id\": \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n  \"description\": \"Meta-schema for $data reference (JSON AnySchema extension proposal)\",\n  \"type\": \"object\",\n  \"required\": [\"$data\"],\n  \"properties\": {\n    \"$data\": {\n      \"type\": \"string\",\n      \"anyOf\": [{\"format\": \"relative-json-pointer\"}, {\"format\": \"json-pointer\"}]\n    }\n  },\n  \"additionalProperties\": false\n}\n", "'use strict'\n\nconst HEX = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  A: 10,\n  b: 11,\n  B: 11,\n  c: 12,\n  C: 12,\n  d: 13,\n  D: 13,\n  e: 14,\n  E: 14,\n  f: 15,\n  F: 15\n}\n\nmodule.exports = {\n  HEX\n}\n", "'use strict'\n\nconst { HEX } = require('./scopedChars')\n\nconst IPV4_REG = /^(?:(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)$/u\n\nfunction normalizeIPv4 (host) {\n  if (findToken(host, '.') < 3) { return { host, isIPV4: false } }\n  const matches = host.match(IPV4_REG) || []\n  const [address] = matches\n  if (address) {\n    return { host: stripLeadingZeros(address, '.'), isIPV4: true }\n  } else {\n    return { host, isIPV4: false }\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped (input, keepZero = false) {\n  let acc = ''\n  let strip = true\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined\n    if (c !== '0' && strip === true) strip = false\n    if (!strip) acc += c\n  }\n  if (keepZero && acc.length === 0) acc = '0'\n  return acc\n}\n\nfunction getIPV6 (input) {\n  let tokenCount = 0\n  const output = { error: false, address: '', zone: '' }\n  const address = []\n  const buffer = []\n  let isZone = false\n  let endipv6Encountered = false\n  let endIpv6 = false\n\n  function consume () {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer)\n        if (hex !== undefined) {\n          address.push(hex)\n        } else {\n          output.error = true\n          return false\n        }\n      }\n      buffer.length = 0\n    }\n    return true\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i]\n    if (cursor === '[' || cursor === ']') { continue }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true\n      }\n      if (!consume()) { break }\n      tokenCount++\n      address.push(':')\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true\n        break\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true\n      }\n      continue\n    } else if (cursor === '%') {\n      if (!consume()) { break }\n      // switch to zone detection\n      isZone = true\n    } else {\n      buffer.push(cursor)\n      continue\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('')\n    } else if (endIpv6) {\n      address.push(buffer.join(''))\n    } else {\n      address.push(stringArrayToHexStripped(buffer))\n    }\n  }\n  output.address = address.join('')\n  return output\n}\n\nfunction normalizeIPv6 (host) {\n  if (findToken(host, ':') < 2) { return { host, isIPV6: false } }\n  const ipv6 = getIPV6(host)\n\n  if (!ipv6.error) {\n    let newHost = ipv6.address\n    let escapedHost = ipv6.address\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone\n      escapedHost += '%25' + ipv6.zone\n    }\n    return { host: newHost, escapedHost, isIPV6: true }\n  } else {\n    return { host, isIPV6: false }\n  }\n}\n\nfunction stripLeadingZeros (str, token) {\n  let out = ''\n  let skip = true\n  const l = str.length\n  for (let i = 0; i < l; i++) {\n    const c = str[i]\n    if (c === '0' && skip) {\n      if ((i + 1 <= l && str[i + 1] === token) || i + 1 === l) {\n        out += c\n        skip = false\n      }\n    } else {\n      if (c === token) {\n        skip = true\n      } else {\n        skip = false\n      }\n      out += c\n    }\n  }\n  return out\n}\n\nfunction findToken (str, token) {\n  let ind = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++\n  }\n  return ind\n}\n\nconst RDS1 = /^\\.\\.?\\//u\nconst RDS2 = /^\\/\\.(?:\\/|$)/u\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u\n\nfunction removeDotSegments (input) {\n  const output = []\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '')\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/')\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/')\n      output.pop()\n    } else if (input === '.' || input === '..') {\n      input = ''\n    } else {\n      const im = input.match(RDS5)\n      if (im) {\n        const s = im[0]\n        input = input.slice(s.length)\n        output.push(s)\n      } else {\n        throw new Error('Unexpected dot segment condition')\n      }\n    }\n  }\n  return output.join('')\n}\n\nfunction normalizeComponentEncoding (components, esc) {\n  const func = esc !== true ? escape : unescape\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme)\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo)\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host)\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path)\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query)\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment)\n  }\n  return components\n}\n\nfunction recomposeAuthority (components) {\n  const uriTokens = []\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo)\n    uriTokens.push('@')\n  }\n\n  if (components.host !== undefined) {\n    let host = unescape(components.host)\n    const ipV4res = normalizeIPv4(host)\n\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host)\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`\n      } else {\n        host = components.host\n      }\n    }\n    uriTokens.push(host)\n  }\n\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':')\n    uriTokens.push(String(components.port))\n  }\n\n  return uriTokens.length ? uriTokens.join('') : undefined\n};\n\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n}\n", "'use strict'\n\nconst UUID_REG = /^[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}$/iu\nconst URN_REG = /([\\da-z][\\d\\-a-z]{0,31}):((?:[\\w!$'()*+,\\-.:;=@]|%[\\da-f]{2})+)/iu\n\nfunction isSecure (wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss'\n}\n\nfunction httpParse (components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.'\n  }\n\n  return components\n}\n\nfunction httpSerialize (components) {\n  const secure = String(components.scheme).toLowerCase() === 'https'\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/'\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components\n}\n\nfunction wsParse (wsComponents) {\n// indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents)\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '')\n  wsComponents.path = undefined\n  wsComponents.query = undefined\n\n  return wsComponents\n}\n\nfunction wsSerialize (wsComponents) {\n// normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws')\n    wsComponents.secure = undefined\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?')\n    wsComponents.path = (path && path !== '/' ? path : undefined)\n    wsComponents.query = query\n    wsComponents.resourceName = undefined\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined\n\n  return wsComponents\n}\n\nfunction urnParse (urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed'\n    return urnComponents\n  }\n  const matches = urnComponents.path.match(URN_REG)\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn'\n    urnComponents.nid = matches[1].toLowerCase()\n    urnComponents.nss = matches[2]\n    const urnScheme = `${scheme}:${options.nid || urnComponents.nid}`\n    const schemeHandler = SCHEMES[urnScheme]\n    urnComponents.path = undefined\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options)\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.'\n  }\n\n  return urnComponents\n}\n\nfunction urnSerialize (urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn'\n  const nid = urnComponents.nid.toLowerCase()\n  const urnScheme = `${scheme}:${options.nid || nid}`\n  const schemeHandler = SCHEMES[urnScheme]\n\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options)\n  }\n\n  const uriComponents = urnComponents\n  const nss = urnComponents.nss\n  uriComponents.path = `${nid || options.nid}:${nss}`\n\n  options.skipEscape = true\n  return uriComponents\n}\n\nfunction urnuuidParse (urnComponents, options) {\n  const uuidComponents = urnComponents\n  uuidComponents.uuid = uuidComponents.nss\n  uuidComponents.nss = undefined\n\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.'\n  }\n\n  return uuidComponents\n}\n\nfunction urnuuidSerialize (uuidComponents) {\n  const urnComponents = uuidComponents\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase()\n  return urnComponents\n}\n\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n}\n\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n}\n\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n}\n\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n}\n\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n}\n\nmodule.exports = SCHEMES\n", "'use strict'\n\nconst { normalizeIPv6, normalizeIPv4, removeDotSegments, recomposeAuthority, normalizeComponentEncoding } = require('./lib/utils')\nconst SCHEMES = require('./lib/schemes')\n\nfunction normalize (uri, options) {\n  if (typeof uri === 'string') {\n    uri = serialize(parse(uri, options), options)\n  } else if (typeof uri === 'object') {\n    uri = parse(serialize(uri, options), options)\n  }\n  return uri\n}\n\nfunction resolve (baseURI, relativeURI, options) {\n  const schemelessOptions = Object.assign({ scheme: 'null' }, options)\n  const resolved = resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true)\n  return serialize(resolved, { ...schemelessOptions, skipEscape: true })\n}\n\nfunction resolveComponents (base, relative, options, skipNormalization) {\n  const target = {}\n  if (!skipNormalization) {\n    base = parse(serialize(base, options), options) // normalize base components\n    relative = parse(serialize(relative, options), options) // normalize relative components\n  }\n  options = options || {}\n\n  if (!options.tolerant && relative.scheme) {\n    target.scheme = relative.scheme\n    // target.authority = relative.authority;\n    target.userinfo = relative.userinfo\n    target.host = relative.host\n    target.port = relative.port\n    target.path = removeDotSegments(relative.path || '')\n    target.query = relative.query\n  } else {\n    if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n      // target.authority = relative.authority;\n      target.userinfo = relative.userinfo\n      target.host = relative.host\n      target.port = relative.port\n      target.path = removeDotSegments(relative.path || '')\n      target.query = relative.query\n    } else {\n      if (!relative.path) {\n        target.path = base.path\n        if (relative.query !== undefined) {\n          target.query = relative.query\n        } else {\n          target.query = base.query\n        }\n      } else {\n        if (relative.path.charAt(0) === '/') {\n          target.path = removeDotSegments(relative.path)\n        } else {\n          if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n            target.path = '/' + relative.path\n          } else if (!base.path) {\n            target.path = relative.path\n          } else {\n            target.path = base.path.slice(0, base.path.lastIndexOf('/') + 1) + relative.path\n          }\n          target.path = removeDotSegments(target.path)\n        }\n        target.query = relative.query\n      }\n      // target.authority = base.authority;\n      target.userinfo = base.userinfo\n      target.host = base.host\n      target.port = base.port\n    }\n    target.scheme = base.scheme\n  }\n\n  target.fragment = relative.fragment\n\n  return target\n}\n\nfunction equal (uriA, uriB, options) {\n  if (typeof uriA === 'string') {\n    uriA = unescape(uriA)\n    uriA = serialize(normalizeComponentEncoding(parse(uriA, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriA === 'object') {\n    uriA = serialize(normalizeComponentEncoding(uriA, true), { ...options, skipEscape: true })\n  }\n\n  if (typeof uriB === 'string') {\n    uriB = unescape(uriB)\n    uriB = serialize(normalizeComponentEncoding(parse(uriB, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriB === 'object') {\n    uriB = serialize(normalizeComponentEncoding(uriB, true), { ...options, skipEscape: true })\n  }\n\n  return uriA.toLowerCase() === uriB.toLowerCase()\n}\n\nfunction serialize (cmpts, opts) {\n  const components = {\n    host: cmpts.host,\n    scheme: cmpts.scheme,\n    userinfo: cmpts.userinfo,\n    port: cmpts.port,\n    path: cmpts.path,\n    query: cmpts.query,\n    nid: cmpts.nid,\n    nss: cmpts.nss,\n    uuid: cmpts.uuid,\n    fragment: cmpts.fragment,\n    reference: cmpts.reference,\n    resourceName: cmpts.resourceName,\n    secure: cmpts.secure,\n    error: ''\n  }\n  const options = Object.assign({}, opts)\n  const uriTokens = []\n\n  // find scheme handler\n  const schemeHandler = SCHEMES[(options.scheme || components.scheme || '').toLowerCase()]\n\n  // perform scheme specific serialization\n  if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options)\n\n  if (components.path !== undefined) {\n    if (!options.skipEscape) {\n      components.path = escape(components.path)\n\n      if (components.scheme !== undefined) {\n        components.path = components.path.split('%3A').join(':')\n      }\n    } else {\n      components.path = unescape(components.path)\n    }\n  }\n\n  if (options.reference !== 'suffix' && components.scheme) {\n    uriTokens.push(components.scheme, ':')\n  }\n\n  const authority = recomposeAuthority(components)\n  if (authority !== undefined) {\n    if (options.reference !== 'suffix') {\n      uriTokens.push('//')\n    }\n\n    uriTokens.push(authority)\n\n    if (components.path && components.path.charAt(0) !== '/') {\n      uriTokens.push('/')\n    }\n  }\n  if (components.path !== undefined) {\n    let s = components.path\n\n    if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n      s = removeDotSegments(s)\n    }\n\n    if (authority === undefined) {\n      s = s.replace(/^\\/\\//u, '/%2F') // don't allow the path to start with \"//\"\n    }\n\n    uriTokens.push(s)\n  }\n\n  if (components.query !== undefined) {\n    uriTokens.push('?', components.query)\n  }\n\n  if (components.fragment !== undefined) {\n    uriTokens.push('#', components.fragment)\n  }\n  return uriTokens.join('')\n}\n\nconst hexLookUp = Array.from({ length: 127 }, (_v, k) => /[^!\"$&'()*+,\\-.;=_`a-z{}~]/u.test(String.fromCharCode(k)))\n\nfunction nonSimpleDomain (value) {\n  let code = 0\n  for (let i = 0, len = value.length; i < len; ++i) {\n    code = value.charCodeAt(i)\n    if (code > 126 || hexLookUp[code]) {\n      return true\n    }\n  }\n  return false\n}\n\nconst URI_PARSE = /^(?:([^#/:?]+):)?(?:\\/\\/((?:([^#/?@]*)@)?(\\[[^#/?\\]]+\\]|[^#/:?]*)(?::(\\d*))?))?([^#?]*)(?:\\?([^#]*))?(?:#((?:.|[\\n\\r])*))?/u\n\nfunction parse (uri, opts) {\n  const options = Object.assign({}, opts)\n  const parsed = {\n    scheme: undefined,\n    userinfo: undefined,\n    host: '',\n    port: undefined,\n    path: '',\n    query: undefined,\n    fragment: undefined\n  }\n  const gotEncoding = uri.indexOf('%') !== -1\n  let isIP = false\n  if (options.reference === 'suffix') uri = (options.scheme ? options.scheme + ':' : '') + '//' + uri\n\n  const matches = uri.match(URI_PARSE)\n\n  if (matches) {\n    // store each component\n    parsed.scheme = matches[1]\n    parsed.userinfo = matches[3]\n    parsed.host = matches[4]\n    parsed.port = parseInt(matches[5], 10)\n    parsed.path = matches[6] || ''\n    parsed.query = matches[7]\n    parsed.fragment = matches[8]\n\n    // fix port number\n    if (isNaN(parsed.port)) {\n      parsed.port = matches[5]\n    }\n    if (parsed.host) {\n      const ipv4result = normalizeIPv4(parsed.host)\n      if (ipv4result.isIPV4 === false) {\n        const ipv6result = normalizeIPv6(ipv4result.host)\n        parsed.host = ipv6result.host.toLowerCase()\n        isIP = ipv6result.isIPV6\n      } else {\n        parsed.host = ipv4result.host\n        isIP = true\n      }\n    }\n    if (parsed.scheme === undefined && parsed.userinfo === undefined && parsed.host === undefined && parsed.port === undefined && parsed.query === undefined && !parsed.path) {\n      parsed.reference = 'same-document'\n    } else if (parsed.scheme === undefined) {\n      parsed.reference = 'relative'\n    } else if (parsed.fragment === undefined) {\n      parsed.reference = 'absolute'\n    } else {\n      parsed.reference = 'uri'\n    }\n\n    // check for reference errors\n    if (options.reference && options.reference !== 'suffix' && options.reference !== parsed.reference) {\n      parsed.error = parsed.error || 'URI is not a ' + options.reference + ' reference.'\n    }\n\n    // find scheme handler\n    const schemeHandler = SCHEMES[(options.scheme || parsed.scheme || '').toLowerCase()]\n\n    // check if scheme can't handle IRIs\n    if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n      // if host component is a domain name\n      if (parsed.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost)) && isIP === false && nonSimpleDomain(parsed.host)) {\n        // convert Unicode IDN -> ASCII IDN\n        try {\n          parsed.host = URL.domainToASCII(parsed.host.toLowerCase())\n        } catch (e) {\n          parsed.error = parsed.error || \"Host's domain name can not be converted to ASCII: \" + e\n        }\n      }\n      // convert IRI -> URI\n    }\n\n    if (!schemeHandler || (schemeHandler && !schemeHandler.skipNormalize)) {\n      if (gotEncoding && parsed.scheme !== undefined) {\n        parsed.scheme = unescape(parsed.scheme)\n      }\n      if (gotEncoding && parsed.host !== undefined) {\n        parsed.host = unescape(parsed.host)\n      }\n      if (parsed.path) {\n        parsed.path = escape(unescape(parsed.path))\n      }\n      if (parsed.fragment) {\n        parsed.fragment = encodeURI(decodeURIComponent(parsed.fragment))\n      }\n    }\n\n    // perform scheme specific parsing\n    if (schemeHandler && schemeHandler.parse) {\n      schemeHandler.parse(parsed, options)\n    }\n  } else {\n    parsed.error = parsed.error || 'URI can not be parsed.'\n  }\n  return parsed\n}\n\nconst fastUri = {\n  SCHEMES,\n  normalize,\n  resolve,\n  resolveComponents,\n  equal,\n  serialize,\n  parse\n}\n\nmodule.exports = fastUri\nmodule.exports.default = fastUri\nmodule.exports.fastUri = fastUri\n", "import * as uri from \"fast-uri\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n", "export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n", "import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n", "// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n", "import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n", "import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n", "import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n", "import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n", "import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n", "import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n", "import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          const ref = sch.$ref\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n          if (sch === undefined) throw new MissingRefError(it.opts.uriResolver, it.baseId, ref)\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n", "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Core schema meta-schema\",\n  \"definitions\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\"$ref\": \"#\"}\n    },\n    \"nonNegativeInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"nonNegativeIntegerDefault0\": {\n      \"allOf\": [{\"$ref\": \"#/definitions/nonNegativeInteger\"}, {\"default\": 0}]\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"uniqueItems\": true,\n      \"default\": []\n    }\n  },\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"$id\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$schema\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"$ref\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$comment\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"examples\": {\n      \"type\": \"array\",\n      \"items\": true\n    },\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"exclusiveMinimum\": 0\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"number\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"number\"\n    },\n    \"maxLength\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minLength\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"additionalItems\": {\"$ref\": \"#\"},\n    \"items\": {\n      \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/schemaArray\"}],\n      \"default\": true\n    },\n    \"maxItems\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minItems\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"contains\": {\"$ref\": \"#\"},\n    \"maxProperties\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minProperties\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"required\": {\"$ref\": \"#/definitions/stringArray\"},\n    \"additionalProperties\": {\"$ref\": \"#\"},\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"propertyNames\": {\"format\": \"regex\"},\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/stringArray\"}]\n      }\n    },\n    \"propertyNames\": {\"$ref\": \"#\"},\n    \"const\": true,\n    \"enum\": {\n      \"type\": \"array\",\n      \"items\": true,\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\"$ref\": \"#/definitions/simpleTypes\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/definitions/simpleTypes\"},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      ]\n    },\n    \"format\": {\"type\": \"string\"},\n    \"contentMediaType\": {\"type\": \"string\"},\n    \"contentEncoding\": {\"type\": \"string\"},\n    \"if\": {\"$ref\": \"#\"},\n    \"then\": {\"$ref\": \"#\"},\n    \"else\": {\"$ref\": \"#\"},\n    \"allOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"anyOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"oneOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"not\": {\"$ref\": \"#\"}\n  },\n  \"default\": true\n}\n", "import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nexport class Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nmodule.exports.Ajv = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n", "// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n", "import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n", "import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private rhs?: SafeExpr\n  ) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(\n    readonly lhs: Code,\n    public rhs: SafeExpr,\n    private readonly sideEffects?: boolean\n  ) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(\n    lhs: Code,\n    private readonly op: Code,\n    rhs: SafeExpr,\n    sideEffects?: boolean\n  ) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(\n    private condition: Code | boolean,\n    nodes?: ChildNode[]\n  ) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(\n    public name: Name,\n    public args: Code,\n    public async?: boolean\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n", "import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n", "import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n", "import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n", "import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n", "import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = (typeof _jsonTypes)[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n", "import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n", "import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n", "import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n", "import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n", "import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n", "import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponent} from \"fast-uri\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponent): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let innerBaseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") innerBaseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = innerBaseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n", "import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n", "import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n", "import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n", "import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport {URIComponent} from \"fast-uri\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URIComponent,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n", "{\n  \"$id\": \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n  \"description\": \"Meta-schema for $data reference (JSON AnySchema extension proposal)\",\n  \"type\": \"object\",\n  \"required\": [\"$data\"],\n  \"properties\": {\n    \"$data\": {\n      \"type\": \"string\",\n      \"anyOf\": [{\"format\": \"relative-json-pointer\"}, {\"format\": \"json-pointer\"}]\n    }\n  },\n  \"additionalProperties\": false\n}\n", "import * as uri from \"fast-uri\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n", "export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n", "import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n", "// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n", "import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n", "import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n", "import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n", "import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n", "import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n", "import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n", "import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          const ref = sch.$ref\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n          if (sch === undefined) throw new MissingRefError(it.opts.uriResolver, it.baseId, ref)\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n", "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Core schema meta-schema\",\n  \"definitions\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\"$ref\": \"#\"}\n    },\n    \"nonNegativeInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"nonNegativeIntegerDefault0\": {\n      \"allOf\": [{\"$ref\": \"#/definitions/nonNegativeInteger\"}, {\"default\": 0}]\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"uniqueItems\": true,\n      \"default\": []\n    }\n  },\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"$id\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$schema\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"$ref\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$comment\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"examples\": {\n      \"type\": \"array\",\n      \"items\": true\n    },\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"exclusiveMinimum\": 0\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"number\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"number\"\n    },\n    \"maxLength\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minLength\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"additionalItems\": {\"$ref\": \"#\"},\n    \"items\": {\n      \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/schemaArray\"}],\n      \"default\": true\n    },\n    \"maxItems\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minItems\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"contains\": {\"$ref\": \"#\"},\n    \"maxProperties\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minProperties\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"required\": {\"$ref\": \"#/definitions/stringArray\"},\n    \"additionalProperties\": {\"$ref\": \"#\"},\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"propertyNames\": {\"format\": \"regex\"},\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/stringArray\"}]\n      }\n    },\n    \"propertyNames\": {\"$ref\": \"#\"},\n    \"const\": true,\n    \"enum\": {\n      \"type\": \"array\",\n      \"items\": true,\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\"$ref\": \"#/definitions/simpleTypes\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/definitions/simpleTypes\"},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      ]\n    },\n    \"format\": {\"type\": \"string\"},\n    \"contentMediaType\": {\"type\": \"string\"},\n    \"contentEncoding\": {\"type\": \"string\"},\n    \"if\": {\"$ref\": \"#\"},\n    \"then\": {\"$ref\": \"#\"},\n    \"else\": {\"$ref\": \"#\"},\n    \"allOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"anyOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"oneOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"not\": {\"$ref\": \"#\"}\n  },\n  \"default\": true\n}\n", "import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nexport class Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nmodule.exports.Ajv = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n", "// @ts-nocheck\n\nimport React, { createContext, useContext, useEffect, useState, useRef } from 'react'\nimport { jwtDecode } from 'jwt-decode'\n\nimport { BasicSync } from './sync'\nimport { get, add, update, deleteRecord } from './db'\nimport { validateSchema, compareSchemas } from '@basictech/schema'\n\nimport { log } from './config'\nimport {version as currentVersion} from '../package.json'\n\ntype BasicSyncType = {\n    basic_schema: any;\n    connect: (options: { access_token: string }) => void;\n    debugeroo: () => void;\n    collection: (name: string) => {\n        ref: {\n            toArray: () => Promise<any[]>;\n            count: () => Promise<number>;\n        };\n    };\n    [key: string]: any; // For other potential methods and properties\n};\n\n\nenum DBStatus {\n    LOADING = \"LOADING\",\n    OFFLINE = \"OFFLINE\",\n    CONNECTING = \"CONNECTING\",\n    ONLINE = \"ONLINE\",\n    SYNCING = \"SYNCING\",\n    ERROR = \"ERROR\"\n}\n\ntype User = {\n    name?: string,\n    email?: string,\n    id?: string,\n    primaryEmailAddress?: {\n        emailAddress: string\n    },\n    fullName?: string\n}\ntype Token = {\n    access_token: string,\n    token_type: string,\n    expires_in: number,\n    refresh: string,\n}\n\nexport const BasicContext = createContext<{\n    unicorn: string,\n    isAuthReady: boolean,\n    isSignedIn: boolean,\n    user: User | null,\n    signout: () => void,\n    signin: () => void,\n    getToken: () => Promise<string>,\n    getSignInLink: () => string,\n    db: any,\n    dbStatus: DBStatus\n}>({\n    unicorn: \"🦄\",\n    isAuthReady: false,\n    isSignedIn: false,\n    user: null,\n    signout: () => { },\n    signin: () => { },\n    getToken: () => new Promise(() => { }),\n    getSignInLink: () => \"\",\n    db: {},\n    dbStatus: DBStatus.LOADING\n});\n\nconst EmptyDB: BasicSyncType = {\n    isOpen: false,\n    collection: () => {\n        return {\n            ref: {\n                toArray: () => [],\n                count: () => 0\n            }\n        }\n    }\n}\n\nasync function getSchemaStatus(schema: any) {\n    const projectId = schema.project_id\n    let status = ''\n    const valid = validateSchema(schema)\n\n    if (!valid.valid) {\n        console.warn('BasicDB Error: your local schema is invalid. Please fix errors and try again - sync is disabled')\n        return { \n            valid: false, \n            status: 'invalid',\n            latest: null\n        }\n    }\n\n    const latestSchema = await fetch(`https://api.basic.tech/project/${projectId}/schema`)\n    .then(res => res.json())\n    .then(data => data.data[0].schema)\n    .catch(err => {\n        return { \n            valid: false, \n            status: 'error',\n            latest: null\n        }\n    })\n\n    if (!latestSchema.version) {\n        return { \n            valid: false, \n            status: 'error',\n            latest: null\n        }\n    }\n\n    if (latestSchema.version > schema.version) {\n        // error_code: schema_behind\n        console.warn('BasicDB Error: your local schema version is behind the latest. Found version:', schema.version, 'but expected', latestSchema.version, \" - sync is disabled\")\n        return { \n            valid: false, \n            status: 'behind', \n            latest: latestSchema\n        }\n    } else if (latestSchema.version < schema.version) {\n        // error_code: schema_ahead\n        console.warn('BasicDB Error: your local schema version is ahead of the latest. Found version:', schema.version, 'but expected', latestSchema.version, \" - sync is disabled\")\n        return { \n            valid: false, \n            status: 'ahead', \n            latest: latestSchema\n        }\n    } else if (latestSchema.version === schema.version) {\n        const changes = compareSchemas(schema, latestSchema)\n        if (changes.valid) {\n            return { \n                valid: true,\n                status: 'current',\n                latest: latestSchema\n            }\n        } else {\n            // error_code: schema_conflict\n            console.warn('BasicDB Error: your local schema is conflicting with the latest. Your version:', schema.version, 'does not match origin version', latestSchema.version, \" - sync is disabled\")\n            return { \n                valid: false, \n                status: 'conflict',\n                latest: latestSchema\n            }\n        }\n    } else { \n        return { \n            valid: false, \n            status: 'error',\n            latest: null\n        }\n    }\n}\n\n\nfunction getSyncStatus(statusCode: number): string {\n    switch (statusCode) {\n        case -1:\n            return \"ERROR\";\n        case 0:\n            return \"OFFLINE\";\n        case 1:\n            return \"CONNECTING\";\n        case 2:\n            return \"ONLINE\";\n        case 3:\n            return \"SYNCING\";\n        case 4:\n            return \"ERROR_WILL_RETRY\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n\ntype ErrorObject = {\n    code: string;\n    title: string;\n    message: string;\n}\n\nasync function checkForNewVersion(): Promise<{ hasNewVersion: boolean, latestVersion: string | null, currentVersion: string | null }> {\n    try {\n\n        const isBeta = currentVersion.includes('beta')\n\n        const response = await fetch(`https://registry.npmjs.org/@basictech/react/${isBeta ? 'beta' : 'latest'}`);\n        if (!response.ok) {\n            throw new Error('Failed to fetch version from npm');\n        }\n\n        const data = await response.json();\n        const latestVersion = data.version;\n\n        if (latestVersion !== currentVersion) {\n            console.warn('[basic] New version available:', latestVersion, `\\nrun \"npm install @basictech/react@${latestVersion}\" to update`);\n        }\n        if (isBeta) {\n            log('thank you for being on basictech/react beta :)')\n        }\n     \n        return {\n            hasNewVersion: currentVersion !== latestVersion,\n            latestVersion,\n            currentVersion\n        };\n    } catch (error) {\n        log('Error checking for new version:', error);\n        return {\n            hasNewVersion: false,\n            latestVersion: null, \n            currentVersion: null\n        };\n    }\n}\n\nexport function BasicProvider({ children, project_id, schema, debug = false }: { children: React.ReactNode, project_id?: string, schema?: any, debug?: boolean }) {\n    const [isAuthReady, setIsAuthReady] = useState(false)\n    const [isSignedIn, setIsSignedIn] = useState<boolean>(false)\n    const [token, setToken] = useState<Token | null>(null)\n    const [user, setUser] = useState<User>({})\n    const [shouldConnect, setShouldConnect] = useState<boolean>(false)\n    const [isReady, setIsReady] = useState<boolean>(false)\n\n    const [dbStatus, setDbStatus] = useState<DBStatus>(DBStatus.OFFLINE)\n    const [error, setError] = useState<ErrorObject | null>(null)\n\n    const syncRef = useRef<BasicSync | null>(null);\n\n    useEffect(() => {\n        function initDb(options: { shouldConnect: boolean }) {\n            if (!syncRef.current) {\n                log('Initializing BasicDB')\n                syncRef.current = new BasicSync('basicdb', { schema: schema });\n                \n                syncRef.current.syncable.on('statusChanged', (status: number, url: string) => {\n                    setDbStatus(getSyncStatus(status))\n                })\n        \n                syncRef.current.syncable.getStatus().then((status) => {\n                    setDbStatus(getSyncStatus(status))\n                })\n\n                if (options.shouldConnect) {    \n                    setShouldConnect(true)\n                } else { \n                    log('Sync is disabled')\n                }\n\n                setIsReady(true)\n\n                // log('db is open', syncRef.current.isOpen())\n                // syncRef.current.open()\n                // .then(() => {\n                //     log(\"is open now:\", syncRef.current.isOpen())\n                // })\n            }\n        }\n\n        async function checkSchema() {\n            const valid = validateSchema(schema)\n            if (!valid.valid) {\n                log('Basic Schema is invalid!', valid.errors)\n                console.group('Schema Errors')\n                let errorMessage = ''\n                valid.errors.forEach((error, index) => {\n                    log(`${index + 1}:`, error.message, ` - at ${error.instancePath}`)\n                    errorMessage += `${index + 1}: ${error.message} - at ${error.instancePath}\\n`\n                })\n                console.groupEnd('Schema Errors')\n                setError({\n                    code: 'schema_invalid',\n                    title: 'Basic Schema is invalid!',\n                    message: errorMessage\n                })\n                setIsReady(true)\n                return null\n            }\n\n\n            let schemaStatus = { valid: false }\n            if (schema.version !== 0) {\n                schemaStatus = await getSchemaStatus(schema)\n            }\n\n            if (schemaStatus.valid) {\n                initDb({ shouldConnect: true })\n            } else {\n                initDb({ shouldConnect: false })\n            }\n            \n            checkForNewVersion()\n        }\n\n        if (schema) {\n            checkSchema()\n        } else {\n            setIsReady(true)\n        }\n    }, []);\n\n\n    useEffect(() => {\n        if (token && syncRef.current && isSignedIn && shouldConnect) {\n            connectToDb()\n        }\n    }, [isSignedIn, shouldConnect])\n\n    useEffect(() => {\n        localStorage.setItem('basic_debug', debug ? 'true' : 'false')\n\n        try {\n            if (window.location.search.includes('code')) {\n                let code = window.location?.search?.split('code=')[1].split('&')[0]\n\n                const state = localStorage.getItem('basic_auth_state')\n                if (!state || state !== window.location.search.split('state=')[1].split('&')[0]) {\n                    log('error: auth state does not match')\n                    setIsAuthReady(true)\n\n                    localStorage.removeItem('basic_auth_state')\n                    window.history.pushState({}, document.title, \"/\");\n                    return\n                }\n\n                localStorage.removeItem('basic_auth_state')\n\n                fetchToken(code)                \n            } else { \n                let cookie_token = getCookie('basic_token')\n                if (cookie_token !== '') {\n                    setToken(JSON.parse(cookie_token))\n                } else { \n                    setIsAuthReady(true)\n                }\n            }\n\n\n        } catch (e) {\n            log('error getting cookie', e)\n        }\n    }, [])\n\n    useEffect(() => {\n        async function fetchUser(acc_token: string) {\n            console.info('fetching user')\n            const user = await fetch('https://api.basic.tech/auth/userInfo', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${acc_token}`\n                }\n            })\n                .then(response => response.json())\n                .catch(error => log('Error:', error))\n\n            if (user.error) {\n                log('error fetching user', user.error)\n                // refreshToken()\n                return\n            } else {\n                // log('user', user)\n                document.cookie = `basic_token=${JSON.stringify(token)}; Secure; SameSite=Strict`;\n                \n                if (window.location.search.includes('code')) {\n                    window.history.pushState({}, document.title, \"/\");\n                }\n                \n                setUser(user)\n                setIsSignedIn(true)\n\n                setIsAuthReady(true)\n            }\n        }\n\n        async function checkToken() {\n            if (!token) {\n                log('error: no user token found')\n\n                setIsAuthReady(true)\n                return\n            }\n\n            const decoded = jwtDecode(token?.access_token)\n            const isExpired = decoded.exp && decoded.exp < Date.now() / 1000\n\n            if (isExpired) {\n                log('token is expired - refreshing ...')\n                const newToken = await fetchToken(token?.refresh)\n                fetchUser(newToken.access_token)\n            } else {\n                fetchUser(token.access_token)\n            }\n        }\n\n        if (token) {\n            checkToken()\n        } \n    }, [token])\n\n    const connectToDb = async () => {\n        const tok = await getToken()\n        if (!tok) {\n            log('no token found')\n            return\n        }\n\n        log('connecting to db...')\n\n        // TODO: handle if signed out after connect() is already called\n\n        syncRef.current.connect({ access_token: tok })\n            .catch((e) => {\n                log('error connecting to db', e)\n            })\n    }\n\n    const getSignInLink = () => {\n        log('getting sign in link...')\n\n        const randomState = Math.random().toString(36).substring(6);\n        localStorage.setItem('basic_auth_state', randomState)\n\n        let baseUrl = \"https://api.basic.tech/auth/authorize\"\n        baseUrl += `?client_id=${project_id}`\n        baseUrl += `&redirect_uri=${encodeURIComponent(window.location.href)}`\n        baseUrl += `&response_type=code`\n        baseUrl += `&scope=openid`\n        baseUrl += `&state=${randomState}`\n\n        return baseUrl;\n    }\n\n    const signin = () => {\n        log('signing in: ', getSignInLink())\n        const signInLink = getSignInLink()\n        //todo: change to the other thing?\n        window.location.href = signInLink;\n    }\n\n    const signout = () => {\n        log('signing out!')\n        setUser({})\n        setIsSignedIn(false)\n        setToken(null)\n        document.cookie = `basic_token=; Secure; SameSite=Strict`;\n        localStorage.removeItem('basic_auth_state')\n\n        // if (syncRef.current) {\n        //     // WIP - BUG - sometimes connects even after signout\n        //     syncRef.current.disconnect()\n\n            \n        // }\n        if (syncRef.current) {\n            (async () => {\n                try {\n                    await syncRef.current.close()\n                    await syncRef.current.delete({disableAutoOpen: false})\n                    syncRef.current = null\n                    window?.location?.reload()\n                } catch (error) {\n                    console.error('Error during database cleanup:', error)\n                }\n            })()\n        }\n    }\n\n    const getToken = async (): Promise<string> => {\n        log('getting token...')\n\n        if (!token) {\n            log('no token found')\n            throw new Error('no token found')\n        }\n\n        const decoded = jwtDecode(token?.access_token)\n        const isExpired = decoded.exp && decoded.exp < Date.now() / 1000\n\n        if (isExpired) {\n            log('token is expired - refreshing ...')\n            const newToken = await fetchToken(token?.refresh)\n            return newToken?.access_token || ''\n        }\n\n        return token?.access_token || ''\n    }\n\n    function getCookie(name: string) {\n        let cookieValue = '';\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    const fetchToken = async (code: string) => {\n        const token = await fetch('https://api.basic.tech/auth/token', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ code: code })\n        })\n            .then(response => response.json())\n            .catch(error => log('Error:', error))\n\n        if (token.error) {\n            log('error fetching token', token.error)\n            return\n        } else {\n            // log('token', token)\n            setToken(token)\n        }\n        return token\n    }\n\n\n    const db_ = (tableName: string) => {\n        const checkSignIn = () => {\n            if (!isSignedIn) {\n                throw new Error('cannot use db. user not logged in.')\n            }\n        }\n\n        return {\n            get: async () => {\n                checkSignIn()\n                const tok = await getToken()\n                return get({ projectId: project_id, accountId: user.id, tableName: tableName, token: tok })\n            },\n            add: async (value: any) => {\n                checkSignIn()\n                const tok = await getToken()\n                return add({ projectId: project_id, accountId: user.id, tableName: tableName, value: value, token: tok })\n            },\n            update: async (id: string, value: any) => {\n                checkSignIn()\n                const tok = await getToken()\n                return update({ projectId: project_id, accountId: user.id, tableName: tableName, id: id, value: value, token: tok })\n            },\n            delete: async (id: string) => {\n                checkSignIn()\n                const tok = await getToken()\n                return deleteRecord({ projectId: project_id, accountId: user.id, tableName: tableName, id: id, token: tok })\n            }\n\n        }\n\n    }\n\n    const noDb = ({ \n        collection: () => {\n            throw new Error('no basicdb found - initialization failed. double check your schema.')\n        }\n    })\n\n    return (\n        <BasicContext.Provider value={{\n            unicorn: \"🦄\",\n            isAuthReady,\n            isSignedIn,\n            user,\n            signout,\n            signin,\n            getToken,\n            getSignInLink,\n            db: syncRef.current ? syncRef.current : noDb,\n            dbStatus\n        }}>\n            {error && <ErrorDisplay error={error} />}\n            {isReady && children}\n        </BasicContext.Provider>\n    )\n}\n\nfunction ErrorDisplay({ error }: { error: ErrorObject }) {\n    return <div style={{ \n        position: 'absolute',\n        top: 20, \n        left: 20,\n        color: 'black',\n        backgroundColor: '#f8d7da',\n        border: '1px solid #f5c6cb',\n        borderRadius: '4px',\n        padding: '20px',\n        maxWidth: '400px',\n        margin: '20px auto',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        fontFamily: 'monospace', \n     }}>\n        <h3 style={{fontSize: '0.8rem', opacity: 0.8}}>code: {error.code}</h3>\n        <h1 style={{fontSize: '1.2rem', lineHeight: '1.5'}}>{error.title}</h1>\n        <p>{error.message}</p>\n    </div>\n}\n\n/*\npossible errors: \n- projectid missing / invalid\n- schema missing / invalid\n*/\n\nexport function useBasic() {\n    return useContext(BasicContext);\n}\n", "\"use client\"\n\nimport { v7 as uuidv7 } from 'uuid';\nimport { Dexie, PromiseExtended } from 'dexie';\nimport 'dexie-syncable';\nimport 'dexie-observable';\n\nimport { syncProtocol } from './syncProtocol'\nimport { SERVER_URL, log } from '../config'\n\nimport { validateSchema, validateData } from '../schema'\nsyncProtocol()\n\n\n// const DexieSyncStatus = {\n//   \"-1\": \"ERROR\",\n//   \"0\": \"OFFLINE\",\n//   \"1\": \"CONNECTING\",\n//   \"2\": \"ONLINE\",\n//   \"3\": \"SYNCING\",\n//   \"4\": \"ERROR_WILL_RETRY\"\n// }\n\n\n\n\n\nexport class BasicSync extends Dexie {\n  basic_schema: any\n\n  constructor(name: string, options: any) {\n    super(name, options);\n\n    // --- INIT SCHEMA --- // \n\n    //todo: handle versions?\n\n    // TODO: validate schema\n    this.basic_schema = options.schema\n    this.version(1).stores(this._convertSchemaToDxSchema(this.basic_schema))\n\n    this.version(2).stores({})\n    // this.verssion\n\n\n    // create an alias for toArray\n    // @ts-ignore\n    this.Collection.prototype.get = this.Collection.prototype.toArray\n\n\n    // --- SYNC --- // \n\n    // this.syncable.on(\"statusChanged\", (status, url) => { \n    //   console.log(\"statusChanged\", status, url)\n    // })\n\n  }\n\n  async connect({ access_token }: { access_token: string }) {\n    const WS_URL = `${SERVER_URL}/ws`\n\n    await this.updateSyncNodes();\n    \n    log('Starting connection...')\n    return this.syncable.connect(\"websocket\", WS_URL, { authToken: access_token, schema: this.basic_schema });\n  }\n\n  async disconnect() {\n    const WS_URL = `${SERVER_URL}/ws`\n\n    return this.syncable.disconnect(WS_URL) \n  }\n\n  private async updateSyncNodes() {\n    try {\n      const syncNodes = await this.table('_syncNodes').toArray();\n      const localSyncNodes = syncNodes.filter(node => node.type === 'local');\n      log('Local sync nodes:', localSyncNodes);\n\n      if (localSyncNodes.length > 1) {\n\n        \n        const largestNodeId = Math.max(...localSyncNodes.map(node => node.id));\n        // Check if the largest node is already the master\n        const largestNode = localSyncNodes.find(node => node.id === largestNodeId);\n        if (largestNode && largestNode.isMaster === 1) {\n          log('Largest node is already the master. No changes needed.');\n          return; // Exit the function early as no changes are needed\n        }\n\n\n        log('Largest node id:', largestNodeId);\n        log('HEISENBUG: More than one local sync node found.')\n\n        for (const node of localSyncNodes) {\n          log(`Local sync node keys:`, node.id, node.isMaster);\n          await this.table('_syncNodes').update(node.id, { isMaster: node.id === largestNodeId ? 1 : 0 });\n\n          log(`HEISENBUG: Setting ${node.id} to ${node.id === largestNodeId ? 'master' : '0'}`);\n        }\n\n        // add delay to ensure sync nodes are updated // i dont think this helps?\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        if (typeof window !== 'undefined') {\n          window.location.reload();\n        }\n      }\n\n      log('Sync nodes updated');\n    } catch (error) {\n      console.error('Error updating _syncNodes table:', error);\n    }\n  }\n\n  handleStatusChange(fn: any) {\n    this.syncable.on(\"statusChanged\", fn)\n  }\n\n\n  _convertSchemaToDxSchema(schema: any) {\n    const stores = Object.entries(schema.tables).map(([key, table]: any) => {\n\n      const indexedFields = Object.entries(table.fields).filter(([key, field]: any) => field.indexed).map(([key, field]: any) => `,${key}`).join('')\n      return {\n        [key]: 'id' + indexedFields\n      }\n    })\n\n    return Object.assign({}, ...stores)\n  }\n\n  debugeroo() {\n    // console.log(\"debugeroo\", this.syncable)\n\n    // this.syncable.list().then(x => console.log(x))\n\n    // this.syncable\n    return this.syncable\n  }\n\n  collection(name: string) {\n    // TODO: check against schema\n\n    return {\n\n      /**\n       * Returns the underlying Dexie table\n       * @type {Dexie.Table}\n       */\n      ref: this.table(name),\n\n      // --- WRITE ---- // \n      add: (data: any) => {\n        // log(\"Adding data to\", name, data)\n\n        const valid = validateData(this.basic_schema, name, data)\n        if (!valid.valid) {\n          log('Invalid data', valid)\n          return Promise.reject({ ... valid })\n        }\n\n        return this.table(name).add({\n          id: uuidv7(),\n          ...data\n        })\n\n      },\n\n      put: (data: any) => {\n        const valid = validateData(this.basic_schema, name, data)\n        if (!valid.valid) {\n          log('Invalid data', valid)\n          return Promise.reject({ ... valid })\n        }\n\n        return this.table(name).put({\n          id: uuidv7(),\n          ...data\n        })\n      },\n\n      update: (id: string, data: any) => {\n        const valid = validateData(this.basic_schema, name, data, false)\n        if (!valid.valid) {\n          log('Invalid data', valid)\n          return Promise.reject({ ... valid })\n        }\n\n        return this.table(name).update(id, data)\n      },\n\n      delete: (id: string) => {\n        return this.table(name).delete(id)\n      },\n\n\n      // --- READ ---- // \n\n      get: async (id: string) => {\n        return this.table(name).get(id) \n      },\n\n      getAll: async () => {\n        return this.table(name).toArray();\n      },\n\n      // --- QUERY ---- // \n      // TODO: lots to do here. simplifing creating querie,  filtering/ordering/limit, and execute\n\n      query: () => this.table(name),\n\n      filter: (fn: any) => this.table(name).filter(fn).toArray(),\n\n    }\n  }\n}\n\nclass QueryMethod { \n\n}\n", "\"use client\"\nimport { Dexie } from \"dexie\";\nimport { log } from \"../config\";\n\nexport const syncProtocol = function () {\n  log(\"Initializing syncProtocol\");\n  // Constants:\n  var RECONNECT_DELAY = 5000; // Reconnect delay in case of errors such as network down.\n\n  Dexie.Syncable.registerSyncProtocol(\"websocket\", {\n    sync: function (\n      context,\n      url,\n      options,\n      baseRevision,\n      syncedRevision,\n      changes,\n      partial,\n      applyRemoteChanges,\n      onChangesAccepted,\n      onSuccess,\n      onError,\n    ) {\n      // The following vars are needed because we must know which callback to ack when server sends it's ack to us.\n      var requestId = 0;\n      var acceptCallbacks = {};\n\n      // Connect the WebSocket to given url:\n      var ws = new WebSocket(url);\n\n      // console.log(\"ws OPTIONS\", options);\n\n      // sendChanges() method:\n      function sendChanges(changes, baseRevision, partial, onChangesAccepted) {\n        log(\"sendChanges\", changes.length, baseRevision);\n        ++requestId;\n        acceptCallbacks[requestId.toString()] = onChangesAccepted;\n\n        // In this example, the server expects the following JSON format of the request:\n        //  {\n        //      type: \"changes\"\n        //      baseRevision: baseRevision,\n        //      changes: changes,\n        //      partial: partial,\n        //      requestId: id\n        //  }\n        //  To make the sample simplified, we assume the server has the exact same specification of how changes are structured.\n        //  In real world, you would have to pre-process the changes array to fit the server specification.\n        //  However, this example shows how to deal with the WebSocket to fullfill the API.\n\n        ws.send(\n          JSON.stringify({\n            type: \"changes\",\n            changes: changes,\n            partial: partial,\n            baseRevision: baseRevision,\n            requestId: requestId,\n          }),\n        );\n      }\n\n\n\n      // When WebSocket opens, send our changes to the server.\n      ws.onopen = function (event) {\n        // Initiate this socket connection by sending our clientIdentity. If we dont have a clientIdentity yet,\n        // server will call back with a new client identity that we should use in future WebSocket connections.\n        \n        // send the schema to the server\n        log(\"Opening socket - sending clientIdentity\", context.clientIdentity);\n        ws.send(\n          JSON.stringify({\n            type: \"clientIdentity\",\n            clientIdentity: context.clientIdentity || null,\n            authToken: options.authToken,\n            schema: options.schema\n          }),\n        );\n\n      };\n\n      // If network down or other error, tell the framework to reconnect again in some time:\n      ws.onerror = function (event) {\n        ws.close();\n        log(\"ws.onerror\", event);\n        onError(event?.message, RECONNECT_DELAY);\n      };\n\n      // If socket is closed (network disconnected), inform framework and make it reconnect\n      ws.onclose = function (event) {\n        // console.log('🙅 ws.onclose', event)\n        onError(\"Socket closed: \" + event.reason, RECONNECT_DELAY);\n      };\n\n      // isFirstRound: Will need to call onSuccess() only when we are in sync the first time.\n      // onSuccess() will unblock Dexie to be used by application code.\n      // If for example app code writes: db.friends.where('shoeSize').above(40).toArray(callback), the execution of that query\n      // will not run until we have called onSuccess(). This is because we want application code to get results that are as\n      // accurate as possible. Specifically when connected the first time and the entire DB is being synced down to the browser,\n      // it is important that queries starts running first when db is in sync.\n      var isFirstRound = true;\n      // When message arrive from the server, deal with the message accordingly:\n      ws.onmessage = function (event) {\n        try {\n          // Assume we have a server that should send JSON messages of the following format:\n          // {\n          //     type: \"clientIdentity\", \"changes\", \"ack\" or \"error\"\n          //     clientIdentity: unique value for our database client node to persist in the context. (Only applicable if type=\"clientIdentity\")\n          //     message: Error message (Only applicable if type=\"error\")\n          //     requestId: ID of change request that is acked by the server (Only applicable if type=\"ack\" or \"error\")\n          //     changes: changes from server (Only applicable if type=\"changes\")\n          //     lastRevision: last revision of changes sent (applicable if type=\"changes\")\n          //     partial: true if server has additionalChanges to send. False if these changes were the last known. (applicable if type=\"changes\")\n          // }\n          var requestFromServer = JSON.parse(event.data);\n          log(\"requestFromServer\", requestFromServer, { acceptCallback, isFirstRound });\n\n          if (requestFromServer.type == \"clientIdentity\") {\n            context.clientIdentity = requestFromServer.clientIdentity;\n            context.save();\n\n            sendChanges(changes, baseRevision, partial, onChangesAccepted);\n\n            ws.send(\n              JSON.stringify({\n                type: \"subscribe\",\n                syncedRevision: syncedRevision,\n              }),\n            );\n          } else if (requestFromServer.type == \"changes\") {\n            applyRemoteChanges(\n              requestFromServer.changes,\n              requestFromServer.currentRevision,\n              requestFromServer.partial,\n            );\n            if (isFirstRound && !requestFromServer.partial) {\n              // Since this is the first sync round and server sais we've got all changes - now is the time to call onsuccess()\n              onSuccess({\n                // Specify a react function that will react on additional client changes\n                react: function (\n                  changes,\n                  baseRevision,\n                  partial,\n                  onChangesAccepted,\n                ) {\n                  sendChanges(\n                    changes,\n                    baseRevision,\n                    partial,\n                    onChangesAccepted,\n                  );\n                },\n                // Specify a disconnect function that will close our socket so that we dont continue to monitor changes.\n                disconnect: function () {\n                  ws.close();\n                },\n              });\n              isFirstRound = false;\n            }\n          } else if (requestFromServer.type == \"ack\") {\n            var requestId = requestFromServer.requestId;\n            var acceptCallback = acceptCallbacks[requestId.toString()];\n            acceptCallback(); // Tell framework that server has acknowledged the changes sent.\n            delete acceptCallbacks[requestId.toString()];\n          } else if (requestFromServer.type == \"error\") {\n            var requestId = requestFromServer.requestId;\n            ws.close();\n            onError(requestFromServer.message, Infinity); // Don't reconnect - an error in application level means we have done something wrong.\n          } else {\n            log(\"unknown message\", requestFromServer);\n            ws.close();\n            onError(\"unknown message\", Infinity);\n          }\n        } catch (e) {\n          ws.close();\n          log(\"caught error\", e)\n          onError(e, Infinity); // Something went crazy. Server sends invalid format or our code is buggy. Dont reconnect - it would continue failing.\n        }\n      };\n    },\n  });\n};\n", "\nexport const SERVER_URL = \"https://api.basic.tech\"\n//  export const SERVER_URL = \"http://localhost:3003\"\n\n\nexport const log = (...args: any[]) => {\n    try { \n        if (localStorage.getItem('basic_debug') === 'true') {\n            console.log('[basic]', ...args)\n        }\n    } catch (e) {\n        // console.log('error logging', e)\n    }\n}\n\n// export const log = (message: string, ...args: any[]) => {\n//     try {\n//         if (process.env.NODE_ENV === 'development') {\n//             const stack = new Error().stack;\n//             const caller = stack?.split('\\n')[2]?.trim();\n//             console.log(`[basic] ${message}`, ...args);\n//             // console.log(`[stack] ${caller}`);\n//         }\n//     } catch (e) {\n//         console.error('Error in logWithStack:', e);\n//     }\n// }\n", "// Basic Schema Library\n// utils for validating and interacting with Basic schemas\nimport Ajv, { ErrorObject } from 'ajv'\n\nconst basicJsonSchema = {\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"project_id\": {\n            \"type\": \"string\"\n        },\n        \"namespace\": {\n            \"type\": \"string\",\n        },\n        \"version\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n        },\n        \"tables\": {\n            \"type\": \"object\",\n            \"patternProperties\": {\n                \"^[a-zA-Z0-9_]+$\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\"collection\"]\n                        },\n                        \"fields\": {\n                            \"type\": \"object\",\n                            \"patternProperties\": {\n                                \"^[a-zA-Z0-9_]+$\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"type\": {\n                                            \"type\": \"string\",\n                                            \"enum\": [\"string\", \"boolean\", \"number\", \"json\"]\n                                        },\n                                        \"indexed\": {\n                                            \"type\": \"boolean\"\n                                        }, \n                                        \"required\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    },\n                                    \"required\": [\"type\"]\n                                }\n                            },\n                            \"additionalProperties\": true\n                        }\n                    },\n                    \"required\": [\"fields\"]\n                }\n            },\n            \"additionalProperties\": true\n        }\n    },\n    \"required\": [\"project_id\", \"version\", \"tables\"]\n  }\nconst ajv = new Ajv()\nconst validator = ajv.compile(basicJsonSchema)\n\ntype Schema = typeof basicJsonSchema\n\nfunction generateEmptySchema() {\n   \n}\n\n\n/**\n * Validate a schema\n * only checks if the schema is formatted correctly, not if can be published\n * @param schema - The schema to validate\n * @returns {valid: boolean, errors: any[]} - The validation result\n */\nfunction validateSchema(schema: Schema) : {valid: boolean, errors: ErrorObject[]} {\n    const v = validator(schema)\n    return { \n        valid: v,\n        errors: validator.errors || []\n    }\n}\n\n// type ErrorObject = {\n//     keyword: string;\n//     instancePath: string; \n//     schemaPath: string;\n//     params: Record<string, any>;\n//     propertyName?: string;\n//     message?: string;\n//     schema?: any;\n//     parentSchema?: any;\n//     data?: any;\n// }\n\n\nfunction validateData(schema: any, table: string, data: Record<string, any>, checkRequired: boolean = true) {\n    const valid = validateSchema(schema)\n    if (!valid.valid) {\n        return { valid: false, errors: valid.errors, message: \"Schema is invalid\" }\n    }\n\n    const tableSchema = schema.tables[table]\n\n    if (!tableSchema) {\n        return { valid: false, errors: [{ message: `Table ${table} not found in schema` }], message: \"Table not found\" }\n    }\n\n    for (const [fieldName, fieldValue] of Object.entries(data)) {\n        const fieldSchema = tableSchema.fields[fieldName]\n        \n        if (!fieldSchema) {\n            return { \n                valid: false, \n                errors: [{ message: `Field ${fieldName} not found in schema` }],\n                message: \"Invalid field\"\n            }\n        }\n\n        const schemaType = fieldSchema.type\n        const valueType = typeof fieldValue\n\n        if (\n            (schemaType === 'string' && valueType !== 'string') ||\n            (schemaType === 'number' && valueType !== 'number') ||\n            (schemaType === 'boolean' && valueType !== 'boolean') ||\n            (schemaType === 'json' && valueType !== 'object')\n        ) {\n            return {\n                valid: false,\n                errors: [{ \n                    message: `Field ${fieldName} should be type ${schemaType}, got ${valueType}` \n                }],\n                message: \"invalid type\"\n            }\n        }\n    }\n\n    if (checkRequired) {\n        for (const [fieldName, fieldSchema] of Object.entries(tableSchema.fields)) {\n            if ((fieldSchema as { required?: boolean }).required && !data[fieldName]) {\n                return { valid: false, errors: [{ message: `Field ${fieldName} is required` }], message: \"Required field missing\" }\n            }\n        }\n    }\n\n    return { valid: true, errors: [] }\n}\n\n\nexport {\n    validateSchema,\n    validateData,\n    generateEmptySchema\n}\n\n", "//@ts-nocheck\n\nconst baseUrl = 'https://api.basic.tech';\n// const baseUrl = 'http://localhost:3000';\n\n\nasync function get({ projectId, accountId, tableName, token }) {\n    const url = `${baseUrl}/project/${projectId}/db/${accountId}/${tableName}`;\n    const response = await fetch(url, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n    return response.json();\n}\n\nasync function add({ projectId, accountId, tableName, value, token }) {\n    const url = `${baseUrl}/project/${projectId}/db/${accountId}/${tableName}`;\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\"value\": value})\n    });\n    return response.json();\n}\n\nasync function update({ projectId, accountId, tableName, id, value, token }) {\n    const url = `${baseUrl}/project/${projectId}/db/${accountId}/${tableName}/${id}`;\n    const response = await fetch(url, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({id: id, value: value})\n    });\n    return response.json();\n}\n\nasync function deleteRecord({ projectId, accountId, tableName, id, token }) {\n    const url = `${baseUrl}/project/${projectId}/db/${accountId}/${tableName}/${id}`;\n    const response = await fetch(url, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n    return response.json();\n}\n\nexport { get, add, update, deleteRecord };\n\n", "{\n  \"name\": \"@basictech/react\",\n  \"version\": \"0.5.0-beta.5\",\n  \"description\": \"\",\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.mjs\",\n  \"types\": \"dist/index.d.ts\",\n  \"private\": false,\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"dev\": \"tsup --watch\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"ajv\": \"^8.17.1\",\n    \"dexie\": \"^4.0.8\",\n    \"dexie-observable\": \"^4.0.1-beta.13\",\n    \"dexie-react-hooks\": \"^1.1.7\",\n    \"dexie-syncable\": \"^4.0.1-beta.13\",\n    \"jwt-decode\": \"^4.0.0\",\n    \"uuid\": \"^10.0.0\",\n    \"@basictech/schema\": \"0.5.0\"\n  },\n  \"devDependencies\": {\n    \"@repo/typescript-config\": \"*\",\n    \"tsup\": \"^7.2.0\",\n    \"typescript\": \"^5.0.0\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n  }\n}\n", "import { useState } from \"react\";\nimport { useBasic, BasicProvider } from \"./AuthContext\";\nimport { useLiveQuery as useQuery } from \"dexie-react-hooks\";\n\n// const useQuery = (queryable: any) => {\n//     const [loading, setLoading] = useState(true)\n//     const [error, setError] = useState<Error | null>(null)\n\n//     const result = useLiveQuery(async () => {\n//         try {\n//             setLoading(true)\n//             setError(null)\n            \n//             // if (typeof queryable === 'function') {\n//             //     return await queryable()\n//             // }\n//             return queryable\n            \n//         } catch (err) {\n//             setError(err instanceof Error ? err : new Error('Unknown error'))\n//             return undefined\n//         } finally {\n//             setLoading(false)\n//         }\n//     }, [queryable])\n\n//     return {\n//         data: result,\n//         loading,\n//         error\n//     }\n// }\n\n\n\nexport {\n    useBasic, BasicProvider, useQuery\n}\n", "export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;", "import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;", "import validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  var v;\n  var arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;", "import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n\n/*\n * Convert an array of little-endian words to an array of bytes\n */\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n  return output;\n}\n\n/**\n * Calculate output length with padding and bit length\n */\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\n\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n  return output;\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n    case 1:\n      return x ^ y ^ z;\n    case 2:\n      return x & y ^ x & z ^ y & z;\n    case 3:\n      return x ^ y ^ z;\n  }\n}\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n    M[_i] = arr;\n  }\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\n/**\n * UUID V7 - Unix Epoch time-based UUID\n *\n * The IETF has published RFC9562, introducing 3 new UUID versions (6,7,8). This\n * implementation of V7 is based on the accepted, though not yet approved,\n * revisions.\n *\n * RFC 9562:https://www.rfc-editor.org/rfc/rfc9562.html Universally Unique\n * IDentifiers (UUIDs)\n\n *\n * Sample V7 value:\n * https://www.rfc-editor.org/rfc/rfc9562.html#name-example-of-a-uuidv7-value\n *\n * Monotonic Bit Layout: RFC rfc9562.6.2 Method 1, Dedicated Counter Bits ref:\n *     https://www.rfc-editor.org/rfc/rfc9562.html#section-6.2-5.1\n *\n *   0                   1                   2                   3 0 1 2 3 4 5 6\n *   7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                          unix_ts_ms                           |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |          unix_ts_ms           |  ver  |        seq_hi         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |var|               seq_low               |        rand         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                             rand                              |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *\n * seq is a 31 bit serialized counter; comprised of 12 bit seq_hi and 19 bit\n * seq_low, and randomly initialized upon timestamp change. 31 bit counter size\n * was selected as any bitwise operations in node are done as _signed_ 32 bit\n * ints. we exclude the sign bit.\n */\n\nvar _seqLow = null;\nvar _seqHigh = null;\nvar _msecs = 0;\nfunction v7(options, buf, offset) {\n  options = options || {};\n\n  // initialize buffer and pointer\n  var i = buf && offset || 0;\n  var b = buf || new Uint8Array(16);\n\n  // rnds is Uint8Array(16) filled with random bytes\n  var rnds = options.random || (options.rng || rng)();\n\n  // milliseconds since unix epoch, 1970-01-01 00:00\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // seq is user provided 31 bit counter\n  var seq = options.seq !== undefined ? options.seq : null;\n\n  // initialize local seq high/low parts\n  var seqHigh = _seqHigh;\n  var seqLow = _seqLow;\n\n  // check if clock has advanced and user has not provided msecs\n  if (msecs > _msecs && options.msecs === undefined) {\n    _msecs = msecs;\n\n    // unless user provided seq, reset seq parts\n    if (seq !== null) {\n      seqHigh = null;\n      seqLow = null;\n    }\n  }\n\n  // if we have a user provided seq\n  if (seq !== null) {\n    // trim provided seq to 31 bits of value, avoiding overflow\n    if (seq > 0x7fffffff) {\n      seq = 0x7fffffff;\n    }\n\n    // split provided seq into high/low parts\n    seqHigh = seq >>> 19 & 0xfff;\n    seqLow = seq & 0x7ffff;\n  }\n\n  // randomly initialize seq\n  if (seqHigh === null || seqLow === null) {\n    seqHigh = rnds[6] & 0x7f;\n    seqHigh = seqHigh << 8 | rnds[7];\n    seqLow = rnds[8] & 0x3f; // pad for var\n    seqLow = seqLow << 8 | rnds[9];\n    seqLow = seqLow << 5 | rnds[10] >>> 3;\n  }\n\n  // increment seq if within msecs window\n  if (msecs + 10000 > _msecs && seq === null) {\n    if (++seqLow > 0x7ffff) {\n      seqLow = 0;\n      if (++seqHigh > 0xfff) {\n        seqHigh = 0;\n\n        // increment internal _msecs. this allows us to continue incrementing\n        // while staying monotonic. Note, once we hit 10k milliseconds beyond system\n        // clock, we will reset breaking monotonicity (after (2^31)*10000 generations)\n        _msecs++;\n      }\n    }\n  } else {\n    // resetting; we have advanced more than\n    // 10k milliseconds beyond system clock\n    _msecs = msecs;\n  }\n  _seqHigh = seqHigh;\n  _seqLow = seqLow;\n\n  // [bytes 0-5] 48 bits of local timestamp\n  b[i++] = _msecs / 0x10000000000 & 0xff;\n  b[i++] = _msecs / 0x100000000 & 0xff;\n  b[i++] = _msecs / 0x1000000 & 0xff;\n  b[i++] = _msecs / 0x10000 & 0xff;\n  b[i++] = _msecs / 0x100 & 0xff;\n  b[i++] = _msecs & 0xff;\n\n  // [byte 6] - set 4 bits of version (7) with first 4 bits seq_hi\n  b[i++] = seqHigh >>> 4 & 0x0f | 0x70;\n\n  // [byte 7] remaining 8 bits of seq_hi\n  b[i++] = seqHigh & 0xff;\n\n  // [byte 8] - variant (2 bits), first 6 bits seq_low\n  b[i++] = seqLow >>> 13 & 0x3f | 0x80;\n\n  // [byte 9] 8 bits seq_low\n  b[i++] = seqLow >>> 5 & 0xff;\n\n  // [byte 10] remaining 5 bits seq_low, 3 bits random\n  b[i++] = seqLow << 3 & 0xff | rnds[10] & 0x07;\n\n  // [bytes 11-15] always random\n  b[i++] = rnds[11];\n  b[i++] = rnds[12];\n  b[i++] = rnds[13];\n  b[i++] = rnds[14];\n  b[i++] = rnds[15];\n  return buf || unsafeStringify(b);\n}\nexport default v7;", "// Making the module version consumable via require - to prohibit\n// multiple occurrancies of the same module in the same app\n// (dual package hazard, https://nodejs.org/api/packages.html#dual-package-hazard)\nimport _Dexie from \"./dist/dexie.js\";\nconst DexieSymbol = Symbol.for(\"Dexie\");\nconst Dexie = globalThis[DexieSymbol] || (globalThis[DexieSymbol] = _Dexie);\nif (_Dexie.semVer !== Dexie.semVer) {\n    throw new Error(`Two different versions of Dexie loaded in the same app: ${_Dexie.semVer} and ${Dexie.semVer}`);\n}\nconst { liveQuery, mergeRanges, rangesOverlap, RangeSet, cmp, Entity,\n    PropModification, replacePrefix, add, remove } = Dexie;\nexport { liveQuery, mergeRanges, rangesOverlap, RangeSet, cmp, Dexie, Entity,\n    PropModification, replacePrefix, add, remove };\nexport default Dexie;\n", "export function nop() {}\n\nexport function promisableChain(f1, f2) {\n  if (f1 === nop) return f2;\n  return function() {\n    var res = f1.apply(this, arguments);\n    if (res && typeof res.then === 'function') {\n      var thiz = this, args = arguments;\n      return res.then(function() {\n        return f2.apply(thiz, args);\n      });\n    }\n    return f2.apply(this, arguments);\n  };\n}\n\nexport function createUUID() {\n  // Decent solution from http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n  var d = Date.now();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n", "export default function initOverrideCreateTransaction(db, wakeupObservers) {\n  return function overrideCreateTransaction(origFunc) {\n    return function (mode, storenames, dbschema, parent) {\n      if (db.dynamicallyOpened()) return origFunc.apply(this, arguments); // Don't observe dynamically opened databases.\n      var addChanges = false;\n      if (mode === 'readwrite' && storenames.some(function (storeName) {\n            return dbschema[storeName] && dbschema[storeName].observable;\n          })) {\n        // At least one included store is a observable store. Make sure to also include the _changes store.\n        addChanges = true;\n        storenames = storenames.slice(0); // Clone\n        if (storenames.indexOf(\"_changes\") === -1)\n          storenames.push(\"_changes\"); // Otherwise, firefox will hang... (I've reported the bug to Mozilla@Bugzilla)\n      }\n      // Call original db._createTransaction()\n      var trans = origFunc.call(this, mode, storenames, dbschema, parent);\n      // If this transaction is bound to any observable table, make sure to add changes when transaction completes.\n      if (addChanges) {\n        trans._lastWrittenRevision = 0;\n        trans.on('complete', function () {\n          if (trans._lastWrittenRevision) {\n            // Changes were written in this transaction.\n            if (!parent) {\n              // This is root-level transaction, i.e. a physical commit has happened.\n              // Delay-trigger a wakeup call:\n              if (wakeupObservers.timeoutHandle) clearTimeout(wakeupObservers.timeoutHandle);\n              wakeupObservers.timeoutHandle = setTimeout(function () {\n                delete wakeupObservers.timeoutHandle;\n                wakeupObservers(trans._lastWrittenRevision);\n              }, 25);\n            } else {\n              // This is just a virtual commit of a sub transaction.\n              // Wait with waking up observers until root transaction has committed.\n              // Make sure to mark root transaction so that it will wakeup observers upon commit.\n              var rootTransaction = (function findRootTransaction(trans) {\n                return trans.parent ? findRootTransaction(trans.parent) : trans;\n              })(parent);\n              rootTransaction._lastWrittenRevision = Math.max(\n                  trans._lastWrittenRevision,\n                  rootTransaction.lastWrittenRevision || 0);\n            }\n          }\n        });\n        // Derive \"source\" property from parent transaction by default\n        if (trans.parent && trans.parent.source) trans.source = trans.parent.source;\n      }\n      return trans;\n    };\n  };\n}\n", "import Dexie from 'dexie';\n\nexport default function initWakeupObservers(db, Observable, localStorage) {\n  return function wakeupObservers(lastWrittenRevision) {\n    // Make sure Observable.latestRevision[db.name] is still below our value, now when some time has elapsed and other db instances in same window possibly could have made changes too.\n    if (Observable.latestRevision[db.name] < lastWrittenRevision) {\n      // Set the static property lastRevision[db.name] to the revision of the last written change.\n      Observable.latestRevision[db.name] = lastWrittenRevision;\n      // Wakeup ourselves, and any other db instances on this window:\n      Dexie.ignoreTransaction(function () {\n        Observable.on('latestRevisionIncremented').fire(db.name, lastWrittenRevision);\n      });\n      // Observable.on.latestRevisionIncremented will only wakeup db's in current window.\n      // We need a storage event to wakeup other windwos.\n      // Since indexedDB lacks storage events, let's use the storage event from WebStorage just for\n      // the purpose to wakeup db instances in other windows.\n      if (localStorage) localStorage.setItem('Dexie.Observable/latestRevision/' + db.name, lastWrittenRevision); // In IE, this will also wakeup our own window. However, onLatestRevisionIncremented will work around this by only running once per revision id.\n    }\n  };\n}\n", "// Change Types\nexport const CREATE = 1;\nexport const UPDATE = 2;\nexport const DELETE = 3;\n", "import Dexie from 'dexie';\n\nimport {CREATE} from '../change_types';\n\nexport default function initCreatingHook(db, table) {\n  return function creatingHook(primKey, obj, trans) {\n    /// <param name=\"trans\" type=\"db.Transaction\"></param>\n    var rv = undefined;\n    if (primKey === undefined && table.schema.primKey.uuid) {\n      primKey = rv = Dexie.Observable.createUUID();\n      if (table.schema.primKey.keyPath) {\n        Dexie.setByKeyPath(obj, table.schema.primKey.keyPath, primKey);\n      }\n    }\n\n    var change = {\n      source: trans.source || null, // If a \"source\" is marked on the transaction, store it. Useful for observers that want to ignore their own changes.\n      table: table.name,\n      key: primKey === undefined ? null : primKey,\n      type: CREATE,\n      obj: obj\n    };\n\n    var promise = db._changes.add(change).then(function (rev) {\n      trans._lastWrittenRevision = Math.max(trans._lastWrittenRevision, rev);\n      return rev;\n    });\n\n    // Wait for onsuccess so that we have the primKey if it is auto-incremented and update the change item if so.\n    this.onsuccess = function (resultKey) {\n      if (primKey != resultKey)\n        promise._then(function () {\n          change.key = resultKey;\n          db._changes.put(change);\n        });\n    };\n\n    this.onerror = function () {\n      // If the main operation fails, make sure to regret the change\n      promise._then(function (rev) {\n        // Will only happen if app code catches the main operation error to prohibit transaction from aborting.\n        db._changes.delete(rev);\n      });\n    };\n\n    return rv;\n  };\n}\n", "import Dexie from 'dexie';\n\nimport {UPDATE} from '../change_types';\n\nexport default function initUpdatingHook(db, tableName) {\n  return function updatingHook(mods, primKey, oldObj, trans) {\n    /// <param name=\"trans\" type=\"db.Transaction\"></param>\n    // mods may contain property paths with undefined as value if the property\n    // is being deleted. Since we cannot persist undefined we need to act\n    // like those changes is setting the value to null instead.\n    var modsWithoutUndefined = {};\n    // As of current Dexie version (1.0.3) hook may be called even if it wouldn't really change.\n    // Therefore we may do that kind of optimization here - to not add change entries if\n    // there's nothing to change.\n    var anythingChanged = false;\n    var newObj = Dexie.deepClone(oldObj);\n    for (var propPath in mods) {\n      var mod = mods[propPath];\n      if (typeof mod === 'undefined') {\n        Dexie.delByKeyPath(newObj, propPath);\n        modsWithoutUndefined[propPath] = null; // Null is as close we could come to deleting a property when not allowing undefined.\n        anythingChanged = true;\n      } else {\n        var currentValue = Dexie.getByKeyPath(oldObj, propPath);\n        if (mod !== currentValue && JSON.stringify(mod) !== JSON.stringify(currentValue)) {\n          Dexie.setByKeyPath(newObj, propPath, mod);\n          modsWithoutUndefined[propPath] = mod;\n          anythingChanged = true;\n        }\n      }\n    }\n    if (anythingChanged) {\n      var change = {\n        source: trans.source || null, // If a \"source\" is marked on the transaction, store it. Useful for observers that want to ignore their own changes.\n        table: tableName,\n        key: primKey,\n        type: UPDATE,\n        mods: modsWithoutUndefined,\n        oldObj: oldObj,\n        obj: newObj\n      };\n      var promise = db._changes.add(change); // Just so we get the correct revision order of the update...\n      this.onsuccess = function () {\n        promise._then(function (rev) {\n          trans._lastWrittenRevision = Math.max(trans._lastWrittenRevision, rev);\n        });\n      };\n      this.onerror = function () {\n        // If the main operation fails, make sure to regret the change.\n        promise._then(function (rev) {\n          // Will only happen if app code catches the main operation error to prohibit transaction from aborting.\n          db._changes.delete(rev);\n        });\n      };\n    }\n  };\n}\n", "import {DELETE} from '../change_types';\n\nexport default function initDeletingHook(db, tableName) {\n  return function deletingHook(primKey, obj, trans) {\n    /// <param name=\"trans\" type=\"db.Transaction\"></param>\n    var promise = db._changes.add({\n      source: trans.source || null, // If a \"source\" is marked on the transaction, store it. Useful for observers that want to ignore their own changes.\n      table: tableName,\n      key: primKey,\n      type: DELETE,\n      oldObj: obj\n    }).then(function (rev) {\n      trans._lastWrittenRevision = Math.max(trans._lastWrittenRevision, rev);\n      return rev;\n    })\n        .catch((e) => {\n          console.log(obj)\n          console.log(e.stack)\n        })\n    this.onerror = function () {\n      // If the main operation fails, make sure to regret the change.\n      // Using _then because if promise is already fullfilled, the standard then() would\n      // do setTimeout() and we would loose the transaction.\n      promise._then(function (rev) {\n        // Will only happen if app code catches the main operation error to prohibit transaction from aborting.\n        db._changes.delete(rev);\n      });\n    };\n  };\n}\n", "import initCreatingHook from './creating';\nimport initUpdatingHook from './updating';\nimport initDeletingHook from './deleting';\n\nexport default function initCrudMonitor(db) {\n//\n// The Creating/Updating/Deleting hook will make sure any change is stored to the changes table\n//\n  return function crudMonitor(table) {\n    /// <param name=\"table\" type=\"db.Table\"></param>\n    if (table.hook._observing) return;\n    table.hook._observing = true;\n\n    const tableName = table.name;\n    table.hook('creating').subscribe(initCreatingHook(db, table));\n\n    table.hook('updating').subscribe(initUpdatingHook(db, tableName));\n\n    table.hook('deleting').subscribe(initDeletingHook(db, tableName));\n  };\n}\n", "import Dexie from 'dexie';\n\nexport default function initOnStorage(Observable) {\n  return function onStorage(event) {\n    // We use the onstorage event to trigger onLatestRevisionIncremented since we will wake up when other windows modify the DB as well!\n    if (event.key && event.key.indexOf(\"Dexie.Observable/\") === 0) { // For example \"Dexie.Observable/latestRevision/FriendsDB\"\n      var parts = event.key.split('/');\n      var prop = parts[1];\n      var dbname = parts[2];\n      if (prop === 'latestRevision') {\n        var rev = parseInt(event.newValue, 10);\n        if (!isNaN(rev) && rev > Observable.latestRevision[dbname]) {\n          Observable.latestRevision[dbname] = rev;\n          Dexie.ignoreTransaction(function () {\n            Observable.on('latestRevisionIncremented').fire(dbname, rev);\n          });\n        }\n      } else if (prop.indexOf(\"deadnode:\") === 0) {\n        var nodeID = parseInt(prop.split(':')[1], 10);\n        if (event.newValue) {\n          Observable.on.suicideNurseCall.fire(dbname, nodeID);\n        }\n      } else if (prop === 'intercomm') {\n        if (event.newValue) {\n          Observable.on.intercomm.fire(dbname);\n        }\n      }\n    }\n  };\n}\n", "export default function initOverrideOpen(db, SyncNode, crudMonitor) {\n  return function overrideOpen(origOpen) {\n    return function () {\n      //\n      // Make sure to subscribe to \"creating\", \"updating\" and \"deleting\" hooks for all observable tables that were created in the stores() method.\n      //\n      Object.keys(db._allTables).forEach(tableName => {\n        let table = db._allTables[tableName];\n        if (table.schema.observable) {\n          crudMonitor(table);\n        }\n        if (table.name === \"_syncNodes\") {\n          table.mapToClass(SyncNode);\n        }\n      });\n      return origOpen.apply(this, arguments);\n    }\n  };\n}\n", "import Dexie from 'dexie';\n\nconst Promise = Dexie.Promise;\n\nexport default function initIntercomm(db, Observable, SyncNode, mySyncNode, localStorage) {\n//\n// Intercommunication between nodes\n//\n// Enable inter-process communication between browser windows using localStorage storage event (is registered in Dexie.Observable)\n\n  var requestsWaitingForReply = {};\n\n  /**\n   * @param {string} type Type of message\n   * @param message Message to send\n   * @param {number} destinationNode ID of destination node\n   * @param {{wantReply: boolean, isFailure: boolean, requestId: number}} options If {wantReply: true}, the returned promise will complete with the reply from remote. Otherwise it will complete when message has been successfully sent.</param>\n   */\n  db.observable.sendMessage = function (type, message, destinationNode, options) {\n    /// <param name=\"type\" type=\"String\">Type of message</param>\n    /// <param name=\"message\">Message to send</param>\n    /// <param name=\"destinationNode\" type=\"Number\">ID of destination node</param>\n    /// <param name=\"options\" type=\"Object\" optional=\"true\">{wantReply: Boolean, isFailure: Boolean, requestId: Number}. If wantReply, the returned promise will complete with the reply from remote. Otherwise it will complete when message has been successfully sent.</param>\n    options = options || {};\n    if (!mySyncNode.node)\n      return options.wantReply ?\n          Promise.reject(new Dexie.DatabaseClosedError()) :\n          Promise.resolve(); // If caller doesn't want a reply, it won't catch errors either.\n\n    var msg = {message: message, destinationNode: destinationNode, sender: mySyncNode.node.id, type: type};\n    Dexie.extend(msg, options); // wantReply: wantReply, success: !isFailure, requestId: ...\n    return Dexie.ignoreTransaction(()=> {\n      var tables = [\"_intercomm\"];\n      if (options.wantReply) tables.push(\"_syncNodes\"); // If caller wants a reply, include \"_syncNodes\" in transaction to check that there's a receiver there. Otherwise, new master will get it.\n      var promise = db.transaction('rw', tables, () => {\n        if (options.wantReply) {\n          // Check that there is a receiver there to take the request.\n          return db._syncNodes.where('id').equals(destinationNode).count(receiverAlive => {\n            if (receiverAlive)\n              return db._intercomm.add(msg);\n            else // If we couldn't find a node -> send to master\n              return db._syncNodes.where('isMaster').above(0).first(function (masterNode) {\n                msg.destinationNode = masterNode.id;\n                return db._intercomm.add(msg)\n              });\n          });\n        } else {\n          // If caller doesn't need a response, we don't have to make sure that it gets one.\n          return db._intercomm.add(msg);\n        }\n      }).then(messageId => {\n        var rv = null;\n        if (options.wantReply) {\n          rv = new Promise(function (resolve, reject) {\n            requestsWaitingForReply[messageId.toString()] = {resolve: resolve, reject: reject};\n          });\n        }\n        if (localStorage) {\n          localStorage.setItem(\"Dexie.Observable/intercomm/\" + db.name, messageId.toString());\n        }\n        Observable.on.intercomm.fire(db.name);\n        return rv;\n      });\n\n      if (!options.wantReply) {\n        promise.catch(()=> {\n        });\n        return;\n      } else {\n        // Forward rejection to caller if it waits for reply.\n        return promise;\n      }\n    });\n  };\n\n  // Send a message to all local _syncNodes\n  db.observable.broadcastMessage = function (type, message, bIncludeSelf) {\n    if (!mySyncNode.node) return;\n    var mySyncNodeId = mySyncNode.node.id;\n    Dexie.ignoreTransaction(()=> {\n      db._syncNodes.toArray(nodes => {\n        return Promise.all(nodes\n            .filter(node => node.type === 'local' && (bIncludeSelf || node.id !== mySyncNodeId))\n            .map(node => db.observable.sendMessage(type, message, node.id)));\n      }).catch(()=> {\n      });\n    });\n  };\n\n  function consumeIntercommMessages() {\n    // Check if we got messages:\n    if (!mySyncNode.node) return Promise.reject(new Dexie.DatabaseClosedError());\n\n    return Dexie.ignoreTransaction(()=> {\n      return db.transaction('rw', '_intercomm', function() {\n        return db._intercomm.where({destinationNode: mySyncNode.node.id}).toArray(messages => {\n          messages.forEach(msg => consumeMessage(msg));\n          return db._intercomm.where('id').anyOf(messages.map(msg => msg.id)).delete();\n        });\n      });\n    });\n  }\n\n  function consumeMessage(msg) {\n    if (msg.type === 'response') {\n      // This is a response. Lookup pending request and fulfill its promise.\n      var request = requestsWaitingForReply[msg.requestId.toString()];\n      if (request) {\n        if (msg.isFailure) {\n          request.reject(msg.message.error);\n        } else {\n          request.resolve(msg.message.result);\n        }\n        delete requestsWaitingForReply[msg.requestId.toString()];\n      }\n    } else {\n      // This is a message or request. Fire the event and add an API for the subscriber to use if reply is requested\n      msg.resolve = function (result) {\n        db.observable.sendMessage('response', {result: result}, msg.sender, {requestId: msg.id});\n      };\n      msg.reject = function (error) {\n        db.observable.sendMessage('response', {error: error.toString()}, msg.sender, {isFailure: true, requestId: msg.id});\n      };\n      db.on.message.fire(msg);\n    }\n  }\n\n  // Listener for 'intercomm' events\n  // Gets fired when we get a 'storage' event from local storage or when sendMessage is called\n  // 'storage' is used to communicate between tabs (sendMessage changes the localStorage to trigger the event)\n  // sendMessage is used to communicate in the same tab and to trigger a storage event\n  function onIntercomm(dbname) {\n    // When storage event trigger us to check\n    if (dbname === db.name) {\n      consumeIntercommMessages().catch('DatabaseClosedError', ()=> {});\n    }\n  }\n\n  return {\n    onIntercomm,\n    consumeIntercommMessages\n  };\n}\n", "export default function overrideParseStoresSpec(origFunc) {\n  return function(stores, dbSchema) {\n    // Create the _changes and _syncNodes tables\n    stores[\"_changes\"] = \"++rev\";\n    stores[\"_syncNodes\"] = \"++id,myRevision,lastHeartBeat,&url,isMaster,type,status\";\n    stores[\"_intercomm\"] = \"++id,destinationNode\";\n    stores[\"_uncommittedChanges\"] = \"++id,node\"; // For remote syncing when server returns a partial result.\n    // Call default implementation. Will populate the dbSchema structures.\n    origFunc.call(this, stores, dbSchema);\n    // Allow UUID primary keys using $$ prefix on primary key or indexes\n    Object.keys(dbSchema).forEach(function(tableName) {\n      var schema = dbSchema[tableName];\n      if (schema.primKey.name.indexOf('$$') === 0) {\n        schema.primKey.uuid = true;\n        schema.primKey.name = schema.primKey.name.substr(2);\n        schema.primKey.keyPath = schema.primKey.keyPath.substr(2);\n      }\n    });\n    // Now mark all observable tables\n    Object.keys(dbSchema).forEach(function(tableName) {\n      // Marked observable tables with \"observable\" in their TableSchema.\n      if (tableName.indexOf('_') !== 0 && tableName.indexOf('$') !== 0) {\n        dbSchema[tableName].observable = true;\n      }\n    });\n  };\n}\n", "import Dexie from 'dexie';\n\nexport default function deleteOldChanges(db) {\n  // This is a background job and should never be done within\n  // a caller's transaction. Use Dexie.ignoreTransaction() to ensure that.\n  // We should not return the Promise but catch it ourselves instead.\n\n  // To prohibit starving the database we want to lock transactions as short as possible\n  // and since we're not in a hurry, we could do this job in chunks and reschedule a\n  // continuation every 500 ms.\n  const CHUNK_SIZE = 100;\n\n  Dexie.ignoreTransaction(()=>{\n    return db._syncNodes.orderBy(\"myRevision\").first(oldestNode => {\n      return db._changes\n          .where(\"rev\").below(oldestNode.myRevision)\n          .limit(CHUNK_SIZE)\n          .primaryKeys();\n    }).then(keysToDelete => {\n      if (keysToDelete.length === 0) return; // Done.\n      return db._changes.bulkDelete(keysToDelete).then(()=> {\n        // If not done garbage collecting, reschedule a continuation of it until done.\n        if (keysToDelete.length === CHUNK_SIZE) {\n          // Limit reached. Changes are there are more job to do. Schedule again:\n          setTimeout(() => db.isOpen() && deleteOldChanges(db), 500);\n        }\n      });\n    });\n  }).catch(()=>{\n    // The operation is not crucial. A failure could almost only be due to that database has been closed.\n    // No need to log this.\n  });\n}\n", "/* ========================================================================== \n *                           dexie-observable.js\n * ==========================================================================\n *\n * Dexie addon for observing database changes not just on local db instance\n * but also on other instances, tabs and windows.\n *\n * Comprises a base framework for dexie-syncable.js\n *\n * By David Fahlander, david.fahlander@gmail.com,\n *    Nikolas Poniros, https://github.com/nponiros\n *\n * ==========================================================================\n *\n * Version {version}, {date}\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n * \n */\nimport Dexie from 'dexie';\nimport { nop, promisableChain, createUUID } from './utils';\n\nimport initOverrideCreateTransaction from './override-create-transaction';\nimport initWakeupObservers from './wakeup-observers';\nimport initCrudMonitor from './hooks/crud-monitor';\nimport initOnStorage from './on-storage';\nimport initOverrideOpen from './override-open';\nimport initIntercomm from './intercomm';\n\nimport overrideParseStoresSpec from './override-parse-stores-spec';\n\nimport deleteOldChanges from './delete-old-changes';\n\nvar global = self;\n\n/** class DatabaseChange\n    *\n    *  Object contained by the _changes table.\n    */\nvar DatabaseChange = Dexie.defineClass({\n    rev: Number, // Auto-incremented primary key\n    source: String, // Optional source creating the change. Set if transaction.source was set when doing the operation.\n    table: String, // Table name\n    key: Object, // Primary key. Any type.\n    type: Number, // 1 = CREATE, 2 = UPDATE, 3 = DELETE\n    obj: Object, // CREATE: obj contains the object created.\n    mods: Object, // UPDATE: mods contains the modifications made to the object.\n    oldObj: Object // DELETE: oldObj contains the object deleted. UPDATE: oldObj contains the old object before updates applied.\n});\n\n// Import some usable helper functions\nvar override = Dexie.override;\nvar Promise = Dexie.Promise;\nvar browserIsShuttingDown = false;\n\n/** Dexie addon for change tracking and real-time observation.\n * \n * @param {Dexie} db \n */\nfunction Observable(db) {\n    if (!/^(3|4)\\./.test(Dexie.version))\n        throw new Error(`Missing dexie version 3.x or 4.x`);\n    if (db.observable) {\n        if (db.observable.version !== \"{version}\") throw new Error(`Mixed versions of dexie-observable`);\n        return; // Addon already active.\n    }\n\n    var NODE_TIMEOUT = 20000, // 20 seconds before local db instances are timed out. This is so that old changes can be deleted when not needed and to garbage collect old _syncNodes objects.\n        HIBERNATE_GRACE_PERIOD = 20000, // 20 seconds\n        // LOCAL_POLL: The time to wait before polling local db for changes and cleaning up old nodes. \n        // Polling for changes is a fallback only needed in certain circomstances (when the onstorage event doesnt reach all listeners - when different browser windows doesnt share the same process)\n        LOCAL_POLL = 500, // 500 ms. In real-world there will be this value + the time it takes to poll(). A small value is needed in Workers where we cannot rely on storage event.\n        HEARTBEAT_INTERVAL = NODE_TIMEOUT - 5000;\n\n    var localStorage = Observable.localStorageImpl;\n\n    /** class SyncNode\n        *\n        * Object contained in the _syncNodes table.\n        */\n    var SyncNode = Dexie.defineClass({\n        //id: Number,\n        myRevision: Number,\n        type: String, // \"local\" or \"remote\"\n        lastHeartBeat: Number,\n        deleteTimeStamp: Number, // In case lastHeartBeat is too old, a value of now + HIBERNATE_GRACE_PERIOD will be set here. If reached before node wakes up, node will be deleted.\n        url: String, // Only applicable for \"remote\" nodes. Only used in Dexie.Syncable.\n        isMaster: Number, // 1 if true. Not using Boolean because it's not possible to index Booleans in IE implementation of IDB.\n\n        // Below properties should be extended in Dexie.Syncable. Not here. They apply to remote nodes only (type == \"remote\"):\n        syncProtocol: String, // Tells which implementation of ISyncProtocol to use for remote syncing. \n        syncContext: null,\n        syncOptions: Object,\n        connected: false, // FIXTHIS: Remove! Replace with status.\n        status: Number,\n        appliedRemoteRevision: null,\n        remoteBaseRevisions: [{ local: Number, remote: null }],\n        dbUploadState: {\n            tablesToUpload: [String],\n            currentTable: String,\n            currentKey: null,\n            localBaseRevision: Number\n        }\n    });\n\n    db.observable = {version: \"{version}\"};\n    db.observable.SyncNode = SyncNode;\n\n    const wakeupObservers = initWakeupObservers(db, Observable, localStorage);\n    const overrideCreateTransaction = initOverrideCreateTransaction(db, wakeupObservers);\n    const crudMonitor = initCrudMonitor(db);\n    const overrideOpen = initOverrideOpen(db, SyncNode, crudMonitor);\n\n    var mySyncNode = {node: null};\n\n    const intercomm = initIntercomm(db, Observable, SyncNode, mySyncNode, localStorage);\n    const onIntercomm = intercomm.onIntercomm;\n    const consumeIntercommMessages = intercomm.consumeIntercommMessages;\n\n    // Allow other addons to access the local sync node. May be needed by Dexie.Syncable.\n    Object.defineProperty(db, \"_localSyncNode\", {\n        get: function() { return mySyncNode.node; }\n    });\n\n    var pollHandle = null,\n        heartbeatHandle = null;\n\n    if (Dexie.fake) {\n        // This code will never run.\n        // It's here just to enable auto-complete in visual studio - helps a lot when writing code.\n        db.version(1).stores({\n            _syncNodes: \"++id,myRevision,lastHeartBeat\",\n            _changes: \"++rev\",\n            _intercomm: \"++id,destinationNode\",\n            _uncommittedChanges: \"++id,node\"\n        });\n        db._syncNodes.mapToClass(SyncNode);\n        db._changes.mapToClass(DatabaseChange);\n        mySyncNode.node = new SyncNode({\n            myRevision: 0,\n            type: \"local\",\n            lastHeartBeat: Date.now(),\n            deleteTimeStamp: null\n        });\n    }\n\n    //\n    // Override parsing the stores to add \"_changes\" and \"_syncNodes\" tables.\n    // It also adds UUID support for the primary key and sets tables as observable tables.\n    //\n    db.Version.prototype._parseStoresSpec = override(db.Version.prototype._parseStoresSpec, overrideParseStoresSpec);\n\n    // changes event on db:\n    db.on.addEventType({\n        changes: 'asap',\n        cleanup: [promisableChain, nop], // fire (nodesTable, changesTable, trans). Hook called when cleaning up nodes. Subscribers may return a Promise to to more stuff. May do additional stuff if local sync node is master.\n        message: 'asap'\n    });\n\n    //\n    // Override transaction creation to always include the \"_changes\" store when any observable store is involved.\n    //\n    db._createTransaction = override(db._createTransaction, overrideCreateTransaction);\n\n    // If Observable.latestRevsion[db.name] is undefined, set it to 0 so that comparing against it always works.\n    // You might think that it will always be undefined before this call, but in case another Dexie instance in the same\n    // window with the same database name has been created already, this static property will already be set correctly.\n    Observable.latestRevision[db.name] = Observable.latestRevision[db.name] || 0;\n\n    //\n    // Override open to setup hooks for db changes and map the _syncNodes table to class\n    //\n    db.open = override(db.open, overrideOpen);\n\n    db.close = override(db.close, function(origClose) {\n        return function () {\n            if (db.dynamicallyOpened()) return origClose.apply(this, arguments); // Don't observe dynamically opened databases.\n            // Teardown our framework.\n            if (wakeupObservers.timeoutHandle) {\n                clearTimeout(wakeupObservers.timeoutHandle);\n                delete wakeupObservers.timeoutHandle;\n            }\n            Observable.on('latestRevisionIncremented').unsubscribe(onLatestRevisionIncremented);\n            Observable.on('suicideNurseCall').unsubscribe(onSuicide);\n            Observable.on('intercomm').unsubscribe(onIntercomm);\n            Observable.on('beforeunload').unsubscribe(onBeforeUnload);\n            // Inform other db instances in same window that we are dying:\n            if (mySyncNode.node && mySyncNode.node.id) {\n                Observable.on.suicideNurseCall.fire(db.name, mySyncNode.node.id);\n                // Inform other windows as well:\n                if (localStorage) {\n                    localStorage.setItem('Dexie.Observable/deadnode:' + mySyncNode.node.id.toString() + '/' + db.name, \"dead\"); // In IE, this will also wakeup our own window. cleanup() may trigger twice per other db instance. But that doesnt to anything.\n                }\n                mySyncNode.node.deleteTimeStamp = 1; // One millisecond after 1970. Makes it occur in the past but still keeps it truthy.\n                mySyncNode.node.lastHeartBeat = 0;\n                db._syncNodes.put(mySyncNode.node); // This async operation may be cancelled since the browser is closing down now.\n                mySyncNode.node = null;\n            }\n\n            if (pollHandle) clearTimeout(pollHandle);\n            pollHandle = null;\n            if (heartbeatHandle) clearTimeout(heartbeatHandle);\n            heartbeatHandle = null;\n            return origClose.apply(this, arguments);\n        };\n    });\n\n    // Override Dexie.delete() in order to delete Observable.latestRevision[db.name].\n    db.delete = override(db.delete, function(origDelete) {\n        return function() {\n            return origDelete.apply(this, arguments).then(function(result) {\n                // Reset Observable.latestRevision[db.name]\n                Observable.latestRevision[db.name] = 0;\n                return result;\n            });\n        };\n    });\n\n    // When db opens, make sure to start monitor any changes before other db operations will start.\n    db.on(\"ready\", function startObserving() {\n        if (db.dynamicallyOpened()) return db; // Don't observe dynamically opened databases.\n        \n        return db.table(\"_changes\").orderBy(\"rev\").last(function(lastChange) {\n            // Since startObserving() is called before database open() method, this will be the first database operation enqueued to db.\n            // Therefore we know that the retrieved value will be This query will\n            var latestRevision = (lastChange ? lastChange.rev : 0);\n            mySyncNode.node = new SyncNode({\n                myRevision: latestRevision,\n                type: \"local\",\n                lastHeartBeat: Date.now(),\n                deleteTimeStamp: null,\n                isMaster: 0\n            });\n            if (Observable.latestRevision[db.name] < latestRevision) {\n                // Side track . For correctness whenever setting Observable.latestRevision[db.name] we must make sure the event is fired if increased:\n                // There are other db instances in same window that hasnt yet been informed about a new revision\n                Observable.latestRevision[db.name] = latestRevision;\n                Dexie.ignoreTransaction(function() {\n                    Observable.on.latestRevisionIncremented.fire(latestRevision);\n                });\n            }\n            // Add new sync node or if this is a reopening of the database after a close() call, update it.\n            return db._syncNodes.put(mySyncNode.node).then(Dexie.ignoreTransaction(() => {\n                // By default, this node will become master unless we discover an existing, up-to-date master\n                var mySyncNodeShouldBecomeMaster = 1;\n                return db._syncNodes.orderBy('isMaster').reverse().modify(existingNode => {\n                    if (existingNode.isMaster) {\n                        if (existingNode.lastHeartBeat < Date.now() - NODE_TIMEOUT) {\n                            // Existing master record is out-of-date; demote it\n                            existingNode.isMaster = 0;\n                        } else {\n                            // An existing up-to-date master record exists, so it will remain master\n                            mySyncNodeShouldBecomeMaster = 0;\n                        }\n                    }\n\n                    // The local node reference may be unassigned at any point by a database close() operation\n                    if (!mySyncNode.node) return;\n\n                    // Assign the local node state\n                    // This is guaranteed to apply *after* any existing master records have been inspected, due to the orderBy clause\n                    if (existingNode.id === mySyncNode.node.id) {\n                        existingNode.isMaster = mySyncNode.node.isMaster = mySyncNodeShouldBecomeMaster;\n                    }\n                });\n            })).then(() => {\n                Observable.on('latestRevisionIncremented', onLatestRevisionIncremented); // Wakeup when a new revision is available.\n                Observable.on('beforeunload', onBeforeUnload);\n                Observable.on('suicideNurseCall', onSuicide);\n                Observable.on('intercomm', onIntercomm);\n                // Start polling for changes and do cleanups:\n                pollHandle = setTimeout(poll, LOCAL_POLL);\n                // Start heartbeat\n                heartbeatHandle = setTimeout(heartbeat, HEARTBEAT_INTERVAL);\n            }).then(function () {\n                cleanup();\n            });\n        });\n    }, true); // True means the on(ready) event will survive a db reopening (db.close() / db.open()).\n\n    var handledRevision = 0;\n\n    function onLatestRevisionIncremented(dbname, latestRevision) {\n        if (dbname === db.name) {\n            if (handledRevision >= latestRevision) return; // Make sure to only run once per revision. (Workaround for IE triggering storage event on same window)\n            handledRevision = latestRevision;\n            Dexie.vip(function() {\n                readChanges(latestRevision).catch('DatabaseClosedError', ()=>{\n                    // Handle database closed error gracefully while reading changes.\n                    // Don't trigger 'unhandledrejection'.\n                    // Even though we intercept the close() method, it might be called when in the middle of\n                    // reading changes and then that flow will cancel with DatabaseClosedError.\n                });\n            });\n        }\n    }\n\n    function readChanges(latestRevision, recursion, wasPartial) {\n        // Whenever changes are read, fire db.on(\"changes\") with the array of changes. Eventually, limit the array to 1000 entries or so (an entire database is\n        // downloaded from server AFTER we are initiated. For example, if first sync call fails, then after a while we get reconnected. However, that scenario\n        // should be handled in case database is totally empty we should fail if sync is not available)\n        if (!recursion && readChanges.ongoingOperation) {\n            // We are already reading changes. Prohibit a parallell execution of this which would lead to duplicate trigging of 'changes' event.\n            // Instead, the callback in toArray() will always check Observable.latestRevision[db.name] to see if it has changed and if so, re-launch readChanges().\n            // The caller should get the Promise instance from the ongoing operation so that the then() method will resolve when operation is finished.\n            return readChanges.ongoingOperation;\n        }\n\n        var partial = false;\n        var ourSyncNode = mySyncNode.node; // Because mySyncNode can suddenly be set to null on database close, and worse, can be set to a new value if database is reopened.\n        if (!ourSyncNode) {\n            return Promise.reject(new Dexie.DatabaseClosedError());\n        }\n        var LIMIT = 1000;\n        var promise = db._changes.where(\"rev\").above(ourSyncNode.myRevision).limit(LIMIT).toArray(function (changes) {\n            if (changes.length > 0) {\n                var lastChange = changes[changes.length - 1];\n                partial = (changes.length === LIMIT);\n                db.on('changes').fire(changes, partial);\n                ourSyncNode.myRevision = lastChange.rev;\n            } else if (wasPartial) {\n                // No more changes, BUT since we have triggered on('changes') with partial = true,\n                // we HAVE TO trigger changes again with empty list and partial = false\n                db.on('changes').fire([], false);\n            }\n\n            let ourNodeStillExists = false;\n            return db._syncNodes.where(':id').equals(ourSyncNode.id).modify(syncNode => {\n                ourNodeStillExists = true;\n                syncNode.lastHeartBeat = Date.now(); // Update heart beat (not nescessary, but why not!)\n                syncNode.deleteTimeStamp = null; // Reset \"deleteTimeStamp\" flag if it was there.\n                syncNode.myRevision = Math.max(syncNode.myRevision, ourSyncNode.myRevision);\n            }).then(()=>ourNodeStillExists);\n        }).then(ourNodeStillExists =>{\n            if (!ourNodeStillExists) {\n                // My node has been deleted. We must have been lazy and got removed by another node.\n                if (browserIsShuttingDown) {\n                    throw new Error(\"Browser is shutting down\");\n                } else {\n                    db.close();\n                    console.error(\"Out of sync\"); // TODO: What to do? Reload the page?\n                    if (global.location) global.location.reload(true);\n                    throw new Error(\"Out of sync\"); // Will make current promise reject\n                }\n            }\n\n            // Check if more changes have come since we started reading changes in the first place. If so, relaunch readChanges and let the ongoing promise not\n            // resolve until all changes have been read.\n            if (partial || Observable.latestRevision[db.name] > ourSyncNode.myRevision) {\n                // Either there were more than 1000 changes or additional changes where added while we were reading these changes,\n                // In either case, call readChanges() again until we're done.\n                return readChanges(Observable.latestRevision[db.name], (recursion || 0) + 1, partial);\n            }\n\n        }).finally(function() {\n            delete readChanges.ongoingOperation;\n        });\n\n        if (!recursion) {\n            readChanges.ongoingOperation = promise;\n        }\n        return promise;\n    }\n\n    /**\n     * The reason we need heartbeat in parallell with poll() is due to the risk of long-running\n     * transactions while syncing changes from server to client in Dexie.Syncable. That transaction will\n     * include _changes (which will block readChanges()) but not _syncNodes. So this heartbeat will go on\n     * during that changes are being applied and update our lastHeartBeat property while poll() is waiting.\n     * When cleanup() (who also is blocked by the sync) wakes up, it won't kill the master node because this\n     * heartbeat job will have updated the master node's heartbeat during the long-running sync transaction.\n     * \n     * If we did not have this heartbeat, and a server send lots of changes that took more than NODE_TIMEOUT\n     * (20 seconds), another node waking up after the sync would kill the master node and take over because\n     * it would believe it was dead.\n     */\n    function heartbeat() {\n        heartbeatHandle = null;\n        var currentInstance = mySyncNode.node && mySyncNode.node.id;\n        if (!currentInstance) return;\n        db.transaction('rw!', db._syncNodes, ()=>{\n            db._syncNodes.where({id: currentInstance}).first(ourSyncNode => {\n                if (!ourSyncNode) {\n                    // We do not exist anymore. Call db.close() to teardown polls etc.\n                    if (db.isOpen()) db.close();\n                    return;\n                }\n                ourSyncNode.lastHeartBeat = Date.now();\n                ourSyncNode.deleteTimeStamp = null; // Reset \"deleteTimeStamp\" flag if it was there.\n                return db._syncNodes.put(ourSyncNode);\n            });\n        }).catch('DatabaseClosedError', () => {\n            // Ignore silently\n        }).finally(() => {\n            if (mySyncNode.node && mySyncNode.node.id === currentInstance && db.isOpen()) {\n                heartbeatHandle = setTimeout(heartbeat, HEARTBEAT_INTERVAL);\n            }\n        });\n    }\n\n    function poll() {\n        pollHandle = null;\n        var currentInstance = mySyncNode.node && mySyncNode.node.id;\n        if (!currentInstance) return;\n        Dexie.vip(function() { // VIP ourselves. Otherwise we might not be able to consume intercomm messages from master node before database has finished opening. This would make DB stall forever. Cannot rely on storage-event since it may not always work in some browsers of different processes.\n            readChanges(Observable.latestRevision[db.name]).then(cleanup).then(consumeIntercommMessages)\n            .catch('DatabaseClosedError', ()=>{\n                // Handle database closed error gracefully while reading changes.\n                // Don't trigger 'unhandledrejection'.\n                // Even though we intercept the close() method, it might be called when in the middle of\n                // reading changes and then that flow will cancel with DatabaseClosedError.\n            })\n            .finally(function() {\n                // Poll again in given interval:\n                if (mySyncNode.node && mySyncNode.node.id === currentInstance && db.isOpen()) {\n                    pollHandle = setTimeout(poll, LOCAL_POLL);\n                }\n            });\n        });\n    }\n\n    \n    function cleanup() {\n        var ourSyncNode = mySyncNode.node;\n        if (!ourSyncNode) return Promise.reject(new Dexie.DatabaseClosedError());\n        return db.transaction('rw', '_syncNodes', '_changes', '_intercomm', function() {\n            // Cleanup dead local nodes that has no heartbeat for over a minute\n            // Dont do the following:\n            //nodes.where(\"lastHeartBeat\").below(Date.now() - NODE_TIMEOUT).and(function (node) { return node.type == \"local\"; }).delete();\n            // Because client may have been in hybernate mode and recently woken up. That would lead to deletion of all nodes.\n            // Instead, we should mark any old nodes for deletion in a minute or so. If they still dont wakeup after that minute we could consider them dead.\n            var weBecameMaster = false;\n            db._syncNodes.where(\"lastHeartBeat\").below(Date.now() - NODE_TIMEOUT).filter(node => node.type === 'local').modify(function(node) {\n                if (node.deleteTimeStamp && node.deleteTimeStamp < Date.now()) {\n                    // Delete the node.\n                    delete this.value;\n                    // Cleanup localStorage \"deadnode:\" entry for this node (localStorage API was used to wakeup other windows (onstorage event) - an event type missing in indexedDB.)\n                    if (localStorage) {\n                        localStorage.removeItem('Dexie.Observable/deadnode:' + node.id + '/' + db.name);\n                    }\n                    // Check if we are deleting a master node\n                    if (node.isMaster) {\n                        // The node we are deleting is master. We must take over that role.\n                        // OK to call nodes.update(). No need to call Dexie.vip() because nodes is opened in existing transaction!\n                        db._syncNodes.update(ourSyncNode, { isMaster: 1 });\n                        weBecameMaster = true;\n                    }\n                    // Cleanup intercomm messages destinated to the node being deleted.\n                    // Those that waits for reply should be redirected to us.\n                    db._intercomm.where({destinationNode: node.id}).modify(function(msg) {\n                        if (msg.wantReply)\n                            msg.destinationNode = ourSyncNode.id;\n                        else\n                            // Delete the message from DB and if someone is waiting for reply, let ourselved answer the request.\n                            delete this.value;\n                    });\n                } else if (!node.deleteTimeStamp) {\n                    // Mark the node for deletion\n                    node.deleteTimeStamp = Date.now() + HIBERNATE_GRACE_PERIOD;\n                }\n            }).then(function() {\n                // Cleanup old revisions that no node is interested of.\n                Observable.deleteOldChanges(db);\n                return db.on(\"cleanup\").fire(weBecameMaster);\n            });\n        });\n    }\n\n    function onBeforeUnload() {\n        // Mark our own sync node for deletion.\n        if (!mySyncNode.node) return;\n        browserIsShuttingDown = true;\n        mySyncNode.node.deleteTimeStamp = 1; // One millisecond after 1970. Makes it occur in the past but still keeps it truthy.\n        mySyncNode.node.lastHeartBeat = 0;\n        db._syncNodes.put(mySyncNode.node); // This async operation may be cancelled since the browser is closing down now.\n        Observable.wereTheOneDying = true; // If other nodes in same window wakes up by this call, make sure they dont start taking over mastership and stuff...\n        // Inform other windows that we're gone, so that they may take over our role if needed. Setting localStorage item below will trigger Observable.onStorage, which will trigger onSuicie() below:\n        if (localStorage) {\n            localStorage.setItem('Dexie.Observable/deadnode:' + mySyncNode.node.id.toString() + '/' + db.name, \"dead\"); // In IE, this will also wakeup our own window. However, that is doublechecked in nursecall subscriber below.\n        }\n    }\n\n    function onSuicide(dbname, nodeID) {\n        if (dbname === db.name && !Observable.wereTheOneDying) {\n            // Make sure it's dead indeed. Second bullet. Why? Because it has marked itself for deletion in the onbeforeunload event, which is fired just before window dies.\n            // It's own call to put() may have been cancelled.\n            // Note also that in IE, this event may be called twice, but that doesnt harm!\n            Dexie.vip(function() {\n                db._syncNodes.update(nodeID, { deleteTimeStamp: 1, lastHeartBeat: 0 }).then(cleanup);\n            });\n        }\n    }\n\n}\n\n//\n// Static properties and methods\n// \n\nObservable.version = \"{version}\";\nObservable.latestRevision = {}; // Latest revision PER DATABASE. Example: Observable.latestRevision.FriendsDB = 37;\nObservable.on = Dexie.Events(null, \"latestRevisionIncremented\", \"suicideNurseCall\", \"intercomm\", \"beforeunload\"); // fire(dbname, value);\nObservable.createUUID = createUUID;\n\nObservable.deleteOldChanges = deleteOldChanges;\n\nObservable._onStorage = initOnStorage(Observable);\n\nObservable._onBeforeUnload = function() {\n    Observable.on.beforeunload.fire();\n};\n\ntry {\n    Observable.localStorageImpl = global.localStorage;\n} catch (ex){}\n\n//\n// Map window events to static events in Dexie.Observable:\n//\nif (global?.addEventListener) {\n    global.addEventListener(\"storage\", Observable._onStorage);\n    global.addEventListener(\"beforeunload\", Observable._onBeforeUnload);\n}\n\nif (Dexie.Observable) {\n    if (Dexie.Observable.version !== \"{version}\") {\n        throw new Error (`Mixed versions of dexie-observable`);\n    }\n} else {\n    // Register addon:\n    Dexie.Observable = Observable;\n    Dexie.addons.push(Observable);\n}\n\nexport default Dexie.Observable;\n", "/* ========================================================================== \n *                           dexie-syncable.js\n * ==========================================================================\n *\n * Dexie addon for syncing indexedDB with remote endpoints.\n *\n * By David Fahlander, david.fahlander@gmail.com,\n *    Nikolas Poniros, https://github.com/nponiros\n *\n * ==========================================================================\n *\n * Version {version}, {date}\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n * \n */\n\nimport Dexie from 'dexie';\nimport 'dexie-observable';\n\nvar Promise$3 = Dexie.Promise;\nfunction initSyncableConnect(db, connect) {\n    return function syncableConnect(protocolInstance, protocolName, url, options) {\n        if (db.isOpen()) {\n            // Database is open\n            if (!db._localSyncNode)\n                throw new Error(\"Precondition failed: local sync node is missing. Make sure Dexie.Observable is active!\");\n            if (db._localSyncNode.isMaster) {\n                // We are master node\n                return connect(protocolInstance, protocolName, url, options, db._localSyncNode.id);\n            }\n            else {\n                // We are not master node\n                // Request master node to do the connect:\n                return db.table('_syncNodes').where('isMaster').above(0).first(function (masterNode) {\n                    // There will always be a master node. In theory we may self have become master node when we come here. But that's ok. We'll request ourselves.\n                    return db.observable.sendMessage('connect', {\n                        protocolName: protocolName,\n                        url: url,\n                        options: options\n                    }, masterNode.id, { wantReply: true });\n                });\n            }\n        }\n        else if (db.hasBeenClosed()) {\n            // Database has been closed.\n            return Promise$3.reject(new Dexie.DatabaseClosedError());\n        }\n        else if (db.hasFailed()) {\n            // Database has failed to open\n            return Promise$3.reject(new Dexie.InvalidStateError(\"Dexie.Syncable: Cannot connect. Database has failed to open\"));\n        }\n        else {\n            // Database not yet open. It may be on its way to open, or open() hasn't yet been called.\n            // Wait for it to open, then connect.\n            var promise = new Promise$3(function (resolve, reject) {\n                db.on(\"ready\", function () {\n                    // First, check if this is the very first time we connect to given URL.\n                    // Need to know, because if it is, we should stall the promise returned to\n                    // db.on('ready') to not be fulfilled until the initial sync has succeeded.\n                    return db._syncNodes.get({ url: url }, function (node) {\n                        // Ok, now we know whether we should await the connect promise or not.\n                        // No matter, we should now connect (will maybe create the SyncNode instance\n                        // representing the given URL)\n                        var connectPromise = db.syncable.connect(protocolName, url, options);\n                        connectPromise.then(resolve, reject); // Resolve the returned promise when connected.\n                        // Ok, so let's see if we should suspend DB queries until connected or not:\n                        if (node && node.appliedRemoteRevision) {\n                            // The very first initial sync has been done so we need not wait\n                            // for the connect promise to complete. It can continue in background.\n                            // Returning here will resume db.on('ready') and resume all queries that\n                            // the application has put to the database.\n                            return;\n                        }\n                        // This was the very first time we connect to the remote server,\n                        // we must make sure that the initial sync request succeeeds before resuming\n                        // database queries that the application code puts onto the database.\n                        // If OFFLINE or other error, don't allow the application to proceed.\n                        // We are assuming that an initial sync is essential for the application to\n                        // function correctly.\n                        return connectPromise;\n                    });\n                });\n                // Force open() to happen. Otherwise connect() may stall forever.\n                db.open().catch(function (ex) {\n                    // If open fails, db.on('ready') may not have been called and we must\n                    // reject promise with InvalidStateError\n                    reject(new Dexie.InvalidStateError(\"Dexie.Syncable: Couldn't connect. Database failed to open\", ex));\n                });\n            });\n            return promise;\n        }\n    };\n}\n\nfunction initPersistedContext(node) {\n    //\n    // PersistedContext : IPersistedContext\n    //\n    return /** @class */ (function () {\n        function PersistedContext(nodeID, otherProps) {\n            this.nodeID = nodeID;\n            if (otherProps)\n                Dexie.extend(this, otherProps);\n        }\n        PersistedContext.prototype.save = function () {\n            // Store this instance in the syncContext property of the node it belongs to.\n            return Dexie.vip(function () {\n                return node.save();\n            });\n        };\n        return PersistedContext;\n    }());\n}\n\nfunction initGetOrCreateSyncNode(db, protocolName, url) {\n    return function getOrCreateSyncNode(options) {\n        return db.transaction('rw', db._syncNodes, db._changes, function () {\n            if (!url)\n                throw new Error(\"Url cannot be empty\");\n            // Returning a promise from transaction scope will make the transaction promise resolve with the value of that promise.\n            return db._syncNodes.where(\"url\").equalsIgnoreCase(url).first(function (node) {\n                // If we found a node it will be instanceof SyncNode as Dexie.Observable\n                // maps to class\n                if (node) {\n                    var PersistedContext = initPersistedContext(node);\n                    // Node already there. Make syncContext become an instance of PersistedContext:\n                    node.syncContext = new PersistedContext(node.id, node.syncContext);\n                    node.syncProtocol = protocolName; // In case it was changed (would be very strange but...) could happen...\n                    node.syncOptions = options; // Options could have been changed\n                    db._syncNodes.put(node);\n                }\n                else {\n                    // Create new node and sync everything\n                    node = new db.observable.SyncNode();\n                    node.myRevision = -1;\n                    node.appliedRemoteRevision = null;\n                    node.remoteBaseRevisions = [];\n                    node.type = \"remote\";\n                    node.syncProtocol = protocolName;\n                    node.url = url;\n                    node.syncOptions = options;\n                    node.lastHeartBeat = Date.now();\n                    node.dbUploadState = null;\n                    var PersistedContext_1 = initPersistedContext(node);\n                    Dexie.Promise.resolve(function () {\n                        // If options.initialUpload is explicitely false, set myRevision to currentRevision.\n                        if (options.initialUpload === false)\n                            return db._changes.toCollection().lastKey(function (currentRevision) {\n                                node.myRevision = currentRevision;\n                            });\n                    }()).then(function () {\n                        db._syncNodes.add(node).then(function (nodeID) {\n                            node.syncContext = new PersistedContext_1(nodeID); // Update syncContext in db with correct nodeId.\n                            db._syncNodes.put(node);\n                        });\n                    });\n                }\n                return node; // returning node will make the db.transaction()-promise resolve with this value.\n            });\n        });\n    };\n}\n\nfunction initEnqueue(db) {\n    return function enqueue(context, fn, instanceID) {\n        function _enqueue() {\n            if (!context.ongoingOperation) {\n                context.ongoingOperation = Dexie.ignoreTransaction(function () {\n                    return Dexie.vip(function () {\n                        return fn();\n                    });\n                }).finally(function () {\n                    delete context.ongoingOperation;\n                });\n            }\n            else {\n                context.ongoingOperation = context.ongoingOperation.then(function () {\n                    return enqueue(context, fn, instanceID);\n                });\n            }\n            return context.ongoingOperation;\n        }\n        if (!instanceID) {\n            // Caller wants to enqueue it until database becomes open.\n            if (db.isOpen()) {\n                return _enqueue();\n            }\n            else {\n                return Dexie.Promise.reject(new Dexie.DatabaseClosedError());\n            }\n        }\n        else if (db._localSyncNode && instanceID === db._localSyncNode.id) {\n            // DB is already open but queue doesn't want it to be queued if database has been closed (request bound to current instance of DB)\n            return _enqueue();\n        }\n        else {\n            return Dexie.Promise.reject(new Dexie.DatabaseClosedError());\n        }\n    };\n}\n\nfunction initSaveToUncommittedChanges(db, node) {\n    return function saveToUncommittedChanges(changes, remoteRevision) {\n        return db.transaction('rw!', db._uncommittedChanges, function () {\n            return db._uncommittedChanges.bulkAdd(changes.map(function (change) {\n                var changeWithNodeId = {\n                    node: node.id,\n                    type: change.type,\n                    table: change.table,\n                    key: change.key\n                };\n                if (change.obj)\n                    changeWithNodeId.obj = change.obj;\n                if (change.mods)\n                    changeWithNodeId.mods = change.mods;\n                return changeWithNodeId;\n            }));\n        }).then(function () {\n            node.appliedRemoteRevision = remoteRevision;\n            return node.save();\n        });\n    };\n}\n\n// Change Types\nvar CREATE = 1;\nvar UPDATE = 2;\nvar DELETE = 3;\n\nfunction bulkUpdate(table, changes) {\n    var keys = changes.map(function (c) { return c.key; });\n    var map = {};\n    // Retrieve current object of each change to update and map each\n    // found object's primary key to the existing object:\n    return table.where(':id').anyOf(keys).raw().each(function (obj, cursor) {\n        map[cursor.primaryKey + ''] = obj;\n    }).then(function () {\n        // Filter away changes whose key wasn't found in the local database\n        // (we can't update them if we do not know the existing values)\n        var updatesThatApply = changes.filter(function (c) { return map.hasOwnProperty(c.key + ''); });\n        // Apply modifications onto each existing object (in memory)\n        // and generate array of resulting objects to put using bulkPut():\n        var objsToPut = updatesThatApply.map(function (c) {\n            var curr = map[c.key + ''];\n            Object.keys(c.mods).forEach(function (keyPath) {\n                Dexie.setByKeyPath(curr, keyPath, c.mods[keyPath]);\n            });\n            return curr;\n        });\n        return table.bulkPut(objsToPut);\n    });\n}\n\nfunction initApplyChanges(db) {\n    return function applyChanges(changes) {\n        var collectedChanges = {};\n        changes.forEach(function (change) {\n            var _a;\n            if (!collectedChanges.hasOwnProperty(change.table)) {\n                collectedChanges[change.table] = (_a = {}, _a[CREATE] = [], _a[DELETE] = [], _a[UPDATE] = [], _a);\n            }\n            collectedChanges[change.table][change.type].push(change);\n        });\n        var table_names = Object.keys(collectedChanges);\n        var tables = table_names.map(function (table) { return db.table(table); });\n        return db.transaction(\"rw\", tables, function () {\n            table_names.forEach(function (table_name) {\n                var table = db.table(table_name);\n                var specifyKeys = !table.schema.primKey.keyPath;\n                var createChangesToApply = collectedChanges[table_name][CREATE];\n                var deleteChangesToApply = collectedChanges[table_name][DELETE];\n                var updateChangesToApply = collectedChanges[table_name][UPDATE];\n                if (createChangesToApply.length > 0)\n                    table.bulkPut(createChangesToApply.map(function (c) { return c.obj; }), specifyKeys ?\n                        createChangesToApply.map(function (c) { return c.key; }) : undefined);\n                if (updateChangesToApply.length > 0)\n                    bulkUpdate(table, updateChangesToApply);\n                if (deleteChangesToApply.length > 0)\n                    table.bulkDelete(deleteChangesToApply.map(function (c) { return c.key; }));\n            });\n        });\n    };\n}\n\nfunction initFinallyCommitAllChanges(db, node) {\n    var applyChanges = initApplyChanges(db);\n    return function finallyCommitAllChanges(changes, remoteRevision) {\n        // 1. Open a write transaction on all tables in DB\n        var tablesToIncludeInTrans = db.tables.filter(function (table) { return table.name === '_changes' ||\n            table.name === '_uncommittedChanges' ||\n            table.schema.observable; });\n        return db.transaction('rw!', tablesToIncludeInTrans, function () {\n            var trans = Dexie.currentTransaction;\n            var localRevisionBeforeChanges = 0;\n            return db._changes.orderBy('rev').last(function (lastChange) {\n                // Store what revision we were at before committing the changes\n                localRevisionBeforeChanges = (lastChange && lastChange.rev) || 0;\n            }).then(function () {\n                // Specify the source. Important for the change consumer to ignore changes originated from self!\n                trans.source = node.id;\n                // 2. Apply uncommitted changes and delete each uncommitted change\n                return db._uncommittedChanges.where('node').equals(node.id).toArray();\n            }).then(function (uncommittedChanges) {\n                return applyChanges(uncommittedChanges);\n            }).then(function () {\n                return db._uncommittedChanges.where('node').equals(node.id).delete();\n            }).then(function () {\n                // 3. Apply last chunk of changes\n                return applyChanges(changes);\n            }).then(function () {\n                // Get what revision we are at now:\n                return db._changes.orderBy('rev').last();\n            }).then(function (lastChange) {\n                var currentLocalRevision = (lastChange && lastChange.rev) || 0;\n                // 4. Update node states (appliedRemoteRevision, remoteBaseRevisions and eventually myRevision)\n                node.appliedRemoteRevision = remoteRevision;\n                node.remoteBaseRevisions.push({ remote: remoteRevision, local: currentLocalRevision });\n                if (node.myRevision === localRevisionBeforeChanges) {\n                    // If server was up-to-date before we added new changes from the server, update myRevision to last change\n                    // because server is still up-to-date! This is also important in order to prohibit getLocalChangesForNode() from\n                    // ever sending an empty change list to server, which would otherwise be done every second time it would send changes.\n                    node.myRevision = currentLocalRevision;\n                }\n                // Garbage collect remoteBaseRevisions not in use anymore:\n                if (node.remoteBaseRevisions.length > 1) {\n                    for (var i = node.remoteBaseRevisions.length - 1; i > 0; --i) {\n                        if (node.myRevision >= node.remoteBaseRevisions[i].local) {\n                            node.remoteBaseRevisions.splice(0, i);\n                            break;\n                        }\n                    }\n                }\n                // We are not including _syncNodes in transaction, so this save() call will execute in its own transaction.\n                node.save().catch(function (err) {\n                    console.warn(\"Dexie.Syncable: Unable to save SyncNode after applying remote changes: \" + (err.stack || err));\n                });\n            });\n        });\n    };\n}\n\nfunction getBaseRevisionAndMaxClientRevision(node) {\n    /// <param name=\"node\" type=\"db.observable.SyncNode\"></param>\n    if (node.remoteBaseRevisions.length === 0)\n        return {\n            // No remoteBaseRevisions have arrived yet. No limit on clientRevision and provide null as remoteBaseRevision:\n            maxClientRevision: Infinity,\n            remoteBaseRevision: null\n        };\n    for (var i = node.remoteBaseRevisions.length - 1; i >= 0; --i) {\n        if (node.myRevision >= node.remoteBaseRevisions[i].local) {\n            // Found a remoteBaseRevision that fits node.myRevision. Return remoteBaseRevision and eventually a roof maxClientRevision pointing out where next remoteBaseRevision bases its changes on.\n            return {\n                maxClientRevision: i === node.remoteBaseRevisions.length - 1 ? Infinity : node.remoteBaseRevisions[i + 1].local,\n                remoteBaseRevision: node.remoteBaseRevisions[i].remote\n            };\n        }\n    }\n    // There are at least one item in the list but the server hasn't yet become up-to-date with the 0 revision from client.\n    return {\n        maxClientRevision: node.remoteBaseRevisions[0].local,\n        remoteBaseRevision: null\n    };\n}\n\nfunction combineCreateAndUpdate(prevChange, nextChange) {\n    var clonedChange = Dexie.deepClone(prevChange); // Clone object before modifying since the earlier change in db.changes[] would otherwise be altered.\n    Object.keys(nextChange.mods).forEach(function (keyPath) {\n        Dexie.setByKeyPath(clonedChange.obj, keyPath, nextChange.mods[keyPath]);\n    });\n    return clonedChange;\n}\n\nfunction combineUpdateAndUpdate(prevChange, nextChange) {\n    var clonedChange = Dexie.deepClone(prevChange); // Clone object before modifying since the earlier change in db.changes[] would otherwise be altered.\n    Object.keys(nextChange.mods).forEach(function (keyPath) {\n        // If prev-change was changing a parent path of this keyPath, we must update the parent path rather than adding this keyPath\n        var hadParentPath = false;\n        Object.keys(prevChange.mods).filter(function (parentPath) { return keyPath.indexOf(parentPath + '.') === 0; }).forEach(function (parentPath) {\n            Dexie.setByKeyPath(clonedChange.mods[parentPath], keyPath.substr(parentPath.length + 1), nextChange.mods[keyPath]);\n            hadParentPath = true;\n        });\n        if (!hadParentPath) {\n            // Add or replace this keyPath and its new value\n            clonedChange.mods[keyPath] = nextChange.mods[keyPath];\n        }\n        // In case prevChange contained sub-paths to the new keyPath, we must make sure that those sub-paths are removed since\n        // we must mimic what would happen if applying the two changes after each other:\n        Object.keys(prevChange.mods).filter(function (subPath) { return subPath.indexOf(keyPath + '.') === 0; }).forEach(function (subPath) {\n            delete clonedChange.mods[subPath];\n        });\n    });\n    return clonedChange;\n}\n\nfunction mergeChange(prevChange, nextChange) {\n    switch (prevChange.type) {\n        case CREATE:\n            switch (nextChange.type) {\n                case CREATE:\n                    return nextChange; // Another CREATE replaces previous CREATE.\n                case UPDATE:\n                    return combineCreateAndUpdate(prevChange, nextChange); // Apply nextChange.mods into prevChange.obj\n                case DELETE:\n                    return nextChange; // Object created and then deleted. If it wasnt for that we MUST handle resent changes, we would skip entire change here. But what if the CREATE was sent earlier, and then CREATE/DELETE at later stage? It would become a ghost object in DB. Therefore, we MUST keep the delete change! If object doesnt exist, it wont harm!\n            }\n            break;\n        case UPDATE:\n            switch (nextChange.type) {\n                case CREATE:\n                    return nextChange; // Another CREATE replaces previous update.\n                case UPDATE:\n                    return combineUpdateAndUpdate(prevChange, nextChange); // Add the additional modifications to existing modification set.\n                case DELETE:\n                    return nextChange; // Only send the delete change. What was updated earlier is no longer of interest.\n            }\n            break;\n        case DELETE:\n            switch (nextChange.type) {\n                case CREATE:\n                    return nextChange; // A resurection occurred. Only create change is of interest.\n                case UPDATE:\n                    return prevChange; // Nothing to do. We cannot update an object that doesnt exist. Leave the delete change there.\n                case DELETE:\n                    return prevChange; // Still a delete change. Leave as is.\n            }\n            break;\n    }\n}\n\nfunction initGetChangesSinceRevision(db, node, hasMoreToGive) {\n    return function getChangesSinceRevision(revision, maxChanges, maxRevision, cb) {\n        /// <param name=\"cb\" value=\"function(changes, partial, nodeModificationsOnAck) {}\">Callback that will retrieve next chunk of changes and a boolean telling if it's a partial result or not. If truthy, result is partial and there are more changes to come. If falsy, these changes are the final result.</param>\n        var changeSet = {};\n        var numChanges = 0;\n        var partial = false;\n        var ignoreSource = node.id;\n        var nextRevision = revision;\n        return db.transaction('r', db._changes, function () {\n            var query = db._changes.where('rev').between(revision, maxRevision, false, true);\n            return query.until(function () {\n                if (numChanges === maxChanges) {\n                    partial = true;\n                    return true;\n                }\n            }).each(function (change) {\n                // Note the revision in nextRevision:\n                nextRevision = change.rev;\n                // change.source is set based on currentTransaction.source\n                if (change.source === ignoreSource)\n                    return;\n                // Our _changes table contains more info than required (old objs, source etc). Just make sure to include the necessary info:\n                var changeToSend = {\n                    type: change.type,\n                    table: change.table,\n                    key: change.key\n                };\n                if (change.type === CREATE)\n                    changeToSend.obj = change.obj;\n                else if (change.type === UPDATE)\n                    changeToSend.mods = change.mods;\n                var id = change.table + \":\" + change.key;\n                var prevChange = changeSet[id];\n                if (!prevChange) {\n                    // This is the first change on this key. Add it unless it comes from the source that we are working against\n                    changeSet[id] = changeToSend;\n                    ++numChanges;\n                }\n                else {\n                    // Merge the oldchange with the new change\n                    var nextChange = changeToSend;\n                    var mergedChange = mergeChange(prevChange, nextChange);\n                    changeSet[id] = mergedChange;\n                }\n            });\n        }).then(function () {\n            var changes = Object.keys(changeSet).map(function (key) {\n                return changeSet[key];\n            });\n            hasMoreToGive.hasMoreToGive = partial;\n            return cb(changes, partial, { myRevision: nextRevision });\n        });\n    };\n}\n\nfunction initGetTableObjectsAsChanges(db, node, MAX_CHANGES_PER_CHUNK, getChangesSinceRevision, hasMoreToGive, cb) {\n    return function getTableObjectsAsChanges(state, changes, collection) {\n        /// <param name=\"state\" value=\"{tablesToUpload:[''],currentTable:'_changes',currentKey:null,localBaseRevision:0}\"></param>\n        /// <param name=\"changes\" type=\"Array\" elementType=\"IDatabaseChange\"></param>\n        /// <param name=\"collection\" type=\"db.Collection\"></param>\n        var limitReached = false;\n        return collection.until(function () {\n            if (changes.length === MAX_CHANGES_PER_CHUNK) {\n                limitReached = true;\n                return true;\n            }\n        }).each(function (item, cursor) {\n            changes.push({\n                type: CREATE,\n                table: state.currentTable,\n                key: cursor.key,\n                obj: cursor.value\n            });\n            state.currentKey = cursor.key;\n        }).then(function () {\n            if (limitReached) {\n                // Limit reached. Send partial result.\n                hasMoreToGive.hasMoreToGive = true;\n                return cb(changes, null, true, { dbUploadState: state });\n            }\n            else {\n                // Done iterating this table. Check if there are more tables to go through:\n                if (state.tablesToUpload.length === 0) {\n                    // Done iterating all tables\n                    // Now append changes occurred during our dbUpload:\n                    var brmcr = getBaseRevisionAndMaxClientRevision(node);\n                    return getChangesSinceRevision(state.localBaseRevision, MAX_CHANGES_PER_CHUNK - changes.length, brmcr.maxClientRevision, function (additionalChanges, partial, nodeModificationsOnAck) {\n                        changes = changes.concat(additionalChanges);\n                        nodeModificationsOnAck.dbUploadState = null;\n                        return cb(changes, brmcr.remoteBaseRevision, partial, nodeModificationsOnAck);\n                    });\n                }\n                else {\n                    // Not done iterating all tables. Continue on next table:\n                    state.currentTable = state.tablesToUpload.shift();\n                    return getTableObjectsAsChanges(state, changes, db.table(state.currentTable).orderBy(':id'));\n                }\n            }\n        });\n    };\n}\n\nfunction initGetLocalChangesForNode(db, hasMoreToGive, partialsThreshold) {\n    var MAX_CHANGES_PER_CHUNK = partialsThreshold;\n    return function getLocalChangesForNode(node, cb) {\n        /// <summary>\n        ///     Based on given node's current revision and state, this function makes sure to retrieve next chunk of changes\n        ///     for that node.\n        /// </summary>\n        /// <param name=\"node\"></param>\n        /// <param name=\"cb\" value=\"function(changes, remoteBaseRevision, partial, nodeModificationsOnAck) {}\">Callback that will retrieve next chunk of changes and a boolean telling if it's a partial result or not. If truthy, result is partial and there are more changes to come. If falsy, these changes are the final result.</param>\n        var getChangesSinceRevision = initGetChangesSinceRevision(db, node, hasMoreToGive);\n        var getTableObjectsAsChanges = initGetTableObjectsAsChanges(db, node, MAX_CHANGES_PER_CHUNK, getChangesSinceRevision, hasMoreToGive, cb);\n        // Only a \"remote\" SyncNode created by Dexie.Syncable\n        // could not pass this test (remote nodes have myRevision: -1 on instantiation)\n        if (node.myRevision >= 0) {\n            // Node is based on a revision in our local database and will just need to get the changes that have occurred since that revision.\n            var brmcr = getBaseRevisionAndMaxClientRevision(node);\n            return getChangesSinceRevision(node.myRevision, MAX_CHANGES_PER_CHUNK, brmcr.maxClientRevision, function (changes, partial, nodeModificationsOnAck) {\n                return cb(changes, brmcr.remoteBaseRevision, partial, nodeModificationsOnAck);\n            });\n        }\n        else {\n            // Node hasn't got anything from our local database yet. We will need to upload the entire DB to the node in the form of CREATE changes.\n            // Check if we're in the middle of already doing that:\n            if (node.dbUploadState === null) {\n                // Initialize dbUploadState\n                var tablesToUpload = db.tables.filter(function (table) {\n                    return table.schema.observable;\n                }).map(function (table) {\n                    return table.name;\n                });\n                if (tablesToUpload.length === 0)\n                    return Dexie.Promise.resolve(cb([], null, false, {})); // There are no synced tables at all.\n                var dbUploadState = {\n                    tablesToUpload: tablesToUpload,\n                    currentTable: tablesToUpload.shift(),\n                    currentKey: null\n                };\n                return db._changes.orderBy('rev').last(function (lastChange) {\n                    dbUploadState.localBaseRevision = (lastChange && lastChange.rev) || 0;\n                    var collection = db.table(dbUploadState.currentTable).orderBy(':id');\n                    return getTableObjectsAsChanges(dbUploadState, [], collection);\n                });\n            }\n            else if (node.dbUploadState.currentKey) {\n                var collection = db.table(node.dbUploadState.currentTable).where(':id').above(node.dbUploadState.currentKey);\n                return getTableObjectsAsChanges(Dexie.deepClone(node.dbUploadState), [], collection);\n            }\n            else {\n                var collection = db.table(dbUploadState.currentTable).orderBy(':id');\n                return getTableObjectsAsChanges(Dexie.deepClone(node.dbUploadState), [], collection);\n            }\n        }\n    };\n}\n\nvar Statuses = {\n    ERROR: -1,\n    OFFLINE: 0,\n    CONNECTING: 1,\n    ONLINE: 2,\n    SYNCING: 3,\n    ERROR_WILL_RETRY: 4 // An error occurred such as net down but the sync provider will retry to connect.\n};\nvar StatusTexts = {\n    \"-1\": \"ERROR\",\n    \"0\": \"OFFLINE\",\n    \"1\": \"CONNECTING\",\n    \"2\": \"ONLINE\",\n    \"3\": \"SYNCING\",\n    \"4\": \"ERROR_WILL_RETRY\"\n};\n\nvar Promise$2 = Dexie.Promise;\nfunction initConnectProtocol(db, protocolInstance, dbAliveID, options, rejectConnectPromise) {\n    var enqueue = initEnqueue(db);\n    var hasMoreToGive = { hasMoreToGive: true };\n    function stillAlive() {\n        // A better method than doing db.isOpen() because the same db instance may have been reopened, but then this sync call should be dead\n        // because the new instance should be considered a fresh instance and will have another local node.\n        return db._localSyncNode && db._localSyncNode.id === dbAliveID;\n    }\n    return function connectProtocol(node, activePeer) {\n        /// <param name=\"node\" type=\"db.observable.SyncNode\"></param>\n        var getLocalChangesForNode = initGetLocalChangesForNode(db, hasMoreToGive, protocolInstance.partialsThreshold);\n        var url = activePeer.url;\n        function changeStatusTo(newStatus) {\n            if (node.status !== newStatus) {\n                node.status = newStatus;\n                node.save().then(function () {\n                    db.syncable.on.statusChanged.fire(newStatus, url);\n                    // Also broadcast message to other nodes about the status\n                    db.observable.broadcastMessage(\"syncStatusChanged\", { newStatus: newStatus, url: url }, false);\n                }).catch('DatabaseClosedError', function () {\n                });\n            }\n        }\n        activePeer.on('disconnect', function (newStatus) {\n            if (!isNaN(newStatus))\n                changeStatusTo(newStatus);\n        });\n        var connectedContinuation;\n        changeStatusTo(Statuses.CONNECTING);\n        return doSync();\n        function doSync() {\n            // Use enqueue() to ensure only a single promise execution at a time.\n            return enqueue(doSync, function () {\n                // By returning the Promise returned by getLocalChangesForNode() a final catch() on the sync() method will also catch error occurring in entire sequence.\n                return getLocalChangesForNode_autoAckIfEmpty(node, sendChangesToProvider);\n            }, dbAliveID);\n        }\n        function sendChangesToProvider(changes, remoteBaseRevision, partial, nodeModificationsOnAck) {\n            // Create a final Promise for the entire sync() operation that will resolve when provider calls onSuccess().\n            // By creating finalPromise before calling protocolInstance.sync() it is possible for provider to call onError() immediately if it wants.\n            var finalSyncPromise = new Promise$2(function (resolve, reject) {\n                rejectConnectPromise.p = function (err) {\n                    reject(err);\n                };\n                Dexie.asap(function () {\n                    try {\n                        protocolInstance.sync(node.syncContext, url, options, remoteBaseRevision, node.appliedRemoteRevision, changes, partial, applyRemoteChanges, onChangesAccepted, function (continuation) {\n                            resolve(continuation);\n                        }, onError);\n                    }\n                    catch (ex) {\n                        onError(ex, Infinity);\n                    }\n                    function onError(error, again) {\n                        reject(error);\n                        if (stillAlive()) {\n                            if (!isNaN(again) && again < Infinity) {\n                                setTimeout(function () {\n                                    if (stillAlive()) {\n                                        changeStatusTo(Statuses.SYNCING);\n                                        doSync().catch('DatabaseClosedError', abortTheProvider);\n                                    }\n                                }, again);\n                                changeStatusTo(Statuses.ERROR_WILL_RETRY);\n                                if (connectedContinuation && connectedContinuation.disconnect)\n                                    connectedContinuation.disconnect();\n                                connectedContinuation = null;\n                            }\n                            else {\n                                abortTheProvider(error); // Will fire ERROR on statusChanged event.\n                            }\n                        }\n                    }\n                });\n            });\n            return finalSyncPromise.then(function () {\n                // Resolve caller of db.syncable.connect() with undefined. Not with continuation!\n                return undefined;\n            }).finally(function () {\n                // In case error happens after connect, don't try reject the connect promise anymore.\n                // This is important. A Dexie unit test that verifies unhandled rejections will fail when Dexie.Syncable addon\n                // is active and this happens. It would fire unhandledrejection but that we do not want.\n                rejectConnectPromise.p = null;\n            });\n            function onChangesAccepted() {\n                Object.keys(nodeModificationsOnAck).forEach(function (keyPath) {\n                    Dexie.setByKeyPath(node, keyPath, nodeModificationsOnAck[keyPath]);\n                });\n                // We dont know if onSuccess() was called by provider yet. If it's already called, finalPromise.then() will execute immediately,\n                // otherwise it will execute when finalSyncPromise resolves.\n                finalSyncPromise.then(continueSendingChanges);\n                return node.save();\n            }\n        }\n        function abortTheProvider(error) {\n            activePeer.disconnect(Statuses.ERROR, error);\n        }\n        function getLocalChangesForNode_autoAckIfEmpty(node, cb) {\n            return getLocalChangesForNode(node, function autoAck(changes, remoteBaseRevision, partial, nodeModificationsOnAck) {\n                if (changes.length === 0 && 'myRevision' in nodeModificationsOnAck && nodeModificationsOnAck.myRevision !== node.myRevision) {\n                    Object.keys(nodeModificationsOnAck).forEach(function (keyPath) {\n                        Dexie.setByKeyPath(node, keyPath, nodeModificationsOnAck[keyPath]);\n                    });\n                    node.save().catch('DatabaseClosedError', function () {\n                    });\n                    return getLocalChangesForNode(node, autoAck);\n                }\n                else {\n                    return cb(changes, remoteBaseRevision, partial, nodeModificationsOnAck);\n                }\n            });\n        }\n        function applyRemoteChanges(remoteChanges, remoteRevision, partial /*, clear*/) {\n            var saveToUncommittedChanges = initSaveToUncommittedChanges(db, node);\n            var finallyCommitAllChanges = initFinallyCommitAllChanges(db, node);\n            return enqueue(applyRemoteChanges, function () {\n                if (!stillAlive())\n                    return Promise$2.reject(new Dexie.DatabaseClosedError());\n                // FIXTHIS: Check what to do if clear() is true!\n                return (partial ? saveToUncommittedChanges(remoteChanges, remoteRevision) : finallyCommitAllChanges(remoteChanges, remoteRevision))\n                    .catch(function (error) {\n                    abortTheProvider(error);\n                    return Promise$2.reject(error);\n                });\n            }, dbAliveID);\n        }\n        //\n        //\n        //  Continuation Patterns Follows\n        //\n        //\n        function continueSendingChanges(continuation) {\n            if (!stillAlive()) { // Database was closed.\n                if (continuation.disconnect)\n                    continuation.disconnect();\n                return;\n            }\n            connectedContinuation = continuation;\n            activePeer.on('disconnect', function () {\n                if (connectedContinuation) {\n                    if (connectedContinuation.react) {\n                        try {\n                            // react pattern must provide a disconnect function.\n                            connectedContinuation.disconnect();\n                        }\n                        catch (e) {\n                        }\n                    }\n                    connectedContinuation = null; // Stop poll() pattern from polling again and abortTheProvider() from being called twice.\n                }\n            });\n            if (continuation.react) {\n                continueUsingReactPattern(continuation);\n            }\n            else {\n                continueUsingPollPattern();\n            }\n        }\n        //  React Pattern (eager)\n        function continueUsingReactPattern(continuation) {\n            var changesWaiting, // Boolean\n            isWaitingForServer; // Boolean\n            function onChanges() {\n                if (connectedContinuation) {\n                    changeStatusTo(Statuses.SYNCING);\n                    if (isWaitingForServer)\n                        changesWaiting = true;\n                    else {\n                        reactToChanges();\n                    }\n                }\n            }\n            db.on('changes', onChanges);\n            activePeer.on('disconnect', function () {\n                db.on.changes.unsubscribe(onChanges);\n            });\n            function reactToChanges() {\n                if (!connectedContinuation)\n                    return;\n                changesWaiting = false;\n                isWaitingForServer = true;\n                getLocalChangesForNode_autoAckIfEmpty(node, function (changes, remoteBaseRevision, partial, nodeModificationsOnAck) {\n                    if (!connectedContinuation)\n                        return;\n                    if (changes.length > 0) {\n                        continuation.react(changes, remoteBaseRevision, partial, function onChangesAccepted() {\n                            Object.keys(nodeModificationsOnAck).forEach(function (keyPath) {\n                                Dexie.setByKeyPath(node, keyPath, nodeModificationsOnAck[keyPath]);\n                            });\n                            node.save().catch('DatabaseClosedError', function () {\n                            });\n                            // More changes may be waiting:\n                            reactToChanges();\n                        });\n                    }\n                    else {\n                        isWaitingForServer = false;\n                        if (changesWaiting) {\n                            // A change jumped in between the time-spot of quering _changes and getting called back with zero changes.\n                            // This is an expreemely rare scenario, and eventually impossible. But need to be here because it could happen in theory.\n                            reactToChanges();\n                        }\n                        else {\n                            changeStatusTo(Statuses.ONLINE);\n                        }\n                    }\n                }).catch(function (ex) {\n                    console.error(\"Got \".concat(ex.message, \" caught by reactToChanges\"));\n                    abortTheProvider(ex);\n                });\n            }\n            reactToChanges();\n        }\n        //  Poll Pattern\n        function continueUsingPollPattern() {\n            function syncAgain() {\n                getLocalChangesForNode_autoAckIfEmpty(node, function (changes, remoteBaseRevision, partial, nodeModificationsOnAck) {\n                    protocolInstance.sync(node.syncContext, url, options, remoteBaseRevision, node.appliedRemoteRevision, changes, partial, applyRemoteChanges, onChangesAccepted, onSuccess, onError);\n                    function onChangesAccepted() {\n                        Object.keys(nodeModificationsOnAck).forEach(function (keyPath) {\n                            Dexie.setByKeyPath(node, keyPath, nodeModificationsOnAck[keyPath]);\n                        });\n                        node.save().catch('DatabaseClosedError', function () {\n                        });\n                    }\n                    function onSuccess(continuation) {\n                        if (!connectedContinuation) {\n                            // Got disconnected before succeeding. Quit.\n                            return;\n                        }\n                        connectedContinuation = continuation;\n                        if (partial) {\n                            // We only sent partial changes. Need to do another round asap.\n                            syncAgain();\n                        }\n                        else {\n                            // We've sent all changes now (in sync!)\n                            if (!isNaN(continuation.again) && continuation.again < Infinity) {\n                                // Provider wants to keep polling. Set Status to ONLINE.\n                                changeStatusTo(Statuses.ONLINE);\n                                setTimeout(function () {\n                                    if (connectedContinuation) {\n                                        changeStatusTo(Statuses.SYNCING);\n                                        syncAgain();\n                                    }\n                                }, continuation.again);\n                            }\n                            else {\n                                // Provider seems finished polling. Since we are never going to poll again,\n                                // disconnect provider and set status to OFFLINE until another call to db.syncable.connect().\n                                activePeer.disconnect(Statuses.OFFLINE);\n                            }\n                        }\n                    }\n                    function onError(error, again) {\n                        if (!isNaN(again) && again < Infinity) {\n                            if (connectedContinuation) {\n                                setTimeout(function () {\n                                    if (connectedContinuation) {\n                                        changeStatusTo(Statuses.SYNCING);\n                                        syncAgain();\n                                    }\n                                }, again);\n                                changeStatusTo(Statuses.ERROR_WILL_RETRY);\n                            } // else status is already changed since we got disconnected.\n                        }\n                        else {\n                            abortTheProvider(error); // Will fire ERROR on onStatusChanged.\n                        }\n                    }\n                }).catch(abortTheProvider);\n            }\n            if (hasMoreToGive.hasMoreToGive) {\n                syncAgain();\n            }\n            else if (connectedContinuation && !isNaN(connectedContinuation.again) && connectedContinuation.again < Infinity) {\n                changeStatusTo(Statuses.ONLINE);\n                setTimeout(function () {\n                    if (connectedContinuation) {\n                        changeStatusTo(Statuses.SYNCING);\n                        syncAgain();\n                    }\n                }, connectedContinuation.again);\n            }\n            else {\n                // Provider seems finished polling. Since we are never going to poll again,\n                // disconnect provider and set status to OFFLINE until another call to db.syncable.connect().\n                activePeer.disconnect(Statuses.OFFLINE);\n            }\n        }\n    };\n}\n\nfunction initConnectFn(db, activePeers) {\n    return function connect(protocolInstance, protocolName, url, options, dbAliveID) {\n        /// <param name=\"protocolInstance\" type=\"ISyncProtocol\"></param>\n        var existingPeer = activePeers.filter(function (peer) {\n            return peer.url === url;\n        });\n        if (existingPeer.length > 0) {\n            var activePeer = existingPeer[0];\n            var diffObject = {};\n            Dexie.getObjectDiff(activePeer.syncOptions, options, diffObject);\n            // Options have been changed\n            // We need to disconnect and reconnect\n            if (Object.keys(diffObject).length !== 0) {\n                return db.syncable.disconnect(url)\n                    .then(function () {\n                    return execConnect();\n                });\n            }\n            else {\n                // Never create multiple syncNodes with same protocolName and url. Instead, let the next call to connect() return the same promise that\n                // have already been started and eventually also resolved. If promise has already resolved (node connected), calling existing promise.then() will give a callback directly.\n                return existingPeer[0].connectPromise;\n            }\n        }\n        function execConnect() {\n            // Use an object otherwise we wouldn't be able to get the reject promise from\n            // connectProtocol\n            var rejectConnectPromise = { p: null };\n            var connectProtocol = initConnectProtocol(db, protocolInstance, dbAliveID, options, rejectConnectPromise);\n            var getOrCreateSyncNode = initGetOrCreateSyncNode(db, protocolName, url);\n            var connectPromise = getOrCreateSyncNode(options).then(function (node) {\n                return connectProtocol(node, activePeer);\n            });\n            var disconnected = false;\n            var activePeer = {\n                url: url,\n                status: Statuses.OFFLINE,\n                connectPromise: connectPromise,\n                syncOptions: options,\n                on: Dexie.Events(null, \"disconnect\"),\n                disconnect: function (newStatus, error) {\n                    var pos = activePeers.indexOf(activePeer);\n                    if (pos >= 0)\n                        activePeers.splice(pos, 1);\n                    if (error && rejectConnectPromise.p)\n                        rejectConnectPromise.p(error);\n                    if (!disconnected) {\n                        activePeer.on.disconnect.fire(newStatus, error);\n                    }\n                    disconnected = true;\n                }\n            };\n            activePeers.push(activePeer);\n            return connectPromise;\n        }\n        return execConnect();\n    };\n}\n\n/* ==========================================================================\n *                           dexie-syncable.js\n * ==========================================================================\n *\n * Dexie addon for syncing indexedDB with remote endpoints.\n *\n * By David Fahlander, david.fahlander@gmail.com,\n *    Nikolas Poniros, https://github.com/nponiros\n *\n * ==========================================================================\n *\n * Version {version}, {date}\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n *\n */\nvar override = Dexie.override, Promise$1 = Dexie.Promise, Observable = Dexie.Observable;\n/** Dexie addon for remote database sync.\n *\n * @param {Dexie} db\n */\nfunction Syncable(db) {\n    if (!/^(3|4)\\./.test(Dexie.version))\n        throw new Error(\"Missing dexie version 3.x or 4.x\");\n    if (!db.observable || (db.observable.version !== \"{version}\" && !/^(3|4)\\./.test(db.observable.version)))\n        throw new Error(\"Missing dexie-observable version 3.x or 4.x\");\n    if (db.syncable) {\n        if (db.syncable.version !== \"{version}\")\n            throw new Error(\"Mixed versions of dexie-syncable\");\n        return; // Addon already active.\n    }\n    var activePeers = [];\n    var connectFn = initConnectFn(db, activePeers);\n    var syncableConnect = initSyncableConnect(db, connectFn);\n    db.on('message', function (msg) {\n        // Message from other local node arrives...\n        Dexie.vip(function () {\n            if (msg.type === 'connect') {\n                // We are master node and another non-master node wants us to do the connect.\n                db.syncable.connect(msg.message.protocolName, msg.message.url, msg.message.options).then(msg.resolve, msg.reject);\n            }\n            else if (msg.type === 'disconnect') {\n                db.syncable.disconnect(msg.message.url).then(msg.resolve, msg.reject);\n            }\n            else if (msg.type === 'syncStatusChanged') {\n                // We are client and a master node informs us about syncStatus change.\n                // Lookup the connectedProvider and call its event\n                db.syncable.on.statusChanged.fire(msg.message.newStatus, msg.message.url);\n            }\n        });\n    });\n    db.on('cleanup', function (weBecameMaster) {\n        // A cleanup (done in Dexie.Observable) may result in that a master node is removed and we become master.\n        if (weBecameMaster) {\n            // We took over the master role in Observable's cleanup method.\n            // We should connect to remote servers now.\n            // At this point, also reconnect servers with status ERROR_WILL_RETRY as well as plain ERROR.\n            // Reason to reconnect to those with plain \"ERROR\" is that the ERROR state may occur when a database\n            // connection has been closed. The new master would then be expected to reconnect.\n            // Also, this is not an infinite poll(). This is rare event that a new browser tab takes over from\n            // an old closed one. \n            Dexie.ignoreTransaction(function () { return Dexie.vip(function () {\n                return db._syncNodes.where({ type: 'remote' })\n                    .filter(function (node) { return node.status !== Statuses.OFFLINE; })\n                    .toArray(function (connectedRemoteNodes) { return Promise$1.all(connectedRemoteNodes.map(function (node) {\n                    return db.syncable.connect(node.syncProtocol, node.url, node.syncOptions).catch(function (e) {\n                        console.warn(\"Dexie.Syncable: Could not connect to \".concat(node.url, \". \").concat(e.stack || e));\n                    });\n                })); });\n            }); }).catch('DatabaseClosedError', function () { });\n        }\n    });\n    // \"ready\" subscriber for the master node that makes sure it will always connect to sync server\n    // when the database opens. It will not wait for the connection to complete, just initiate the\n    // connection so that it will continue syncing as long as the database is open.\n    // Dexie.Observable's 'ready' subscriber will have been invoked prior to this, making sure\n    // that db._localSyncNode exists and persisted before this subscriber kicks in.\n    db.on('ready', function onReady() {\n        // Again, in onReady: If we ARE master, make sure to connect to remote servers that is in a connected state.\n        if (db._localSyncNode && db._localSyncNode.isMaster) {\n            // Make sure to connect to remote servers that is in a connected state (NOT OFFLINE or ERROR!)\n            // This \"ready\" subscriber will never be the one performing the initial sync request, because\n            // even after calling db.syncable.connect(), there won't exist any \"remote\" sync node yet.\n            // Instead, db.syncable.connect() will subscribe to \"ready\" also, and that subscriber will be\n            // called after this one. There, in that subscriber, the initial sync request will take place\n            // and the \"remote\" node will be created so that this \"ready\" subscriber can auto-connect the\n            // next time this database is opened.\n            // CONCLUSION: We can always assume that the local DB has been in sync with the server at least\n            // once in the past for each \"connectedRemoteNode\" we find in query below.\n            // Don't halt db.ready while connecting (i.e. we do not return a promise here!)\n            db._syncNodes\n                .where('type').equals('remote')\n                .and(function (node) { return node.status !== Statuses.OFFLINE; })\n                .toArray(function (connectedRemoteNodes) {\n                // There are connected remote nodes that we must manage (or take over to manage)\n                connectedRemoteNodes.forEach(function (node) { return db.syncable.connect(node.syncProtocol, node.url, node.syncOptions)\n                    .catch(function () { }); } // A failure will be triggered in on('statusChanged'). We can ignore.\n                );\n            }).catch('DatabaseClosedError', function () { });\n        }\n    }, true); // True means the ready event will survive a db reopen - db.close()/db.open()\n    db.syncable = {\n        version: \"{version}\"\n    };\n    db.syncable.getStatus = function (url, cb) {\n        if (db.isOpen()) {\n            return Dexie.vip(function () {\n                return db._syncNodes.where('url').equals(url).first(function (node) {\n                    return node ? node.status : Statuses.OFFLINE;\n                });\n            }).then(cb);\n        }\n        else {\n            return Promise$1.resolve(Syncable.Statuses.OFFLINE).then(cb);\n        }\n    };\n    db.syncable.getOptions = function (url, cb) {\n        return db.transaction('r?', db._syncNodes, function () {\n            return db._syncNodes.where('url').equals(url).first(function (node) {\n                return node.syncOptions;\n            }).then(cb);\n        });\n    };\n    db.syncable.list = function () {\n        return db.transaction('r?', db._syncNodes, function () {\n            return db._syncNodes.where('type').equals('remote').toArray(function (a) {\n                return a.map(function (node) { return node.url; });\n            });\n        });\n    };\n    db.syncable.on = Dexie.Events(db, { statusChanged: \"asap\" });\n    db.syncable.disconnect = function (url) {\n        return Dexie.ignoreTransaction(function () {\n            return Promise$1.resolve().then(function () {\n                if (db._localSyncNode && db._localSyncNode.isMaster) {\n                    return Promise$1.all(activePeers.filter(function (peer) { return peer.url === url; }).map(function (peer) {\n                        return peer.disconnect(Statuses.OFFLINE);\n                    }));\n                }\n                else {\n                    return db._syncNodes.where('isMaster').above(0).first(function (masterNode) {\n                        return db.observable.sendMessage('disconnect', { url: url }, masterNode.id, { wantReply: true });\n                    });\n                }\n            }).then(function () {\n                return db._syncNodes.where(\"url\").equals(url).modify(function (node) {\n                    node.status = Statuses.OFFLINE;\n                });\n            });\n        });\n    };\n    db.syncable.connect = function (protocolName, url, options) {\n        options = options || {}; // Make sure options is always an object because 1) Provider expects it to be. 2) We'll be persisting it and you cannot persist undefined.\n        var protocolInstance = Syncable.registeredProtocols[protocolName];\n        if (protocolInstance) {\n            return syncableConnect(protocolInstance, protocolName, url, options);\n        }\n        else {\n            return Promise$1.reject(new Error(\"ISyncProtocol '\" + protocolName + \"' is not registered in Dexie.Syncable.registerSyncProtocol()\"));\n        }\n    };\n    db.syncable.delete = function (url) {\n        return db.syncable.disconnect(url).then(function () {\n            return db.transaction('rw!', db._syncNodes, db._changes, db._uncommittedChanges, function () {\n                // Find the node(s)\n                // Several can be found, as detected by @martindiphoorn,\n                // let's delete them and cleanup _uncommittedChanges and _changes \n                // accordingly.\n                var nodeIDsToDelete;\n                return db._syncNodes\n                    .where(\"url\").equals(url)\n                    .toArray(function (nodes) { return nodes.map(function (node) { return node.id; }); })\n                    .then(function (nodeIDs) {\n                    nodeIDsToDelete = nodeIDs;\n                    // Delete the syncNode that represents the remote endpoint.\n                    return db._syncNodes.where('id').anyOf(nodeIDs).delete();\n                })\n                    .then(function () {\n                    // In case there were uncommittedChanges belonging to this, delete them as well\n                    return db._uncommittedChanges.where('node').anyOf(nodeIDsToDelete).delete();\n                });\n            }).then(function () {\n                // Spawn background job to delete old changes, now that a node has been deleted,\n                // there might be changes in _changes table that is not needed to keep anymore.\n                // This is done in its own transaction, or possible several transaction to prohibit\n                // starvation\n                Observable.deleteOldChanges(db);\n            });\n        });\n    };\n    db.syncable.unsyncedChanges = function (url) {\n        return db._syncNodes.where(\"url\").equals(url).first(function (node) {\n            return db._changes.where('rev').above(node.myRevision).toArray();\n        });\n    };\n    db.close = override(db.close, function (origClose) {\n        return function () {\n            activePeers.forEach(function (peer) {\n                peer.disconnect();\n            });\n            return origClose.apply(this, arguments);\n        };\n    });\n    Object.defineProperty(db.observable.SyncNode.prototype, 'save', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var _this = this;\n            return db.transaction('rw?', db._syncNodes, function () {\n                return db._syncNodes.put(_this);\n            });\n        }\n    });\n}\nSyncable.version = \"{version}\";\nSyncable.Statuses = Statuses;\nSyncable.StatusTexts = StatusTexts;\nSyncable.registeredProtocols = {}; // Map<String,ISyncProviderFactory> when key is the provider name.\nSyncable.registerSyncProtocol = function (name, protocolInstance) {\n    /// <summary>\n    ///    Register a synchronization protocol that can synchronize databases with remote servers.\n    /// </summary>\n    /// <param name=\"name\" type=\"String\">Provider name</param>\n    /// <param name=\"protocolInstance\" type=\"ISyncProtocol\">Implementation of ISyncProtocol</param>\n    var partialsThreshold = protocolInstance.partialsThreshold;\n    if (typeof partialsThreshold === 'number') {\n        // Don't allow NaN or negative threshold\n        if (isNaN(partialsThreshold) || partialsThreshold < 0) {\n            throw new Error('The given number for the threshold is not supported');\n        }\n        // If the threshold is 0 we will not send any client changes but will get server changes\n    }\n    else {\n        // Use Infinity as the default so simple protocols don't have to care about partial synchronization\n        protocolInstance.partialsThreshold = Infinity;\n    }\n    Syncable.registeredProtocols[name] = protocolInstance;\n};\nif (Dexie.Syncable) {\n    if (Dexie.Syncable.version !== \"{version}\") {\n        throw new Error(\"Mixed versions of dexie-syncable\");\n    }\n}\nelse {\n    // Register addon in Dexie:\n    Dexie.Syncable = Syncable;\n    Dexie.addons.push(Syncable);\n}\nvar Dexie_Syncable = Dexie.Syncable;\n\nexport { Dexie_Syncable as default };\n", "// Basic Schema Library\n// utils for validating and interacting with Basic schemas\nimport Ajv from 'ajv'\n\nconst basicJsonSchema = {\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"project_id\": {\n            \"type\": \"string\"\n        },\n        \"namespace\": {\n            \"type\": \"string\",\n        },\n        \"version\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n        },\n        \"tables\": {\n            \"type\": \"object\",\n            \"propertyNames\": {\n                \"pattern\": \"^[a-zA-Z0-9_]+$\",\n                \"minLength\": 1,\n                \"maxLength\": 50, \n                \"type\": \"string\"\n            },\n            \"patternProperties\": {\n                \"^[a-zA-Z0-9_]+$\": {\n                    \"type\": \"object\",\n                    \"propertyNames\": {\n                        \"pattern\": \"^[a-zA-Z0-9_]+$\",\n                        \"minLength\": 1,\n                        \"maxLength\": 50, \n                        \"type\": \"string\"\n                    },\n                    \"properties\": {\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": {\n                            \"type\": \"string\",\n                            \"enum\": [\"collection\"]\n                        },\n                        \"origin\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"type\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\"reference\"]\n                                },\n                                \"project_id\": {\n                                    \"type\": \"string\"\n                                },\n                                \"table\": {\n                                    \"type\": \"string\"\n                                },\n                                \"version\": {\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"if\": {\n                                \"properties\": { \"type\": { \"const\": \"reference\" } }\n                            },\n                            \"then\": {\n                                \"required\": [\"project_id\", \"table\"]\n                            }\n                        },\n                        \"fields\": {\n                            \"type\": \"object\",\n                            \"propertyNames\": {\n                                \"pattern\": \"^[a-zA-Z0-9_]+$\",\n                                \"minLength\": 1,\n                                \"maxLength\": 50, \n                                \"type\": \"string\"\n                            },\n                            \"patternProperties\": {\n                                \"^[a-zA-Z0-9_]+$\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"type\": {\n                                            \"type\": \"string\",\n                                            \"enum\": [\"string\", \"boolean\", \"number\", \"json\"]\n                                        },\n                                        \"indexed\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"required\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    },\n                                    \"required\": [\"type\"]\n                                }\n                            },\n                            \"additionalProperties\": true\n                        }\n                    },\n                    \"required\": [\"fields\"]\n                }\n            },\n            \"additionalProperties\": true\n        }\n    },\n    \"required\": [\"project_id\", \"version\", \"tables\"]\n}\n\nconst ajv = new Ajv()\nconst validator = ajv.compile(basicJsonSchema)\n\n\nfunction generateEmptySchema(project_id: string = \"\", version: number = 0) {\n    return {\n        project_id: project_id,\n        version: version,\n        tables: {\n            foo: { \n                name: \"foo\",\n                type: \"collection\",\n                fields: {\n                    bar: {\n                        type: \"string\",\n                        required: true,\n                    }\n                }\n            }\n        }\n    }\n}\n\ntype Schema = {\n    project_id: string,\n    version: number,\n    tables: any\n}\n\n\n/**\n * Compare two schemas and detect any differences between them\n * @param oldSchema - The original schema to compare against\n * @param newSchema - The new schema to compare with the original\n * @returns {Object} Comparison result containing:\n *   - valid: boolean indicating if schemas are identical\n *   - changes: Array of detected changes between schemas\n */\nfunction compareSchemas(oldSchema: any, newSchema: any) {\n    const changes = _getSchemaChanges(oldSchema, newSchema)\n    const valid = changes.length === 0 ? true : false\n    return { valid, changes }\n}\n\n/**\n * Validate a schema\n * only checks if the schema is formatted correctly, not if can be published\n * @param schema - The schema to validate\n * @returns {valid: boolean, errors: any[]} - The validation result\n */\nfunction validateSchema(schema: Schema): { valid: boolean, errors: ErrorObject[] } {\n    const v = validator(schema)\n    return {\n        valid: v,\n        errors: validator.errors || []\n    }\n}\n\ntype ErrorObject = {\n    keyword?: string;\n    instancePath?: string; \n    schemaPath?: string;\n    params?: Record<string, any>;\n    propertyName?: string;\n    message?: string;\n    schema?: any;\n    parentSchema?: any;\n    data?: any;\n}\n\n\n/**\n * Validate data against a schema's table definition. Only checks against provided schema.\n * @param schema - The schema to validate against\n * @param table - The table name in the schema to validate against\n * @param data - The data object to validate\n * @param checkRequired - Whether to check if required fields are present (default: true)\n * @returns {Object} Validation result containing:\n *   - valid: boolean indicating if validation passed\n *   - errors: Array of validation error objects\n *   - message: Error message if validation failed\n */\nfunction validateData(schema: Schema, table: string, data: Record<string, any>, checkRequired: boolean = true) : { valid: boolean, errors?: ErrorObject[], message?: string } {\n    const valid = validateSchema(schema)\n    if (!valid.valid) {\n        return { valid: false, errors: valid.errors, message: \"Schema is invalid\" }\n    }\n\n    const tableSchema = schema.tables[table]\n\n    if (!tableSchema) {\n        return { valid: false, errors: [{ message: `Table ${table} not found in schema` }], message: \"Table not found\" }\n    }\n\n    for (const [fieldName, fieldValue] of Object.entries(data)) {\n        const fieldSchema = tableSchema.fields[fieldName]\n\n        if (!fieldSchema) {\n            return {\n                valid: false,\n                errors: [{ message: `Field ${fieldName} not found in schema` }],\n                message: \"Invalid field\"\n            }\n        }\n\n        const schemaType = fieldSchema.type\n        const valueType = typeof fieldValue\n\n        if (\n            (schemaType === 'string' && valueType !== 'string') ||\n            (schemaType === 'number' && valueType !== 'number') ||\n            (schemaType === 'boolean' && valueType !== 'boolean') ||\n            (schemaType === 'json' && valueType !== 'object')\n        ) {\n            return {\n                valid: false,\n                errors: [{\n                    message: `Field ${fieldName} should be type ${schemaType}, got ${valueType}`\n                }],\n                message: \"invalid type\"\n            }\n        }\n    }\n\n    if (checkRequired) {\n        for (const [fieldName, fieldSchema] of Object.entries(tableSchema.fields)) {\n            if ((fieldSchema as { required?: boolean }).required && !data[fieldName]) {\n                return { valid: false, errors: [{ message: `Field ${fieldName} is required` }], message: \"Required field missing\" }\n            }\n        }\n    }\n\n    return { valid: true, errors: [] }\n}\n\ntype SchemaChangeType = \"property_changed\" | \"property_removed\" | \"table_added\" | \"table_removed\" | \"field_added\" | \"field_removed\" | \"field_type_changed\" | \"field_required_changed\" | \"field_property_added\" | \"field_property_changed\" | \"field_property_removed\"\n\ntype SchemaChange = {\n    type: SchemaChangeType,\n    property?: string,\n    table?: string,\n    field?: string,\n    old?: any,\n    new?: any\n}\n\nfunction _getSchemaChanges(oldSchema: any, newSchema: any): SchemaChange[] {\n    // Compare tables between schemas\n    const changes: SchemaChange[] = []\n\n    // Check for top level property changes\n    for (const key in newSchema) {\n        if (key !== 'tables' && newSchema[key] !== oldSchema[key]) {\n            changes.push({\n                type: 'property_changed',\n                property: key,\n                old: oldSchema[key],\n                new: newSchema[key]\n            })\n        }\n    }\n\n    for (const key in oldSchema) {\n        if (key !== 'tables' && !newSchema.hasOwnProperty(key)) {\n            changes.push({\n                type: 'property_removed',\n                property: key,\n                old: oldSchema[key]\n            })\n        }\n    }\n\n    // Check for removed tables\n    for (const tableName in oldSchema.tables) {\n        if (!newSchema.tables[tableName]) {\n            changes.push({\n                type: 'table_removed',\n                table: tableName\n            })\n        }\n    }\n\n    // Check for added tables and field changes\n    for (const tableName in newSchema.tables) {\n        const newTable = newSchema.tables[tableName]\n        const oldTable = oldSchema.tables[tableName]\n\n        if (!oldTable) {\n            changes.push({\n                type: 'table_added',\n                table: tableName\n            })\n            continue\n        }\n\n        // Compare fields\n        for (const fieldName in newTable.fields) {\n            const newField = newTable.fields[fieldName]\n            const oldField = oldTable.fields[fieldName]\n\n            if (!oldField) {\n                changes.push({\n                    type: 'field_added',\n                    table: tableName,\n                    field: fieldName\n                })\n                continue\n            }\n\n            // Check for field type changes\n            if (newField.type !== oldField.type) {\n                changes.push({\n                    type: 'field_type_changed',\n                    table: tableName,\n                    field: fieldName,\n                    old: oldField.type,\n                    new: newField.type\n                })\n            }\n\n            // Check for required flag changes\n            if (newField.required !== oldField.required) {\n                changes.push({\n                    type: 'field_required_changed',\n                    table: tableName,\n                    field: fieldName,\n                    old: oldField.required,\n                    new: newField.required\n                })\n            }\n        }\n\n        // Check for removed fields\n        for (const fieldName in oldTable.fields) {\n            if (!newTable.fields[fieldName]) {\n                changes.push({\n                    type: 'field_removed',\n                    table: tableName,\n                    field: fieldName\n                })\n            }\n        }\n    }\n\n    // Check for field property changes (excluding type which is already checked)\n    for (const tableName in newSchema.tables) {\n        const newTable = newSchema.tables[tableName]\n        const oldTable = oldSchema.tables[tableName]\n\n        if (!oldTable) continue\n\n        for (const fieldName in newTable.fields) {\n            const newField = newTable.fields[fieldName]\n            const oldField = oldTable.fields[fieldName]\n\n            if (!oldField) continue\n\n            // Compare all properties except type\n            for (const prop in newField) {\n                if (prop === 'type') continue\n\n                if (!(prop in oldField)) {\n                    changes.push({\n                        type: 'field_property_added',\n                        table: tableName,\n                        field: fieldName,\n                        property: prop,\n                        new: newField[prop]\n                    })\n                } else if (JSON.stringify(newField[prop]) !== JSON.stringify(oldField[prop])) {\n                    changes.push({\n                        type: 'field_property_changed',\n                        table: tableName,\n                        field: fieldName,\n                        property: prop,\n                        old: oldField[prop],\n                        new: newField[prop]\n                    })\n                }\n            }\n\n            // Check for removed properties\n            for (const prop in oldField) {\n                if (prop === 'type') continue\n                if (!(prop in newField)) {\n                    changes.push({\n                        type: 'field_property_removed',\n                        table: tableName,\n                        field: fieldName,\n                        property: prop,\n                        old: oldField[prop]\n                    })\n                }\n            }\n        }\n    }\n\n    return changes\n}\n\n\nfunction validateUpdateSchema(oldSchema: any, newSchema: any) {\n    const oldValid = validateSchema(oldSchema)\n    const newValid = validateSchema(newSchema)\n\n    if (!oldValid.valid || !newValid.valid) {\n        return { valid: false, errors: oldValid.errors.concat(newValid.errors), message: \"schemas are is invalid\" }\n    }\n\n\n    const changes = _getSchemaChanges(oldSchema, newSchema)\n\n    const changeErrors = []\n    for (const change of changes) {\n        if (change.type === 'property_changed' && change.property === 'project_id') {\n            changeErrors.push({\n                change: change,\n                message: \"Cannot modify project_id property\"\n            })\n        }\n\n        if (change.type === 'property_changed' && change.property === 'version') {\n            if (change.new !== change.old + 1) {\n                changeErrors.push({\n                    change: change,\n                    message: `Version must be incremented by 1. Expected version:${change.old + 1}, got version:${change.new}`\n                })\n            }\n        }\n\n        if (change.type === 'field_type_changed') {\n            changeErrors.push({\n                change: change,\n                message: `Cannot change type of field \"${change.field}\" from \"${change.old}\" to \"${change.new}\"`\n            })\n        }\n    }\n\n    if (changeErrors.length > 0) {\n        return {\n            valid: false,\n            errors: changeErrors,\n            message: \"Invalid schema changes detected\"\n        }\n    }\n\n    return { valid: true, changes: changes, errors: [] }\n}\n\n\n/**\n * Get the JSON schema definition for the Basic Schema\n * @returns {Object} The JSON schema\n */\nfunction getJsonSchema() {\n    return basicJsonSchema\n}\n\nexport {\n    validateSchema,\n    validateData,\n    generateEmptySchema,\n    validateUpdateSchema,\n    compareSchemas,\n    getJsonSchema\n}", "import React from 'react';\nexport interface InteropableObservable<T> {\n  subscribe(\n    onNext: (x: T) => any,\n    onError?: (error: any) => any\n  ): (() => any) | { unsubscribe(): any };\n  getValue?(): T; // For BehaviorSubject\n  hasValue?(): boolean; // For liveQuery observable returning false until a value is available\n}\n\nexport function useObservable<T, TDefault>(\n  observable: InteropableObservable<T>\n): T | undefined;\nexport function useObservable<T, TDefault>(\n  observable: InteropableObservable<T>,\n  defaultResult: TDefault\n): T | TDefault;\nexport function useObservable<T>(\n  observableFactory: () => InteropableObservable<T>,\n  deps?: any[]\n): T | undefined;\nexport function useObservable<T, TDefault>(\n  observableFactory: () => InteropableObservable<T>,\n  deps: any[],\n  defaultResult: TDefault\n): T | TDefault;\nexport function useObservable<T, TDefault>(\n  observableFactory:\n    | InteropableObservable<T>\n    | (() => InteropableObservable<T>),\n  arg2?: any,\n  arg3?: any\n) {\n  // Resolve vars from overloading variants of this function:\n  let deps: any[];\n  let defaultResult: TDefault;\n  if (typeof observableFactory === 'function') {\n    deps = arg2 || [];\n    defaultResult = arg3;\n  } else {\n    deps = [];\n    defaultResult = arg2;\n  }\n\n  // Create a ref that keeps the state we need\n  const monitor = React.useRef({\n    hasResult: false,\n    result: defaultResult as T | TDefault,\n    error: null as any,\n  });\n  // We control when component should rerender. Make triggerUpdate\n  // as examplified on React's docs at:\n  // https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n  const [_, triggerUpdate] = React.useReducer((x) => x + 1, 0);\n\n  // Memoize the observable based on deps\n  const observable = React.useMemo(() => {\n    // Make it remember previous subscription's default value when\n    // resubscribing.\n    const observable =\n      typeof observableFactory === 'function'\n        ? observableFactory()\n        : observableFactory;\n    if (!observable || typeof observable.subscribe !== 'function') {\n      if (observableFactory === observable) {\n        throw new TypeError(\n          `Given argument to useObservable() was neither a valid observable nor a function.`\n        );\n      } else {\n        throw new TypeError(\n          `Observable factory given to useObservable() did not return a valid observable.`\n        );\n      }\n    }\n\n    if (!monitor.current.hasResult &&\n        typeof window !== 'undefined' // Don't do this in SSR\n       ) {\n      // Optimize for BehaviorSubject and other observables implementing getValue():\n      if (typeof observable.hasValue !== 'function' || observable.hasValue()) {\n        if (typeof observable.getValue === 'function') {\n          monitor.current.result = observable.getValue();\n          monitor.current.hasResult = true;\n        } else {\n          // Find out if the observable has a current value: try get it by subscribing and\n          // unsubscribing synchronously\n          const subscription = observable.subscribe((val) => {\n            monitor.current.result = val;\n            monitor.current.hasResult = true;\n          });\n          // Unsubscribe directly. We only needed any synchronous value if it was possible.\n          if (typeof subscription === 'function') {\n            subscription();\n          } else {\n            subscription.unsubscribe();\n          }\n        }\n      }\n    }\n    return observable;\n  }, deps);\n\n  // Integrate with react devtools:\n  React.useDebugValue(monitor.current.result);\n\n  // Subscribe to the observable\n  React.useEffect(() => {\n    const subscription = observable.subscribe(\n      (val) => {\n        const { current } = monitor;\n        if (current.error !== null || current.result !== val) {\n          current.error = null;\n          current.result = val;\n          current.hasResult = true;\n          triggerUpdate();\n        }\n      },\n      (err) => {\n        const { current } = monitor;\n        if (current.error !== err) {\n          current.error = err;\n          triggerUpdate();\n        }\n      }\n    );\n    return typeof subscription === 'function'\n      ? subscription // Support observables that return unsubscribe directly\n      : subscription.unsubscribe.bind(subscription);\n  }, deps);\n\n  // Throw if observable has emitted error so that\n  // an ErrorBoundrary can catch it\n  if (monitor.current.error) throw monitor.current.error;\n\n  // Return the current result\n  return monitor.current.result;\n}\n", "import { liveQuery } from 'dexie';\nimport { useObservable } from './useObservable';\n\nexport function useLiveQuery<T>(\n  querier: () => Promise<T> | T,\n  deps?: any[]\n): T | undefined;\nexport function useLiveQuery<T, TDefault>(\n  querier: () => Promise<T> | T,\n  deps: any[],\n  defaultResult: TDefault\n): T | TDefault;\nexport function useLiveQuery<T, TDefault>(\n  querier: () => Promise<T> | T,\n  deps?: any[],\n  defaultResult?: TDefault\n): T | TDefault {\n  return useObservable(\n    () => liveQuery(querier),\n    deps || [],\n    defaultResult as TDefault\n  );\n}\n", "import { Dexie } from 'dexie';\nimport { useObservable } from './useObservable';\n//import type { KeyPaths, TableProp } from 'dexie'; // Issue #1725 - not compatible with dexie@3.\n// Workaround: provide these types inline for now. When dexie 4 stable is out, we can use the types from dexie@4.\nexport type KeyPaths<T> = {\n  [P in keyof T]: \n    P extends string \n      ? T[P] extends Array<infer K>\n        ? K extends object // only drill into the array element if it's an object\n          ? P | `${P}.${number}` | `${P}.${number}.${KeyPaths<K>}` \n          : P | `${P}.${number}`\n        : T[P] extends (...args: any[]) => any // Method\n           ? never \n          : T[P] extends object \n            ? P | `${P}.${KeyPaths<T[P]>}` \n            : P \n      : never;\n}[keyof T];\nexport type TableProp<DX extends Dexie> = {\n  [K in keyof DX]: DX[K] extends {schema: any, get: any, put: any, add: any, where: any} ? K : never;\n}[keyof DX] & string;\n\n\ninterface DexieCloudEntity {\n  table(): string;\n  realmId: string;\n  owner: string;\n}\n\nexport interface PermissionChecker<T, TableName extends string> {\n  add(...tableNames: TableName[]): boolean;\n  update(...props: KeyPaths<T>[]): boolean;\n  delete(): boolean;\n}\n\nexport function usePermissions<T extends DexieCloudEntity>(\n  entity: T\n): PermissionChecker<\n  T,\n  T extends { table: () => infer TableName } ? TableName : string\n>;\nexport function usePermissions<\n  TDB extends Dexie,\n  T\n>(db: TDB, table: TableProp<TDB>, obj: T): PermissionChecker<T, TableProp<TDB>>;\nexport function usePermissions(\n  firstArg:\n    | Dexie\n    | {\n        realmId?: string;\n        owner?: string;\n        table?: () => string;\n        readonly db?: Dexie;\n      },\n  table?: string,\n  obj?: { realmId?: string; owner?: string }\n) {\n  if (!firstArg)\n    throw new TypeError(\n      `Invalid arguments to usePermissions(): undefined or null`\n    );\n  let db: Dexie;\n  if (arguments.length >= 3) {\n    if (!('transaction' in firstArg)) {\n      // Using ducktyping instead of instanceof in case there are multiple Dexie modules in app.\n      // First arg is  ensures first arg is a Dexie instance\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 1st arg must be a Dexie instance`\n      );\n    }\n    if (typeof table !== 'string')\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 2nd arg must be string`\n      );\n    if (!obj || typeof obj !== 'object')\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 3rd arg must be an object`\n      );\n    db = firstArg;\n  } else {\n    if (firstArg instanceof Dexie)\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): Missing table and obj arguments.`\n      );\n\n    if (\n      typeof firstArg.table === 'function' &&\n      typeof firstArg.db === 'object'\n    ) {\n      db = firstArg.db!;\n      obj = firstArg;\n      table = firstArg.table();\n    } else {\n      throw new TypeError(\n        `Invalid arguments to usePermissions(). ` +\n          `Expected usePermissions(entity: DexieCloudEntity) or ` +\n          `usePermissions(db: Dexie, table: string, obj: DexieCloudObject)`\n      );\n    }\n  }\n  if (!('cloud' in db))\n    throw new Error(\n      `usePermissions() is only for Dexie Cloud but there's no dexie-cloud-addon active in given db.`\n    );\n  if (!('permissions' in (db as any).cloud))\n    throw new Error(`usePermissions() requires a newer version of dexie-cloud-addon. Please upgrade it.`)\n  return useObservable(\n    // @ts-ignore\n    () => db.cloud.permissions(obj, table),\n    [obj.realmId, obj.owner, table]\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAgBA,UAAI,gBAAgB,SAAS,GAAG,GAAG;AAC/B,wBAAgB,OAAO,kBAClB,EAAE,WAAW,CAAA,EAAE,aAAc,SAAS,SAAUA,IAAGC,IAAG;AAAE,UAAAD,GAAE,YAAYC;QAAE,KACzE,SAAUD,IAAGC,IAAG;AAAE,mBAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;QAAE;AACnG,eAAO,cAAc,GAAG,CAAC;MAC7B;AAEO,eAAS,UAAU,GAAG,GAAG;AAC5B,YAAI,OAAO,MAAM,cAAc,MAAM;AACjC,gBAAM,IAAI,UAAU,yBAAyB,OAAO,CAAC,IAAI,+BAA+B;AAC5F,sBAAc,GAAG,CAAC;AAClB,iBAAS,KAAK;AAAE,eAAK,cAAc;QAAE;AACrC,UAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAE;MACrF;AAEO,UAAI,WAAW,WAAW;AAC7B,mBAAW,OAAO,UAAU,SAASC,UAAS,GAAG;AAC7C,mBAAS,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,gBAAI,UAAU,CAAC;AACf,qBAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,EAAG,GAAE,CAAC,IAAI,EAAE,CAAC;UACvF;AACQ,iBAAO;QACf;AACI,eAAO,SAAS,MAAM,MAAM,SAAS;MACzC;AA4HO,eAAS,cAAc,IAAI,MAAM,MAAM;AAC1C,YAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACjF,cAAI,MAAM,EAAE,KAAK,OAAO;AACpB,gBAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,eAAG,CAAC,IAAI,KAAK,CAAC;UAC1B;QACA;AACI,eAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;MAC3D;AC3KO,UAAM,UACT,OAAO,eAAe,cAAc,aACpC,OAAO,SAAS,cAAc,OAC9B,OAAO,WAAW,cAAc,SAChC;ACJG,UAAM,OAAO,OAAO;AACpB,UAAM,UAAU,MAAM;AAC7B,UAAI,OAAO,YAAY,eAAe,CAAC,QAAQ,SAAQ;AAInD,gBAAQ,UAAU;MACtB;eAGgB,OAA0C,KAAQ,WAAY;AAC1E,YAAI,OAAO,cAAc;AAAU,iBAAO;AAC1C,aAAK,SAAS,EAAE,QAAQ,SAAU,KAAG;AACjC,cAAI,GAAG,IAAI,UAAU,GAAG;SAC3B;AACD,eAAO;MACX;AAEO,UAAM,WAAW,OAAO;AACxB,UAAM,UAAU,CAAA,EAAG;eACV,OAAO,KAAK,MAAI;AAC5B,eAAO,QAAQ,KAAK,KAAK,IAAI;MACjC;eAEgB,MAAO,OAAO,WAAS;AACnC,YAAI,OAAO,cAAc;AAAY,sBAAY,UAAU,SAAS,KAAK,CAAC;AAC1E,SAAC,OAAO,YAAY,cAAc,OAAO,QAAQ,SAAS,SAAS,EAAE,QAAQ,SAAA,KAAG;AAC5E,kBAAQ,OAAO,KAAK,UAAU,GAAG,CAAC;SACrC;MACL;AAEO,UAAM,iBAAiB,OAAO;eAErB,QAAQ,KAAK,MAAM,kBAAkB,SAAQ;AACzD,uBAAe,KAAK,MAAM,OAAO,oBAAoB,OAAO,kBAAkB,KAAK,KAAK,OAAO,iBAAiB,QAAQ,aACpH,EAAC,KAAK,iBAAiB,KAAK,KAAK,iBAAiB,KAAK,cAAc,KAAI,IACzE,EAAC,OAAO,kBAAkB,cAAc,MAAM,UAAU,KAAI,GAAG,OAAO,CAAC;MAC/E;eAEgB,OAAO,OAAK;AACxB,eAAO;UACH,MAAM,SAAU,QAAM;AAClB,kBAAM,YAAY,OAAO,OAAO,OAAO,SAAS;AAChD,oBAAQ,MAAM,WAAW,eAAe,KAAK;AAC7C,mBAAO;cACH,QAAQ,MAAM,KAAK,MAAM,MAAM,SAAS;;;;MAIxD;AAEO,UAAM,2BAA2B,OAAO;eAE/B,sBAAsB,KAAK,MAAI;AAC3C,YAAM,KAAK,yBAAyB,KAAK,IAAI;AAC7C,YAAI;AACJ,eAAO,OAAO,QAAQ,SAAS,GAAG,MAAM,sBAAuB,OAAO,IAAI;MAC9E;AAEA,UAAM,SAAS,CAAA,EAAG;eACF,MAAM,MAAM,OAAQ,KAAI;AACpC,eAAO,OAAO,KAAK,MAAM,OAAO,GAAG;MACvC;eAEgBC,UAAS,UAAU,kBAAgB;AAC/C,eAAO,iBAAiB,QAAQ;MACpC;eAEgB,OAAQ,GAAC;AACrB,YAAI,CAAC;AAAG,gBAAM,IAAI,MAAM,kBAAkB;MAC9C;eAEgBC,OAAK,IAAE;AAEnB,YAAI,QAAQ;AAAc,uBAAa,EAAE;;AAAQ,qBAAW,IAAI,CAAC;MACrE;eAWgB,cAAoB,OAAY,WAA0C;AACtF,eAAO,MAAM,OAAO,SAAC,QAAQ,MAAM,GAAC;AAChC,cAAI,eAAe,UAAU,MAAM,CAAC;AACpC,cAAI;AAAc,mBAAO,aAAa,CAAC,CAAC,IAAI,aAAa,CAAC;AAC1D,iBAAO;WACR,CAAA,CAAE;MACT;eAoBgB,aAAa,KAAK,SAAO;AAErC,YAAI,OAAO,YAAY,YAAY,OAAO,KAAK,OAAO;AAAG,iBAAO,IAAI,OAAO;AAC3E,YAAI,CAAC;AAAS,iBAAO;AACrB,YAAI,OAAO,YAAY,UAAU;AAC7B,cAAI,KAAK,CAAA;AACT,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC5C,gBAAI,MAAM,aAAa,KAAK,QAAQ,CAAC,CAAC;AACtC,eAAG,KAAK,GAAG;;AAEf,iBAAO;;AAEX,YAAI,SAAS,QAAQ,QAAQ,GAAG;AAChC,YAAI,WAAW,IAAI;AACf,cAAI,WAAW,IAAI,QAAQ,OAAO,GAAG,MAAM,CAAC;AAC5C,iBAAO,YAAY,OAAO,SAAY,aAAa,UAAU,QAAQ,OAAO,SAAS,CAAC,CAAC;;AAE3F,eAAO;MACX;eAEgB,aAAa,KAAK,SAAS,OAAK;AAC5C,YAAI,CAAC,OAAO,YAAY;AAAW;AACnC,YAAI,cAAc,UAAU,OAAO,SAAS,GAAG;AAAG;AAClD,YAAI,OAAO,YAAY,YAAY,YAAY,SAAS;AACpD,iBAAO,OAAO,UAAU,YAAY,YAAY,KAAK;AACrD,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC5C,yBAAa,KAAK,QAAQ,CAAC,GAAG,MAAM,CAAC,CAAC;;eAEvC;AACH,cAAI,SAAS,QAAQ,QAAQ,GAAG;AAChC,cAAI,WAAW,IAAI;AACf,gBAAI,iBAAiB,QAAQ,OAAO,GAAG,MAAM;AAC7C,gBAAI,mBAAmB,QAAQ,OAAO,SAAS,CAAC;AAChD,gBAAI,qBAAqB;AACrB,kBAAI,UAAU,QAAW;AACrB,oBAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,SAAS,cAAc,CAAC;AAAG,sBAAI,OAAO,gBAAgB,CAAC;;AAC7E,yBAAO,IAAI,cAAc;;AAC3B,oBAAI,cAAc,IAAI;iBAC5B;AACD,kBAAI,WAAW,IAAI,cAAc;AACjC,kBAAI,CAAC,YAAY,CAAC,OAAO,KAAK,cAAc;AAAG,2BAAY,IAAI,cAAc,IAAI,CAAA;AACjF,2BAAa,UAAU,kBAAkB,KAAK;;iBAE/C;AACH,gBAAI,UAAU,QAAW;AACrB,kBAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,SAAS,OAAO,CAAC;AAAG,oBAAI,OAAO,SAAS,CAAC;;AAC/D,uBAAO,IAAI,OAAO;;AACpB,kBAAI,OAAO,IAAI;;;MAGlC;eAEgB,aAAa,KAAK,SAAO;AACrC,YAAI,OAAO,YAAY;AACnB,uBAAa,KAAK,SAAS,MAAS;iBAC/B,YAAY;AACjB,WAAA,EAAG,IAAI,KAAK,SAAS,SAAS,IAAE;AAC5B,yBAAa,KAAK,IAAI,MAAS;WAClC;MACT;eAEgB,aAAa,KAAG;AAC5B,YAAI,KAAK,CAAA;AACT,iBAAS,KAAK,KAAK;AACf,cAAI,OAAO,KAAK,CAAC;AAAG,eAAG,CAAC,IAAI,IAAI,CAAC;;AAErC,eAAO;MACX;AAEA,UAAM,SAAS,CAAA,EAAG;eACF,QAAY,GAAc;AACtC,eAAO,OAAO,MAAM,CAAA,GAAI,CAAC;MAC7B;AAGA,UAAM,qBACF,iNACC,MAAM,GAAG,EAAE,OACR,QAAQ,CAAC,GAAE,IAAG,IAAG,EAAE,EAAE,IAAI,SAAA,KAAG;AAAE,eAAA,CAAC,OAAM,QAAO,OAAO,EAAE,IAAI,SAAA,GAAC;AAAE,iBAAA,IAAE,MAAI;QAAO,CAAA;MAAC,CAAA,CAAC,CAAC,EAC9E,OAAO,SAAA,GAAC;AAAE,eAAA,QAAQ,CAAC;MAAC,CAAA;AAC1B,UAAM,iBAAiB,IAAI,IAAI,mBAAmB,IAAI,SAAA,GAAC;AAAE,eAAA,QAAQ,CAAC;MAAC,CAAA,CAAC;eAgBpD,sBAAwC,GAAI;AACxD,YAAM,KAAK,CAAA;AACX,iBAAW,KAAK;AAAG,cAAI,OAAO,GAAG,CAAC,GAAG;AACjC,gBAAM,IAAI,EAAE,CAAC;AACb,eAAG,CAAC,IAAI,CAAC,KAAK,OAAO,MAAM,YAAY,eAAe,IAAI,EAAE,WAAW,IAAI,IAAI,sBAAsB,CAAC;;AAE1G,eAAO;MACX;eAEgB,cAAc,GAAS;AACnC,iBAAW,KAAK;AAAG,cAAI,OAAO,GAAG,CAAC;AAAG,mBAAO;AAC5C,eAAO;MACX;AAEA,UAAI,eAAwC;eAQ5B,UAAa,KAAM;AAC/B,uBAAe,oBAAI,QAAO;AAC1B,YAAM,KAAK,eAAe,GAAG;AAC7B,uBAAe;AACf,eAAO;MACX;AAEA,eAAS,eAAkB,GAAI;AAC3B,YAAI,CAAC,KAAK,OAAO,MAAM;AAAU,iBAAO;AACxC,YAAI,KAAK,aAAa,IAAI,CAAC;AAC3B,YAAI;AAAI,iBAAO;AACf,YAAI,QAAQ,CAAC,GAAG;AACZ,eAAK,CAAA;AACL,uBAAa,IAAI,GAAG,EAAE;AACtB,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,EAAE,GAAG;AACtC,eAAG,KAAK,eAAe,EAAE,CAAC,CAAC,CAAC;;mBAEzB,eAAe,IAAI,EAAE,WAAW,GAAG;AAI1C,eAAK;eACF;AAGH,cAAM,QAAQ,SAAS,CAAC;AACxB,eAAK,UAAU,OAAO,YAAY,CAAA,IAAK,OAAO,OAAO,KAAK;AAC1D,uBAAa,IAAI,GAAG,EAAE;AACtB,mBAAS,QAAQ,GAAG;AAChB,gBAAI,OAAO,GAAG,IAAI,GAAG;AACjB,iBAAG,IAAI,IAAI,eAAe,EAAE,IAAI,CAAC;;;;AAI7C,eAAO;MACX;AAEO,UAAA,WAAY,CAAA,EAAE;eACL,YAAY,GAAS;AACjC,eAAO,SAAS,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE;MACvC;AAGO,UAAM,iBAAiB,OAAO,WAAW,cAC5C,OAAO,WACP;AACG,UAAM,gBAAgB,OAAO,mBAAmB,WAAW,SAAS,GAAC;AACxE,YAAI;AACJ,eAAO,KAAK,SAAS,IAAI,EAAE,cAAc,MAAM,EAAE,MAAM,CAAC;MAC5D,IAAI,WAAA;AAAc,eAAO;MAAK;eAKd,aAAa,GAAU,GAAM;AACzC,YAAM,IAAI,EAAE,QAAQ,CAAC;AACrB,YAAI,KAAK;AAAG,YAAE,OAAO,GAAG,CAAC;AACzB,eAAO,KAAK;MAChB;AAEO,UAAM,gBAAgB,CAAA;eASb,WAAY,WAAS;AACjC,YAAI,GAAG,GAAG,GAAG;AACb,YAAI,UAAU,WAAW,GAAG;AACxB,cAAI,QAAQ,SAAS;AAAG,mBAAO,UAAU,MAAK;AAC9C,cAAI,SAAS,iBAAiB,OAAO,cAAc;AAAU,mBAAO,CAAC,SAAS;AAC9E,cAAK,KAAK,cAAc,SAAS,GAAI;AACjC,gBAAI,CAAA;AACJ,mBAAQ,IAAI,GAAG,KAAI,GAAK,CAAC,EAAE;AAAM,gBAAE,KAAK,EAAE,KAAK;AAC/C,mBAAO;;AAEX,cAAI,aAAa;AAAM,mBAAO,CAAC,SAAS;AACxC,cAAI,UAAU;AACd,cAAI,OAAO,MAAM,UAAU;AACvB,gBAAI,IAAI,MAAM,CAAC;AACf,mBAAO;AAAK,gBAAE,CAAC,IAAI,UAAU,CAAC;AAC9B,mBAAO;;AAEX,iBAAO,CAAC,SAAS;;AAErB,YAAI,UAAU;AACd,YAAI,IAAI,MAAM,CAAC;AACf,eAAO;AAAK,YAAE,CAAC,IAAI,UAAU,CAAC;AAC9B,eAAO;MACX;AACO,UAAM,kBAAkB,OAAO,WAAW,cAC3C,SAAC,IAAY;AAAK,eAAA,GAAG,OAAO,WAAW,MAAM;MAAe,IAC5D,WAAA;AAAI,eAAA;MAAK;ACpUf,UAAI,kBAAkB;QAClB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;AAGJ,UAAI,mBAAmB;QACnB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;AAGJ,UAAI,YAAY,gBAAgB,OAAO,gBAAgB;AAEvD,UAAI,eAAe;QACf,gBAAgB;QAChB,gBAAgB;QAChB,OAAO;QACP,qBAAqB;QACrB,YAAY;;eAMA,WAAY,MAAM,KAAG;AAMjC,aAAK,OAAO;AACZ,aAAK,UAAU;MACnB;AAEA,aAAO,UAAU,EAAE,KAAK,KAAK,EAAE,OAAO;QAClC,UAAU,WAAA;AAAY,iBAAO,KAAK,OAAO,OAAO,KAAK;QAAQ;OAChE;AAED,eAAS,qBAAsB,KAAK,UAAQ;AACxC,eAAO,MAAM,eAAe,OAAO,KAAK,QAAQ,EAC3C,IAAI,SAAA,KAAG;AAAE,iBAAA,SAAS,GAAG,EAAE,SAAQ;QAAE,CAAA,EACjC,OAAO,SAAC,GAAE,GAAE,GAAC;AAAG,iBAAA,EAAE,QAAQ,CAAC,MAAM;QAAC,CAAA,EAClC,KAAK,IAAI;MAClB;eAMgB,YAAa,KAAK,UAAU,cAAc,YAAU;AAChE,aAAK,WAAW;AAChB,aAAK,aAAa;AAClB,aAAK,eAAe;AACpB,aAAK,UAAU,qBAAqB,KAAK,QAAQ;MACrD;AACA,aAAO,WAAW,EAAE,KAAK,UAAU;eAEnB,UAAW,KAAK,UAAQ;AACpC,aAAK,OAAO;AACZ,aAAK,WAAW,OAAO,KAAK,QAAQ,EAAE,IAAI,SAAA,KAAG;AAAI,iBAAA,SAAS,GAAG;QAAC,CAAA;AAC9D,aAAK,gBAAgB;AACrB,aAAK,UAAU,qBAAqB,KAAK,KAAK,QAAQ;MAC1D;AACA,aAAO,SAAS,EAAE,KAAK,UAAU;AAU1B,UAAI,WAAW,UAAU,OAAO,SAAC,KAAI,MAAI;AAAG,eAAC,IAAI,IAAI,IAAE,OAAK,SAAQ;MAAG,GAAE,CAAA,CAAE;AAGlF,UAAM,gBAAgB;AAEf,UAAI,aAAa,UAAU,OAAO,SAAC,KAAI,MAAI;AAO9C,YAAI,WAAW,OAAO;AACtB,iBAASC,YAAY,YAAY,OAAK;AAClC,eAAK,OAAO;AACZ,cAAI,CAAC,YAAY;AACb,iBAAK,UAAU,aAAa,IAAI,KAAK;AACrC,iBAAK,QAAQ;qBACN,OAAO,eAAe,UAAU;AACvC,iBAAK,UAAU,GAAA,OAAG,UAAU,EAAA,OAAG,CAAC,QAAQ,KAAK,QAAQ,KAAK;AAC1D,iBAAK,QAAQ,SAAS;qBACf,OAAO,eAAe,UAAU;AACvC,iBAAK,UAAU,GAAA,OAAG,WAAW,MAAI,GAAA,EAAA,OAAI,WAAW,OAAO;AACvD,iBAAK,QAAQ;;;AAGrB,eAAOA,WAAU,EAAE,KAAK,aAAa;AACrC,YAAI,IAAI,IAAEA;AACV,eAAO;MACX,GAAE,CAAA,CAAE;AAGJ,iBAAW,SAAS;AACpB,iBAAW,OAAO;AAClB,iBAAW,QAAQ;AAEZ,UAAI,eAAe,iBAAiB,OAAO,SAAC,KAAK,MAAI;AACxD,YAAI,OAAO,OAAO,IAAI,WAAW,IAAI;AACrC,eAAO;MACX,GAAG,CAAA,CAAE;eAEW,SAAU,UAAU,SAAO;AACvC,YAAI,CAAC,YAAY,oBAAoB,cAAc,oBAAoB,aAAa,oBAAoB,eAAe,CAAC,SAAS,QAAQ,CAAC,aAAa,SAAS,IAAI;AAChK,iBAAO;AACX,YAAI,KAAK,IAAI,aAAa,SAAS,IAAI,EAAE,WAAW,SAAS,SAAS,QAAQ;AAC9E,YAAI,WAAW,UAAU;AAErB,kBAAQ,IAAI,SAAS,EAAC,KAAK,WAAA;AACvB,mBAAO,KAAK,MAAM;YACrB,CAAC;;AAEN,eAAO;MACX;AAEO,UAAI,qBAAqB,UAAU,OAAO,SAAC,KAAK,MAAI;AACvD,YAAI,CAAC,UAAS,QAAO,OAAO,EAAE,QAAQ,IAAI,MAAM;AAC5C,cAAI,OAAO,OAAO,IAAI,WAAW,IAAI;AACzC,eAAO;MACX,GAAG,CAAA,CAAE;AAEL,yBAAmB,cAAc;AACjC,yBAAmB,aAAa;AAChC,yBAAmB,YAAY;eChKfC,OAAG;MAAA;eACH,OAAO,KAAG;AAAI,eAAO;MAAI;eACzB,kBAAkB,IAAI,IAAE;AAGpC,YAAI,MAAM,QAAQ,OAAO;AAAQ,iBAAO;AACxC,eAAO,SAAU,KAAG;AAChB,iBAAO,GAAG,GAAG,GAAG,CAAC;;MAEzB;eAEgB,SAAS,KAAK,KAAG;AAC7B,eAAO,WAAA;AACH,cAAI,MAAM,MAAM,SAAS;AACzB,cAAI,MAAM,MAAM,SAAS;;MAEjC;eAEgB,kBAAkB,IAAI,IAAE;AAGpC,YAAI,OAAOA;AAAK,iBAAO;AACvB,eAAO,WAAA;AACH,cAAI,MAAM,GAAG,MAAM,MAAM,SAAS;AAClC,cAAI,QAAQ;AAAW,sBAAU,CAAC,IAAI;AACtC,cAAI,YAAY,KAAK,WACjB,UAAU,KAAK;AACnB,eAAK,YAAY;AACjB,eAAK,UAAU;AACf,cAAI,OAAO,GAAG,MAAM,MAAM,SAAS;AACnC,cAAI;AAAW,iBAAK,YAAY,KAAK,YAAY,SAAS,WAAW,KAAK,SAAS,IAAI;AACvF,cAAI;AAAS,iBAAK,UAAU,KAAK,UAAU,SAAS,SAAS,KAAK,OAAO,IAAI;AAC7E,iBAAO,SAAS,SAAY,OAAO;;MAE3C;eAEgB,kBAAkB,IAAI,IAAE;AACpC,YAAI,OAAOA;AAAK,iBAAO;AACvB,eAAO,WAAA;AACH,aAAG,MAAM,MAAM,SAAS;AACxB,cAAI,YAAY,KAAK,WACjB,UAAU,KAAK;AACnB,eAAK,YAAY,KAAK,UAAU;AAChC,aAAG,MAAM,MAAM,SAAS;AACxB,cAAI;AAAW,iBAAK,YAAY,KAAK,YAAY,SAAS,WAAW,KAAK,SAAS,IAAI;AACvF,cAAI;AAAS,iBAAK,UAAU,KAAK,UAAU,SAAS,SAAS,KAAK,OAAO,IAAI;;MAErF;eAEgB,kBAAkB,IAAI,IAAE;AACpC,YAAI,OAAOA;AAAK,iBAAO;AACvB,eAAO,SAAU,eAAa;AAC1B,cAAI,MAAM,GAAG,MAAM,MAAM,SAAS;AAClC,iBAAO,eAAe,GAAG;AACzB,cAAI,YAAY,KAAK,WACjB,UAAU,KAAK;AACnB,eAAK,YAAY;AACjB,eAAK,UAAU;AACf,cAAI,OAAO,GAAG,MAAM,MAAM,SAAS;AACnC,cAAI;AAAW,iBAAK,YAAY,KAAK,YAAY,SAAS,WAAW,KAAK,SAAS,IAAI;AACvF,cAAI;AAAS,iBAAK,UAAU,KAAK,UAAU,SAAS,SAAS,KAAK,OAAO,IAAI;AAC7E,iBAAO,QAAQ,SACV,SAAS,SAAY,SAAY,OACjC,OAAO,KAAK,IAAI;;MAE7B;eAEgB,2BAA2B,IAAI,IAAE;AAC7C,YAAI,OAAOA;AAAK,iBAAO;AACvB,eAAO,WAAA;AACH,cAAI,GAAG,MAAM,MAAM,SAAS,MAAM;AAAO,mBAAO;AAChD,iBAAO,GAAG,MAAM,MAAM,SAAS;;MAEvC;eAUgBC,iBAAgB,IAAI,IAAE;AAClC,YAAI,OAAOD;AAAK,iBAAO;AACvB,eAAO,WAAA;AACH,cAAI,MAAM,GAAG,MAAM,MAAM,SAAS;AAClC,cAAI,OAAO,OAAO,IAAI,SAAS,YAAY;AACvC,gBAAI,OAAO,MACP,IAAI,UAAU,QACd,OAAO,IAAI,MAAM,CAAC;AACtB,mBAAO;AAAK,mBAAK,CAAC,IAAI,UAAU,CAAC;AACjC,mBAAO,IAAI,KAAK,WAAA;AACZ,qBAAO,GAAG,MAAM,MAAM,IAAI;aAC7B;;AAEL,iBAAO,GAAG,MAAM,MAAM,SAAS;;MAEvC;AClGO,UAAI,QAAQ,OAAO,aAAa,eAE/B,6CAA6C,KAAK,SAAS,IAAI;eAEvD,SAAS,OAAO,QAAM;AAClC,gBAAQ;MACZ;AC2BA,UAAI,WAAW,CAAA;AAEf,UACI,kBAAkB,KAClBE,OAAqE,OAAO,YAAY,cACpF,CAAA,IACC,WAAA;AACG,YAAI,UAAU,QAAQ,QAAO;AAC7B,YAAI,OAAO,WAAW,eAAe,CAAC,OAAO;AACzC,iBAAO,CAAC,SAAS,SAAS,OAAO,GAAG,OAAO;AAE/C,YAAM,UAAU,OAAO,OAAO,OAAO,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;AACnE,eAAO;UACH;UACA,SAAS,OAAO;UAChB;;QAEP,GAbJ,wBAAqB,KAAA,CAAA,GAAE,qBAAkB,KAAA,CAAA,GAAE,wBAAqB,KAAA,CAAA,GAcjE,oBAAoB,sBAAsB,mBAAmB;AAE1D,UAAM,gBAAgB,yBAAyB,sBAAsB;AAC5E,UAAM,qBAAqB,CAAC,CAAC;AAS7B,eAAS,uBAAoB;AACzB,uBAAe,YAAY;MAC/B;AAOA,UAAI,OAAO,SAAU,UAAU,MAAI;AAC/B,uBAAe,KAAK,CAAC,UAAU,IAAI,CAAC;AACpC,YAAI,sBAAsB;AACtB,+BAAoB;AACpB,iCAAuB;;MAE/B;AAEA,UAAI,qBAAqB,MACrB,uBAAuB,MACvB,kBAAkB,CAAA,GAClB,kBAAkB,CAAA,GAClB,kBAAkB;AAEf,UAAI,YAAY;QACnB,IAAI;QACJ,QAAQ;QACR,KAAK;QACL,YAAY,CAAA;QACZ,aAAaF;QACb,KAAK;QACL,KAAK,CAAA;QACL,UAAUA;;AAGP,UAAI,MAAM;AAEV,UAAI,iBAAiB,CAAA;AACrB,UAAI,oBAAoB;AACxB,UAAI,iBAAiB,CAAA;eAEJ,aAAa,IAAE;AACnC,YAAI,OAAO,SAAS;AAAU,gBAAM,IAAI,UAAU,sCAAsC;AACxF,aAAK,aAAa,CAAA;AAQlB,aAAK,OAAO;AAEZ,YAAI,MAAO,KAAK,OAAO;AAEvB,YAAI,OAAO,OAAO,YAAY;AAC1B,cAAI,OAAO;AAAU,kBAAM,IAAI,UAAU,gBAAgB;AAGzD,eAAK,SAAS,UAAU,CAAC;AACzB,eAAK,SAAS,UAAU,CAAC;AACzB,cAAI,KAAK,WAAW;AAChB,4BAAgB,MAAM,KAAK,MAAM;AACrC;;AAGJ,aAAK,SAAS;AACd,aAAK,SAAS;AACd,UAAE,IAAI;AACN,2BAAmB,MAAM,EAAE;MAC/B;AAGA,UAAM,WAAW;QACb,KAAK,WAAA;AACD,cAAI,MAAM,KAAK,cAAc;AAE7B,mBAAS,KAAM,aAAa,YAAU;AAAtC,gBAAA,QAAA;AACI,gBAAI,gBAAgB,CAAC,IAAI,WAAW,QAAQ,OAAO,gBAAgB;AACnE,gBAAM,UAAU,iBAAiB,CAAC,wBAAuB;AACzD,gBAAI,KAAK,IAAI,aAAa,SAAC,SAAS,QAAM;AACtC,kCAAoB,OAAM,IAAI,SAC1B,0BAA0B,aAAa,KAAK,eAAe,OAAO,GAClE,0BAA0B,YAAY,KAAK,eAAe,OAAO,GACjE,SACA,QACA,GAAG,CAAC;aACX;AACD,gBAAI,KAAK;AAAc,iBAAG,eAAe,KAAK;AAC9C,mBAAO;;AAGX,eAAK,YAAY;AAEjB,iBAAO;;QAIX,KAAK,SAAU,OAAK;AAChB,kBAAS,MAAM,QAAQ,SAAS,MAAM,cAAc,WAChD,WACA;YACI,KAAK,WAAA;AACD,qBAAO;;YAEX,KAAK,SAAS;WACjB;;;AAKb,YAAM,aAAa,WAAW;QAC1B,MAAM;QACN,OAAO,SAAU,aAAa,YAAU;AAEpC,8BAAoB,MAAM,IAAI,SAAS,MAAM,MAAM,aAAa,YAAY,GAAG,CAAC;;QAGpF,OAAO,SAAU,YAAU;AACvB,cAAI,UAAU,WAAW;AAAG,mBAAO,KAAK,KAAK,MAAM,UAAU;AAE7D,cAAIG,QAAO,UAAU,CAAC,GAClB,UAAU,UAAU,CAAC;AACzB,iBAAO,OAAOA,UAAS,aAAa,KAAK,KAAK,MAAM,SAAA,KAAG;AAGnD,mBAAA,eAAeA,QAAO,QAAQ,GAAG,IAAI,cAAc,GAAG;WAAC,IACzD,KAAK,KAAK,MAAM,SAAA,KAAG;AAIjB,mBAAA,OAAO,IAAI,SAASA,QAAO,QAAQ,GAAG,IAAI,cAAc,GAAG;WAAC;;QAGpE,SAAS,SAAU,WAAS;AACxB,iBAAO,KAAK,KAAK,SAAA,OAAK;AAClB,mBAAO,aAAa,QAAQ,UAAS,CAAE,EAAE,KAAK,WAAA;AAAI,qBAAA;YAAK,CAAA;aACxD,SAAA,KAAG;AACF,mBAAO,aAAa,QAAQ,UAAS,CAAE,EAAE,KAAK,WAAA;AAAI,qBAAA,cAAc,GAAG;YAAC,CAAA;WACvE;;QAGL,SAAS,SAAU,IAAI,KAAG;AAAjB,cAAA,QAAA;AACL,iBAAO,KAAK,WACR,IAAI,aAAa,SAAC,SAAS,QAAM;AAC7B,gBAAI,SAAS,WAAW,WAAA;AAAM,qBAAA,OAAO,IAAI,WAAW,QAAQ,GAAG,CAAC;YAAC,GAAE,EAAE;AACrE,kBAAK,KAAK,SAAS,MAAM,EAAE,QAAQ,aAAa,KAAK,MAAM,MAAM,CAAC;WACrE,IAAI;;OAEhB;AAED,UAAI,OAAO,WAAW,eAAe,OAAO;AACxC,gBAAQ,aAAa,WAAW,OAAO,aAAa,eAAe;AAIvE,gBAAU,MAAM,SAAQ;AAExB,eAAS,SAAS,aAAa,YAAY,SAAS,QAAQ,MAAI;AAC5D,aAAK,cAAc,OAAO,gBAAgB,aAAa,cAAc;AACrE,aAAK,aAAa,OAAO,eAAe,aAAa,aAAa;AAClE,aAAK,UAAU;AACf,aAAK,SAAS;AACd,aAAK,MAAM;MACf;AAGA,YAAO,cAAc;QACjB,KAAK,WAAA;AACD,cAAI,SAAS,WAAW,MAAM,MAAM,SAAS,EACxC,IAAI,wBAAwB;AACjC,iBAAO,IAAI,aAAa,SAAU,SAAS,QAAM;AAC7C,gBAAI,OAAO,WAAW;AAAG,sBAAQ,CAAA,CAAE;AACnC,gBAAI,YAAY,OAAO;AACvB,mBAAO,QAAQ,SAAC,GAAE,GAAC;AAAK,qBAAA,aAAa,QAAQ,CAAC,EAAE,KAAK,SAAA,GAAC;AAClD,uBAAO,CAAC,IAAI;AACZ,oBAAI,CAAC,EAAE;AAAW,0BAAQ,MAAM;iBACjC,MAAM;YAAC,CAAA;WACb;;QAGL,SAAS,SAAA,OAAK;AACV,cAAI,iBAAiB;AAAc,mBAAO;AAC1C,cAAI,SAAS,OAAO,MAAM,SAAS;AAAY,mBAAO,IAAI,aAAa,SAAC,SAAS,QAAM;AACnF,oBAAM,KAAK,SAAS,MAAM;aAC7B;AACD,cAAI,KAAK,IAAI,aAAa,UAAU,MAAM,KAAK;AAC/C,iBAAO;;QAGX,QAAQ;QAER,MAAM,WAAA;AACF,cAAI,SAAS,WAAW,MAAM,MAAM,SAAS,EAAE,IAAI,wBAAwB;AAC3E,iBAAO,IAAI,aAAa,SAAC,SAAS,QAAM;AACpC,mBAAO,IAAI,SAAA,OAAK;AAAI,qBAAA,aAAa,QAAQ,KAAK,EAAE,KAAK,SAAS,MAAM;YAAC,CAAA;WACxE;;QAGL,KAAK;UACD,KAAK,WAAA;AAAI,mBAAA;UAAG;UACZ,KAAK,SAAA,OAAK;AAAI,mBAAA,MAAM;UAAK;;QAG7B,aAAa,EAAC,KAAK,WAAA;AAAI,iBAAA;QAAW,EAAA;QAIlC,QAAQ;QAER;QAEA,WAAW;UACP,KAAK,WAAA;AAAM,mBAAA;UAAI;UACf,KAAK,SAAA,OAAK;AAAK,mBAAO;UAAK;;QAG/B,iBAAiB;UACb,KAAK,WAAA;AAAM,mBAAA;UAAe;UAC1B,KAAK,SAAA,OAAK;AAAK,8BAAkB;UAAM;;QAG3C,QAAQ,SAAC,IAAI,WAAS;AAClB,iBAAO,IAAI,aAAa,SAAC,SAAS,QAAM;AACpC,mBAAO,SAAS,SAACC,UAASC,SAAM;AAC5B,kBAAI,MAAM;AACV,kBAAI,aAAa,CAAA;AACjB,kBAAI,cAAcA;AAClB,kBAAI,WAAW,SAAS,WAAA;AAAA,oBAAA,QAAA;AAIpB,yDAAyC,WAAA;AACrC,wBAAK,WAAW,WAAW,IAAID,SAAO,IAAKC,QAAO,MAAK,WAAW,CAAC,CAAC;iBACvE;iBACF,IAAI,QAAQ;AACf,iBAAE;eACH,WAAW,SAAS,MAAM;WAChC;;OAER;AAED,UAAI,eAAe;AACf,YAAI,cAAc;AAAY,kBAAS,cAAc,cAAc,WAAA;AAC/D,gBAAM,mBAAmB,WAAW,MAAM,MAAM,SAAS,EAAE,IAAI,wBAAwB;AACvF,mBAAO,IAAI,aAAa,SAAA,SAAO;AAC3B,kBAAI,iBAAiB,WAAW;AAAG,wBAAQ,CAAA,CAAE;AAC7C,kBAAI,YAAY,iBAAiB;AACjC,kBAAM,UAAU,IAAI,MAAM,SAAS;AACnC,+BAAiB,QAAQ,SAAC,GAAG,GAAC;AAAK,uBAAA,aAAa,QAAQ,CAAC,EAAE,KACvD,SAAA,OAAK;AAAI,yBAAA,QAAQ,CAAC,IAAI,EAAC,QAAQ,aAAa,MAAK;gBAAC,GAClD,SAAA,QAAM;AAAI,yBAAA,QAAQ,CAAC,IAAI,EAAC,QAAQ,YAAY,OAAM;gBAAC,CAAA,EAClD,KAAK,WAAA;AAAI,yBAAA,EAAE,aAAa,QAAQ,OAAO;gBAAC,CAAA;cAAC,CAAA;aACjD;WACJ;AACD,YAAI,cAAc,OAAO,OAAO,mBAAmB;AAAa,kBAAQ,cAAc,OAAO,WAAA;AACzF,gBAAM,mBAAmB,WAAW,MAAM,MAAM,SAAS,EAAE,IAAI,wBAAwB;AACvF,mBAAO,IAAI,aAAa,SAAC,SAAS,QAAM;AACpC,kBAAI,iBAAiB,WAAW;AAAG,uBAAO,IAAI,eAAe,CAAA,CAAE,CAAC;AAChE,kBAAI,YAAY,iBAAiB;AACjC,kBAAM,WAAW,IAAI,MAAM,SAAS;AACpC,+BAAiB,QAAQ,SAAC,GAAG,GAAC;AAAK,uBAAA,aAAa,QAAQ,CAAC,EAAE,KACvD,SAAA,OAAK;AAAI,yBAAA,QAAQ,KAAK;gBAAC,GACvB,SAAA,SAAO;AACH,2BAAS,CAAC,IAAI;AACd,sBAAI,CAAC,EAAE;AAAW,2BAAO,IAAI,eAAe,QAAQ,CAAC;iBACxD;cAAC,CAAA;aACT;WACJ;AAED,YAAI,cAAc;AAAe,uBAAa,gBAAgB,cAAc;MAChF;AAQA,eAAS,mBAAoB,SAAS,IAAE;AAGpC,YAAI;AACA,aAAG,SAAA,OAAK;AACJ,gBAAI,QAAQ,WAAW;AAAM;AAC7B,gBAAI,UAAU;AAAS,oBAAM,IAAI,UAAU,2CAA2C;AACtF,gBAAI,oBAAoB,QAAQ,QAAQ,oBAAmB;AAC3D,gBAAI,SAAS,OAAO,MAAM,SAAS,YAAY;AAC3C,iCAAmB,SAAS,SAAC,SAAS,QAAM;AACxC,iCAAiB,eACb,MAAM,MAAM,SAAS,MAAM,IAC3B,MAAM,KAAK,SAAS,MAAM;eACjC;mBACE;AACH,sBAAQ,SAAS;AACjB,sBAAQ,SAAS;AACjB,oCAAsB,OAAO;;AAEjC,gBAAI;AAAmB,gCAAiB;aACzC,gBAAgB,KAAK,MAAM,OAAO,CAAC;iBACjC,IAAI;AACT,0BAAgB,SAAS,EAAE;;MAEnC;AAEA,eAAS,gBAAiB,SAAS,QAAM;AACrC,wBAAgB,KAAK,MAAM;AAC3B,YAAI,QAAQ,WAAW;AAAM;AAC7B,YAAI,oBAAoB,QAAQ,QAAQ,oBAAmB;AAC3D,iBAAS,gBAAgB,MAAM;AAC/B,gBAAQ,SAAS;AACjB,gBAAQ,SAAS;AAEjB,kCAA0B,OAAO;AACjC,8BAAsB,OAAO;AAC7B,YAAI;AAAmB,4BAAiB;MAC5C;AAEA,eAAS,sBAAuB,SAAO;AAEnC,YAAI,YAAY,QAAQ;AACxB,gBAAQ,aAAa,CAAA;AACrB,iBAAS,IAAI,GAAG,MAAM,UAAU,QAAQ,IAAI,KAAK,EAAE,GAAG;AAClD,8BAAoB,SAAS,UAAU,CAAC,CAAC;;AAE7C,YAAI,MAAM,QAAQ;AAClB,UAAE,IAAI,OAAO,IAAI,SAAQ;AACzB,YAAI,sBAAsB,GAAG;AAMzB,YAAE;AACF,eAAK,WAAA;AACD,gBAAI,EAAE,sBAAsB;AAAG,mCAAoB;aACpD,CAAA,CAAE;;MAEb;AAEA,eAAS,oBAAoB,SAAS,UAAQ;AAC1C,YAAI,QAAQ,WAAW,MAAM;AACzB,kBAAQ,WAAW,KAAK,QAAQ;AAChC;;AAGJ,YAAI,KAAK,QAAQ,SAAS,SAAS,cAAc,SAAS;AAC1D,YAAI,OAAO,MAAM;AAEb,kBAAQ,QAAQ,SAAS,SAAS,UAAU,SAAS,QAAS,QAAQ,MAAM;;AAEhF,UAAE,SAAS,IAAI;AACf,UAAE;AACF,aAAM,cAAc,CAAC,IAAI,SAAS,QAAQ,CAAC;MAC/C;AAEA,eAAS,aAAc,IAAI,SAAS,UAAQ;AACxC,YAAI;AAEA,cAAI,KAAK,QAAQ,QAAQ;AAEzB,cAAI,CAAC,QAAQ,UAAU,gBAAgB;AAAQ,8BAAkB,CAAA;AAEjE,gBAAM,SAAS,QAAQ,eAAe,QAAQ,aAAa,IAAI,WAAA;AAAI,mBAAA,GAAI,KAAK;UAAC,CAAA,IAAI,GAAI,KAAK;AAC1F,cAAI,CAAC,QAAQ,UAAU,gBAAgB,QAAQ,KAAK,MAAM,IAAI;AAC1D,+BAAmB,OAAO;;AAE9B,mBAAS,QAAQ,GAAG;iBACf,GAAG;AAER,mBAAS,OAAO,CAAC;;AAEjB,cAAI,EAAE,sBAAsB;AAAG,iCAAoB;AACnD,YAAE,SAAS,IAAI,OAAO,SAAS,IAAI,SAAQ;;MAEnD;AAKA,eAAS,eAAY;AACjB,eAAO,WAAW,WAAA;AAGd,8BAAmB,KAAM,kBAAiB;SAC7C;MACL;eAEgB,sBAAmB;AAC/B,YAAI,cAAc;AAClB,6BAAqB;AACrB,+BAAuB;AACvB,eAAO;MACX;eAUgB,oBAAiB;AAC7B,YAAI,WAAW,GAAG;AAClB,WAAG;AACC,iBAAO,eAAe,SAAS,GAAG;AAC9B,wBAAY;AACZ,6BAAiB,CAAA;AACjB,gBAAI,UAAU;AACd,iBAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACpB,kBAAI,OAAO,UAAU,CAAC;AACtB,mBAAK,CAAC,EAAE,MAAM,MAAM,KAAK,CAAC,CAAC;;;iBAG9B,eAAe,SAAS;AACjC,6BAAqB;AACrB,+BAAuB;MAC3B;AAEA,eAAS,uBAAoB;AACzB,YAAI,gBAAgB;AACpB,0BAAkB,CAAA;AAClB,sBAAc,QAAQ,SAAA,GAAC;AACnB,YAAE,KAAK,YAAY,KAAK,MAAM,EAAE,QAAQ,CAAC;SAC5C;AACD,YAAI,aAAa,eAAe,MAAM,CAAC;AACvC,YAAI,IAAI,WAAW;AACnB,eAAO;AAAG,qBAAW,EAAE,CAAC,EAAC;MAC7B;AAEA,eAAS,yCAA0C,IAAE;AACjD,iBAAS,YAAS;AACd,aAAE;AACF,yBAAe,OAAO,eAAe,QAAQ,SAAS,GAAG,CAAC;;AAE9D,uBAAe,KAAK,SAAS;AAC7B,UAAE;AACF,aAAK,WAAA;AACD,cAAI,EAAE,sBAAsB;AAAG,iCAAoB;WACpD,CAAA,CAAE;MACT;AAEA,eAAS,0BAA0B,SAAO;AAItC,YAAI,CAAC,gBAAgB,KAAK,SAAA,GAAC;AAAI,iBAAA,EAAE,WAAW,QAAQ;QAAM,CAAA;AACtD,0BAAgB,KAAK,OAAO;MACpC;AAEA,eAAS,mBAAmB,SAAO;AAI/B,YAAI,IAAI,gBAAgB;AACxB,eAAO;AAAG,cAAI,gBAAgB,EAAE,CAAC,EAAE,WAAW,QAAQ,QAAQ;AAG1D,4BAAgB,OAAO,GAAG,CAAC;AAC3B;;MAER;AAEA,eAAS,cAAe,QAAM;AAC1B,eAAO,IAAI,aAAa,UAAU,OAAO,MAAM;MACnD;eAEgB,KAAM,IAAI,cAAY;AAClC,YAAI,MAAM;AACV,eAAO,WAAA;AACH,cAAI,cAAc,oBAAmB,GACjC,aAAa;AAEjB,cAAI;AACA,yBAAa,KAAK,IAAI;AACtB,mBAAO,GAAG,MAAM,MAAM,SAAS;mBAC1B,GAAG;AACR,4BAAgB,aAAa,CAAC;;AAE9B,yBAAa,YAAY,KAAK;AAC9B,gBAAI;AAAa,gCAAiB;;;MAG9C;AAMA,UAAM,OAAO,EAAE,QAAQ,GAAG,QAAQ,GAAG,IAAI,EAAC;AAC1C,UAAI,cAAc;AAClB,UAAI,YAAY,CAAA;AAChB,UAAI,aAAa;AACjB,UAAI,cAAc;AAGlB,UAAI,kBAAkB;eACN,SAAU,IAAIC,QAAO,IAAI,IAAE;AACvC,YAAI,SAAS,KACT,MAAM,OAAO,OAAO,MAAM;AAC9B,YAAI,SAAS;AACb,YAAI,MAAM;AACV,YAAI,SAAS;AACb,YAAI,KAAK,EAAE;AAEK,kBAAU;AAC1B,YAAI,MAAM,qBAAqB;UAC3B,SAAS;UACT,aAAa,EAAC,OAAO,cAAc,cAAc,MAAM,UAAU,KAAI;UACrE,KAAK,aAAa;UAClB,MAAM,aAAa;UACnB,YAAY,aAAa;UACzB,KAAK,aAAa;UAClB,SAAS,aAAa;UACtB,QAAQ,aAAa;YACrB,CAAA;AACJ,YAAIA;AAAO,iBAAO,KAAKA,MAAK;AAM5B,UAAE,OAAO;AACT,YAAI,WAAW,WAAA;AACX,YAAE,KAAK,OAAO,OAAO,KAAK,OAAO,SAAQ;;AAE7C,YAAI,KAAK,OAAQ,KAAK,IAAI,IAAI,EAAE;AAChC,YAAI,IAAI,QAAQ;AAAG,cAAI,SAAQ;AAC/B,eAAO;MACX;eAIgB,0BAAuB;AACnC,YAAI,CAAC,KAAK;AAAI,eAAK,KAAK,EAAE;AAC1B,UAAE,KAAK;AACP,aAAK,UAAU;AACf,eAAO,KAAK;MAChB;eAKgB,0BAAuB;AACnC,YAAI,CAAC,KAAK;AAAQ,iBAAO;AACzB,YAAI,EAAE,KAAK,WAAW;AAAG,eAAK,KAAK;AACnC,aAAK,SAAS,KAAK,SAAS;AAC5B,eAAO;MACX;AAEA,WAAK,KAAG,mBAAmB,QAAQ,eAAe,MAAM,IAAI;AAGxD,kCAA0B,0BAA0BN;MACxD;eAGgB,yBAA0B,iBAAe;AACrD,YAAI,KAAK,UAAU,mBAAmB,gBAAgB,gBAAgB,eAAe;AACjF,kCAAuB;AACvB,iBAAO,gBAAgB,KAAK,SAAA,GAAC;AACzB,oCAAuB;AACvB,mBAAO;aACR,SAAA,GAAC;AACA,oCAAuB;AACvB,mBAAO,UAAU,CAAC;WACrB;;AAEL,eAAO;MACX;AAEA,eAAS,cAAc,YAAU;AAC7B,UAAE;AAGF,YAAI,CAAC,KAAK,UAAU,EAAE,KAAK,WAAW,GAAG;AACrC,eAAK,SAAS,KAAK,SAAS,KAAK,KAAK;;AAG1C,kBAAU,KAAK,GAAG;AAClB,qBAAa,YAAY,IAAI;MACjC;AAEA,eAAS,gBAAa;AAClB,YAAI,OAAO,UAAU,UAAU,SAAO,CAAC;AACvC,kBAAU,IAAG;AACb,qBAAa,MAAM,KAAK;MAC5B;AAEA,eAAS,aAAc,YAAY,eAAa;AAC5C,YAAI,cAAc;AAClB,YAAI,gBAAgB,KAAK,WAAW,CAAC,gBAAgB,eAAe,OAAO,eAAe,CAAC,EAAE,cAAc,eAAe,MAAM;AAG5H,yBAAe,gBAAgB,cAAc,KAAK,MAAM,UAAU,IAAI,aAAa;;AAEvF,YAAI,eAAe;AAAK;AAExB,cAAM;AAGN,YAAI,gBAAgB;AAAW,oBAAU,MAAM,SAAQ;AAEvD,YAAI,oBAAoB;AAEpB,cAAI,gBAAgB,UAAU,IAAI;AAElC,cAAI,YAAY,WAAW;AAE3B,cAAI,YAAY,UAAU,WAAW,QAAQ;AAIzC,mBAAO,eAAe,SAAS,WAAW,UAAU,WAAW;AAI/D,0BAAc,MAAM,UAAU;AAC9B,0BAAc,OAAO,UAAU;AAC/B,0BAAc,UAAU,UAAU;AAClC,0BAAc,SAAS,UAAU;AACjC,gBAAI,UAAU;AAAY,4BAAc,aAAa,UAAU;AAC/D,gBAAI,UAAU;AAAK,4BAAc,MAAM,UAAU;;;MAG7D;AAEA,eAAS,WAAQ;AACb,YAAI,gBAAgB,QAAQ;AAC5B,eAAO,qBAAqB;UACxB,SAAS;UACT,aAAa,OAAO,yBAAyB,SAAS,SAAS;UAC/D,KAAK,cAAc;UACnB,MAAM,cAAc;UACpB,YAAY,cAAc;UAC1B,KAAK,cAAc;UACnB,SAAS,cAAc;UACvB,QAAQ,cAAc;YACtB,CAAA;MACR;eAEgB,OAAQ,KAAK,IAAI,IAAI,IAAI,IAAE;AACvC,YAAI,aAAa;AACjB,YAAI;AACA,uBAAa,KAAK,IAAI;AACtB,iBAAO,GAAG,IAAI,IAAI,EAAE;;AAEpB,uBAAa,YAAY,KAAK;;MAEtC;AAEA,eAAS,0BAA0B,IAAI,MAAM,eAAe,SAAO;AAC/D,eAAO,OAAO,OAAO,aAAa,KAAK,WAAA;AACnC,cAAI,YAAY;AAChB,cAAI;AAAe,oCAAuB;AAC1C,uBAAa,MAAM,IAAI;AACvB,cAAI;AACA,mBAAO,GAAG,MAAM,MAAM,SAAS;;AAE/B,yBAAa,WAAW,KAAK;AAC7B,gBAAI;AAAS,6BAAe,uBAAuB;;;MAG/D;eAGgB,oBAAoB,IAAE;AAClC,YAAI,YAAY,iBAAiB,KAAK,WAAW,GAAG;AAChD,cAAI,eAAe,GAAG;AAClB,eAAE;iBACC;AACH,mCAAuB,EAAE;;eAE1B;AACH,qBAAW,IAAI,CAAC;;MAExB;AAEO,UAAI,YAAY,aAAa;eC9tBpB,gBACd,IACA,MACA,YACA,IAAgD;AAGhD,YAAI,CAAC,GAAG,SAAU,CAAC,GAAG,OAAO,iBAAiB,CAAC,IAAI,cAAc,CAAC,GAAG,OAAQ;AAC3E,cAAI,GAAG,OAAO,cAAc;AAG1B,mBAAO,UAAU,IAAI,WAAW,eAAe,GAAG,OAAO,WAAW,CAAC;;AAEvE,cAAI,CAAC,GAAG,OAAO,eAAe;AAC5B,gBAAI,CAAC,GAAG,OAAO;AACb,qBAAO,UAAU,IAAI,WAAW,eAAc,CAAE;AAClD,eAAG,KAAI,EAAG,MAAMA,IAAG;;AAErB,iBAAO,GAAG,OAAO,eAAe,KAAK,WAAA;AAAM,mBAAA,gBAAgB,IAAI,MAAM,YAAY,EAAE;UAAC,CAAA;eAC/E;AACL,cAAI,QAAQ,GAAG,mBAAmB,MAAM,YAAY,GAAG,SAAS;AAChE,cAAI;AACF,kBAAM,OAAM;AACZ,eAAG,OAAO,iBAAiB;mBACpB,IAAI;AACX,gBAAI,GAAG,SAAS,SAAS,gBAAgB,GAAG,OAAM,KAAM,EAAE,GAAG,OAAO,iBAAiB,GAAG;AACtF,sBAAQ,KAAK,0BAA0B;AACvC,iBAAG,MAAM,EAAC,iBAAiB,MAAK,CAAC;AACjC,qBAAO,GAAG,KAAI,EAAG,KAAK,WAAA;AAAI,uBAAA,gBAAgB,IAAI,MAAM,YAAY,EAAE;cAAC,CAAA;;AAErE,mBAAO,UAAU,EAAE;;AAErB,iBAAO,MAAM,SAAS,MAAM,SAAC,SAAS,QAAM;AAC1C,mBAAO,SAAS,WAAA;AACd,kBAAI,QAAQ;AACZ,qBAAO,GAAG,SAAS,QAAQ,KAAK;aACjC;WACF,EAAE,KAAK,SAAA,QAAM;AAWZ,gBAAI,SAAS;AAAa,kBAAI;AAAC,sBAAM,SAAS,OAAM;uBAAKE,KAAM;cAAA;AAC/D,mBAAO,SAAS,aAAa,SAAS,MAAM,YAAY,KAAK,WAAA;AAAM,qBAAA;YAAM,CAAA;WAC1E;;MAKL;AC9DO,UAAM,gBAAgB;AACtB,UAAM,YAAY,OAAO,aAAa,KAAK;AAC3C,UAAM,SAAS;AACf,UAAM,uBACX;AACK,UAAM,kBAAkB;AACxB,UAAM,cAAuB,CAAA;AAE7B,UAAM,aAAa;AACnB,UAAM,WAAW;AACjB,UAAM,YAAY;eCZT,QAAQ,SAAS,SAAO;AACtC,eAAO,UACH,UACI,WAAA;AAAc,iBAAO,QAAQ,MAAM,MAAM,SAAS,KAAK,QAAQ,MAAM,MAAM,SAAS;QAAE,IACtF,UACJ;MACN;ACJO,UAAM,WAA2B;QACtC,MAAI;QACJ,OAAO;QACP,WAAW;QACX,OAAO,CAAC,CAAA,CAAE;QACV,WAAW;;eCFG,8BAA8B,SAAmC;AAE/E,eAAO,OAAO,YAAY,YAAY,CAAC,KAAK,KAAK,OAAO,IACtD,SAAC,KAAW;AACZ,cAAI,IAAI,OAAO,MAAM,UAAc,WAAW,KAAM;AAIlD,kBAAM,UAAU,GAAG;AACnB,mBAAO,IAAI,OAAO;;AAEpB,iBAAO;YAEP,SAAC,KAAW;AAAK,iBAAA;QAAG;MACxB;eCjBgBK,UAAM;AACpB,cAAM,WAAW,KAAI;MACvB;eCCgBC,KAAI,GAAQ,GAAM;AAChC,YAAI;AACF,cAAM,KAAK,KAAK,CAAC;AACjB,cAAM,KAAK,KAAK,CAAC;AACjB,cAAI,OAAO,IAAI;AACb,gBAAI,OAAO;AAAS,qBAAO;AAC3B,gBAAI,OAAO;AAAS,qBAAO;AAC3B,gBAAI,OAAO;AAAU,qBAAO;AAC5B,gBAAI,OAAO;AAAU,qBAAO;AAC5B,gBAAI,OAAO;AAAU,qBAAO;AAC5B,gBAAI,OAAO;AAAU,qBAAO;AAC5B,gBAAI,OAAO;AAAQ,qBAAO;AAC1B,gBAAI,OAAO;AAAQ,qBAAO;AAC1B,mBAAO;;AAET,kBAAQ,IAAE;YACR,KAAK;YACL,KAAK;YACL,KAAK;AACH,qBAAO,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK;YAClC,KAAK,UAAU;AACb,qBAAO,mBAAmB,cAAc,CAAC,GAAG,cAAc,CAAC,CAAC;;YAE9D,KAAK;AACH,qBAAO,cAAc,GAAG,CAAC;;iBAE7BN,KAAM;QAAA;AACR,eAAO;MACT;eAEgB,cAAc,GAAU,GAAQ;AAC9C,YAAM,KAAK,EAAE;AACb,YAAM,KAAK,EAAE;AACb,YAAM,IAAI,KAAK,KAAK,KAAK;AACzB,iBAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,cAAM,MAAMM,KAAI,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC1B,cAAI,QAAQ;AAAG,mBAAO;;AAExB,eAAO,OAAO,KAAK,IAAI,KAAK,KAAK,KAAK;MACxC;eAEgB,mBACd,GACA,GAAa;AAEb,YAAM,KAAK,EAAE;AACb,YAAM,KAAK,EAAE;AACb,YAAM,IAAI,KAAK,KAAK,KAAK;AACzB,iBAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,cAAI,EAAE,CAAC,MAAM,EAAE,CAAC;AAAG,mBAAO,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK;;AAE/C,eAAO,OAAO,KAAK,IAAI,KAAK,KAAK,KAAK;MACxC;AAGA,eAAS,KAAK,GAAM;AAClB,YAAM,IAAI,OAAO;AACjB,YAAI,MAAM;AAAU,iBAAO;AAC3B,YAAI,YAAY,OAAO,CAAC;AAAG,iBAAO;AAClC,YAAM,QAAQ,YAAY,CAAC;AAC3B,eAAO,UAAU,gBAAgB,WAAY;MAC/C;AAkBA,eAAS,cAAc,GAAa;AAClC,YAAI,aAAa;AAAY,iBAAO;AACpC,YAAI,YAAY,OAAO,CAAC;AAEtB,iBAAO,IAAI,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU;AAC5D,eAAO,IAAI,WAAW,CAAC;MACzB;AChEA,UAAA,QAAA,WAAA;AAAA,iBAAAC,SAAA;;AAQE,QAAAA,OAAA,UAAA,SAAA,SACE,MACA,IACA,aAA8B;AAE9B,cAAM,QAAqB,KAAK,OAAO,IAAI;AAC3C,cAAM,YAAY,KAAK;AAEvB,cAAMC,QAAO,SAAS,OAAO,YAAY,eAAe,QAAQ,cAAc,QAAQ,WAAW,UAAA,OAAU,SAAS,aAAa,SAAS,SAAO,GAAA,EAAA,OAAK,KAAK,IAAI,CAAE;AAEjK,mBAAS,wBAAwB,SAAS,QAAQC,QAAkB;AAClE,gBAAI,CAACA,OAAM,OAAO,SAAS;AACzB,oBAAM,IAAI,WAAW,SAAS,WAAW,YAAY,0BAA0B;AACjF,mBAAO,GAAGA,OAAM,UAAUA,MAAK;;AAejC,cAAM,cAAc,oBAAmB;AACvC,cAAI;AACF,gBAAI,IAAI,SAAS,MAAM,GAAG,WAAW,KAAK,GAAG,SAC3C,UAAU,IAAI,QACZ,MAAM,SAAS,MAAM,yBAAyB,WAAW,IACzD,SAAS,WAAA;AAAM,qBAAA,MAAM,SAAS,MAAM,yBAAyB,WAAW;YAAC,GAAE,EAAE,OAAc,WAAW,IAAI,aAAa,IAAG,CAAE,IAC9H,gBAAgB,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,GAAG,uBAAuB;AACrE,gBAAID,OAAM;AACR,gBAAE,eAAeA;AACjB,kBAAI,EAAE,MAAM,SAAA,KAAG;AACb,wBAAQ,MAAM,GAAG;AACjB,uBAAO,UAAU,GAAG;eACrB;;AAEH,mBAAO;;AAEP,gBAAI;AAAa,gCAAiB;;;AAStC,QAAAD,OAAA,UAAA,MAAA,SAAI,WAAW,IAAG;AAAlB,cAAA,QAAA;AACE,cAAI,aAAa,UAAU,gBAAgB;AACzC,mBAAO,KAAK,MAAM,SAA6C,EAAE,MAAM,EAAE;AAC3E,cAAI,aAAa;AAAM,mBAAO,UAAU,IAAI,WAAW,KAAK,iCAAiC,CAAC;AAE9F,iBAAO,KAAK,OAAO,YAAY,SAAC,OAAK;AACnC,mBAAO,MAAK,KAAK,IAAI,EAAC,OAAO,KAAK,UAAS,CAAC,EACzC,KAAK,SAAA,KAAG;AAAI,qBAAA,MAAK,KAAK,QAAQ,KAAK,GAAG;YAAC,CAAA;WAC3C,EAAE,KAAK,EAAE;;AAQZ,QAAAA,OAAA,UAAA,QAAA,SAAM,aAAiE;AACrE,cAAI,OAAO,gBAAgB;AACzB,mBAAO,IAAI,KAAK,GAAG,YAAY,MAAM,WAAW;AAClD,cAAI,QAAQ,WAAW;AACrB,mBAAO,IAAI,KAAK,GAAG,YAAY,MAAM,IAAA,OAAI,YAAY,KAAK,GAAG,GAAC,GAAA,CAAG;AAEnE,cAAM,WAAW,KAAK,WAAW;AACjC,cAAI,SAAS,WAAW;AAEtB,mBAAO,KACJ,MAAM,SAAS,CAAC,CAAC,EACjB,OAAO,YAAY,SAAS,CAAC,CAAC,CAAC;AAKpC,cAAM,gBAAgB,KAAK,OAAO,QAAQ,OAAO,KAAK,OAAO,OAAO,EAAE,OAAO,SAAA,IAAE;AAC7E,gBACE,GAAG,YACH,SAAS,MAAM,SAAA,SAAO;AAAI,qBAAA,GAAG,QAAQ,QAAQ,OAAO,KAAK;YAAC,CAAA,GAAG;AAC3D,uBAAS,IAAE,GAAG,IAAE,SAAS,QAAQ,EAAE,GAAG;AACpC,oBAAI,SAAS,QAAQ,GAAG,QAAQ,CAAC,CAAC,MAAM;AAAI,yBAAO;;AAErD,qBAAO;;AAET,mBAAO;WACR,EAAE,KAAK,SAAC,GAAE,GAAC;AAAK,mBAAA,EAAE,QAAQ,SAAS,EAAE,QAAQ;UAAM,CAAA,EAAE,CAAC;AAEzD,cAAI,iBAAiB,KAAK,GAAG,YAAY,WAAW;AAGlD,gBAAM,uBAAwB,cAAc,QAAqB,MAAM,GAAG,SAAS,MAAM;AACzF,mBAAO,KACJ,MAAM,oBAAoB,EAC1B,OAAO,qBAAqB,IAAI,SAAA,IAAE;AAAI,qBAAA,YAAY,EAAE;YAAC,CAAA,CAAC;;AAG3D,cAAI,CAAC,iBAAiB;AAAO,oBAAQ,KACnC,aAAA,OAAa,KAAK,UAAU,WAAW,GAAC,MAAA,EAAA,OAAO,KAAK,MAAI,wBAAA,IACxD,mBAAA,OAAmB,SAAS,KAAK,GAAG,GAAC,GAAA,CAAG;AAIlC,cAAA,YAAc,KAAK,OAAM;AAEjC,mBAAS,OAAO,GAAG,GAAC;AAClB,mBAAOD,KAAI,GAAG,CAAC,MAAM;;AAGjB,cAAAN,MAAwB,SAAS,OAAO,SAACA,KAA2B,SAAO;gBAAjC,YAASA,IAAA,CAAA,GAAE,eAAYA,IAAA,CAAA;AACrE,gBAAM,QAAQ,UAAU,OAAO;AAC/B,gBAAM,QAAQ,YAAY,OAAO;AACjC,mBAAO;cACL,aAAa;cACb,aAAa,CAAC,QACZ,QACE,cACA,SAAS,MAAM,QACb,SAAA,GAAC;AACC,oBAAM,OAAO,aAAa,GAAG,OAAO;AACpC,uBAAO,QAAQ,IAAI,KAAK,KAAK,KAAK,SAAA,MAAI;AAAI,yBAAA,OAAO,OAAO,IAAI;gBAAC,CAAA;kBAC3D,SAAA,GAAC;AAAI,uBAAA,OAAO,OAAO,aAAa,GAAG,OAAO,CAAC;cAAC,CAAA,IAClD;;aAEL,CAAC,MAAM,IAAI,CAAC,GAfR,MAAGA,IAAA,CAAA,GAAE,iBAAcA,IAAA,CAAA;AAiB1B,iBAAO,MACL,KAAK,MAAM,IAAI,IAAI,EAAE,OAAO,YAAY,IAAI,OAAO,CAAC,EACjD,OAAO,cAAc,IACxB,gBACE,KAAK,OAAO,cAAc,IAC1B,KAAK,MAAM,QAAQ,EAAE,OAAO,EAAE;;AAQpC,QAAAO,OAAA,UAAA,SAAA,SAAO,gBAAqC;AAC1C,iBAAO,KAAK,aAAY,EAAG,IAAI,cAAc;;AAQ/C,QAAAA,OAAA,UAAA,QAAA,SAAM,cAAkB;AACtB,iBAAO,KAAK,aAAY,EAAG,MAAM,YAAY;;AAQ/C,QAAAA,OAAA,UAAA,SAAA,SAAO,QAAc;AACnB,iBAAO,KAAK,aAAY,EAAG,OAAO,MAAM;;AAQ1C,QAAAA,OAAA,UAAA,QAAA,SAAM,SAAe;AACnB,iBAAO,KAAK,aAAY,EAAG,MAAM,OAAO;;AAQ1C,QAAAA,OAAA,UAAA,OAAA,SAAK,UAAsF;AACzF,iBAAO,KAAK,aAAY,EAAG,KAAK,QAAQ;;AAQ1C,QAAAA,OAAA,UAAA,UAAA,SAAQ,cAAkB;AACxB,iBAAO,KAAK,aAAY,EAAG,QAAQ,YAAY;;AAQjD,QAAAA,OAAA,UAAA,eAAA,WAAA;AACE,iBAAO,IAAI,KAAK,GAAG,WAAW,IAAI,KAAK,GAAG,YAAY,IAAI,CAAC;;AAQ7D,QAAAA,OAAA,UAAA,UAAA,SAAQ,OAAwB;AAC9B,iBAAO,IAAI,KAAK,GAAG,WACjB,IAAI,KAAK,GAAG,YAAY,MAAM,QAAQ,KAAK,IACzC,IAAA,OAAI,MAAM,KAAK,GAAG,GAAC,GAAA,IACnB,KAAK,CAAC;;AAQZ,QAAAA,OAAA,UAAA,UAAA,WAAA;AACE,iBAAO,KAAK,aAAY,EAAG,QAAO;;AAQpC,QAAAA,OAAA,UAAA,aAAA,SAAW,aAAqB;AACxB,cAAAP,MAAwB,MAAvB,KAAEA,IAAA,IAAQ,YAASA,IAAA;AAC1B,eAAK,OAAO,cAAc;AAC1B,cAAI,YAAY,qBAAqBK,SAAQ;AAC3C,0BAAW,SAAA,QAAA;AAAiB,wBAAA,SAAA,MAAA;AAAd,uBAAA,UAAA;;;AACZ,qBAAA,eAAI,QAAA,WAAA,MAAE;qBAAN,WAAA;AAAY,yBAAO;gBAAG;;;;AACtB,sBAAA,UAAA,QAAA,WAAA;AAAU,uBAAO;cAAU;AAC7B,qBAAA;cAH6B,WAAmB;;AASlD,cAAM,iBAAiB,oBAAI,IAAG;AAC9B,mBAAS,QAAQ,YAAY,WAAW,OAAO,QAAQ,SAAS,KAAK,GAAG;AACtE,mBAAO,oBAAoB,KAAK,EAAE,QAAQ,SAAA,UAAQ;AAAI,qBAAA,eAAe,IAAI,QAAQ;YAAC,CAAA;;AAKpF,cAAM,WAAW,SAAC,KAAW;AAC3B,gBAAI,CAAC;AAAK,qBAAO;AAEjB,gBAAM,MAAM,OAAO,OAAO,YAAY,SAAS;AAG/C,qBAAS,KAAK;AAAK,kBAAI,CAAC,eAAe,IAAI,CAAC;AAAG,oBAAI;AAAE,sBAAI,CAAC,IAAI,IAAI,CAAC;yBAAY,GAAG;gBAAA;AAClF,mBAAO;;AAGT,cAAI,KAAK,OAAO,UAAU;AACxB,iBAAK,KAAK,QAAQ,YAAY,KAAK,OAAO,QAAQ;;AAEpD,eAAK,OAAO,WAAW;AACvB,eAAK,KAAK,WAAW,QAAQ;AAC7B,iBAAO;;AAIT,QAAAE,OAAA,UAAA,cAAA,WAAA;AACE,mBAAS,MAAO,SAAO;AACrB,mBAAO,MAAM,OAAO;;AAEtB,iBAAO,KAAK,WAAW,KAAK;;AAQ9B,QAAAA,OAAA,UAAA,MAAA,SAAI,KAAK,KAAmB;AAA5B,cAAA,QAAA;AACQ,cAAAP,MAAkB,KAAK,OAAO,SAA7B,OAAIA,IAAA,MAAE,UAAOA,IAAA;AACpB,cAAI,WAAW;AACf,cAAI,WAAW,MAAM;AACnB,uBAAW,8BAA8B,OAAO,EAAE,GAAG;;AAEvD,iBAAO,KAAK,OAAO,aAAa,SAAA,OAAK;AACnC,mBAAO,MAAK,KAAK,OAAO,EAAC,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,CAAC,GAAG,IAAI,MAAM,QAAQ,CAAC,QAAQ,EAAC,CAAC;WACnG,EAAE,KAAK,SAAA,KAAG;AAAI,mBAAA,IAAI,cAAcU,aAAQ,OAAO,IAAI,SAAS,CAAC,CAAC,IAAI,IAAI;UAAU,CAAA,EAChF,KAAK,SAAA,YAAU;AACd,gBAAI,SAAS;AAIX,kBAAG;AAAC,6BAAa,KAAK,SAAS,UAAU;uBAAS,GAAE;cAAA;;AAEtD,mBAAO;WACR;;AAQH,QAAAH,OAAA,UAAA,SAAA,SAAO,aAAa,eAAqH;AACvI,cAAI,OAAO,gBAAgB,YAAY,CAAC,QAAQ,WAAW,GAAG;AAC5D,gBAAM,MAAM,aAAa,aAAa,KAAK,OAAO,QAAQ,OAAO;AACjE,gBAAI,QAAQ;AAAW,qBAAO,UAAU,IAAI,WAAW,gBACrD,+CAA+C,CAAC;AAmBlD,mBAAO,KAAK,MAAM,KAAK,EAAE,OAAO,GAAG,EAAE,OAAO,aAAa;iBACpD;AAEL,mBAAO,KAAK,MAAM,KAAK,EAAE,OAAO,WAAW,EAAE,OAAO,aAAa;;;AASrE,QAAAA,OAAA,UAAA,MAAA,SAAI,KAAK,KAAmB;AAA5B,cAAA,QAAA;AACQ,cAAAP,MAAkB,KAAK,OAAO,SAA7B,OAAIA,IAAA,MAAE,UAAOA,IAAA;AACpB,cAAI,WAAW;AACf,cAAI,WAAW,MAAM;AACnB,uBAAW,8BAA8B,OAAO,EAAE,GAAG;;AAEvD,iBAAO,KAAK,OACV,aACA,SAAA,OAAK;AAAI,mBAAA,MAAK,KAAK,OAAO,EAAC,OAAO,MAAM,OAAO,QAAQ,CAAC,QAAQ,GAAG,MAAM,OAAO,OAAO,CAAC,GAAG,IAAI,KAAI,CAAC;UAAC,CAAA,EACtG,KAAK,SAAA,KAAG;AAAI,mBAAA,IAAI,cAAcU,aAAQ,OAAO,IAAI,SAAS,CAAC,CAAC,IAAI,IAAI;UAAU,CAAA,EAC9E,KAAK,SAAA,YAAU;AACd,gBAAI,SAAS;AAIX,kBAAG;AAAC,6BAAa,KAAK,SAAS,UAAU;uBAAS,GAAE;cAAA;;AAEtD,mBAAO;WACR;;AAQH,QAAAH,OAAA,UAAA,SAAA,SAAO,KAAkB;AAAzB,cAAA,QAAA;AACE,iBAAO,KAAK,OAAO,aACjB,SAAA,OAAK;AAAI,mBAAA,MAAK,KAAK,OAAO,EAAC,OAAO,MAAM,UAAU,MAAM,CAAC,GAAG,EAAC,CAAC;UAAC,CAAA,EAChE,KAAK,SAAA,KAAG;AAAI,mBAAA,IAAI,cAAcG,aAAQ,OAAO,IAAI,SAAS,CAAC,CAAC,IAAI;UAAS,CAAA;;AAQ5E,QAAAH,OAAA,UAAA,QAAA,WAAA;AAAA,cAAA,QAAA;AACE,iBAAO,KAAK,OAAO,aACjB,SAAA,OAAK;AAAI,mBAAA,MAAK,KAAK,OAAO,EAAC,OAAO,MAAM,eAAe,OAAO,SAAQ,CAAC;UAAC,CAAA,EACrE,KAAK,SAAA,KAAG;AAAI,mBAAA,IAAI,cAAcG,aAAQ,OAAO,IAAI,SAAS,CAAC,CAAC,IAAI;UAAS,CAAA;;AAShF,QAAAH,OAAA,UAAA,UAAA,SAAQI,OAAqB;AAA7B,cAAA,QAAA;AACE,iBAAO,KAAK,OAAO,YAAY,SAAA,OAAK;AAClC,mBAAO,MAAK,KAAK,QAAQ;cACvB,MAAIA;cACJ;aACD,EAAE,KAAK,SAAA,QAAM;AAAI,qBAAA,OAAO,IAAI,SAAA,KAAG;AAAI,uBAAA,MAAK,KAAK,QAAQ,KAAK,GAAG;cAAC,CAAA;YAAC,CAAA;WACjE;;AAQH,QAAAJ,OAAA,UAAA,UAAA,SACE,SACA,eACA,SAA+B;AAHjC,cAAA,QAAA;AAKE,cAAMI,QAAO,MAAM,QAAQ,aAAa,IAAI,gBAAgB;AAC5D,oBAAU,YAAYA,QAAO,SAAY;AACzC,cAAM,cAAc,UAAU,QAAQ,UAAU;AAEhD,iBAAO,KAAK,OAAO,aAAa,SAAA,OAAK;AAC7B,gBAAAX,MAAkB,MAAK,OAAO,SAA7B,OAAIA,IAAA,MAAE,UAAOA,IAAA;AACpB,gBAAI,WAAWW;AACb,oBAAM,IAAI,WAAW,gBAAgB,8DAA8D;AACrG,gBAAIA,SAAQA,MAAK,WAAW,QAAQ;AAClC,oBAAM,IAAI,WAAW,gBAAgB,sDAAsD;AAE7F,gBAAM,aAAa,QAAQ;AAC3B,gBAAI,eAAe,WAAW,OAC5B,QAAQ,IAAI,8BAA8B,OAAO,CAAC,IAClD;AACF,mBAAO,MAAK,KAAK,OACf,EAAC,OAAO,MAAM,OAAO,MAAMA,OAAyB,QAAQ,cAAc,YAAW,CAAC,EAErF,KAAK,SAACX,KAA2C;kBAA1C,cAAWA,IAAA,aAAE,UAAOA,IAAA,SAAC,aAAUA,IAAA,YAAE,WAAQA,IAAA;AAC/C,kBAAM,SAAS,cAAc,UAAU;AACvC,kBAAI,gBAAgB;AAAG,uBAAO;AAC9B,oBAAM,IAAI,UACR,GAAA,OAAG,MAAK,MAAI,cAAA,EAAA,OAAe,aAAW,MAAA,EAAA,OAAO,YAAU,oBAAA,GAAsB,QAAQ;aACxF;WACJ;;AAQH,QAAAO,OAAA,UAAA,UAAA,SACE,SACA,eACA,SAA+B;AAHjC,cAAA,QAAA;AAKE,cAAMI,QAAO,MAAM,QAAQ,aAAa,IAAI,gBAAgB;AAC5D,oBAAU,YAAYA,QAAO,SAAY;AACzC,cAAM,cAAc,UAAU,QAAQ,UAAU;AAEhD,iBAAO,KAAK,OAAO,aAAa,SAAA,OAAK;AAC7B,gBAAAX,MAAkB,MAAK,OAAO,SAA7B,OAAIA,IAAA,MAAE,UAAOA,IAAA;AACpB,gBAAI,WAAWW;AACb,oBAAM,IAAI,WAAW,gBAAgB,8DAA8D;AACrG,gBAAIA,SAAQA,MAAK,WAAW,QAAQ;AAClC,oBAAM,IAAI,WAAW,gBAAgB,sDAAsD;AAE7F,gBAAM,aAAa,QAAQ;AAC3B,gBAAI,eAAe,WAAW,OAC5B,QAAQ,IAAI,8BAA8B,OAAO,CAAC,IAClD;AAEF,mBAAO,MAAK,KAAK,OACf,EAAC,OAAO,MAAM,OAAO,MAAMA,OAAyB,QAAQ,cAAc,YAAW,CAAC,EAErF,KAAK,SAACX,KAA4C;kBAA3C,cAAWA,IAAA,aAAE,UAAOA,IAAA,SAAE,aAAUA,IAAA,YAAE,WAAQA,IAAA;AAChD,kBAAM,SAAS,cAAc,UAAU;AACvC,kBAAI,gBAAgB;AAAG,uBAAO;AAC9B,oBAAM,IAAI,UACR,GAAA,OAAG,MAAK,MAAI,cAAA,EAAA,OAAe,aAAW,MAAA,EAAA,OAAO,YAAU,oBAAA,GAAsB,QAAQ;aACxF;WACJ;;AAOF,QAAAO,OAAA,UAAA,aAAA,SACC,gBAAiE;AADlE,cAAA,QAAA;AAGC,cAAM,YAAY,KAAK;AACvB,cAAMI,QAAO,eAAe,IAAI,SAAC,OAAK;AAAK,mBAAA,MAAM;UAAG,CAAA;AACpD,cAAM,cAAc,eAAe,IAAI,SAAC,OAAK;AAAK,mBAAA,MAAM;UAAO,CAAA;AAC/D,cAAM,YAAsB,CAAA;AAC5B,iBAAO,KAAK,OAAO,aAAa,SAAC,OAAK;AACpC,mBAAO,UAAU,QAAQ,EAAE,OAAO,MAAIA,OAAE,OAAO,QAAO,CAAE,EAAE,KAAK,SAAC,MAAI;AAClE,kBAAM,aAAoB,CAAA;AAC1B,kBAAM,aAAoB,CAAA;AAC1B,6BAAe,QAAQ,SAACX,KAAkB,KAAG;oBAAnB,MAAGA,IAAA,KAAE,UAAOA,IAAA;AACpC,oBAAM,MAAM,KAAK,GAAG;AACpB,oBAAI,KAAK;AACP,2BAAsB,KAAA,GAAA,KAAA,OAAO,KAAK,OAAO,GAAnB,KAAA,GAAA,QAAA,MAAsB;AAAvC,wBAAM,UAAO,GAAA,EAAA;AAChB,wBAAM,QAAQ,QAAQ,OAAO;AAC7B,wBAAI,YAAY,MAAK,OAAO,QAAQ,SAAS;AAC3C,0BAAIM,KAAI,OAAO,GAAG,MAAM,GAAG;AACzB,8BAAM,IAAI,WAAW,WACnB,2CAA2C;;2BAG1C;AACL,mCAAa,KAAK,SAAS,KAAK;;;AAGpC,4BAAU,KAAK,GAAG;AAClB,6BAAW,KAAK,GAAG;AACnB,6BAAW,KAAK,GAAG;;eAEtB;AACD,kBAAM,aAAa,WAAW;AAC9B,qBAAO,UACJ,OAAO;gBACN;gBACA,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR,SAAS;kBACP,MAAIK;kBACJ;;eAEH,EACA,KAAK,SAACX,KAAyB;oBAAvB,cAAWA,IAAA,aAAE,WAAQA,IAAA;AAC5B,oBAAI,gBAAgB;AAAG,yBAAO;AAG9B,yBAAqB,KAAA,GAAA,KAAA,OAAO,KAAK,QAAQ,GAApB,KAAA,GAAA,QAAA,MAAuB;AAAvC,sBAAM,SAAM,GAAA,EAAA;AACf,sBAAM,eAAe,UAAU,OAAO,MAAM,CAAC;AAC7C,sBAAI,gBAAgB,MAAM;AACxB,wBAAM,UAAU,SAAS,MAAM;AAC/B,2BAAO,SAAS,MAAM;AACtB,6BAAS,YAAY,IAAI;;;AAG7B,sBAAM,IAAI,UACR,GAAA,OAAG,MAAK,MAAI,iBAAA,EAAA,OAAkB,aAAW,MAAA,EAAA,OAAO,YAAU,oBAAA,GAC1D,QAAQ;eAEX;aACJ;WACF;;AAQH,QAAAO,OAAA,UAAA,aAAA,SAAWI,OAAkC;AAA7C,cAAA,QAAA;AACE,cAAM,UAAUA,MAAK;AACrB,iBAAO,KAAK,OAAO,aAAa,SAAA,OAAK;AACnC,mBAAO,MAAK,KAAK,OAAO,EAAC,OAAO,MAAM,UAAU,MAAMA,MAAuB,CAAC;WAC/E,EAAE,KAAK,SAACX,KAAmC;gBAAlC,cAAWA,IAAA,aAAE,aAAUA,IAAA,YAAE,WAAQA,IAAA;AACzC,gBAAI,gBAAgB;AAAG,qBAAO;AAC9B,kBAAM,IAAI,UACR,GAAA,OAAG,MAAK,MAAI,iBAAA,EAAA,OAAkB,aAAW,MAAA,EAAA,OAAO,SAAO,oBAAA,GAAsB,QAAQ;WACxF;;AAEL,eAAAO;MAAA,EAAC;eC7kBuB,OAAO,KAAG;AAC9B,YAAI,MAAM,CAAA;AACV,YAAI,KAAK,SAAU,WAAW,YAAU;AACpC,cAAI,YAAY;AAEZ,gBAAIK,KAAI,UAAU,QAAQ,OAAO,IAAI,MAAMA,KAAI,CAAC;AAChD,mBAAO,EAAEA;AAAG,mBAAKA,KAAI,CAAC,IAAI,UAAUA,EAAC;AACrC,gBAAI,SAAS,EAAE,UAAU,MAAM,MAAM,IAAI;AACzC,mBAAO;qBACA,OAAQ,cAAe,UAAU;AAExC,mBAAO,IAAI,SAAS;;;AAG5B,WAAG,eAAeC;AAElB,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC9C,UAAAA,KAAI,UAAU,CAAC,CAAC;;AAGpB,eAAO;AAEP,iBAASA,KAAI,WAAW,eAAe,iBAAe;AAClD,cAAI,OAAO,cAAc;AAAU,mBAAO,oBAAoB,SAAS;AACvE,cAAI,CAAC;AAAe,4BAAgB;AACpC,cAAI,CAAC;AAAiB,8BAAkBf;AAExC,cAAI,UAAU;YACV,aAAa,CAAA;YACb,MAAM;YACN,WAAW,SAAU,IAAE;AACnB,kBAAI,QAAQ,YAAY,QAAQ,EAAE,MAAM,IAAI;AACxC,wBAAQ,YAAY,KAAK,EAAE;AAC3B,wBAAQ,OAAO,cAAc,QAAQ,MAAM,EAAE;;;YAGrD,aAAa,SAAU,IAAE;AACrB,sBAAQ,cAAc,QAAQ,YAAY,OAAO,SAAU,IAAE;AAAI,uBAAO,OAAO;cAAG,CAAE;AACpF,sBAAQ,OAAO,QAAQ,YAAY,OAAO,eAAe,eAAe;;;AAGhF,cAAI,SAAS,IAAI,GAAG,SAAS,IAAI;AACjC,iBAAO;;AAGX,iBAAS,oBAAoB,KAAG;AAE5B,eAAK,GAAG,EAAE,QAAQ,SAAU,WAAS;AACjC,gBAAI,OAAO,IAAI,SAAS;AACxB,gBAAI,QAAQ,IAAI,GAAG;AACf,cAAAe,KAAI,WAAW,IAAI,SAAS,EAAE,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC,CAAC;uBAC5C,SAAS,QAAQ;AAGxB,kBAAI,UAAUA,KAAI,WAAW,QAAQ,SAAS,OAAI;AAE9C,oBAAID,KAAI,UAAU,QAAQE,QAAO,IAAI,MAAMF,EAAC;AAC5C,uBAAOA;AAAK,kBAAAE,MAAKF,EAAC,IAAI,UAAUA,EAAC;AAEjC,wBAAQ,YAAY,QAAQ,SAAU,IAAE;AACpChB,yBAAK,SAAS,YAAS;AACnB,uBAAG,MAAM,MAAMkB,KAAI;mBACtB;iBACJ;eACJ;;AACE,oBAAM,IAAI,WAAW,gBAAgB,sBAAsB;WACrE;;MAET;eCrEgB,qBAAoC,WAAmB,aAAqB;AAiB1F,eAAO,WAAW,EAAE,KAAK,EAAC,UAAS,CAAC;AACpC,eAAO;MACT;eCFgB,uBAAwB,IAAS;AAC/C,eAAO,qBACL,MAAM,WAEN,SAASP,OAAoB,MAAc,aAA0B,OAAmB;AACtF,eAAK,KAAK;AACV,eAAK,MAAM;AACX,eAAK,OAAO;AACZ,eAAK,SAAS;AACd,eAAK,OAAO,GAAG,WAAW,IAAI,IAAI,GAAG,WAAW,IAAI,EAAE,OAAO,OAAO,MAAM;YACxE,YAAY,CAAC,mBAAmBT,IAAG;YACnC,WAAW,CAAC,mBAAmB,MAAM;YACrC,YAAY,CAAC,mBAAmBA,IAAG;YACnC,YAAY,CAAC,mBAAmBA,IAAG;WACpC;SACF;MAGL;eC5BgB,gBAAiB,KAAwB,mBAA2B;AAClF,eAAO,EAAE,IAAI,UAAU,IAAI,aAAa,IAAI,QACvC,oBAAoB,IAAI,YAAY,CAAC,IAAI;MAChD;eAEgB,UAAU,KAAwB,IAAY;AAC5D,YAAI,SAAS,QAAQ,IAAI,QAAQ,EAAE;MACrC;eAEgB,gBAAiB,KAAwB,SAAS,eAAc;AAC9E,YAAI,OAAO,IAAI;AACf,YAAI,eAAe,OAAO,WAAA;AAAI,iBAAA,QAAQ,KAAI,GAAI,QAAO,CAAE;QAAC,IAAG;AAC3D,YAAI,YAAY,iBAAiB,CAAC;MACpC;eAEgB,eAAe,KAAwB,IAAE;AACvD,YAAI,UAAU,QAAQ,IAAI,SAAS,EAAE;MACvC;eAEgB,gBAAgB,KAAwB,YAA6B;AAGnF,YAAI,IAAI;AAAW,iBAAO,WAAW;AACrC,YAAM,QAAQ,WAAW,kBAAkB,IAAI,KAAK;AACpD,YAAI,CAAC;AAAO,gBAAM,IAAI,WAAW,OAAO,aAAa,IAAI,QAAQ,sBAAsB,WAAW,OAAO,iBAAiB;AAC1H,eAAO;MACT;eAEgB,WAAW,KAAwB,WAAwB,OAAwB;AACjG,YAAM,QAAQ,gBAAgB,KAAK,UAAU,MAAM;AACnD,eAAO,UAAU,WAAW;UAC1B;UACA,QAAQ,CAAC,IAAI;UACb,SAAS,IAAI,QAAQ;UACrB,QAAQ,CAAC,CAAC,IAAI;UACd,OAAO;YACL;YACA,OAAO,IAAI;;SAEd;MACH;eAEgB,KACd,KACA,IACA,WACA,WAAsB;AAEtB,YAAM,SAAS,IAAI,eAAe,QAAQ,IAAI,QAAQ,IAAI,aAAY,CAAE,IAAI,IAAI;AAChF,YAAI,CAAC,IAAI,IAAI;AACT,iBAAO,QACL,WAAW,KAAK,WAAW,SAAS,GACpC,QAAQ,IAAI,WAAW,MAAM,GAAG,IAAI,CAAC,IAAI,YAAY,IAAI,WAAW;eACnE;AACH,cAAM,QAAM,CAAA;AAEZ,cAAM,QAAQ,SAAC,MAAW,QAAsB,SAAO;AACnD,gBAAI,CAAC,UAAU,OAAO,QAAQ,SAAS,SAAA,QAAM;AAAE,qBAAA,OAAO,KAAK,MAAM;YAAC,GAAE,SAAA,KAAG;AAAI,qBAAA,OAAO,KAAK,GAAG;YAAC,CAAA,GAAG;AAC1F,kBAAI,aAAa,OAAO;AACxB,kBAAI,MAAM,KAAK;AACf,kBAAI,QAAQ;AAAwB,sBAAM,KAAK,IAAI,WAAW,UAAU;AACxE,kBAAI,CAAC,OAAO,OAAK,GAAG,GAAG;AACnB,sBAAI,GAAG,IAAI;AACX,mBAAG,MAAM,QAAQ,OAAO;;;;AAKpC,iBAAO,QAAQ,IAAI;YACjB,IAAI,GAAG,SAAS,OAAO,SAAS;YAChC,QAAQ,WAAW,KAAK,WAAW,SAAS,GAAG,IAAI,WAAW,OAAO,CAAC,IAAI,YAAY,IAAI,WAAW;WACtG;;MAEP;AAEA,eAAS,QAAQ,eAAsC,QAAQ,IAAI,aAAW;AAG5E,YAAI,WAAW,cAAc,SAAC,GAAE,GAAE,GAAC;AAAK,iBAAA,GAAG,YAAY,CAAC,GAAE,GAAE,CAAC;QAAC,IAAG;AAEjE,YAAI,YAAY,KAAK,QAAQ;AAE7B,eAAO,cAAc,KAAK,SAAA,QAAM;AAC9B,cAAI,QAAQ;AACV,mBAAO,OAAO,MAAM,WAAA;AAClB,kBAAI,IAAI,WAAA;AAAI,uBAAA,OAAO,SAAQ;cAAE;AAC7B,kBAAI,CAAC,UAAU,OAAO,QAAQ,SAAA,UAAQ;AAAI,uBAAA,IAAI;cAAQ,GAAE,SAAA,KAAG;AAAG,uBAAO,KAAK,GAAG;AAAE,oBAAEA;cAAG,GAAG,SAAA,GAAC;AAAK,uBAAO,KAAK,CAAC;AAAE,oBAAIA;cAAI,CAAC;AACnH,0BAAU,OAAO,OAAO,QAAQ,SAAA,UAAQ;AAAI,yBAAA,IAAI;gBAAQ,CAAA;AAC1D,gBAAC;aACF;;SAEJ;MACH;AC7EA,UAAAiB,oBAAA,WAAA;AAkDE,iBAAAA,kBAAY,MAAiB;AAC3B,eAAK,WAAW,IAAI;;AAjDtB,QAAAA,kBAAA,UAAA,UAAA,SAAQ,OAAU;;AAChB,cAAM,OAAO,KAAK,WAAW;AAE7B,cAAI,KAAK,QAAQ,QAAW;AAC1B,gBAAM,OAAO,KAAK;AAElB,gBAAI,QAAQ,IAAI,GAAG;AACjB,qBAAO,cAAA,cAAA,CAAA,GAAK,QAAQ,KAAK,IAAI,QAAQ,CAAA,GAAE,IAAA,GAAM,MAAI,IAAA,EAAE,KAAI;;AAGzD,gBAAI,OAAO,SAAS;AAAU,sBAAQ,OAAO,KAAK,KAAK,KAAK;AAC5D,gBAAI,OAAO,SAAS,UAAU;AAC5B,kBAAI;AACF,uBAAO,OAAO,KAAK,IAAI;uBACvB,IAAM;AACN,uBAAO,OAAO,CAAC,IAAI;;;AAGvB,kBAAM,IAAI,UAAU,gBAAA,OAAgB,IAAI,CAAE;;AAI5C,cAAI,KAAK,WAAW,QAAW;AAC7B,gBAAM,eAAa,KAAK;AAExB,gBAAI,QAAQ,YAAU,GAAG;AACvB,qBAAO,QAAQ,KAAK,IAAI,MAAM,OAAO,SAAA,MAAI;AAAI,uBAAA,CAAC,aAAW,SAAS,IAAI;cAAC,CAAA,EAAE,KAAI,IAAK,CAAA;;AAGpF,gBAAI,OAAO,iBAAe;AAAU,qBAAO,OAAO,KAAK,IAAI;AAC3D,gBAAI,OAAO,iBAAe,UAAU;AAClC,kBAAI;AACF,uBAAO,OAAO,KAAK,IAAI;uBACvB,IAAM;AACN,uBAAO,OAAO,CAAC,IAAI;;;AAGvB,kBAAM,IAAI,UAAU,sBAAA,OAAsB,YAAU,CAAE;;AAIxD,cAAM,mBAAkBf,MAAA,KAAK,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAG,CAAC;AAC9C,cAAI,mBAAmB,OAAO,UAAU,YAAY,MAAM,WAAW,eAAe,GAAG;AACrF,mBAAO,KAAK,cAAc,CAAC,IAAI,MAAM,UAAU,gBAAgB,MAAM;;AAEvE,iBAAO;;AAMX,eAAAe;MAAA,EAAC;ACzDD,UAAA,aAAA,WAAA;AAAA,iBAAAC,cAAA;;AAwBE,QAAAA,YAAA,UAAA,QAAA,SAAS,IAAwE,IAAG;AAClF,cAAI,MAAM,KAAK;AACf,iBAAO,IAAI,QACT,IAAI,MAAM,OAAO,MAAM,UAAU,KAAK,MAAM,IAAI,KAAK,CAAC,IACtD,IAAI,MAAM,OAAO,YAAY,EAAE,EAAE,KAAK,EAAE;;AAG5C,QAAAA,YAAA,UAAA,SAAA,SAAU,IAAsE;AAC9E,cAAI,MAAM,KAAK;AACf,iBAAO,IAAI,QACT,IAAI,MAAM,OAAO,MAAM,UAAU,KAAK,MAAM,IAAI,KAAK,CAAC,IACtD,IAAI,MAAM,OAAO,aAAa,IAAI,QAAQ;;AAG9C,QAAAA,YAAA,UAAA,gBAAA,SAAc,IAAE;AACd,cAAI,MAAM,KAAK;AACf,cAAI,YAAY,QAAQ,IAAI,WAAW,EAAE;;AAG3C,QAAAA,YAAA,UAAA,WAAA,SACE,IACA,WAA4B;AAE5B,iBAAO,KAAK,KAAK,MAAM,IAAI,WAAW,KAAK,KAAK,MAAM,IAAI;;AAQ5D,QAAAA,YAAA,UAAA,QAAA,SAAMZ,QAAM;AACV,cAAI,KAAK,OAAO,OAAO,KAAK,YAAY,SAAS,GAC/C,MAAM,OAAO,OAAO,KAAK,IAAI;AAC/B,cAAIA;AAAO,mBAAO,KAAKA,MAAK;AAC5B,aAAG,OAAO;AACV,iBAAO;;AAQT,QAAAY,YAAA,UAAA,MAAA,WAAA;AACE,eAAK,KAAK,cAAc;AACxB,iBAAO;;AAQT,QAAAA,YAAA,UAAA,OAAA,SAAK,IAAsC;AACzC,cAAI,MAAM,KAAK;AAEf,iBAAO,KAAK,MAAM,SAAA,OAAK;AAAI,mBAAA,KAAK,KAAK,IAAI,OAAO,IAAI,MAAM,IAAI;UAAC,CAAA;;AAQjE,QAAAA,YAAA,UAAA,QAAA,SAAM,IAAG;AAAT,cAAA,QAAA;AACE,iBAAO,KAAK,MAAM,SAAA,OAAK;AACrB,gBAAM,MAAM,MAAK;AACjB,gBAAM,YAAY,IAAI,MAAM;AAC5B,gBAAI,gBAAgB,KAAK,IAAI,GAAG;AAE9B,qBAAO,UAAU,MAAM;gBACrB;gBACA,OAAO;kBACL,OAAO,gBAAgB,KAAK,UAAU,MAAM;kBAC5C,OAAO,IAAI;;eAEd,EAAE,KAAK,SAAAC,QAAK;AAAI,uBAAA,KAAK,IAAIA,QAAO,IAAI,KAAK;cAAC,CAAA;mBACtC;AAEL,kBAAI,QAAQ;AACZ,qBAAO,KAAK,KAAK,WAAA;AAAQ,kBAAE;AAAO,uBAAO;cAAM,GAAI,OAAO,SAAS,EAClE,KAAK,WAAA;AAAI,uBAAA;cAAK,CAAA;;WAElB,EAAE,KAAK,EAAE;;AAUZ,QAAAD,YAAA,UAAA,SAAA,SAAO,SAAiB,IAA6B;AACnD,cAAM,QAAQ,QAAQ,MAAM,GAAG,EAAE,QAAO,GACtC,WAAW,MAAM,CAAC,GAClB,YAAY,MAAM,SAAS;AAC7B,mBAAS,OAAO,KAAK,GAAC;AACpB,gBAAI;AAAG,qBAAO,OAAO,IAAI,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;AACzC,mBAAO,IAAI,QAAQ;;AAErB,cAAI,QAAQ,KAAK,KAAK,QAAQ,SAAS,IAAI;AAE3C,mBAAS,OAAO,GAAG,GAAC;AAClB,gBAAI,OAAO,OAAO,GAAG,SAAS,GAC5B,OAAO,OAAO,GAAG,SAAS;AAC5B,mBAAOV,KAAI,MAAM,IAAI,IAAI;;AAE3B,iBAAO,KAAK,QAAQ,SAAU,GAAC;AAC7B,mBAAO,EAAE,KAAK,MAAM;WACrB,EAAE,KAAK,EAAE;;AAQZ,QAAAU,YAAA,UAAA,UAAA,SAAQ,IAAG;AAAX,cAAA,QAAA;AACE,iBAAO,KAAK,MAAM,SAAA,OAAK;AACrB,gBAAI,MAAM,MAAK;AACf,gBAAI,IAAI,QAAQ,UAAU,gBAAgB,KAAK,IAAI,KAAK,IAAI,QAAQ,GAAG;AAG9D,kBAAA,gBAAe,IAAG;AACzB,kBAAM,QAAQ,gBAAgB,KAAK,IAAI,MAAM,KAAK,MAAM;AACxD,qBAAO,IAAI,MAAM,KAAK,MAAM;gBAC1B;gBACA,OAAO,IAAI;gBACX,QAAQ;gBACR,OAAO;kBACL;kBACA,OAAO,IAAI;;eAEd,EAAE,KAAK,SAAChB,KAAQ;oBAAP,SAAMA,IAAA;AAAM,uBAAA,gBAAc,OAAO,IAAI,aAAW,IAAI;eAAM;mBAC/D;AAEL,kBAAM,MAAI,CAAA;AACV,qBAAO,KAAK,KAAK,SAAA,MAAI;AAAI,uBAAA,IAAE,KAAK,IAAI;cAAC,GAAE,OAAO,IAAI,MAAM,IAAI,EAAE,KAAK,WAAA;AAAI,uBAAA;cAAC,CAAA;;aAEzE,EAAE;;AAQP,QAAAgB,YAAA,UAAA,SAAA,SAAO,QAAc;AACnB,cAAI,MAAM,KAAK;AACf,cAAI,UAAU;AAAG,mBAAO;AACxB,cAAI,UAAU;AACd,cAAI,gBAAgB,GAAG,GAAG;AACxB,4BAAgB,KAAK,WAAA;AACnB,kBAAI,aAAa;AACjB,qBAAO,SAAC,QAAQ,SAAO;AACrB,oBAAI,eAAe;AAAG,yBAAO;AAC7B,oBAAI,eAAe,GAAG;AAAE,oBAAE;AAAY,yBAAO;;AAC7C,wBAAQ,WAAA;AACN,yBAAO,QAAQ,UAAU;AACzB,+BAAa;iBACd;AACD,uBAAO;;aAEV;iBACI;AACL,4BAAgB,KAAK,WAAA;AACnB,kBAAI,aAAa;AACjB,qBAAO,WAAA;AAAM,uBAAC,EAAE,aAAa;cAAC;aAC/B;;AAEH,iBAAO;;AAQT,QAAAA,YAAA,UAAA,QAAA,SAAM,SAAe;AACnB,eAAK,KAAK,QAAQ,KAAK,IAAI,KAAK,KAAK,OAAO,OAAO;AACnD,0BAAgB,KAAK,MAAM,WAAA;AACzB,gBAAI,WAAW;AACf,mBAAO,SAAU,QAAQ,SAAS,SAAO;AACvC,kBAAI,EAAE,YAAY;AAAG,wBAAQ,OAAO;AACpC,qBAAO,YAAY;;aAEpB,IAAI;AACP,iBAAO;;AAQT,QAAAA,YAAA,UAAA,QAAA,SAAM,gBAAgC,mBAAkB;AACtD,oBAAU,KAAK,MAAM,SAAU,QAAQ,SAAS,SAAO;AACrD,gBAAI,eAAe,OAAO,KAAK,GAAG;AAChC,sBAAQ,OAAO;AACf,qBAAO;mBACF;AACL,qBAAO;;WAEV;AACD,iBAAO;;AAQT,QAAAA,YAAA,UAAA,QAAA,SAAM,IAAG;AACP,iBAAO,KAAK,MAAM,CAAC,EAAE,QAAQ,SAAU,GAAC;AAAI,mBAAO,EAAE,CAAC;UAAE,CAAE,EAAE,KAAK,EAAE;;AAQrE,QAAAA,YAAA,UAAA,OAAA,SAAK,IAAG;AACN,iBAAO,KAAK,QAAO,EAAG,MAAM,EAAE;;AAQhC,QAAAA,YAAA,UAAA,SAAA,SAAO,gBAA8B;AAEnC,oBAAU,KAAK,MAAM,SAAU,QAAM;AACnC,mBAAO,eAAe,OAAO,KAAK;WACnC;AAGD,yBAAe,KAAK,MAAM,cAAc;AACxC,iBAAO;;AAQT,QAAAA,YAAA,UAAA,MAAA,SAAI,QAAsB;AACxB,iBAAO,KAAK,OAAO,MAAM;;AAQ3B,QAAAA,YAAA,UAAA,KAAA,SAAG,WAAiB;AAClB,iBAAO,IAAI,KAAK,GAAG,YAAY,KAAK,KAAK,OAAO,WAAW,IAAI;;AAQjE,QAAAA,YAAA,UAAA,UAAA,WAAA;AACE,eAAK,KAAK,MAAO,KAAK,KAAK,QAAQ,SAAS,SAAS;AACrD,cAAI,KAAK;AAAoB,iBAAK,mBAAmB,KAAK,KAAK,GAAG;AAClE,iBAAO;;AAQT,QAAAA,YAAA,UAAA,OAAA,WAAA;AACE,iBAAO,KAAK,QAAO;;AAQrB,QAAAA,YAAA,UAAA,UAAA,SAAQ,IAAG;AACT,cAAI,MAAM,KAAK;AACf,cAAI,WAAW,CAAC,IAAI;AACpB,iBAAO,KAAK,KAAK,SAAU,KAAK,QAAM;AAAI,eAAG,OAAO,KAAK,MAAM;UAAE,CAAE;;AAQrE,QAAAA,YAAA,UAAA,gBAAA,SAAc,IAAG;AACf,eAAK,KAAK,SAAS;AACnB,iBAAO,KAAK,QAAQ,EAAE;;AAQxB,QAAAA,YAAA,UAAA,iBAAA,SAAe,IAAG;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,WAAW,CAAC,IAAI;AACpB,iBAAO,KAAK,KAAK,SAAU,KAAK,QAAM;AAAI,eAAG,OAAO,YAAY,MAAM;UAAE,CAAE;;AAQ5E,QAAAA,YAAA,UAAA,OAAA,SAAK,IAAG;AACN,cAAI,MAAM,KAAK;AACf,cAAI,WAAW,CAAC,IAAI;AACpB,cAAI,IAAI,CAAA;AACR,iBAAO,KAAK,KAAK,SAAU,MAAM,QAAM;AACrC,cAAE,KAAK,OAAO,GAAG;WAClB,EAAE,KAAK,WAAA;AACN,mBAAO;WACR,EAAE,KAAK,EAAE;;AAQZ,QAAAA,YAAA,UAAA,cAAA,SAAY,IAAG;AACb,cAAI,MAAM,KAAK;AACf,cAAI,IAAI,QAAQ,UAAU,gBAAgB,KAAK,IAAI,KAAK,IAAI,QAAQ,GAAG;AAGrE,mBAAO,KAAK,MAAM,SAAA,OAAK;AACrB,kBAAI,QAAQ,gBAAgB,KAAK,IAAI,MAAM,KAAK,MAAM;AACtD,qBAAO,IAAI,MAAM,KAAK,MAAM;gBAC1B;gBACA,QAAQ;gBACR,OAAO,IAAI;gBACX,OAAO;kBACL;kBACA,OAAO,IAAI;;eACX;aACL,EAAE,KAAK,SAAChB,KAAQ;kBAAP,SAAMA,IAAA;AAAI,qBAAA;aAAM,EAAE,KAAK,EAAE;;AAErC,cAAI,WAAW,CAAC,IAAI;AACpB,cAAI,IAAI,CAAA;AACR,iBAAO,KAAK,KAAK,SAAU,MAAM,QAAM;AACrC,cAAE,KAAK,OAAO,UAAU;WACzB,EAAE,KAAK,WAAA;AACN,mBAAO;WACR,EAAE,KAAK,EAAE;;AAQZ,QAAAgB,YAAA,UAAA,aAAA,SAAW,IAAG;AACZ,eAAK,KAAK,SAAS;AACnB,iBAAO,KAAK,KAAK,EAAE;;AAQrB,QAAAA,YAAA,UAAA,WAAA,SAAS,IAAG;AACV,iBAAO,KAAK,MAAM,CAAC,EAAE,KAAK,SAAU,GAAC;AAAI,mBAAO,EAAE,CAAC;UAAE,CAAE,EAAE,KAAK,EAAE;;AAQlE,QAAAA,YAAA,UAAA,UAAA,SAAQ,IAAG;AACT,iBAAO,KAAK,QAAO,EAAG,SAAS,EAAE;;AAQnC,QAAAA,YAAA,UAAA,WAAA,WAAA;AACE,cAAI,MAAM,KAAK,MACb,MAAM,IAAI,SAAS,IAAI,MAAM,OAAO,UAAU,IAAI,KAAK;AACzD,cAAI,CAAC,OAAO,CAAC,IAAI;AAAO,mBAAO;AAC/B,cAAI,MAAM,CAAA;AACV,oBAAU,KAAK,MAAM,SAAU,QAAoB;AACjD,gBAAI,SAAS,OAAO,WAAW,SAAQ;AACvC,gBAAI,QAAQ,OAAO,KAAK,MAAM;AAC9B,gBAAI,MAAM,IAAI;AACd,mBAAO,CAAC;WACT;AACD,iBAAO;;AAYT,QAAAA,YAAA,UAAA,SAAA,SAAO,SAAmG;AAA1G,cAAA,QAAA;AACE,cAAI,MAAM,KAAK;AACf,iBAAO,KAAK,OAAO,SAAA,OAAK;AACtB,gBAAI;AACJ,gBAAI,OAAO,YAAY,YAAY;AAEjC,yBAAW;mBACN;AAEL,kBAAI,WAAW,KAAK,OAAO;AAC3B,kBAAI,UAAU,SAAS;AACvB,yBAAW,SAAU,MAAI;AACvB,oBAAI,mBAAmB;AACvB,yBAAS,IAAI,GAAG,IAAI,SAAS,EAAE,GAAG;AAChC,sBAAI,UAAU,SAAS,CAAC;AACxB,sBAAI,MAAM,QAAQ,OAAO;AACzB,sBAAI,UAAU,aAAa,MAAM,OAAO;AAExC,sBAAI,eAAeD,mBAAkB;AACnC,iCAAa,MAAM,SAAS,IAAI,QAAQ,OAAO,CAAC;AAChD,uCAAmB;6BACV,YAAY,KAAK;AAC1B,iCAAa,MAAM,SAAS,GAAG;AAC/B,uCAAmB;;;AAGvB,uBAAO;;;AAIX,gBAAM,YAAY,IAAI,MAAM;AACtB,gBAAAf,MAAyB,UAAU,OAAO,YAAzC,WAAQA,IAAA,UAAE,aAAUA,IAAA;AAC3B,gBAAI,QAAQ;AACZ,gBAAM,kBAAkB,MAAK,GAAG,SAAS;AACzC,gBAAI,iBAAiB;AACnB,kBAAI,OAAO,mBAAmB,UAAU;AACtC,wBAAQ,gBAAgB,UAAU,IAAI,KAAK,gBAAgB,GAAG,KAAK;qBAC9D;AACL,wBAAQ;;;AAGZ,gBAAM,gBAAgB,CAAA;AACtB,gBAAI,eAAe;AACnB,gBAAM,aAA8B,CAAA;AACpC,gBAAM,oBAAoB,SAAC,eAAuB,KAAyB;AAClE,kBAAA,WAAyB,IAAG,UAAlB,cAAe,IAAG;AACnC,8BAAgB,gBAAgB;AAChC,uBAAgB,KAAA,GAAAA,MAAA,KAAK,QAAQ,GAAb,KAAAA,IAAA,QAAA,MAAgB;AAA3B,oBAAI,MAAGA,IAAA,EAAA;AACV,8BAAc,KAAK,SAAS,GAAG,CAAC;;;AAGpC,mBAAO,MAAK,MAAK,EAAG,YAAW,EAAG,KAAK,SAAAW,OAAI;AACzC,kBAAM,WAAW,gBAAgB,GAAG,KAClC,IAAI,UAAU,aACb,OAAO,YAAY,cAAc,YAAY,mBAAmB;gBAC/D,OAAO,IAAI;gBACX,OAAO,IAAI;;AAGf,kBAAM,YAAY,SAAC,QAAc;AAC/B,oBAAM,QAAQ,KAAK,IAAI,OAAOA,MAAK,SAAS,MAAM;AAClD,uBAAO,UAAU,QAAQ;kBACvB;kBACA,MAAMA,MAAK,MAAM,QAAQ,SAAS,KAAK;kBACvC,OAAO;iBAIR,EAAE,KAAK,SAAA,QAAM;AACZ,sBAAM,YAAY,CAAA;AAClB,sBAAM,YAAY,CAAA;AAClB,sBAAM,UAAU,WAAW,CAAA,IAAK;AAChC,sBAAM,aAAa,CAAA;AACnB,2BAAS,IAAE,GAAG,IAAE,OAAO,EAAE,GAAG;AAC1B,wBAAM,YAAY,OAAO,CAAC;AAC1B,wBAAM,QAAM;sBACV,OAAO,UAAU,SAAS;sBAC1B,SAASA,MAAK,SAAO,CAAC;;AAExB,wBAAI,SAAS,KAAK,OAAK,MAAI,OAAO,KAAG,MAAM,OAAO;AAChD,0BAAI,MAAI,SAAS,MAAM;AAErB,mCAAW,KAAKA,MAAK,SAAO,CAAC,CAAC;iCACrB,CAAC,YAAYL,KAAI,WAAW,SAAS,GAAG,WAAW,MAAI,KAAK,CAAC,MAAM,GAAG;AAE/E,mCAAW,KAAKK,MAAK,SAAO,CAAC,CAAC;AAC9B,kCAAU,KAAK,MAAI,KAAK;6BACnB;AAEL,kCAAU,KAAK,MAAI,KAAK;AACxB,4BAAI;AAAU,kCAAQ,KAAKA,MAAK,SAAO,CAAC,CAAC;;;;AAK/C,yBAAO,QAAQ,QAAQ,UAAU,SAAS,KACxC,UAAU,OAAO,EAAC,OAAO,MAAM,OAAO,QAAQ,UAAS,CAAC,EACrD,KAAK,SAAA,KAAG;AACP,6BAAS,OAAO,IAAI,UAAU;AAE5B,iCAAW,OAAO,SAAS,GAAG,GAAG,CAAC;;AAEpC,sCAAkB,UAAU,QAAQ,GAAG;mBACxC,CAAC,EACJ,KAAK,WAAA;AAAI,4BAAC,UAAU,SAAS,KAAM,YAAY,OAAO,YAAY,aAChE,UAAU,OAAO;sBACf;sBACA,MAAM;sBACN,MAAM;sBACN,QAAQ;sBACR;sBACA,YAAY,OAAO,YAAY,cAC1B;sBACL,mBAAmB,SAAS;qBAC7B,EAAE,KAAK,SAAA,KAAG;AAAE,6BAAA,kBAAkB,UAAU,QAAQ,GAAG;oBAAC,CAAA;kBAAC,CAAA,EACxD,KAAK,WAAA;AAAI,4BAAC,WAAW,SAAS,KAAM,YAAY,YAAY,mBAC1D,UAAU,OAAO;sBACf;sBACA,MAAM;sBACN,MAAM;sBACN;sBACA,mBAAmB,SAAS;qBAC7B,EAAE,KAAK,SAAA,KAAG;AAAE,6BAAA,kBAAkB,WAAW,QAAQ,GAAG;oBAAC,CAAA;kBAAC,CAAA,EACzD,KAAK,WAAA;AACL,2BAAOA,MAAK,SAAS,SAAS,SAAS,UAAU,SAAS,KAAK;mBAChE;iBACF;;AAGH,qBAAO,UAAU,CAAC,EAAE,KAAK,WAAA;AACvB,oBAAI,cAAc,SAAS;AACzB,wBAAM,IAAI,YAAY,uCAAuC,eAAe,cAAc,UAAwC;AAEpI,uBAAOA,MAAK;eACb;aACF;WAEF;;AAQH,QAAAK,YAAA,UAAA,SAAA,WAAA;AACE,cAAI,MAAM,KAAK,MACb,QAAQ,IAAI;AAGd,cAAI,gBAAgB,GAAG,MACpB,IAAI,aAAa,MAAM,SAAI,IAC9B;AAKE,mBAAO,KAAK,OAAO,SAAA,OAAK;AAEf,kBAAA,aAAc,IAAI,MAAM,KAAK,OAAM;AAC1C,kBAAM,YAAY;AAClB,qBAAO,IAAI,MAAM,KAAK,MAAM,EAAC,OAAO,OAAO,EAAC,OAAO,YAAY,OAAO,UAAS,EAAC,CAAC,EAAE,KAAK,SAAA,OAAK;AAC3F,uBAAO,IAAI,MAAM,KAAK,OAAO,EAAC,OAAO,MAAM,eAAe,OAAO,UAAS,CAAC,EAC1E,KAAK,SAAChB,KAA4C;sBAA3C,WAAQA,IAAA;AAAA,kBAAAA,IAAA;AAAY,kBAAAA,IAAA;AAAS,sBAAE,cAAWA,IAAA;AAChD,sBAAI;AAAa,0BAAM,IAAI,YAAY,gCACrC,OAAO,KAAK,QAAQ,EAAE,IAAI,SAAA,KAAG;AAAI,6BAAA,SAAS,GAAG;oBAAC,CAAA,GAC9C,QAAQ,WAAW;AACrB,yBAAO,QAAQ;iBAChB;eACF;aACF;;AAGH,iBAAO,KAAK,OAAO,cAAc;;AAErC,eAAAgB;MAAA,EAAC;AAED,UAAM,iBAAiB,SAAC,OAAO,KAAG;AAAK,eAAA,IAAI,QAAQ;MAAI;eC1mBvC,4BAA4B,IAAS;AACnD,eAAO,qBACL,WAAW,WAEX,SAASA,YAEP,aACA,mBAAwC;AAExC,eAAK,KAAK;AACV,cAAI,WAAW,UAAU,QAAQ;AACjC,cAAI;AAAmB,gBAAI;AACzB,yBAAW,kBAAiB;qBACrB,IAAI;AACX,sBAAQ;;AAGV,cAAM,WAAW,YAAY;AAC7B,cAAM,QAAQ,SAAS;AACvB,cAAM,cAAc,MAAM,KAAK,QAAQ;AACvC,eAAK,OAAO;YACV;YACA,OAAO,SAAS;YAChB,WAAY,CAAC,SAAS,SAAU,MAAM,OAAO,QAAQ,WAAW,SAAS,UAAU,MAAM,OAAO,QAAQ;YACxG,OAAO;YACP,UAAU;YACV,KAAK;YACL,QAAQ;YACR,WAAW;YACX,QAAQ;YACR,cAAc;YACd,WAAW;YACX,SAAS;YACT,QAAQ;YACR,OAAO;YACP;YACA,IAAI,SAAS;YACb,aAAa,gBAAgB,SAAS,cAAc;;SAEvD;MAEL;eC3DgB,cAAc,GAAG,GAAC;AAChC,eAAO,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI;MACpC;eAEgB,qBAAqB,GAAG,GAAC;AACvC,eAAO,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI;MACpC;eCDgB,KAAK,yBAAmD,KAAK,GAAE;AAC7E,YAAI,aAAa,mCAAmC,cAChD,IAAI,wBAAwB,WAAY,uBAAuB,IAC/D;AAEJ,mBAAW,KAAK,QAAQ,IAAI,IAAI,EAAE,GAAG,IAAI,IAAI,UAAU,GAAG;AAC1D,eAAO;MACT;eAEgB,gBAAgB,aAAwB;AACtD,eAAO,IAAI,YAAY,WAAY,aAAa,WAAA;AAAM,iBAAA,WAAW,EAAE;QAAC,CAAA,EAAE,MAAM,CAAC;MAC/E;eAEgB,aAAa,KAAoB;AAC/C,eAAO,QAAQ,SACb,SAAC,GAAS;AAAK,iBAAA,EAAE,YAAW;QAAE,IAC9B,SAAC,GAAS;AAAK,iBAAA,EAAE,YAAW;QAAE;MAClC;eAEgB,aAAa,KAAoB;AAC/C,eAAO,QAAQ,SACb,SAAC,GAAS;AAAK,iBAAA,EAAE,YAAW;QAAE,IAC9B,SAAC,GAAS;AAAK,iBAAA,EAAE,YAAW;QAAE;MAClC;eAEgB,WAAW,KAAK,UAAU,aAAa,aAAaV,MAAK,KAAG;AAC1E,YAAI,SAAS,KAAK,IAAI,IAAI,QAAQ,YAAY,MAAM;AACpD,YAAI,MAAM;AACV,iBAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC7B,cAAI,aAAa,SAAS,CAAC;AAC3B,cAAI,eAAe,YAAY,CAAC,GAAG;AAC/B,gBAAIA,KAAI,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,IAAI;AAAG,qBAAO,IAAI,OAAO,GAAG,CAAC,IAAI,YAAY,CAAC,IAAI,YAAY,OAAO,IAAI,CAAC;AACxG,gBAAIA,KAAI,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,IAAI;AAAG,qBAAO,IAAI,OAAO,GAAG,CAAC,IAAI,YAAY,CAAC,IAAI,YAAY,OAAO,IAAI,CAAC;AACxG,gBAAI,OAAO;AAAG,qBAAO,IAAI,OAAO,GAAG,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,OAAO,MAAM,CAAC;AACpF,mBAAO;;AAEX,cAAIA,KAAI,IAAI,CAAC,GAAG,UAAU,IAAI;AAAG,kBAAM;;AAE3C,YAAI,SAAS,YAAY,UAAU,QAAQ;AAAQ,iBAAO,MAAM,YAAY,OAAO,IAAI,MAAM;AAC7F,YAAI,SAAS,IAAI,UAAU,QAAQ;AAAQ,iBAAO,IAAI,OAAO,GAAG,YAAY,MAAM;AAClF,eAAQ,MAAM,IAAI,OAAO,IAAI,OAAO,GAAG,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,OAAO,MAAM,CAAC;MAC7F;eAEgB,uBAAuB,aAA0B,OAAO,SAAS,QAAM;AAErF,YAAI,OAAO,OAAO,SAAS,cAAc,cAAc,WAAW,eAC9D,aAAa,QAAQ;AACzB,YAAI,CAAC,QAAQ,MAAM,SAAA,GAAC;AAAI,iBAAA,OAAO,MAAM;QAAQ,CAAA,GAAG;AAC5C,iBAAO,KAAK,aAAa,eAAe;;AAE5C,iBAAS,cAAc,KAAG;AACtB,kBAAQ,aAAa,GAAG;AACxB,kBAAQ,aAAa,GAAG;AACxB,oBAAW,QAAQ,SAAS,gBAAgB;AAC5C,cAAI,eAAe,QAAQ,IAAI,SAAU,QAAM;AAC3C,mBAAO,EAAC,OAAO,MAAM,MAAM,GAAG,OAAO,MAAM,MAAM,EAAC;WACrD,EAAE,KAAK,SAAS,GAAE,GAAC;AAChB,mBAAO,QAAQ,EAAE,OAAO,EAAE,KAAK;WAClC;AACD,yBAAe,aAAa,IAAI,SAAU,IAAE;AAAG,mBAAO,GAAG;UAAM,CAAE;AACjE,yBAAe,aAAa,IAAI,SAAU,IAAE;AAAG,mBAAO,GAAG;UAAM,CAAE;AACjE,sBAAY;AACZ,0BAAiB,QAAQ,SAAS,KAAK;;AAE3C,sBAAc,MAAM;AAEpB,YAAI,IAAI,IAAI,YAAY,WACpB,aACA,WAAA;AAAI,iBAAA,YAAY,aAAa,CAAC,GAAG,aAAa,aAAW,CAAC,IAAI,MAAM;QAAC,CAAA;AAGzE,UAAE,qBAAqB,SAAUY,YAAS;AAEtC,wBAAcA,UAAS;;AAG3B,YAAI,sBAAsB;AAE1B,UAAE,cAAc,SAAU,QAAQ,SAAS,SAAO;AAI9C,cAAI,MAAM,OAAO;AACjB,cAAI,OAAO,QAAQ;AAAU,mBAAO;AACpC,cAAI,WAAW,MAAM,GAAG;AACxB,cAAI,MAAM,UAAU,cAAc,mBAAmB,GAAG;AACpD,mBAAO;iBACJ;AACH,gBAAI,uBAAuB;AAC3B,qBAAS,IAAE,qBAAqB,IAAE,YAAY,EAAE,GAAG;AAC/C,kBAAI,SAAS,WAAW,KAAK,UAAU,aAAa,CAAC,GAAG,aAAa,CAAC,GAAG,SAAS,SAAS;AAC3F,kBAAI,WAAW,QAAQ,yBAAyB;AAC5C,sCAAsB,IAAI;uBACrB,yBAAyB,QAAQ,QAAQ,sBAAsB,MAAM,IAAI,GAAG;AACjF,uCAAuB;;;AAG/B,gBAAI,yBAAyB,MAAM;AAC/B,sBAAQ,WAAA;AAAc,uBAAO,SAAS,uBAAuB,aAAa;cAAE,CAAE;mBAC3E;AACH,sBAAQ,OAAO;;AAEnB,mBAAO;;SAEd;AACD,eAAO;MACT;eAEgB,YAAa,OAAsB,OAAsB,WAAqB,WAAmB;AAC7G,eAAO;UACH,MAAI;UACJ;UACA;UACA;UACA;;MAER;eAEgB,WAAY,OAAoB;AAC5C,eAAO;UACH,MAAI;UACJ,OAAO;UACP,OAAO;;MAEf;ACpHA,UAAA,cAAA,WAAA;AAAA,iBAAAC,eAAA;;AAcE,eAAA,eAAIA,aAAA,WAAA,cAAU;eAAd,WAAA;AACE,mBAAO,KAAK,KAAK,MAAM,GAAG;;;;;AAQ5B,QAAAA,aAAA,UAAA,UAAA,SAAQ,OAAsB,OAAsB,cAAwB,cAAsB;AAChG,yBAAe,iBAAiB;AAChC,yBAAe,iBAAiB;AAChC,cAAI;AACF,gBAAK,KAAK,KAAK,OAAO,KAAK,IAAI,KAC5B,KAAK,KAAK,OAAO,KAAK,MAAM,MAAM,gBAAgB,iBAAiB,EAAE,gBAAgB;AACtF,qBAAO,gBAAgB,IAAI;AAC7B,mBAAO,IAAI,KAAK,WAAW,MAAM,WAAA;AAAI,qBAAA,YAAY,OAAO,OAAO,CAAC,cAAc,CAAC,YAAY;YAAC,CAAA;mBACrF,GAAG;AACV,mBAAO,KAAK,MAAM,oBAAoB;;;AAS1C,QAAAA,aAAA,UAAA,SAAA,SAAO,OAAoB;AACzB,cAAI,SAAS;AAAM,mBAAO,KAAK,MAAM,oBAAoB;AACzD,iBAAO,IAAI,KAAK,WAAW,MAAM,WAAA;AAAM,mBAAA,WAAW,KAAK;UAAC,CAAA;;AAQ1D,QAAAA,aAAA,UAAA,QAAA,SAAM,OAAoB;AACxB,cAAI,SAAS;AAAM,mBAAO,KAAK,MAAM,oBAAoB;AACzD,iBAAO,IAAI,KAAK,WAAW,MAAM,WAAA;AAAM,mBAAA,YAAY,OAAO,QAAW,IAAI;UAAC,CAAA;;AAQ5E,QAAAA,aAAA,UAAA,eAAA,SAAa,OAAoB;AAC/B,cAAI,SAAS;AAAM,mBAAO,KAAK,MAAM,oBAAoB;AACzD,iBAAO,IAAI,KAAK,WAAW,MAAM,WAAA;AAAM,mBAAA,YAAY,OAAO,QAAW,KAAK;UAAC,CAAA;;AAQ7E,QAAAA,aAAA,UAAA,QAAA,SAAM,OAAoB;AACxB,cAAI,SAAS;AAAM,mBAAO,KAAK,MAAM,oBAAoB;AACzD,iBAAO,IAAI,KAAK,WAAW,MAAM,WAAA;AAAM,mBAAA,YAAY,QAAW,OAAO,OAAO,IAAI;UAAC,CAAA;;AAQnF,QAAAA,aAAA,UAAA,eAAA,SAAa,OAAoB;AAC/B,cAAI,SAAS;AAAM,mBAAO,KAAK,MAAM,oBAAoB;AACzD,iBAAO,IAAI,KAAK,WAAW,MAAM,WAAA;AAAM,mBAAA,YAAY,QAAW,KAAK;UAAC,CAAA;;AAQtE,QAAAA,aAAA,UAAA,aAAA,SAAW,KAAW;AACpB,cAAI,OAAO,QAAQ;AAAU,mBAAO,KAAK,MAAM,eAAe;AAC9D,iBAAO,KAAK,QAAQ,KAAK,MAAM,WAAW,MAAM,IAAI;;AAQtD,QAAAA,aAAA,UAAA,uBAAA,SAAqB,KAAW;AAC9B,cAAI,QAAQ;AAAI,mBAAO,KAAK,WAAW,GAAG;AAC1C,iBAAO,uBAAuB,MAAM,SAAC,GAAG,GAAC;AAAK,mBAAA,EAAE,QAAQ,EAAE,CAAC,CAAC,MAAM;UAAC,GAAE,CAAC,GAAG,GAAG,SAAS;;AAQvF,QAAAA,aAAA,UAAA,mBAAA,SAAiB,KAAW;AAC1B,iBAAO,uBAAuB,MAAM,SAAC,GAAG,GAAC;AAAK,mBAAA,MAAM,EAAE,CAAC;UAAC,GAAE,CAAC,GAAG,GAAG,EAAE;;AAUrE,QAAAA,aAAA,UAAA,kBAAA,WAAA;AACE,cAAI,MAAM,WAAW,MAAM,eAAe,SAAS;AACnD,cAAI,IAAI,WAAW;AAAG,mBAAO,gBAAgB,IAAI;AACjD,iBAAO,uBAAuB,MAAM,SAAC,GAAG,GAAC;AAAK,mBAAA,EAAE,QAAQ,CAAC,MAAM;UAAE,GAAE,KAAK,EAAE;;AAU5E,QAAAA,aAAA,UAAA,4BAAA,WAAA;AACE,cAAI,MAAM,WAAW,MAAM,eAAe,SAAS;AACnD,cAAI,IAAI,WAAW;AAAG,mBAAO,gBAAgB,IAAI;AACjD,iBAAO,uBAAuB,MAAM,SAAC,GAAG,GAAC;AAAK,mBAAA,EAAE,KAAK,SAAA,GAAC;AAAI,qBAAA,EAAE,QAAQ,CAAC,MAAM;YAAC,CAAA;UAAC,GAAE,KAAK,SAAS;;AAU/F,QAAAA,aAAA,UAAA,QAAA,WAAA;AAAA,cAAA,QAAA;AACE,cAAM,MAAM,WAAW,MAAM,eAAe,SAAS;AACrD,cAAI,UAAU,KAAK;AACnB,cAAI;AAAE,gBAAI,KAAK,OAAO;mBAAY,GAAG;AAAE,mBAAO,KAAK,MAAM,oBAAoB;;AAC7E,cAAI,IAAI,WAAW;AAAG,mBAAO,gBAAgB,IAAI;AACjD,cAAM,IAAI,IAAI,KAAK,WAAW,MAAM,WAAA;AAAM,mBAAA,YAAY,IAAI,CAAC,GAAG,IAAI,IAAI,SAAS,CAAC,CAAC;UAAC,CAAA;AAElF,YAAE,qBAAqB,SAAA,WAAS;AAC9B,sBAAW,cAAc,SACvB,MAAK,aACL,MAAK;AACP,gBAAI,KAAK,OAAO;;AAGlB,cAAI,IAAI;AACR,YAAE,cAAc,SAAC,QAAQ,SAAS,SAAO;AACvC,gBAAM,MAAM,OAAO;AACnB,mBAAO,QAAQ,KAAK,IAAI,CAAC,CAAC,IAAI,GAAG;AAE/B,gBAAE;AACF,kBAAI,MAAM,IAAI,QAAQ;AAEpB,wBAAQ,OAAO;AACf,uBAAO;;;AAGX,gBAAI,QAAQ,KAAK,IAAI,CAAC,CAAC,MAAM,GAAG;AAE9B,qBAAO;mBACF;AAEL,sBAAQ,WAAA;AAAQ,uBAAO,SAAS,IAAI,CAAC,CAAC;cAAE,CAAE;AAC1C,qBAAO;;WAEV;AACD,iBAAO;;AAQT,QAAAA,aAAA,UAAA,WAAA,SAAS,OAAoB;AAC3B,iBAAO,KAAK,WAAW,CAAC,CAAC,QAAQ,KAAK,GAAG,CAAC,OAAO,KAAK,GAAG,OAAO,CAAC,GAAG,EAAE,eAAe,OAAO,eAAe,MAAK,CAAE;;AAUpH,QAAAA,aAAA,UAAA,SAAA,WAAA;AACE,cAAM,MAAM,WAAW,MAAM,eAAe,SAAS;AACrD,cAAI,IAAI,WAAW;AAAG,mBAAO,IAAI,KAAK,WAAW,IAAI;AACrD,cAAI;AAAE,gBAAI,KAAK,KAAK,UAAU;mBAAY,GAAG;AAAE,mBAAO,KAAK,MAAM,oBAAoB;;AAErF,cAAM,SAAS,IAAI,OACjB,SAAC,KAAK,KAAG;AAAK,mBAAA,MACZ,IAAI,OAAO,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,IAC1C,CAAC,CAAC,QAAQ,GAAG,CAAC;UAAC,GACjB,IAAI;AACN,iBAAO,KAAK,CAAC,IAAI,IAAI,SAAS,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC;AAClD,iBAAO,KAAK,WAAW,QAAQ,EAAE,eAAe,OAAO,eAAe,MAAK,CAAE;;AAQ/E,QAAAA,aAAA,UAAA,aAAA,SACE,QACA,SAA8D;AAFhE,cAAA,QAAA;AAIE,cAAMb,OAAM,KAAK,MACX,YAAY,KAAK,YACjB,aAAa,KAAK,aAClB,MAAM,KAAK,MACX,MAAM,KAAK;AAEjB,cAAI,OAAO,WAAW;AAAG,mBAAO,gBAAgB,IAAI;AACpD,cAAI,CAAC,OAAO,MAAM,SAAA,OAAK;AACrB,mBAAA,MAAM,CAAC,MAAM,UACb,MAAM,CAAC,MAAM,UACb,UAAU,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,KAAK;WAAC,GAAG;AACrC,mBAAO,KACL,MACA,8HACA,WAAW,eAAe;;AAE9B,cAAM,gBAAgB,CAAC,WAAW,QAAQ,kBAAkB;AAC5D,cAAM,gBAAgB,WAAW,QAAQ,kBAAkB;AAE3D,mBAASc,UAASC,SAAQ,UAAQ;AAChC,gBAAI,IAAI,GAAG,IAAIA,QAAO;AACtB,mBAAO,IAAI,GAAG,EAAE,GAAG;AACjB,kBAAM,QAAQA,QAAO,CAAC;AACtB,kBAAIf,KAAI,SAAS,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,KAAKA,KAAI,SAAS,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,GAAG;AACpE,sBAAM,CAAC,IAAI,IAAI,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC;AACpC,sBAAM,CAAC,IAAI,IAAI,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC;AACpC;;;AAGJ,gBAAI,MAAM;AACR,cAAAe,QAAO,KAAK,QAAQ;AACtB,mBAAOA;;AAGT,cAAI,gBAAgB;AACpB,mBAAS,YAAY,GAAG,GAAC;AAAI,mBAAO,cAAc,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;UAAE;AAG9D,cAAI;AACJ,cAAI;AACF,kBAAM,OAAO,OAAOD,WAAU,CAAA,CAAE;AAChC,gBAAI,KAAK,WAAW;mBACb,IAAI;AACX,mBAAO,KAAK,MAAM,oBAAoB;;AAGxC,cAAI,WAAW;AACf,cAAM,0BAA0B,gBAC9B,SAAA,KAAG;AAAI,mBAAA,UAAU,KAAK,IAAI,QAAQ,EAAE,CAAC,CAAC,IAAI;UAAC,IAC3C,SAAA,KAAG;AAAI,mBAAA,UAAU,KAAK,IAAI,QAAQ,EAAE,CAAC,CAAC,KAAK;UAAC;AAE9C,cAAM,0BAA0B,gBAC9B,SAAA,KAAG;AAAI,mBAAA,WAAW,KAAK,IAAI,QAAQ,EAAE,CAAC,CAAC,IAAI;UAAC,IAC5C,SAAA,KAAG;AAAI,mBAAA,WAAW,KAAK,IAAI,QAAQ,EAAE,CAAC,CAAC,KAAK;UAAC;AAE/C,mBAAS,sBAAsB,KAAG;AAChC,mBAAO,CAAC,wBAAwB,GAAG,KAAK,CAAC,wBAAwB,GAAG;;AAGtE,cAAI,WAAW;AAEf,cAAM,IAAI,IAAI,KAAK,WACjB,MACA,WAAA;AAAM,mBAAA,YAAY,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,aAAa;UAAC,CAAA;AAEtF,YAAE,qBAAqB,SAAA,WAAS;AAC9B,gBAAI,cAAc,QAAQ;AACxB,yBAAW;AACX,8BAAgB;mBACX;AACL,yBAAW;AACX,8BAAgB;;AAElB,gBAAI,KAAK,WAAW;;AAGtB,YAAE,cAAc,SAAC,QAAQ,SAAS,SAAO;AACvC,gBAAI,MAAM,OAAO;AACjB,mBAAO,SAAS,GAAG,GAAG;AAEpB,gBAAE;AACF,kBAAI,aAAa,IAAI,QAAQ;AAE3B,wBAAQ,OAAO;AACf,uBAAO;;;AAGX,gBAAI,sBAAsB,GAAG,GAAG;AAE9B,qBAAO;uBACE,MAAK,KAAK,KAAK,IAAI,QAAQ,EAAE,CAAC,CAAC,MAAM,KAAK,MAAK,KAAK,KAAK,IAAI,QAAQ,EAAE,CAAC,CAAC,MAAM,GAAG;AAG3F,qBAAO;mBACF;AAEL,sBAAQ,WAAA;AACN,oBAAI,kBAAkB;AAAW,yBAAO,SAAS,IAAI,QAAQ,EAAE,CAAC,CAAC;;AAC5D,yBAAO,SAAS,IAAI,QAAQ,EAAE,CAAC,CAAC;eACtC;AACD,qBAAO;;WAEV;AACD,iBAAO;;AAUT,QAAAD,aAAA,UAAA,kBAAA,WAAA;AACE,cAAM,MAAM,WAAW,MAAM,eAAe,SAAS;AAErD,cAAI,CAAC,IAAI,MAAM,SAAA,GAAC;AAAI,mBAAA,OAAO,MAAM;UAAQ,CAAA,GAAG;AACxC,mBAAO,KAAK,MAAM,2CAA2C;;AAEjE,cAAI,IAAI,WAAW;AAAG,mBAAO,gBAAgB,IAAI;AAEjD,iBAAO,KAAK,WAAW,IAAI,IAAI,SAAC,KAAW;AAAK,mBAAA,CAAC,KAAK,MAAM,SAAS;UAAC,CAAA,CAAC;;AAG3E,eAAAA;MAAA,EAAC;eCzVe,6BAA6B,IAAS;AACpD,eAAO,qBACL,YAAY,WAEZ,SAASA,aAA+B,OAAc,OAAgB,cAAyB;AAC7F,eAAK,KAAK;AACV,eAAK,OAAO;YACV;YACA,OAAO,UAAU,QAAQ,OAAO;YAChC,IAAI;;AAEN,eAAK,OAAO,KAAK,aAAab;AAC9B,eAAK,cAAc,SAAC,GAAG,GAAC;AAAK,mBAAAA,KAAI,GAAG,CAAC;UAAC;AACtC,eAAK,OAAO,SAAC,GAAG,GAAC;AAAK,mBAAAA,KAAI,GAAE,CAAC,IAAI,IAAI,IAAI;UAAC;AAC1C,eAAK,OAAO,SAAC,GAAG,GAAC;AAAK,mBAAAA,KAAI,GAAE,CAAC,IAAI,IAAI,IAAI;UAAC;AAC1C,eAAK,eAAe,GAAG,MAAM;AAC7B,cAAI,CAAC,KAAK;AAAc,kBAAM,IAAI,WAAW,WAAU;SACxD;MAEL;eCpCgB,mBAAmB,QAAM;AACvC,eAAO,KAAK,SAAU,OAAK;AACvB,yBAAe,KAAK;AACpB,iBAAQ,MAAM,OAAO,KAAK;AAC1B,iBAAO;SACV;MACH;eA4CgB,eAAe,OAAK;AAClC,YAAI,MAAM;AACN,gBAAM,gBAAe;AACzB,YAAI,MAAM;AACN,gBAAM,eAAc;MAC1B;ACtDO,UAAM,mCAAmC;AAazC,UAAM,iCAAiC;AAEvC,UAAM,eAAe,OAAO,MAAM,gCAAgC;ACCzE,UAAA,cAAA,WAAA;AAAA,iBAAAgB,eAAA;;AA8BE,QAAAA,aAAA,UAAA,QAAA,WAAA;AACE,iBAAO,CAAC,IAAI,MAAM;AAElB,YAAE,KAAK;AACP,cAAI,KAAK,cAAc,KAAK,CAAC,IAAI;AAAQ,gBAAI,eAAe;AAC5D,iBAAO;;AAOT,QAAAA,aAAA,UAAA,UAAA,WAAA;AACE,iBAAO,CAAC,IAAI,MAAM;AAClB,cAAI,EAAE,KAAK,cAAc,GAAG;AAC1B,gBAAI,CAAC,IAAI;AAAQ,kBAAI,eAAe;AACpC,mBAAO,KAAK,cAAc,SAAS,KAAK,CAAC,KAAK,QAAO,GAAI;AACvD,kBAAI,WAAW,KAAK,cAAc,MAAK;AACvC,kBAAI;AAAE,uBAAO,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC;uBAAY,GAAG;cAAA;;;AAGxD,iBAAO;;AAOT,QAAAA,aAAA,UAAA,UAAA,WAAA;AAWE,iBAAO,KAAK,aAAa,IAAI,iBAAiB;;AAQhD,QAAAA,aAAA,UAAA,SAAA,SAAO,UAAiD;AAAxD,cAAA,QAAA;AACE,cAAI,CAAC,KAAK;AAAM,mBAAO;AACvB,cAAM,QAAQ,KAAK,GAAG;AACtB,cAAM,cAAc,KAAK,GAAG,OAAO;AACnC,iBAAO,CAAC,KAAK,QAAQ;AACrB,cAAI,CAAC,YAAY,CAAC,OAAO;AACvB,oBAAQ,eAAe,YAAY,MAAI;cACrC,KAAK;AAEH,sBAAM,IAAI,WAAW,eAAe,WAAW;cACjD,KAAK;AAEH,sBAAM,IAAI,WAAW,WAAW,YAAY,SAAS,WAAW;cAClE;AAEE,sBAAM,IAAI,WAAW,WAAW,WAAW;;;AAGjD,cAAI,CAAC,KAAK;AAAQ,kBAAM,IAAI,WAAW,oBAAmB;AAC1D,iBAAO,KAAK,YAAY,WAAW,IAAI;AAEvC,qBAAW,KAAK,WAAW,aACxB,KAAK,GAAG,OACL,KAAK,GAAG,KAAK,YAAY,KAAK,YAAY,KAAK,MAAkC,EAAE,YAAY,KAAK,4BAA2B,CAAE,IACjI,MAAM,YAAY,KAAK,YAAY,KAAK,MAAM,EAAE,YAAY,KAAK,4BAA2B,CAAE;AAGpG,mBAAS,UAAU,KAAK,SAAA,IAAE;AACxB,2BAAe,EAAE;AACjB,kBAAK,QAAQ,SAAS,KAAK;WAC5B;AACD,mBAAS,UAAU,KAAK,SAAA,IAAE;AACxB,2BAAe,EAAE;AACjB,kBAAK,UAAU,MAAK,QAAQ,IAAI,WAAW,MAAM,SAAS,KAAK,CAAC;AAChE,kBAAK,SAAS;AACd,kBAAK,GAAG,OAAO,EAAE,KAAK,EAAE;WACzB;AACD,mBAAS,aAAa,KAAK,WAAA;AACzB,kBAAK,SAAS;AACd,kBAAK,SAAQ;AACb,gBAAI,kBAAkB,UAAU;AAC9B,2BAAa,eAAe,KAAK,SAAS,cAAc,CAAC;;WAE5D;AACD,iBAAO;;AAOT,QAAAA,aAAA,UAAA,WAAA,SACE,MACA,IACA,YAA6B;AAH/B,cAAA,QAAA;AAKE,cAAI,SAAS,eAAe,KAAK,SAAS;AACxC,mBAAO,UAAU,IAAI,WAAW,SAAS,yBAAyB,CAAC;AAErE,cAAI,CAAC,KAAK;AACR,mBAAO,UAAU,IAAI,WAAW,oBAAmB,CAAE;AAEvD,cAAI,KAAK,QAAO,GAAI;AAClB,mBAAO,IAAI,aAAa,SAAC,SAAS,QAAM;AACtC,oBAAK,cAAc,KAAK,CAAC,WAAA;AACvB,sBAAK,SAAS,MAAM,IAAI,UAAU,EAAE,KAAK,SAAS,MAAM;iBACvD,GAAG,CAAC;aACR;qBAEQ,YAAY;AACrB,mBAAO,SAAS,WAAA;AACd,kBAAIC,KAAI,IAAI,aAAa,SAAC,SAAS,QAAM;AACvC,sBAAK,MAAK;AACV,oBAAM,KAAK,GAAG,SAAS,QAAQ,KAAI;AACnC,oBAAI,MAAM,GAAG;AAAM,qBAAG,KAAK,SAAS,MAAM;eAC3C;AACD,cAAAA,GAAE,QAAQ,WAAA;AAAM,uBAAA,MAAK,QAAO;cAAE,CAAA;AAC9B,cAAAA,GAAE,OAAO;AACT,qBAAOA;aACR;iBAEI;AACL,gBAAI,IAAI,IAAI,aAAa,SAAC,SAAS,QAAM;AACvC,kBAAI,KAAK,GAAG,SAAS,QAAQ,KAAI;AACjC,kBAAI,MAAM,GAAG;AAAM,mBAAG,KAAK,SAAS,MAAM;aAC3C;AACD,cAAE,OAAO;AACT,mBAAO;;;AAQX,QAAAD,aAAA,UAAA,QAAA,WAAA;AACE,iBAAO,KAAK,SAAS,KAAK,OAAO,MAAK,IAAK;;AAS7C,QAAAA,aAAA,UAAA,UAAA,SAAQ,aAA6B;AAEnC,cAAI,OAAO,KAAK,MAAK;AAGrB,cAAM,UAAU,aAAa,QAAQ,WAAW;AAChD,cAAI,KAAK,aAAa;AAEpB,iBAAK,cAAc,KAAK,YAAY,KAAK,WAAA;AAAM,qBAAA;YAAO,CAAA;iBACjD;AAEL,iBAAK,cAAc;AACnB,iBAAK,gBAAgB,CAAA;AAErB,gBAAI,QAAQ,KAAK,SAAS,YAAY,KAAK,WAAW,CAAC,CAAC;AACxD,aAAC,SAAS,OAAI;AACZ,gBAAE,KAAK;AACP,qBAAO,KAAK,cAAc;AAAQ,gBAAC,KAAK,cAAc,MAAK,EAAE;AAC7D,kBAAI,KAAK;AAAa,sBAAM,IAAI,SAAS,EAAE,YAAY;eACxD;;AAEH,cAAI,qBAAqB,KAAK;AAC9B,iBAAO,IAAI,aAAa,SAAC,SAAS,QAAM;AACtC,oBAAQ,KACN,SAAA,KAAG;AAAI,qBAAA,KAAK,cAAc,KAAK,KAAK,QAAQ,KAAK,MAAM,GAAG,CAAC,CAAC;YAAC,GAC7D,SAAA,KAAG;AAAI,qBAAA,KAAK,cAAc,KAAK,KAAK,OAAO,KAAK,MAAM,GAAG,CAAC,CAAC;YAAC,CAAA,EAC5D,QAAQ,WAAA;AACR,kBAAI,KAAK,gBAAgB,oBAAoB;AAE3C,qBAAK,cAAc;;aAEtB;WACF;;AAOH,QAAAA,aAAA,UAAA,QAAA,WAAA;AACE,cAAI,KAAK,QAAQ;AACf,iBAAK,SAAS;AACd,gBAAI,KAAK;AAAU,mBAAK,SAAS,MAAK;AACtC,iBAAK,QAAQ,IAAI,WAAW,MAAK,CAAE;;;AAQvC,QAAAA,aAAA,UAAA,QAAA,SAAM,WAAiB;AACrB,cAAM,iBAAkB,KAAK,oBAAoB,KAAK,kBAAkB,CAAA;AACxE,cAAI,OAAO,gBAAgB,SAAS;AAClC,mBAAO,eAAe,SAAS;AACjC,cAAM,cAAc,KAAK,OAAO,SAAS;AACzC,cAAI,CAAC,aAAa;AAChB,kBAAM,IAAI,WAAW,SAAS,WAAW,YAAY,0BAA0B;;AAGjF,cAAM,wBAAwB,IAAI,KAAK,GAAG,MAAM,WAAW,aAAa,IAAI;AAC5E,gCAAsB,OAAO,KAAK,GAAG,KAAK,MAAM,SAAS;AACzD,yBAAe,SAAS,IAAI;AAC5B,iBAAO;;AAEX,eAAAA;MAAA,EAAC;eCnPe,6BAA6B,IAAS;AACpD,eAAO,qBACL,YAAY,WACZ,SAASA,aAEP,MACA,YACA,UACA,6BACA,QAAoB;AANtB,cAAA,QAAA;AAQE,eAAK,KAAK;AACV,eAAK,OAAO;AACZ,eAAK,aAAa;AAClB,eAAK,SAAS;AACd,eAAK,8BAA8B;AACnC,eAAK,WAAW;AAChB,eAAK,KAAK,OAAO,MAAM,YAAY,SAAS,OAAO;AACnD,eAAK,SAAS,UAAU;AACxB,eAAK,SAAS;AACd,eAAK,YAAY;AACjB,eAAK,gBAAgB,CAAA;AACrB,eAAK,WAAW;AAChB,eAAK,UAAU;AACf,eAAK,cAAc;AACnB,eAAK,gBAAgB;AACrB,eAAK,aAAa;AAClB,eAAK,cAAc,IAAIZ,aAAS,SAAC,SAAS,QAAM;AAC5C,kBAAK,WAAW;AAChB,kBAAK,UAAU;WAClB;AAED,eAAK,YAAY,KACb,WAAA;AACI,kBAAK,SAAS;AACd,kBAAK,GAAG,SAAS,KAAI;aAEzB,SAAA,GAAC;AACG,gBAAI,YAAY,MAAK;AACrB,kBAAK,SAAS;AACd,kBAAK,GAAG,MAAM,KAAK,CAAC;AACpB,kBAAK,SACD,MAAK,OAAO,QAAQ,CAAC,IACrB,aAAa,MAAK,YAAY,MAAK,SAAS,MAAK;AACrD,mBAAO,UAAU,CAAC;WACrB;SAEN;MACL;eCrEgB,gBACd,MACA,SACA,QACA,OACA,MACA,UACA,WAAkB;AAElB,eAAO;UACL;UACA;UACA;UACA;UACA;UACA;UACA,MAAM,UAAU,CAAC,YAAY,MAAM,OAAO,QAAQ,MAAM,OAAO,OAAO,OAAO,MAAM,gBAAgB,OAAO;;MAE9G;eAEgB,gBAAiB,SAA2B;AAC1D,eAAO,OAAO,YAAY,WACxB,UACA,UAAW,MAAM,CAAA,EAAG,KAAK,KAAK,SAAS,GAAG,IAAI,MAAO;MACzD;eCrBgB,kBACd,MACA,SACA,SAAoB;AAEpB,eAAO;UACL;UACA;UACA;UACA,aAAa;UACb,WAAW,cAAc,SAAS,SAAA,OAAK;AAAI,mBAAA,CAAC,MAAM,MAAM,KAAK;UAAC,CAAA;;MAElE;eCfgB,oBAAoB,YAAoB;AACtD,eAAO,WAAW,WAAW,IAAI,WAAW,CAAC,IAAI;MACnD;AAOO,UAAI,YAAY,SAAC,aAA+B;AACrD,YAAI;AACF,sBAAY,KAAK,CAAC,CAAA,CAAE,CAAC;AACrB,sBAAY,WAAA;AAAM,mBAAA,CAAC,CAAA,CAAE;UAAC;AACtB,iBAAO,CAAC,CAAA,CAAE;iBACH,GAAG;AACV,sBAAY,WAAA;AAAM,mBAAA;UAAS;AAC3B,iBAAO;;MAEX;eClBgB,gBAAiB,SAAiC;AAChE,YAAI,WAAW,MAAM;AACnB,iBAAO,WAAA;AAAM,mBAAA;UAAS;mBACb,OAAO,YAAY,UAAU;AACtC,iBAAO,0BAA0B,OAAO;eACnC;AACL,iBAAO,SAAA,KAAG;AAAI,mBAAA,aAAa,KAAK,OAAO;UAAC;;MAE5C;eAEgB,0BAA0B,SAAe;AACvD,YAAM,QAAQ,QAAQ,MAAM,GAAG;AAC/B,YAAI,MAAM,WAAW,GAAG;AACtB,iBAAO,SAAA,KAAG;AAAI,mBAAA,IAAI,OAAO;UAAC;eACrB;AACL,iBAAO,SAAA,KAAG;AAAI,mBAAA,aAAa,KAAK,OAAO;UAAC;;MAE5C;eCCgB,SAAY,WAA+C;AACzE,eAAO,CAAA,EAAG,MAAM,KAAK,SAAS;MAChC;AAOA,UAAI,cAAc;eAEF,gBAAgB,SAAiC;AAC/D,eAAO,WAAW,OAChB,QACA,OAAO,YAAY,WACjB,UACA,IAAA,OAAI,QAAQ,KAAK,GAAG,GAAC,GAAA;MAC3B;eAEgB,aACd,IACA,aACA,UAAwB;AAExB,iBAAS,cAAcc,KAAiB,OAAqB;AAC3D,cAAMC,UAAS,SAASD,IAAG,gBAAgB;AAC3C,iBAAO;YACL,QAAQ;cACN,MAAMA,IAAG;cACT,QAAQC,QAAO,IAAI,SAAA,OAAK;AAAI,uBAAA,MAAM,YAAY,KAAK;cAAC,CAAA,EAAE,IAAI,SAAA,OAAK;AACtD,oBAAA,UAA0B,MAAK,SAAtB,gBAAiB,MAAK;AACtC,oBAAM,WAAW,QAAQ,OAAO;AAChC,oBAAM,WAAW,WAAW;AAC5B,oBAAM,iBAAwD,CAAA;AAC9D,oBAAM,SAAS;kBACb,MAAM,MAAM;kBACZ,YAAY;oBACV,MAAM;oBACN,cAAc;oBACd;oBACA;oBACA;oBACA;oBACA,QAAQ;oBACR,YAAY,gBAAgB,OAAO;;kBAErC,SAAS,SAAS,MAAM,UAAU,EAAE,IAAI,SAAA,WAAS;AAAI,2BAAA,MAAM,MAAM,SAAS;kBAAC,CAAA,EACxE,IAAI,SAAA,OAAK;AACD,wBAAA,OAAqC,MAAK,MAApC,SAA+B,MAAK,QAA5B,aAAuB,MAAK,YAAhBC,WAAW,MAAK;AACjD,wBAAMC,YAAW,QAAQD,QAAO;AAChC,wBAAME,UAAsB;sBAC1B;sBACA,UAAQD;sBACR,SAAOD;sBACP;sBACA;sBACA,YAAY,gBAAgBA,QAAO;;AAErC,mCAAe,gBAAgBA,QAAO,CAAC,IAAIE;AAC3C,2BAAOA;mBACR;kBACH,mBAAmB,SAACF,UAAiC;AAAK,2BAAA,eAAe,gBAAgBA,QAAO,CAAC;kBAAC;;AAEpG,+BAAe,KAAK,IAAI,OAAO;AAC/B,oBAAI,WAAW,MAAM;AACnB,iCAAe,gBAAgB,OAAO,CAAC,IAAI,OAAO;;AAEpD,uBAAO;eACR;;YAEH,WAAWD,QAAO,SAAS,KAAM,YAAY,MAAM,YAAYA,QAAO,CAAC,CAAC,KACtE,EAAE,OAAO,cAAc,eAAe,SAAS,KAAK,UAAU,SAAS,KACvE,CAAC,oBAAoB,KAAK,UAAU,SAAS,KAC7C,CAAA,EAAG,OAAO,UAAU,UAAU,MAAM,eAAe,CAAC,EAAE,CAAC,IAAI;;;AAIjE,iBAAS,gBAAiB,OAAqB;AAC7C,cAAI,MAAM,SAAI;AAA0B,mBAAO;AAC/C,cAAI,MAAM,SAAI;AAA4B,kBAAM,IAAI,MAAM,0CAA0C;AAC7F,cAAA,QAAsC,MAAK,OAApC,QAA+B,MAAK,OAA7B,YAAwB,MAAK,WAAlB,YAAa,MAAK;AAClD,cAAM,WAAW,UAAU,SACzB,UAAU,SACR,OACA,YAAY,WAAW,OAAO,CAAC,CAAC,SAAS,IAC3C,UAAU,SACR,YAAY,WAAW,OAAO,CAAC,CAAC,SAAS,IACzC,YAAY,MAAM,OAAO,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,SAAS;AAC5D,iBAAO;;AAGT,iBAAS,kBAAkB,aAA8B;AACvD,cAAM,YAAY,YAAY;AAE9B,mBAAS,OAAQzB,KAAkC;gBAAjC,QAAKA,IAAA,OAAEC,QAAID,IAAA,MAAEW,QAAIX,IAAA,MAAE,SAAMA,IAAA,QAAE,QAAKA,IAAA;AAChD,mBAAO,IAAI,QAA8B,SAAC,SAAS,QAAM;AACvD,wBAAU,KAAK,OAAO;AACtB,kBAAM,QAAS,MAAyB,YAAY,SAAS;AAC7D,kBAAM,WAAW,MAAM,WAAW;AAClC,kBAAM,aAAaC,UAAS,SAASA,UAAS;AAC9C,kBAAI,CAAC,cAAcA,UAAS,YAAYA,UAAS;AAC/C,sBAAM,IAAI,MAAO,6BAA6BA,KAAI;AAE7C,kBAAA,UAAUU,SAAQ,UAAU,EAAC,QAAQ,EAAC,GAAC;AAC9C,kBAAIA,SAAQ,UAAUA,MAAK,WAAW,OAAO,QAAQ;AACnD,sBAAM,IAAI,MAAM,+DAA+D;;AAEjF,kBAAI,WAAW;AAEb,uBAAO,QAAQ,EAAC,aAAa,GAAG,UAAU,CAAA,GAAI,SAAS,CAAA,GAAI,YAAY,OAAS,CAAC;AAEnF,kBAAI;AACJ,kBAAM,OAAqB,CAAA;AAE3B,kBAAM,WAA+C,CAAA;AACrD,kBAAI,cAAc;AAClB,kBAAM,eACJ,SAAA,OAAK;AACH,kBAAE;AACF,+BAAe,KAAK;;AAGxB,kBAAIV,UAAS,eAAe;AAE1B,oBAAI,MAAM,SAAI;AACZ,yBAAO,QAAQ,EAAC,aAAa,UAAU,SAAS,CAAA,GAAI,YAAY,OAAS,CAAC;AAC5E,oBAAI,MAAM,SAAI;AACZ,uBAAK,KAAK,MAAM,MAAM,MAAK,CAAE;;AAE7B,uBAAK,KAAK,MAAM,MAAM,OAAO,gBAAgB,KAAK,CAAC,CAAC;qBACjD;AAEC,oBAAAD,MAAiB,aACrB,WACE,CAAC,QAAQW,KAAI,IACb,CAAC,QAAQ,IAAI,IACf,CAACA,OAAM,IAAI,GAJN,QAAKX,IAAA,CAAA,GAAE,QAAKA,IAAA,CAAA;AAMnB,oBAAI,YAAY;AACd,2BAAS,IAAE,GAAG,IAAE,QAAQ,EAAE,GAAG;AAC3B,yBAAK,KAAK,MAAO,SAAS,MAAM,CAAC,MAAM,SACrC,MAAMC,KAAI,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,IAC9B,MAAMA,KAAI,EAAE,MAAM,CAAC,CAAC,CAAgB;AACtC,wBAAI,UAAU;;uBAEX;AACL,2BAAS,IAAE,GAAG,IAAE,QAAQ,EAAE,GAAG;AAC3B,yBAAK,KAAK,MAAM,MAAMA,KAAI,EAAE,MAAM,CAAC,CAAC,CAAe;AACnD,wBAAI,UAAU;;;;AAIpB,kBAAM,OAAO,SAAA,OAAK;AAChB,oBAAM,aAAa,MAAM,OAAO;AAChC,qBAAK,QAAQ,SAAC4B,MAAKjB,IAAC;AAAK,yBAAAiB,KAAI,SAAS,SAAS,SAASjB,EAAC,IAAIiB,KAAI;gBAAM,CAAA;AACvE,wBAAQ;kBACN;kBACA;kBACA,SAAS5B,UAAS,WAAWU,QAAO,KAAK,IAAI,SAAAkB,MAAG;AAAI,2BAAAA,KAAI;kBAAM,CAAA;kBAC9D;iBACD;;AAGH,kBAAI,UAAU,SAAA,OAAK;AACjB,6BAAa,KAAK;AAClB,qBAAK,KAAK;;AAGZ,kBAAI,YAAY;aACjB;;AAGH,mBAASC,YAAY9B,KAAgE;gBAA/D,QAAKA,IAAA,OAAE,SAAMA,IAAA,QAAE+B,SAAK/B,IAAA,OAAE,UAAOA,IAAA,SAAE,SAAMA,IAAA;AAEzD,mBAAO,IAAI,QAAQ,SAAC,SAAS,QAAM;AACjC,wBAAU,KAAK,OAAO;AACf,kBAAA,QAAgB+B,OAAK,OAAd,QAASA,OAAK;AAC5B,kBAAM,QAAS,MAAyB,YAAY,SAAS;AAE7D,kBAAM,SAAS,MAAM,eACnB,QACA,MAAM,MAAM,MAAM,IAAI;AAExB,kBAAM,YAAY,UAChB,SACE,eACA,SACF,SACE,eACA;AAEJ,kBAAM,MAAM,UAAU,EAAE,mBAAmB,UACzC,OAAO,WAAW,gBAAgB,KAAK,GAAG,SAAS,IACnD,OAAO,cAAc,gBAAgB,KAAK,GAAG,SAAS;AAGxD,kBAAI,UAAU,mBAAmB,MAAM;AACvC,kBAAI,YAAY,KAAK,SAAA,IAAE;AAErB,oBAAM,SAAS,IAAI;AACnB,oBAAI,CAAC,QAAQ;AACX,0BAAQ,IAAI;AACZ;;AAED,uBAAe,QAAQ,EAAE;AACzB,uBAAe,OAAO;AACvB,oBAAM,kBAAkB,OAAO,SAAS,KAAK,MAAM;AACnD,oBAAI,4BAA4B,OAAO;AACvC,oBAAI;AAA2B,8CAA4B,0BAA0B,KAAK,MAAM;AAChG,oBAAM,iBAAiB,OAAO,QAAQ,KAAK,MAAM;AACjD,oBAAM,4BAA4B,WAAA;AAAK,wBAAM,IAAI,MAAM,oBAAoB;gBAAE;AAC7E,oBAAM,yBAAyB,WAAA;AAAK,wBAAM,IAAI,MAAM,oBAAoB;gBAAE;AACzE,uBAAe,QAAQ;AACxB,uBAAO,OAAO,OAAO,WAAW,OAAO,qBAAqB,OAAO,UAAU;AAC7E,uBAAO,OAAO,KAAK,MAAM;AACzB,uBAAO,OAAO,WAAA;AAAA,sBAAA,QAAA;AAGZ,sBAAI,SAAS;AACb,yBAAO,KAAK,MAAM,WAAA;AAAM,2BAAA,WAAW,MAAK,SAAQ,IAAK,MAAK,KAAI;kBAAE,CAAA,EAAE,KAAK,WAAA;AAAM,2BAAA;kBAAI,CAAA;;AAEnF,uBAAO,QAAQ,SAAC,UAAQ;AAEtB,sBAAM,mBAAmB,IAAI,QAAc,SAAC,kBAAkB,iBAAe;AAC3E,uCAAmB,KAAK,gBAAgB;AACxC,wBAAI,UAAU,mBAAmB,eAAe;AAChD,2BAAO,OAAO;AACd,2BAAO,OAAO,SAAA,OAAK;AAEjB,6BAAO,OAAO,OAAO,WAAW,OAAO,qBAAqB,OAAO,UAAU;AAC7E,uCAAiB,KAAK;;mBAEzB;AAED,sBAAM,kBAAkB,WAAA;AACtB,wBAAI,IAAI,QAAQ;AAEd,0BAAI;AACF,iCAAQ;+BACD,KAAK;AACZ,+BAAO,KAAK,GAAG;;2BAEZ;AACJ,6BAAe,OAAO;AACvB,6BAAO,QAAQ,WAAA;AAAK,8BAAM,IAAI,MAAM,0BAA0B;sBAAE;AAChE,6BAAO,KAAI;;;AAGf,sBAAI,YAAY,KAAK,SAAAC,KAAE;AAIrB,wBAAI,YAAY;AAChB,oCAAe;mBAChB;AACD,yBAAO,WAAW;AAClB,yBAAO,qBAAqB;AAC5B,yBAAO,UAAU;AACjB,kCAAe;AACf,yBAAO;;AAET,wBAAQ,MAAM;iBACb,MAAM;aACV;;AAGH,mBAAS,MAAOC,YAAkB;AAChC,mBAAO,SAAC,SAA2B;AACjC,qBAAO,IAAI,QAA6B,SAAC,SAAS,QAAM;AACtD,0BAAU,KAAK,OAAO;AACf,oBAAA,QAA+B,QAAO,OAA/B,SAAwB,QAAO,QAAvB,QAAgB,QAAO,OAAhBF,SAAS,QAAO;AAC7C,oBAAM,kBAAkB,UAAU,WAAW,SAAY;AAClD,oBAAA,QAAgBA,OAAK,OAAd,QAASA,OAAK;AAC5B,oBAAM,QAAS,MAAyB,YAAY,SAAS;AAC7D,oBAAM,SAAS,MAAM,eAAe,QAAQ,MAAM,MAAM,MAAM,IAAI;AAClE,oBAAM,cAAc,gBAAgB,KAAK;AACzC,oBAAI,UAAU;AAAG,yBAAO,QAAQ,EAAC,QAAQ,CAAA,EAAE,CAAC;AAC5C,oBAAIE,YAAW;AACb,sBAAM,MAAM,SACP,OAAe,OAAO,aAAa,eAAe,IAClD,OAAe,WAAW,aAAa,eAAe;AAC3D,sBAAI,YAAY,SAAA,OAAK;AAAI,2BAAA,QAAQ,EAAC,QAAQ,MAAM,OAAO,OAAM,CAAC;kBAAC;AAC/D,sBAAI,UAAU,mBAAmB,MAAM;uBAClC;AACL,sBAAI,UAAQ;AACZ,sBAAM,QAAM,UAAU,EAAE,mBAAmB,UACzC,OAAO,WAAW,WAAW,IAC7B,OAAO,cAAc,WAAW;AAClC,sBAAM,WAAS,CAAA;AACf,wBAAI,YAAY,SAAA,OAAK;AACnB,wBAAM,SAAS,MAAI;AACnB,wBAAI,CAAC;AAAQ,6BAAO,QAAQ,EAAC,QAAM,SAAA,CAAC;AACpC,6BAAO,KAAK,SAAS,OAAO,QAAQ,OAAO,UAAU;AACrD,wBAAI,EAAE,YAAU;AAAO,6BAAO,QAAQ,EAAC,QAAM,SAAA,CAAC;AAC9C,2BAAO,SAAQ;;AAEjB,wBAAI,UAAU,mBAAmB,MAAM;;eAE1C;;;AAIL,iBAAO;YACL,MAAM;YACN,QAAQ;YAER;YAEA,SAAO,SAAEjC,KAAa;kBAAZ,QAAKA,IAAA,OAAEW,QAAIX,IAAA;AACnB,qBAAO,IAAI,QAAe,SAAC,SAAS,QAAM;AACxC,0BAAU,KAAK,OAAO;AACtB,oBAAM,QAAS,MAAyB,YAAY,SAAS;AAC7D,oBAAM,SAASW,MAAK;AACpB,oBAAM,SAAS,IAAI,MAAM,MAAM;AAC/B,oBAAI,WAAW;AACf,oBAAI,gBAAgB;AAEpB,oBAAI;AAEJ,oBAAM,iBAAiB,SAAA,OAAK;AAC1B,sBAAMkB,OAAM,MAAM;AAClB,uBAAK,OAAOA,KAAI,IAAI,IAAIA,KAAI,WAAW;AAAM;AAC7C,sBAAI,EAAE,kBAAkB;AAAU,4BAAQ,MAAM;;AAElD,oBAAM,eAAe,mBAAmB,MAAM;AAE9C,yBAAS,IAAE,GAAG,IAAE,QAAQ,EAAE,GAAG;AAC3B,sBAAM,MAAMlB,MAAK,CAAC;AAClB,sBAAI,OAAO,MAAM;AACf,0BAAM,MAAM,IAAIA,MAAK,CAAC,CAAC;AACvB,wBAAI,OAAO;AACX,wBAAI,YAAY;AAChB,wBAAI,UAAU;AACd,sBAAE;;;AAGN,oBAAI,aAAa;AAAG,0BAAQ,MAAM;eACnC;;YAGH,KAAG,SAAEX,KAAY;kBAAX,QAAKA,IAAA,OAAE,MAAGA,IAAA;AACd,qBAAO,IAAI,QAAa,SAAC,SAAS,QAAM;AACtC,0BAAU,KAAM,OAAO;AACvB,oBAAM,QAAS,MAAyB,YAAY,SAAS;AAC7D,oBAAM,MAAM,MAAM,IAAI,GAAG;AACzB,oBAAI,YAAY,SAAA,OAAK;AAAI,yBAAA,QAAS,MAAM,OAAe,MAAM;gBAAC;AAC9D,oBAAI,UAAU,mBAAmB,MAAM;eACxC;;YAGH,OAAO,MAAM,SAAS;YAEtB,YAAU8B;YAEV,OAAK,SAAE9B,KAAc;kBAAb+B,SAAK/B,IAAA,OAAE,QAAKA,IAAA;AACX,kBAAA,QAAgB+B,OAAK,OAAd,QAASA,OAAK;AAC5B,qBAAO,IAAI,QAAgB,SAAC,SAAS,QAAM;AACzC,oBAAM,QAAS,MAAyB,YAAY,SAAS;AAC7D,oBAAM,SAAS,MAAM,eAAe,QAAQ,MAAM,MAAM,MAAM,IAAI;AAClE,oBAAM,cAAc,gBAAgB,KAAK;AACzC,oBAAM,MAAM,cAAc,OAAO,MAAM,WAAW,IAAI,OAAO,MAAK;AAClE,oBAAI,YAAY,KAAK,SAAA,IAAE;AAAI,yBAAA,QAAS,GAAG,OAAsB,MAAM;gBAAC,CAAA;AACpE,oBAAI,UAAU,mBAAmB,MAAM;eACxC;;;;AAKD,YAAA/B,MAAsB,cAAc,IAAI,QAAQ,GAA/C,SAAMA,IAAA,QAAE,YAASA,IAAA;AACxB,YAAM,SAAS,OAAO,OAAO,IAAI,SAAA,aAAW;AAAI,iBAAA,kBAAkB,WAAW;QAAC,CAAA;AAC9E,YAAM,WAA0C,CAAA;AAChD,eAAO,QAAQ,SAAA,OAAK;AAAI,iBAAA,SAAS,MAAM,IAAI,IAAI;QAAK,CAAA;AACpD,eAAO;UACL,OAAO;UAEP,aAAa,GAAG,YAAY,KAAK,EAAE;UAEnC,OAAK,SAAC,MAAY;AAChB,gBAAM,SAAS,SAAS,IAAI;AAC5B,gBAAI,CAAC;AAAQ,oBAAM,IAAI,MAAM,UAAA,OAAU,MAAI,aAAA,CAAa;AACxD,mBAAO,SAAS,IAAI;;UAGtB,SAAS;UAET,SAAS,UAAU,WAAW;UAE9B;;MAGJ;ACnZA,eAAS,sBACP,WACA,aAA0C;AAC1C,eAAO,YAAY,OAAO,SAAC,MAAMA,KAAQ;cAAP,SAAMA,IAAA;AAAM,iBAAA,SAAA,SAAA,CAAA,GAAK,IAAI,GAAK,OAAO,IAAI,CAAC;WAAI,SAAS;MACvF;AAEA,eAAS,uBACP,aACA,OACAA,KACA,UAAwB;YADvB,cAAWA,IAAA;AAAA,QAAAA,IAAA;AAGZ,YAAM,SAAS,sBACb,aAAa,OAAO,aAAa,QAAQ,GACzC,YAAY,MAAM;AAKpB,eAAO;UACL;;MAEJ;eAEgB,yBAAyB,IAAW,UAAwB;AAC1E,YAAM,QAAQ,SAAS;AACvB,YAAM,SAAS,uBAAuB,GAAG,cAAc,OAAO,GAAG,OAAO,QAAQ;AAChF,WAAG,OAAO,OAAO;AACjB,WAAG,OAAO,QAAQ,SAAA,OAAK;AACrB,cAAM,YAAY,MAAM;AACxB,cAAI,GAAG,KAAK,OAAO,OAAO,KAAK,SAAA,KAAG;AAAI,mBAAA,IAAI,SAAS;UAAS,CAAA,GAAG;AAC7D,kBAAM,OAAO,GAAG,KAAK,MAAM,SAAS;AACpC,gBAAI,GAAG,SAAS,aAAa,GAAG,OAAO;AACnC,iBAAG,SAAS,EAAE,OAAO,MAAM;;;SAGlC;MACH;eC5BgB,cAAc,IAAW,MAAgB,YAAsB,UAAkB;AAC/F,mBAAW,QAAQ,SAAA,WAAS;AAC1B,cAAM,SAAS,SAAS,SAAS;AACjC,eAAK,QAAQ,SAAA,KAAG;AACd,gBAAM,WAAW,sBAAsB,KAAK,SAAS;AACrD,gBAAI,CAAC,YAAa,WAAW,YAAY,SAAS,UAAU,QAAY;AAEtE,kBAAI,QAAQ,GAAG,YAAY,aAAa,eAAe,GAAG,aAAa;AAGrE,wBAAQ,KAAK,WAAW;kBACtB,KAAG,WAAA;AAAsB,2BAAO,KAAK,MAAM,SAAS;kBAAE;kBACtD,KAAG,SAAC,OAAU;AAGZ,mCAAe,MAAM,WAAW,EAAC,OAAO,UAAU,MAAM,cAAc,MAAM,YAAY,KAAI,CAAC;;iBAEhG;qBACI;AAEL,oBAAI,SAAS,IAAI,IAAI,GAAG,MAAM,WAAW,MAAM;;;WAGpD;SACF;MACH;eAEgB,gBAAgB,IAAW,MAAc;AACvD,aAAK,QAAQ,SAAA,KAAG;AACd,mBAAS,OAAO,KAAK;AACnB,gBAAI,IAAI,GAAG,aAAa,GAAG;AAAO,qBAAO,IAAI,GAAG;;SAEnD;MACH;eAEgB,kBAAkB,GAAY,GAAU;AACtD,eAAO,EAAE,KAAK,UAAU,EAAE,KAAK;MACjC;eAEgB,aAAa,IAAW,YAAoB,iBAAiC,QAAM;AACjG,YAAM,eAAe,GAAG;AACxB,YAAI,gBAAgB,iBAAiB,SAAS,OAAO,KAAK,CAAC,aAAa,OAAO;AAC7E,uBAAa,QAAQ,kBAAkB,SAAS,iBAAiB,EAAE,EAAE,CAAC,GAAG,CAAA,CAAE;AAC3E,aAAG,YAAY,KAAK,OAAO;;AAE7B,YAAM,QAAQ,GAAG,mBAAmB,aAAa,GAAG,aAAa,YAAY;AAC7E,cAAM,OAAO,eAAe;AAC5B,cAAM,YAAY,MAAM,MAAM;AAC9B,YAAM,oBAAoB,MAAM,QAAQ,KAAK,KAAK;AAClD,YAAM,YAAY,IAAI,aAAa;AACnC,iBAAS,WAAA;AACP,cAAI,QAAQ;AACZ,cAAI,YAAY;AAChB,cAAI,eAAe,GAAG;AAEpB,iBAAK,YAAY,EAAE,QAAQ,SAAA,WAAS;AAClC,0BAAY,iBAAiB,WAAW,aAAa,SAAS,EAAE,SAAS,aAAa,SAAS,EAAE,OAAO;aACzG;AACD,qCAAyB,IAAI,eAAe;AAC5CU,yBAAQ,OAAO,WAAA;AAAM,qBAAA,GAAG,GAAG,SAAS,KAAK,KAAK;YAAC,CAAA,EAAE,MAAM,iBAAiB;iBACnE;AACL,qCAAyB,IAAI,eAAe;AAC5C,mBAAO,mBAAmB,IAAI,OAAO,UAAU,EAC5C,KAAK,SAAAwB,aAAU;AAAI,qBAAA,uBAAuB,IAAIA,aAAY,OAAO,eAAe;YAAC,CAAA,EACjF,MAAM,iBAAiB;;SAE7B;MACH;eAIgB,oBAAoB,IAAW,iBAA+B;AAC5E,4BAAoB,GAAG,WAAW,eAAe;AACjD,YAAI,gBAAgB,GAAG,UAAU,OAAO,KAAK,CAAC,gBAAgB,iBAAiB,SAAS,OAAO,GAAG;AAKhG,0BAAgB,GAAG,kBAAkB,OAAO,EAAE,IAAI,KAAK,KAAM,gBAAgB,GAAG,UAAU,KAAM,CAAC,GAAG,SAAS;;AAE/G,YAAM,eAAe,kBAAkB,IAAI,GAAG,OAAO,eAAe;AACpE,mCAA2B,IAAI,GAAG,WAAW,eAAe;AAC5D,YAAM,OAAO,cAAc,cAAc,GAAG,SAAS;+BAC1CC,cAAW;AACpB,cAAIA,aAAY,OAAO,UAAUA,aAAY,UAAU;AACrD,oBAAQ,KAAK,oCAAA,OAAoCA,aAAY,MAAI,8DAAA,CAA8D;;;AAGjI,cAAM,QAAQ,gBAAgB,YAAYA,aAAY,IAAI;AAC1D,UAAAA,aAAY,IAAI,QAAQ,SAAA,KAAG;AACzB,gBAAI;AAAO,sBAAQ,MAAM,+CAAA,OAA+CA,aAAY,MAAI,GAAA,EAAA,OAAI,IAAI,GAAG,CAAE;AACrG,qBAAS,OAAO,GAAG;WACpB;;AATH,iBAA0B,KAAA,GAAAnC,MAAA,KAAK,QAAL,KAAAA,IAAA,QAAA,MAAW;AAAhC,cAAM,cAAWA,IAAA,EAAA;gCAAX,WAAW;;;;MAWxB;AAEA,eAAS,mBAAmB,IAAW,OAAoB,YAAkB;AAM3E,YAAI,MAAM,WAAW,SAAS,OAAO,GAAG;AACtC,iBAAO,MAAM,MAAM,OAAO,EAAE,IAAI,SAAS,EAAE,KAAK,SAAA,aAAW;AACzD,mBAAO,eAAe,OAAO,cAAc;WAC5C;eACI;AACL,iBAAOU,aAAQ,QAAQ,UAAU;;MAErC;AAEA,eAAS,uBACP,IACA,YACA,OACA,iBAA+B;AAI/B,YAAM,QAA4B,CAAA;AAClC,YAAM,WAAW,GAAG;AACpB,YAAI,eAAe,GAAG,YAAY,kBAAkB,IAAI,GAAG,OAAO,eAAe;AAGjF,YAAM,YAAY,SAAS,OAAO,SAAA,GAAC;AAAI,iBAAA,EAAE,KAAK,WAAW;QAAU,CAAA;AACnE,YAAI,UAAU,WAAW,GAAG;AAU1B,iBAAOA,aAAQ,QAAO;;AAGxB,kBAAU,QAAQ,SAAA0B,UAAO;AACvB,gBAAM,KAAK,WAAA;AACT,gBAAM,YAAY;AAClB,gBAAM,YAAYA,SAAQ,KAAK;AAC/B,uCAA2B,IAAI,WAAW,eAAe;AACzD,uCAA2B,IAAI,WAAW,eAAe;AAEzD,2BAAe,GAAG,YAAY;AAE9B,gBAAM,OAAO,cAAc,WAAW,SAAS;AAE/C,iBAAK,IAAI,QAAQ,SAAA,OAAK;AACpB,0BAAY,iBAAiB,MAAM,CAAC,GAAG,MAAM,CAAC,EAAE,SAAS,MAAM,CAAC,EAAE,OAAO;aAC1E;AAED,iBAAK,OAAO,QAAQ,SAAA,QAAM;AACxB,kBAAI,OAAO,UAAU;AACnB,sBAAM,IAAI,WAAW,QAAQ,0CAA0C;qBAClE;AACL,oBAAM,UAAQ,gBAAgB,YAAY,OAAO,IAAI;AAErD,uBAAO,IAAI,QAAQ,SAAA,KAAG;AAAI,yBAAA,SAAS,SAAO,GAAG;gBAAC,CAAA;AAE9C,uBAAO,OAAO,QAAQ,SAAA,KAAG;AACvB,0BAAM,YAAY,IAAI,IAAI;AAC1B,2BAAS,SAAO,GAAG;iBACpB;AAED,uBAAO,IAAI,QAAQ,SAAA,SAAO;AAAI,yBAAA,QAAM,YAAY,OAAO;gBAAC,CAAA;;aAE3D;AAED,gBAAM,iBAAiBA,SAAQ,KAAK;AAEpC,gBAAI,kBAAkBA,SAAQ,KAAK,UAAU,YAAY;AAEvD,uCAAyB,IAAI,eAAe;AAC5C,oBAAM,kBAAkB,CAAA;AAKxB,kBAAI,kBAAgB,aAAa,SAAS;AAC1C,mBAAK,IAAI,QAAQ,SAAA,OAAK;AACpB,gCAAc,KAAK,IAAI,UAAU,KAAK;eACvC;AAMD,8BAAgB,IAAI,CAAC,GAAG,YAAY,SAAS,CAAC;AAC9C,4BAAc,IAAI,CAAC,GAAG,YAAY,SAAS,GAAG,KAAK,eAAa,GAAG,eAAa;AAChF,oBAAM,SAAS;AAGf,kBAAM,0BAAwB,gBAAgB,cAAc;AAC5D,kBAAI,yBAAuB;AACzB,wCAAuB;;AAGzB,kBAAI;AACJ,kBAAM,kBAAkB1B,aAAQ,OAAO,WAAA;AAErC,gCAAc,eAAe,KAAK;AAClC,oBAAI,eAAa;AACf,sBAAI,yBAAuB;AAEzB,wBAAI,cAAc,wBAAwB,KAAK,MAAM,IAAI;AACzD,kCAAY,KAAK,aAAa,WAAW;;;eAG9C;AACD,qBAAQ,iBAAe,OAAO,cAAY,SAAS,aACjDA,aAAQ,QAAQ,aAAW,IAAI,gBAAgB,KAAK,WAAA;AAAI,uBAAA;cAAW,CAAA;;WAExE;AACD,gBAAM,KAAK,SAAA,UAAQ;AACjB,gBAAM,YAAY0B,SAAQ,KAAK;AAE/B,gCAAoB,WAAW,QAAQ;AAEvC,4BAAgB,IAAI,CAAC,GAAG,YAAY,SAAS,CAAC;AAC9C,0BAAc,IAAI,CAAC,GAAG,YAAY,SAAS,GAAG,GAAG,aAAa,GAAG,SAAS;AAC1E,kBAAM,SAAS,GAAG;WACnB;AAED,gBAAM,KAAK,SAAA,UAAQ;AACjB,gBAAI,GAAG,MAAM,iBAAiB,SAAS,OAAO,GAAG;AAC/C,kBAAI,KAAK,KAAK,GAAG,MAAM,UAAU,EAAE,MAAMA,SAAQ,KAAK,SAAS;AAE7D,mBAAG,MAAM,kBAAkB,OAAO;AAClC,uBAAO,GAAG,UAAU;AACpB,mBAAG,cAAc,GAAG,YAAY,OAAO,SAAA,MAAI;AAAI,yBAAA,SAAS;gBAAO,CAAA;qBAC1D;AAGL,yBAAS,YAAY,OAAO,EAAE,IAAIA,SAAQ,KAAK,SAAS,SAAS;;;WAGtE;SACF;AAGD,iBAAS,WAAQ;AACf,iBAAO,MAAM,SAAS1B,aAAQ,QAAQ,MAAM,MAAK,EAAG,MAAM,QAAQ,CAAC,EAAE,KAAK,QAAQ,IAChFA,aAAQ,QAAO;;AAGnB,eAAO,SAAQ,EAAG,KAAK,WAAA;AACrB,8BAAoB,cAAc,eAAe;SAClD;MACH;eAgBgB,cAAc,WAAqB,WAAmB;AACpE,YAAM,OAAmB;UACvB,KAAK,CAAA;UACL,KAAK,CAAA;UACL,QAAQ,CAAA;;AAEV,YAAI;AACJ,aAAK,SAAS,WAAW;AACvB,cAAI,CAAC,UAAU,KAAK;AAAG,iBAAK,IAAI,KAAK,KAAK;;AAE5C,aAAK,SAAS,WAAW;AACvB,cAAM,SAAS,UAAU,KAAK,GAC5B,SAAS,UAAU,KAAK;AAC1B,cAAI,CAAC,QAAQ;AACX,iBAAK,IAAI,KAAK,CAAC,OAAO,MAAM,CAAC;iBACxB;AACL,gBAAM,SAAS;cACb,MAAM;cACN,KAAK;cACL,UAAU;cACV,KAAK,CAAA;cACL,KAAK,CAAA;cACL,QAAQ,CAAA;;AAEV,gBAIM,MAAI,OAAO,QAAQ,WAAS,QAE5B,MAAI,OAAO,QAAQ,WAAS,OAG7B,OAAO,QAAQ,SAAS,OAAO,QAAQ,MAC5C;AAEE,qBAAO,WAAW;AAClB,mBAAK,OAAO,KAAK,MAAM;mBAClB;AAEL,kBAAM,aAAa,OAAO;AAC1B,kBAAM,aAAa,OAAO;AAC1B,kBAAI,UAAO;AACX,mBAAK,WAAW,YAAY;AAC1B,oBAAI,CAAC,WAAW,OAAO;AAAG,yBAAO,IAAI,KAAK,OAAO;;AAEnD,mBAAK,WAAW,YAAY;AAC1B,oBAAM,SAAS,WAAW,OAAO,GAC/B,SAAS,WAAW,OAAO;AAC7B,oBAAI,CAAC;AAAQ,yBAAO,IAAI,KAAK,MAAM;yBAC1B,OAAO,QAAQ,OAAO;AAAK,yBAAO,OAAO,KAAK,MAAM;;AAE/D,kBAAI,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,SAAS,KAAK,OAAO,OAAO,SAAS,GAAG;AAC9E,qBAAK,OAAO,KAAK,MAAM;;;;;AAK/B,eAAO;MACT;eAEgB,YACd,UACA,WACA,SACA,SAAoB;AAEpB,YAAM,QAAQ,SAAS,GAAG,kBACxB,WACA,QAAQ,UACN,EAAE,SAAS,QAAQ,SAAS,eAAe,QAAQ,KAAI,IACvD,EAAE,eAAe,QAAQ,KAAI,CAAE;AAEnC,gBAAQ,QAAQ,SAAA,KAAG;AAAI,iBAAA,SAAS,OAAO,GAAG;QAAC,CAAA;AAC3C,eAAO;MACT;eAEgB,oBAAoB,WAAqB,UAAwB;AAC/E,aAAK,SAAS,EAAE,QAAQ,SAAA,WAAS;AAC/B,cAAI,CAAC,SAAS,GAAG,iBAAiB,SAAS,SAAS,GAAG;AACrD,gBAAI;AAAO,sBAAQ,MAAM,iCAAiC,SAAS;AACnE,wBAAY,UAAU,WAAW,UAAU,SAAS,EAAE,SAAS,UAAU,SAAS,EAAE,OAAO;;SAE9F;MACH;eAEgB,oBAAoB,WAAqB,UAAwB;AAC/E,SAAA,EAAG,MAAM,KAAK,SAAS,GAAG,gBAAgB,EAAE,QAAQ,SAAA,WAAS;AAC3D,iBAAA,UAAU,SAAS,KAAK,QAAQ,SAAS,GAAG,kBAAkB,SAAS;SAAC;MAC5E;eAEgB,SAAS,OAAuB,KAAc;AAC5D,cAAM,YAAY,IAAI,MAAM,IAAI,SAAS,EAAE,QAAQ,IAAI,QAAQ,YAAY,IAAI,MAAK,CAAE;MACxF;AAEA,eAAS,kBACP,IACA,OACA,UAAwB;AAExB,YAAM,eAAe,CAAA;AACrB,YAAM,eAAe,MAAM,MAAM,kBAAkB,CAAC;AACpD,qBAAa,QAAQ,SAAA,WAAS;AAC5B,cAAM,QAAQ,SAAS,YAAY,SAAS;AAC5C,cAAI,UAAU,MAAM;AACpB,cAAM,UAAU,gBACd,gBAAgB,OAAO,GACvB,WAAW,IACX,MACA,OACA,CAAC,CAAC,MAAM,eACR,WAAW,OAAO,YAAY,UAC9B,IAAI;AAEN,cAAM,UAAuB,CAAA;AAC7B,mBAAS,IAAI,GAAG,IAAI,MAAM,WAAW,QAAQ,EAAE,GAAG;AAChD,gBAAM,WAAW,MAAM,MAAM,MAAM,WAAW,CAAC,CAAC;AAChD,sBAAU,SAAS;AACnB,gBAAI,QAAQ,gBACV,SAAS,MACT,SACA,CAAC,CAAC,SAAS,QACX,CAAC,CAAC,SAAS,YACX,OACA,WAAW,OAAO,YAAY,UAC9B,KAAK;AAEP,oBAAQ,KAAK,KAAK;;AAEpB,uBAAa,SAAS,IAAI,kBAAkB,WAAW,SAAS,OAAO;SACxE;AACD,eAAO;MACT;eAEgB,iBAAiB,IAAW,OAAoB,UAAwB;AACtF,WAAG,QAAQ,MAAM,UAAU;AAC3B,YAAM,eAAe,GAAG,YAAY,kBAAkB,IAAI,OAAO,QAAQ;AACzE,WAAG,cAAc,MAAM,MAAM,kBAAkB,CAAC;AAChD,sBAAc,IAAI,CAAC,GAAG,UAAU,GAAG,KAAK,YAAY,GAAG,YAAY;MACrE;eAEgB,sBAAsB,IAAW,UAAwB;AACvE,YAAM,kBAAkB,kBAAkB,IAAI,GAAG,OAAO,QAAQ;AAChE,YAAM,OAAO,cAAc,iBAAiB,GAAG,SAAS;AACxD,eAAO,EAAE,KAAK,IAAI,UAAU,KAAK,OAAO,KAAK,SAAA,IAAE;AAAI,iBAAA,GAAG,IAAI,UAAU,GAAG,OAAO;QAAM,CAAA;MACtF;eAEgB,2BAA2B,IAAW,QAAkB,UAAwB;AAE9F,YAAM,aAAa,SAAS,GAAG;AAE/B,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AAC1C,cAAM,YAAY,WAAW,CAAC;AAC9B,cAAM,QAAQ,SAAS,YAAY,SAAS;AAC5C,aAAG,aAAa,YAAY;AAE5B,mBAAS,IAAI,GAAG,IAAI,MAAM,WAAW,QAAQ,EAAE,GAAG;AAChD,gBAAM,YAAY,MAAM,WAAW,CAAC;AACpC,gBAAM,UAAU,MAAM,MAAM,SAAS,EAAE;AACvC,gBAAM,YAAY,OAAO,YAAY,WAAW,UAAU,MAAM,MAAM,OAAO,EAAE,KAAK,GAAG,IAAI;AAC3F,gBAAI,OAAO,SAAS,GAAG;AACrB,kBAAM,YAAY,OAAO,SAAS,EAAE,UAAU,SAAS;AACvD,kBAAI,WAAW;AACb,0BAAU,OAAO;AACjB,uBAAO,OAAO,SAAS,EAAE,UAAU,SAAS;AAC5C,uBAAO,SAAS,EAAE,UAAU,SAAS,IAAI;;;;;AAOjD,YAAI,OAAO,cAAc,eAAe,SAAS,KAAK,UAAU,SAAS,KACvE,CAAC,oBAAoB,KAAK,UAAU,SAAS,KAC7C,QAAQ,qBAAqB,mBAAmB,QAAQ,qBACxD,CAAA,EAAG,OAAO,UAAU,UAAU,MAAM,eAAe,CAAC,EAAE,CAAC,IAAI,KAC7D;AACE,aAAG,aAAa;;MAEpB;eAEgB,iBAAiB,mBAAyB;AACxD,eAAO,kBAAkB,MAAM,GAAG,EAAE,IAAI,SAAC,OAAO,UAAQ;AACtD,kBAAQ,MAAM,KAAI;AAClB,cAAM,OAAO,MAAM,QAAQ,gBAAgB,EAAE;AAE7C,cAAM,UAAU,MAAM,KAAK,IAAI,IAAI,KAAK,MAAM,YAAY,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI;AAE5E,iBAAO,gBACL,MACA,WAAW,MACX,KAAK,KAAK,KAAK,GACf,KAAK,KAAK,KAAK,GACf,OAAO,KAAK,KAAK,GACjB,QAAQ,OAAO,GACf,aAAa,CAAC;SAEjB;MACH;ACldA,UAAA,UAAA,WAAA;AAAA,iBAAA2B,WAAA;;AAUE,QAAAA,SAAA,UAAA,mBAAA,SAAiB,QAAgD,WAAmB;AAClF,eAAK,MAAM,EAAE,QAAQ,SAAA,WAAS;AAC5B,gBAAI,OAAO,SAAS,MAAM,MAAM;AAC5B,kBAAI,UAAU,iBAAiB,OAAO,SAAS,CAAC;AAChD,kBAAI,UAAU,QAAQ,MAAK;AAC3B,sBAAQ,SAAS;AACjB,kBAAI,QAAQ;AAAO,sBAAM,IAAI,WAAW,OAAO,oCAAoC;AACnF,sBAAQ,QAAQ,SAAA,KAAG;AACf,oBAAI,IAAI;AAAM,wBAAM,IAAI,WAAW,OAAO,sDAAsD;AAChG,oBAAI,CAAC,IAAI;AAAS,wBAAM,IAAI,WAAW,OAAO,sDAAsD;eACvG;AACD,wBAAU,SAAS,IAAI,kBAAkB,WAAW,SAAS,OAAO;;WAEzE;;AAGH,QAAAA,SAAA,UAAA,SAAA,SAAO,QAAyC;AAC9C,cAAM,KAAK,KAAK;AAChB,eAAK,KAAK,eAAe,KAAK,KAAK,eACjC,OAAO,KAAK,KAAK,cAAc,MAAM,IACrC;AACF,cAAM,WAAW,GAAG;AAGpB,cAAM,aAAyC,CAAA;AAC/C,cAAI,WAAW,CAAA;AACf,mBAAS,QAAQ,SAAAD,UAAO;AACtB,mBAAO,YAAYA,SAAQ,KAAK,YAAY;AAC5C,uBAAYA,SAAQ,KAAK,WAAW,CAAA;AACpC,YAAAA,SAAQ,iBAAiB,YAAY,QAAQ;WAC9C;AAED,aAAG,YAAY;AAEf,0BAAgB,IAAI,CAAC,GAAG,YAAY,IAAI,GAAG,YAAY,SAAS,CAAC;AACjE,wBAAc,IAAI,CAAC,GAAG,YAAY,IAAI,GAAG,YAAY,WAAW,KAAK,KAAK,MAAM,GAAG,KAAK,QAAQ,GAAG,QAAQ;AAC3G,aAAG,cAAc,KAAK,QAAQ;AAC9B,iBAAO;;AAGT,QAAAC,SAAA,UAAA,UAAA,SAAQ,iBAAgE;AACtE,eAAK,KAAK,iBAAiBtC,iBAAgB,KAAK,KAAK,kBAAkBD,MAAK,eAAe;AAC3F,iBAAO;;AAEX,eAAAuC;MAAA,EAAC;eCrDe,yBAAyB,IAAS;AAChD,eAAO,qBACL,QAAQ,WAER,SAASA,SAAuB,eAAqB;AACnD,eAAK,KAAK;AACV,eAAK,OAAO;YACV,SAAS;YACT,cAAc;YACd,UAAU,CAAA;YACV,QAAQ,CAAA;YACR,gBAAgB;;SAEnB;MAEL;ACtBA,eAAS,gBAAgBC,YAAuB,aAA2B;AACzE,YAAI,YAAYA,WAAU,YAAY;AACtC,YAAI,CAAC,WAAW;AACd,sBAAYA,WAAU,YAAY,IAAI,IAAIC,QAAM,YAAY;YAC1D,QAAQ,CAAA;YACR,WAASD;YACT;WACD;AACD,oBAAU,QAAQ,CAAC,EAAE,OAAO,EAAE,SAAS,OAAM,CAAE;;AAEjD,eAAO,UAAU,MAAM,SAAS;MAClC;AAEA,eAAS,mBAAmBA,YAAqB;AAC/C,eAAOA,cAAa,OAAOA,WAAU,cAAc;MACrD;eAEgB,iBAAiBtC,KAGV;YAFrBsC,aAAStC,IAAA,WACT,cAAWA,IAAA;AAEX,eAAO,mBAAmBsC,UAAS,IAC/B,QAAQ,QAAQA,WAAU,UAAS,CAAE,EAAE,KAAK,SAAC,OAAK;AAChD,iBAAA,MAEG,IAAI,SAAC,MAAI;AAAK,mBAAA,KAAK;UAAI,CAAA,EAEvB,OAAO,SAAC,MAAI;AAAK,mBAAA,SAAS;UAAU,CAAA;SAAC,IAE1C,gBAAgBA,YAAW,WAAW,EAAE,aAAY,EAAG,YAAW;MACxE;eAEgB,mBACdtC,KACA,MAAY;YADVsC,aAAStC,IAAA,WAAE,cAAWA,IAAA;AAGxB,SAAC,mBAAmBsC,UAAS,KAC3B,SAAS,cACT,gBAAgBA,YAAW,WAAW,EAAE,IAAI,EAAC,KAAI,CAAC,EAAE,MAAMxC,IAAG;MACjE;eAEgB,mBACdE,KACA,MAAY;YADVsC,aAAStC,IAAA,WAAE,cAAWA,IAAA;AAGxB,SAAC,mBAAmBsC,UAAS,KAC3B,SAAS,cACT,gBAAgBA,YAAW,WAAW,EAAE,OAAO,IAAI,EAAE,MAAMxC,IAAG;MAClE;eCrDgB,IAAK,IAAE;AASrB,eAAO,SAAS,WAAA;AACd,cAAI,aAAa;AACjB,iBAAO,GAAE;SACV;MACH;ACVA,eAAS,WAAW;AAChB,YAAI,WAAW,CAAC,UAAU,iBACtB,WAAW,KAAK,UAAU,SAAS,KACnC,CAAC,iBAAiB,KAAK,UAAU,SAAS;AAE9C,YAAI,CAAC,YAAY,CAAC,UAAU;AACxB,iBAAO,QAAQ,QAAO;AAC1B,YAAI;AACJ,eAAO,IAAI,QAAQ,SAAU,SAAS;AAClC,cAAI,SAAS,WAAY;AAAE,mBAAO,UAAU,UAAS,EAAG,QAAQ,OAAO;UAAE;AACzE,uBAAa,YAAY,QAAQ,GAAG;AACpC,iBAAM;QACd,CAAK,EAAE,QAAQ,WAAY;AAAE,iBAAO,cAAc,UAAU;QAAE,CAAE;MAChE;;ACFA,eAAS,aAAa,MAA6D;AACjF,eAAO,EAAE,UAAU;MACrB;AAIO,UAAM0C,YAAW,SAAS,YAAiB,IAAQ;AACxD,YAAI,MAAM;AAER,iBAAO,MAAM,UAAU,SAAS,EAAC,GAAE,GAAG,MAAM,YAAY,IAAI,UAAU,SAAS,IAAI,KAAK,WAAU,IAAI,EAAC,GAAE,EAAC,CAAC;eACtG;AAEL,cAAM,KAAK,IAAIA,UAAQ;AACvB,cAAI,cAAe,OAAO,YAAa;AACrC,mBAAO,IAAI,UAAU;;AAEvB,iBAAO;;MAEX;AAEA,YAAMA,UAAS,YAAS,KAAA;QACtB,KAAG,SAAC,UAAiE;AACnE,UAAAC,aAAY,MAAM,QAAQ;AAC1B,iBAAO;;QAET,QAAM,SAAC,KAAkB;AACvB,mBAAS,MAAM,KAAK,GAAG;AACvB,iBAAO;;QAET,SAAO,SAAC9B,OAAqB;AAA7B,cAAA,QAAA;AACE,UAAAA,MAAK,QAAQ,SAAA,KAAG;AAAI,mBAAA,SAAS,OAAM,KAAK,GAAG;UAAC,CAAA;AAC5C,iBAAO;;QAET,QAAM,SAAC,KAAkB;AACvB,cAAM,OAAO,oBAAoB,IAAI,EAAE,KAAK,GAAG,EAAE;AACjD,iBAAO,QAAQL,KAAI,KAAK,MAAM,GAAG,KAAK,KAAKA,KAAI,KAAK,IAAI,GAAG,KAAK;;SAGlE,GAAC,cAAc,IAAf,WAAA;AACE,eAAO,oBAAoB,IAAI;;AAInC,eAAS,SAAS,QAAsB,MAAqB,IAAiB;AAC5E,YAAM,OAAOA,KAAI,MAAM,EAAE;AAGzB,YAAI,MAAM,IAAI;AAAG;AAGjB,YAAI,OAAO;AAAG,gBAAM,WAAU;AAE9B,YAAI,aAAa,MAAM;AAAG,iBAAO,OAAO,QAAQ,EAAE,MAAM,IAAI,GAAG,EAAC,CAAE;AAClE,YAAM,OAAO,OAAO;AACpB,YAAM,QAAQ,OAAO;AACrB,YAAIA,KAAI,IAAI,OAAO,IAAI,IAAI,GAAG;AAC5B,iBACI,SAAS,MAAM,MAAM,EAAE,IACtB,OAAO,IAAI,EAAE,MAAM,IAAI,GAAG,GAAG,GAAG,MAAM,GAAG,KAAI;AAClD,iBAAO,UAAU,MAAM;;AAEzB,YAAIA,KAAI,MAAM,OAAO,EAAE,IAAI,GAAG;AAC5B,kBACI,SAAS,OAAO,MAAM,EAAE,IACvB,OAAO,IAAI,EAAE,MAAM,IAAI,GAAG,GAAG,GAAG,MAAM,GAAG,KAAI;AAClD,iBAAO,UAAU,MAAM;;AAKzB,YAAIA,KAAI,MAAM,OAAO,IAAI,IAAI,GAAG;AAC9B,iBAAO,OAAO;AACd,iBAAO,IAAI;AACX,iBAAO,IAAI,QAAQ,MAAM,IAAI,IAAI;;AAGnC,YAAIA,KAAI,IAAI,OAAO,EAAE,IAAI,GAAG;AAC1B,iBAAO,KAAK;AACZ,iBAAO,IAAI;AACX,iBAAO,IAAI,OAAO,IAAI,OAAO,EAAE,IAAI,IAAI;;AAEzC,YAAM,iBAAiB,CAAC,OAAO;AAE/B,YAAI,QAAQ,CAAC,OAAO,GAAG;AAGrB,UAAAmC,aAAY,QAAQ,IAAI;;AAG1B,YAAI,SAAS,gBAAgB;AAG3B,UAAAA,aAAY,QAAQ,KAAK;;MAE7B;eAEgBA,aAAY,QAAsB,QAA+D;AAC/G,iBAAS,aACPC,SACA1C,KAA6G;cAA3G,OAAIA,IAAA,MAAE,KAAEA,IAAA,IAAE,IAACA,IAAA,GAAE,IAACA,IAAA;AAEhB,mBAAS0C,SAAQ,MAAM,EAAE;AACzB,cAAI;AAAG,yBAAaA,SAAQ,CAAC;AAC7B,cAAI;AAAG,yBAAaA,SAAQ,CAAC;;AAG/B,YAAG,CAAC,aAAa,MAAM;AAAG,uBAAa,QAAQ,MAAM;MACvD;eAEgBC,eACd,WACA,WAAuB;AAGrB,YAAM,KAAK,oBAAoB,SAAS;AACxC,YAAI,cAAc,GAAG,KAAI;AACzB,YAAI,YAAY;AAAM,iBAAO;AAC7B,YAAI,IAAI,YAAY;AAGpB,YAAM,KAAK,oBAAoB,SAAS;AACxC,YAAI,cAAc,GAAG,KAAK,EAAE,IAAI;AAChC,YAAI,IAAI,YAAY;AAEpB,eAAO,CAAC,YAAY,QAAQ,CAAC,YAAY,MAAM;AAC7C,cAAIrC,KAAI,EAAG,MAAM,EAAE,EAAE,KAAK,KAAKA,KAAI,EAAG,IAAI,EAAE,IAAI,KAAK;AAAG,mBAAO;AAC/D,UAAAA,KAAI,EAAE,MAAM,EAAG,IAAI,IAAI,IAClB,KAAK,cAAc,GAAG,KAAK,EAAG,IAAI,GAAG,QACrC,KAAK,cAAc,GAAG,KAAK,EAAE,IAAI,GAAG;;AAE7C,eAAO;MACT;eAUgB,oBACd,MAAmC;AAEnC,YAAI,QAA+B,aAAa,IAAI,IAAI,OAAO,EAAE,GAAG,GAAG,GAAG,KAAI;AAE9E,eAAO;UACL,MAAI,SAAC,KAAI;AACP,gBAAM,cAAc,UAAU,SAAS;AACvC,mBAAO,OAAO;AACZ,sBAAQ,MAAM,GAAC;gBACb,KAAK;AAGH,wBAAM,IAAI;AACV,sBAAI,aAAa;AACf,2BAAO,MAAM,EAAE,KAAKA,KAAI,KAAK,MAAM,EAAE,IAAI,IAAI;AAC3C,8BAAQ,EAAE,IAAI,OAAO,GAAG,MAAM,EAAE,GAAG,GAAG,EAAC;yBACpC;AACL,2BAAO,MAAM,EAAE;AAAG,8BAAQ,EAAE,IAAI,OAAO,GAAG,MAAM,EAAE,GAAG,GAAG,EAAC;;gBAG7D,KAAK;AAEH,wBAAM,IAAI;AACV,sBAAI,CAAC,eAAeA,KAAI,KAAK,MAAM,EAAE,EAAE,KAAK;AAC1C,2BAAO,EAAE,OAAO,MAAM,GAAG,MAAM,MAAK;gBACxC,KAAK;AAEH,sBAAI,MAAM,EAAE,GAAG;AACb,0BAAM,IAAI;AACV,4BAAQ,EAAE,IAAI,OAAO,GAAG,MAAM,EAAE,GAAG,GAAG,EAAC;AACvC;;gBAGJ,KAAK;AACH,0BAAQ,MAAM;;;AAGpB,mBAAO,EAAE,MAAM,KAAI;;;MAGzB;AAEA,eAAS,UAAU,QAAwB;;AACzC,YAAM,UAAQN,MAAA,OAAO,OAAC,QAAAA,QAAA,SAAA,SAAAA,IAAE,MAAK,QAAM,KAAA,OAAO,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,MAAK;AAClD,YAAM,IAAI,OAAO,IAAI,MAAM,OAAO,KAAK,MAAM;AAC7C,YAAI,GAAG;AAsBL,cAAM,IAAI,MAAM,MAAM,MAAM;AAC5B,cAAM,YAAS,SAAA,CAAA,GAAQ,MAAM;AAI7B,cAAM,eAAe,OAAO,CAAC;AAC7B,iBAAO,OAAO,aAAa;AAC3B,iBAAO,KAAK,aAAa;AACzB,iBAAO,CAAC,IAAI,aAAa,CAAC;AAC1B,oBAAU,CAAC,IAAI,aAAa,CAAC;AAC7B,iBAAO,CAAC,IAAI;AACZ,oBAAU,IAAI,aAAa,SAAS;;AAEtC,eAAO,IAAI,aAAa,MAAM;MAChC;AAEA,eAAS,aAAaA,KAA2C;YAAzC,IAACA,IAAA,GAAE,IAACA,IAAA;AAC1B,gBAAQ,IAAK,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAK,IAAI,EAAE,IAAI,KAAK;MAC9D;eChPgB,uBACd,QACA,QAAwB;AAExB,aAAK,MAAM,EAAE,QAAQ,SAAA,MAAI;AACvB,cAAI,OAAO,IAAI;AAAG,YAAAyC,aAAY,OAAO,IAAI,GAAG,OAAO,IAAI,CAAC;;AACnD,mBAAO,IAAI,IAAI,sBAAsB,OAAO,IAAI,CAAC;SACvD;AACD,eAAO;MACT;eCVgB,eAAe,KAAuB,KAAqB;AACzE,eAAO,IAAI,OAAO,IAAI,OAAO,OAAO,KAAK,GAAG,EAAE,KAC5C,SAAC,KAAG;AAAK,iBAAA,IAAI,GAAG,KAAKE,eAAc,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC;QAAC,CAAA;MAE1D;ACLO,UAAM,QAA0B,CAAA;ACIvC,UAAI,kBAAoC,CAAA;AACxC,UAAI,iBAAiB;eAEL,wBAAwB,MAAwB,YAAkB;AAChF,+BAAuB,iBAAiB,IAAI;AAC5C,YAAI,CAAC,gBAAgB;AACnB,2BAAiB;AACjB,qBAAW,WAAA;AACT,6BAAiB;AACjB,gBAAM,QAAQ;AACd,8BAAkB,CAAA;AAClB,iCAAqB,OAAO,KAAK;aAChC,CAAC;;MAER;eAEgB,qBACd,cACA,4BAAkC;AAAlC,YAAA,+BAAA,QAAA;AAAA,uCAAA;QAAkC;AAElC,YAAM,kBAAkB,oBAAI,IAAG;AAC/B,YAAI,aAAa,KAAK;AAEpB,mBAAuB,KAAA,GAAA3C,MAAA,OAAO,OAAO,KAAK,GAAnB,KAAAA,IAAA,QAAA,MAAsB;AAAxC,gBAAM,WAAQA,IAAA,EAAA;AACjB,oCACE,UACA,cACA,iBACA,0BAA0B;;eAGzB;AACL,mBAAW,OAAO,cAAc;AAC9B,gBAAM,QAAQ,yBAAyB,KAAK,GAAG;AAC/C,gBAAI,OAAO;AACA,kBAAA,SAAqB,MAAK,CAAA,GAAlB,YAAa,MAAK,CAAA;AACnC,kBAAM,WAAW,MAAM,SAAA,OAAS,QAAM,GAAA,EAAA,OAAI,SAAS,CAAE;AACrD,kBAAI;AACF,wCACE,UACA,cACA,iBACA,0BAA0B;;;;AAMpC,wBAAgB,QAAQ,SAAC,SAAO;AAAK,iBAAA,QAAO;QAAE,CAAA;MAChD;AAEA,eAAS,wBACP,UACA,cACA,oBACA,4BAAmC;AAEnC,YAAM,oBAA8C,CAAA;AACpD,iBAAmC,KAAA,GAAAA,MAAA,OAAO,QAAQ,SAAS,QAAQ,KAAK,GAArC,KAAAA,IAAA,QAAA,MAAwC;AAAhE,cAAA,KAAAA,IAAA,EAAA,GAAC,YAAS,GAAA,CAAA,GAAE,UAAO,GAAA,CAAA;AAC5B,cAAM,kBAAgC,CAAA;AACtC,mBAAoB,KAAA,GAAA,YAAA,SAAA,KAAA,UAAA,QAAA,MAAS;AAAxB,gBAAM,QAAK,UAAA,EAAA;AACd,gBAAI,eAAe,cAAc,MAAM,MAAM,GAAG;AAG9C,oBAAM,YAAY,QAAQ,SAAC,SAAO;AAAK,uBAAA,mBAAmB,IAAI,OAAO;cAAC,CAAA;uBAC7D,4BAA4B;AACrC,8BAAgB,KAAK,KAAK;;;AAI9B,cAAI;AACF,8BAAkB,KAAK,CAAC,WAAW,eAAe,CAAC;;AAEvD,YAAI,4BAA4B;AAC9B,mBAA2C,KAAA,GAAA,sBAAA,mBAAA,KAAA,oBAAA,QAAA,MAAmB;AAAnD,gBAAA,KAAA,oBAAA,EAAA,GAAC,YAAS,GAAA,CAAA,GAAE,kBAAe,GAAA,CAAA;AACpC,qBAAS,QAAQ,MAAM,SAAS,IAAI;;;MAG1C;eChEgB,UAAW,IAAS;AAClC,YAAM,QAAQ,GAAG;AACV,YAAAsC,aAAa,GAAG,MAAK;AAC5B,YAAI,MAAM,iBAAiB,GAAG;AAC1B,iBAAO,MAAM,eAAe,KAAY,WAAA;AAAM,mBAAA,MAAM,cAClD,UAAW,MAAM,WAAW,IAC5B;UAAE,CAAA;AACR,cAAM,gBAAgB;AACtB,cAAM,cAAc;AACpB,cAAM,eAAe;AACrB,YAAM,gBAAgB,MAAM;AAC5B,YAAI,kBAAkB,KAAK,MAAM,GAAG,QAAQ,EAAE;AAC9C,YAAI,kBAAkB;AAEtB,iBAAS,mBAAgB;AAGvB,cAAI,MAAM,kBAAkB;AAAe,kBAAM,IAAI,WAAW,eAAe,yBAAyB;;AAI1G,YAAI,iBAAiB,MAAM,gBAEvB,qBAA8C,MAC9C,aAAa;AAEjB,YAAM,YAAY,WAAA;AAAM,iBAAA,IAAI5B,aAAQ,SAAC,SAAS,QAAM;AAClD,6BAAgB;AAEhB,gBAAI,CAAC4B;AAAW,oBAAM,IAAI,WAAW,WAAU;AAC/C,gBAAM,SAAS,GAAG;AAElB,gBAAM,MAAM,MAAM,cAAc,CAAC,kBAC/BA,WAAU,KAAK,MAAM,IACrBA,WAAU,KAAK,QAAQ,eAAe;AACxC,gBAAI,CAAC;AAAK,oBAAM,IAAI,WAAW,WAAU;AACzC,gBAAI,UAAU,mBAAmB,MAAM;AACvC,gBAAI,YAAY,KAAK,GAAG,cAAc;AACtC,gBAAI,kBAAkB,KAAM,SAAA,GAAC;AACzB,mCAAqB,IAAI;AACzB,kBAAI,MAAM,cAAc,CAAC,GAAG,SAAS,cAAc;AAI/C,oBAAI,UAAU;AACd,mCAAmB,MAAK;AAExB,oBAAI,OAAO,MAAK;AAChB,oBAAM,SAASA,WAAU,eAAe,MAAM;AAC9C,uBAAO,YAAY,OAAO,UAAU,KAAK,WAAA;AACrC,yBAAQ,IAAI,WAAW,eAAe,YAAA,OAAY,QAAM,eAAA,CAAe,CAAC;iBAC3E;qBACE;AACH,mCAAmB,UAAU,mBAAmB,MAAM;AACtD,oBAAM,SAAS,EAAE,aAAa,KAAK,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE;AACtD,6BAAa,SAAS;AACtB,mBAAG,QAAQ,IAAI;AACf,oBAAI,iBAAiB;AACnB,sCAAoB,IAAI,kBAAkB;;AAE5C,6BAAa,IAAI,SAAS,IAAI,oBAAoB,MAAM;;eAE7D,MAAM;AAET,gBAAI,YAAY,KAAM,WAAA;AAElB,mCAAqB;AACrB,kBAAM,QAAQ,GAAG,QAAQ,IAAI;AAE7B,kBAAM,mBAAmB,MAAM,MAAM,gBAAgB;AACrD,kBAAI,iBAAiB,SAAS;AAAG,oBAAI;AACnC,sBAAM,WAAW,MAAM,YAAY,oBAAoB,gBAAgB,GAAG,UAAU;AACpF,sBAAI,MAAM;AAAY,qCAAiB,IAAI,OAAO,QAAQ;uBACrD;AACD,+CAA2B,IAAI,GAAG,WAAW,QAAQ;AACrD,wBAAI,CAAC,sBAAsB,IAAI,QAAQ,KAAK,CAAC,iBAAiB;AAC5D,8BAAQ,KAAK,kLAAkL;AAC/L,4BAAM,MAAK;AACX,wCAAkB,MAAM,UAAU;AAClC,wCAAkB;AAClB,6BAAO,QAAS,UAAS,CAAE;;;AAGjC,2CAAyB,IAAI,QAAQ;yBAC9B,GAAG;;AASZ,0BAAY,KAAK,EAAE;AAEnB,oBAAM,kBAAkB,KAAK,SAAA,IAAE;AAC3B,sBAAM,UAAU;AAChB,mBAAG,GAAG,eAAe,EAAE,KAAK,EAAE;eACjC;AAED,oBAAM,UAAU,KAAK,SAAA,IAAE;AACnB,mBAAG,GAAG,OAAO,EAAE,KAAK,EAAE;eACzB;AAED,kBAAI;AAAY,mCAAmB,GAAG,OAAO,MAAM;AAEnD,sBAAO;eAER,MAAM;WACV,EAAE,MAAM,SAAA,KAAG;AACV,oBAAQ,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,MAAI;cACf,KAAK;AACH,oBAAI,MAAM,iBAAiB,GAAG;AAG5B,wBAAM;AACN,0BAAQ,KAAK,qDAAqD;AAClE,yBAAO,UAAS;;AAElB;cACF,KAAK;AACH,oBAAI,kBAAkB,GAAG;AACvB,oCAAkB;AAClB,yBAAO,UAAS;;AAElB;;AAEJ,mBAAO5B,aAAQ,OAAO,GAAG;WAC1B;QAAC;AAGF,eAAOA,aAAQ,KAAK;UAClB;WACC,OAAO,cAAc,cAAcA,aAAQ,QAAO,IAAKkC,SAAkB,GAAI,KAAK,SAAS;SAC7F,EAAE,KAAK,WAAA;AAKJ,2BAAgB;AAChB,gBAAM,oBAAoB,CAAA;AAC1B,iBAAOlC,aAAQ,QAAQ,IAAI,WAAA;AAAI,mBAAA,GAAG,GAAG,MAAM,KAAK,GAAG,GAAG;UAAC,CAAA,CAAC,EAAE,KAAK,SAAS,iBAAc;AAClF,gBAAI,MAAM,kBAAkB,SAAS,GAAG;AAEpC,kBAAI,eAAa,MAAM,kBAAkB,OAAOX,kBAAiBD,IAAG;AACpE,oBAAM,oBAAoB,CAAA;AAC1B,qBAAOY,aAAQ,QAAQ,IAAI,WAAA;AAAI,uBAAA,aAAW,GAAG,GAAG;cAAC,CAAA,CAAC,EAAE,KAAK,cAAc;;WAE9E;SACJ,EAAE,QAAQ,WAAA;AACP,cAAI,MAAM,kBAAkB,eAAe;AAEzC,kBAAM,oBAAoB;AAC1B,kBAAM,gBAAgB;;SAE3B,EAAE,MAAM,SAAA,KAAG;AACR,gBAAM,cAAc;AACpB,cAAI;AAEF,kCAAsB,mBAAmB,MAAK;mBAC9CV,KAAM;UAAA;AACR,cAAI,kBAAkB,MAAM,eAAe;AAGzC,eAAG,OAAM;;AAEX,iBAAO,UAAW,GAAG;SACxB,EAAE,QAAQ,WAAA;AACT,gBAAM,eAAe;AACrB,yBAAc;SACf,EAAE,KAAK,WAAA;AACN,cAAI,YAAY;AAGd,gBAAM,eAA+B,CAAA;AACrC,eAAG,OAAO,QAAQ,SAAA,OAAK;AACrB,oBAAM,OAAO,QAAQ,QAAQ,SAAA,KAAG;AAC9B,oBAAI,IAAI;AAAM,+BAAW,SAAA,OAAS,GAAG,MAAI,GAAA,EAAA,OAAI,MAAM,MAAI,GAAA,EAAA,OAAI,IAAI,IAAI,CAAE,IAAI,IAAIwC,UAAS,WAAW,CAAC,CAAC,CAAA,CAAE,CAAC,CAAC;eACxG;AACD,2BAAW,SAAA,OAAS,GAAG,MAAI,GAAA,EAAA,OAAI,MAAM,MAAI,GAAA,CAAG,IAAI,aAAW,SAAA,OAAS,GAAG,MAAI,GAAA,EAAA,OAAI,MAAM,MAAI,QAAA,CAAQ,IAAI,IAAIA,UAAS,WAAW,CAAC,CAAC,CAAA,CAAE,CAAC,CAAC;aACpI;AAED,yBAAa,gCAAgC,EAAE,KAAK,YAAU;AAE9D,iCAAqB,cAAY,IAAI;;AAGvC,iBAAO;SACR;MACH;eC/MgB,cAAe,UAAuB;AACpD,YAAI,WAAW,SAAA,QAAM;AAAI,iBAAA,SAAS,KAAK,MAAM;QAAC,GAC1C,UAAU,SAAA,OAAK;AAAI,iBAAA,SAAS,MAAM,KAAK;QAAC,GACxC,YAAY,KAAK,QAAQ,GACzB,UAAU,KAAK,OAAO;AAE1B,iBAAS,KAAK,SAAmB;AAC7B,iBAAO,SAAC,KAAI;AACR,gBAAI,OAAO,QAAQ,GAAG,GAClB,QAAQ,KAAK;AAEjB,mBAAO,KAAK,OAAO,QACd,CAAC,SAAS,OAAO,MAAM,SAAS,aAC7B,QAAQ,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAE,KAAK,WAAW,OAAO,IAAI,UAAU,KAAK,IAC9E,MAAM,KAAK,WAAW,OAAO;;;AAI7C,eAAO,KAAK,QAAQ,EAAC;MACvB;eCPgB,uBAAuB,MAAuB,aAAa,WAAS;AAElF,YAAI,IAAI,UAAU;AAClB,YAAI,IAAI;AAAG,gBAAM,IAAI,WAAW,gBAAgB,mBAAmB;AAGnE,YAAI,OAAO,IAAI,MAAM,IAAI,CAAC;AAC1B,eAAO,EAAE;AAAG,eAAK,IAAI,CAAC,IAAI,UAAU,CAAC;AAErC,oBAAY,KAAK,IAAG;AACpB,YAAI,SAAS,QAAQ,IAAI;AACzB,eAAO,CAAC,MAAM,QAAQ,SAAS;MACjC;eAEgB,sBACd,IACA,MACA,YACA,mBACA,WAAqC;AAErC,eAAO9B,aAAQ,QAAO,EAAG,KAAK,WAAA;AAE5B,cAAM,YAAY,IAAI,aAAa;AAGnC,cAAM,QAAQ,GAAG,mBAAmB,MAAM,YAAY,GAAG,WAAW,iBAAiB;AACrF,gBAAM,WAAW;AAEjB,cAAM,YAAY;YAChB;YACA;;AAGF,cAAI,mBAAmB;AAErB,kBAAM,WAAW,kBAAkB;iBAC9B;AACL,gBAAI;AACF,oBAAM,OAAM;AAEZ,oBAAM,SAAS,YAAY;AAC3B,iBAAG,OAAO,iBAAiB;qBACpB,IAAI;AACX,kBAAI,GAAG,SAAS,SAAS,gBAAgB,GAAG,OAAM,KAAM,EAAE,GAAG,OAAO,iBAAiB,GAAG;AACtF,wBAAQ,KAAK,0BAA0B;AACvC,mBAAG,MAAM,EAAC,iBAAiB,MAAK,CAAC;AACjC,uBAAO,GAAG,KAAI,EAAG,KAAK,WAAA;AAAM,yBAAA,sBAC1B,IACA,MACA,YACA,MACA,SAAS;gBACV,CAAA;;AAEH,qBAAO,UAAU,EAAE;;;AAKvB,cAAM,mBAAmB,gBAAgB,SAAS;AAClD,cAAI,kBAAkB;AACpB,oCAAuB;;AAGzB,cAAI;AACJ,cAAM,kBAAkBA,aAAQ,OAAO,WAAA;AAErC,0BAAc,UAAU,KAAK,OAAO,KAAK;AACzC,gBAAI,aAAa;AACf,kBAAI,kBAAkB;AAEpB,oBAAI,cAAc,wBAAwB,KAAK,MAAM,IAAI;AACzD,4BAAY,KAAK,aAAa,WAAW;yBAChC,OAAO,YAAY,SAAS,cAAc,OAAO,YAAY,UAAU,YAAY;AAE5F,8BAAc,cAAc,WAAW;;;aAG1C,SAAS;AACZ,kBAAQ,eAAe,OAAO,YAAY,SAAS,aAEjDA,aAAQ,QAAQ,WAAW,EAAE,KAAK,SAAA,GAAC;AAAI,mBAAA,MAAM,SAC3C,IACE,UAAU,IAAI,WAAW,gBACzB,4DAA4D,CAAC;UAAC,CAAA,IAEhE,gBAAgB,KAAK,WAAA;AAAM,mBAAA;UAAW,CAAA,GACxC,KAAK,SAAA,GAAC;AAEN,gBAAI;AAAmB,oBAAM,SAAQ;AAGrC,mBAAO,MAAM,YAAY,KAAK,WAAA;AAAM,qBAAA;YAAC,CAAA;WACtC,EAAE,MAAM,SAAA,GAAC;AACR,kBAAM,QAAQ,CAAC;AACf,mBAAO,UAAU,CAAC;WACnB;SACF;MACH;eC7EgB,IAAK,GAAgB,OAAY,OAAa;AAC5D,YAAM,SAAS,QAAQ,CAAC,IAAI,EAAE,MAAK,IAAK,CAAC,CAAC;AAC1C,iBAAS,IAAE,GAAG,IAAE,OAAO,EAAE;AAAG,iBAAO,KAAK,KAAK;AAC7C,eAAO;MACT;eAGgB,6BAA8B,MAAY;AACxD,eAAA,SAAA,SAAA,CAAA,GACK,IAAI,GAAA,EACP,OAAK,SAAC,WAAiB;AACrB,cAAM,QAAQ,KAAK,MAAM,SAAS;AAC3B,cAAA,SAAU,MAAK;AACtB,cAAM,cAAsD,CAAA;AAC5D,cAAM,oBAAoC,CAAA;AAE1C,mBAAS,kBAAmB,SAAmC,SAAiB,eAA0B;AACxG,gBAAM,eAAe,gBAAgB,OAAO;AAC5C,gBAAM,YAAa,YAAY,YAAY,IAAI,YAAY,YAAY,KAAK,CAAA;AAC5E,gBAAM,YAAY,WAAW,OAAO,IAAG,OAAO,YAAY,WAAW,IAAI,QAAQ;AACjF,gBAAM,YAAY,UAAU;AAC5B,gBAAM,eAAY,SAAA,SAAA,CAAA,GACb,aAAa,GAAA,EAChB,MAAM,YACF,GAAA,OAAG,cAAY,gBAAA,EAAA,OAAiB,cAAc,MAAI,GAAA,IAClD,cAAc,MAClB,eACA,WACA,SACA,WACA,YAAY,gBAAgB,OAAO,GACnC,QAAQ,CAAC,aAAa,cAAc,OAAM,CAAA;AAE5C,sBAAU,KAAK,YAAY;AAC3B,gBAAI,CAAC,aAAa,cAAc;AAC9B,gCAAkB,KAAK,YAAY;;AAErC,gBAAI,YAAY,GAAG;AACjB,kBAAM,iBAAiB,cAAc,IACnC,QAAQ,CAAC,IACT,QAAQ,MAAM,GAAG,YAAY,CAAC;AAChC,gCAAkB,gBAAgB,UAAU,GAAG,aAAa;;AAE9D,sBAAU,KAAK,SAAC,GAAE,GAAC;AAAK,qBAAA,EAAE,UAAU,EAAE;YAAO,CAAA;AAC7C,mBAAO;;AAGT,cAAM,aAAa,kBAAkB,OAAO,WAAW,SAAS,GAAG,OAAO,UAAU;AACpF,sBAAY,KAAK,IAAI,CAAC,UAAU;AAChC,mBAAoB,KAAA,GAAAV,MAAA,OAAO,SAAP,KAAAA,IAAA,QAAA,MAAgB;AAA/B,gBAAM,QAAKA,IAAA,EAAA;AACd,8BAAkB,MAAM,SAAS,GAAG,KAAK;;AAG3C,mBAAS,cAAc,SAAiC;AACtD,gBAAM4B,UAAS,YAAY,gBAAgB,OAAO,CAAC;AACnD,mBAAOA,WAAUA,QAAO,CAAC;;AAG3B,mBAAS,eAAgB,OAAuB,SAAe;AAC7D,mBAAO;cACL,MAAM,MAAM,SAAI,QAEd,MAAM;cACR,OAAO,IAAI,MAAM,OAAO,MAAM,YAAY,KAAK,UAAU,KAAK,SAAS,OAAO;cAC9E,WAAW;cACX,OAAO,IAAI,MAAM,OAAO,MAAM,YAAY,KAAK,UAAU,KAAK,SAAS,OAAO;cAC9E,WAAW;;;AAMf,mBAAS,iBAAkB,KAAuB;AAChD,gBAAMiB,SAAQ,IAAI,MAAM;AACxB,mBAAOA,OAAM,YAAS,SAAA,SAAA,CAAA,GACjB,GAAG,GAAA,EACN,OAAO;cACL,OAAOA,OAAM;cACb,OAAO,eAAe,IAAI,MAAM,OAAOA,OAAM,OAAO;cACrD,CAAA,IACC;;AAGN,cAAM,SAAM,SAAA,SAAA,CAAA,GACP,KAAK,GAAA,EACR,QAAM,SAAA,SAAA,CAAA,GACD,MAAM,GAAA,EACT,YACA,SAAS,mBACT,mBAAmB,cAAa,CAAA,GAGlC,OAAK,SAAC,KAAG;AACP,mBAAO,MAAM,MAAM,iBAAiB,GAAG,CAAC;aAG1C,OAAK,SAAC,KAAG;AACP,mBAAO,MAAM,MAAM,iBAAiB,GAAG,CAAC;aAG1C,YAAU,SAAC,KAAG;AACN,gBAAA7C,MAAmC,IAAI,MAAM,OAA5C,UAAOA,IAAA,SAAE,YAASA,IAAA,WAAE,YAASA,IAAA;AACpC,gBAAI,CAAC;AAAW,qBAAO,MAAM,WAAW,GAAG;AAE3C,qBAAS,oBAAoB,QAAoB;AAC/C,uBAAS,UAAW,KAAS;AAC3B,uBAAO,OACL,OAAO,SAAS,IAAI,KAAK,IAAI,UAAU,KAAK,UAAU,KAAK,SAAS,OAAO,CAAC,IAC5E,IAAI,SACF,OAAO,SACL,OAAO,IAAI,MAAM,GAAG,SAAS,EAC1B,OAAO,IAAI,UACR,KAAK,UACL,KAAK,SAAS,OAAO,CAAC,IAE9B,OAAO,SAAQ;;AAErB,kBAAM,gBAAgB,OAAO,OAAO,QAAQ;gBAC1C,UAAU,EAAC,OAAO,UAAS;gBAC3B,oBAAoB;kBAClB,OAAK,SAAC,KAAU8C,aAAe;AAC7B,2BAAO,mBAAmB,IAAI,KAAK,KAAK,SAAS,OAAO,GAAGA,WAAU;;;gBAGzE,YAAY;kBACV,KAAG,WAAA;AACD,2BAAO,OAAO;;;gBAGlB,KAAK;kBACH,KAAG,WAAA;AACD,wBAAM,MAAM,OAAO;AACnB,2BAAO,cAAc,IACnB,IAAI,CAAC,IACL,IAAI,MAAM,GAAG,SAAS;;;gBAG5B,OAAO;kBACL,KAAG,WAAA;AACD,2BAAO,OAAO;;;eAGnB;AACD,qBAAO;;AAGT,mBAAO,MAAM,WAAW,iBAAiB,GAAG,CAAC,EAC1C,KAAK,SAAA,QAAM;AAAI,qBAAA,UAAU,oBAAoB,MAAM;YAAC,CAAA;YACxD,CAAA;AAEH,iBAAO;UACR,CAAA;MAEL;AAEO,UAAM,yBAA8C;QACzD,OAAO;QACP,MAAM;QACN,OAAO;QACP,QAAQ;;eCjMM,cAAc,GAAQ,GAAQ,IAAU,MAAa;AAEnE,aAAK,MAAM,CAAA;AACX,eAAO,QAAQ;AACf,aAAK,CAAC,EAAE,QAAQ,SAAC,MAAI;AACnB,cAAI,CAAC,OAAO,GAAG,IAAI,GAAG;AAEpB,eAAG,OAAO,IAAI,IAAI;iBACb;AACL,gBAAI,KAAK,EAAE,IAAI,GACb,KAAK,EAAE,IAAI;AACb,gBAAI,OAAO,OAAO,YAAY,OAAO,OAAO,YAAY,MAAM,IAAI;AAChE,kBAAM,aAAa,YAAY,EAAE;AACjC,kBAAM,aAAa,YAAY,EAAE;AAEjC,kBAAI,eAAe,YAAY;AAC7B,mBAAG,OAAO,IAAI,IAAI,EAAE,IAAI;yBACf,eAAe,UAAU;AAElC,8BAAc,IAAI,IAAI,IAAI,OAAO,OAAO,GAAG;yBAClC,OAAO,IAAI;AAKpB,mBAAG,OAAO,IAAI,IAAI,EAAE,IAAI;;uBAEjB,OAAO;AAAI,iBAAG,OAAO,IAAI,IAAI,EAAE,IAAI;;SAEjD;AACD,aAAK,CAAC,EAAE,QAAQ,SAAC,MAAI;AACnB,cAAI,CAAC,OAAO,GAAG,IAAI,GAAG;AACpB,eAAG,OAAO,IAAI,IAAI,EAAE,IAAI;;SAE3B;AACD,eAAO;MACT;eC9BgB,iBACd,YACA,KAAiI;AAGjI,YAAI,IAAI,SAAS;AAAU,iBAAO,IAAI;AACtC,eAAO,IAAI,QAAQ,IAAI,OAAO,IAAI,WAAW,UAAU;MACzD;ACKO,UAAM,kBAAuC;QAClD,OAAO;QACP,MAAM;QACN,OAAO;QACP,QAAQ,SAAC,UAAgB;AAAK,iBAAA,SAAA,SAAA,CAAA,GACzB,QAAQ,GAAA,EACX,OAAK,SAAC,WAAiB;AACrB,gBAAM,YAAY,SAAS,MAAM,SAAS;AACnC,gBAAA,aAAc,UAAU,OAAM;AAErC,gBAAM,kBAAe,SAAA,SAAA,CAAA,GAChB,SAAS,GAAA,EACZ,QAAM,SAAC,KAAG;AACR,kBAAM,UAAU,IAAI;AAGd,kBAAA9C,MAAiC,QAAQ,MAAM,SAAS,EAAE,MAAzD,WAAQA,IAAA,UAAE,WAAQA,IAAA,UAAE,WAAQA,IAAA;AACnC,sBAAQ,IAAI,MAAI;gBACd,KAAK;AACH,sBAAI,SAAS,SAASF;AAAK;AAC3B,yBAAO,QAAQ,SAAS,aAAa,WAAA;AAAI,2BAAA,eAAe,GAAG;kBAAC,GAAE,IAAI;gBACpE,KAAK;AACH,sBAAI,SAAS,SAASA,QAAO,SAAS,SAASA;AAAK;AACpD,yBAAO,QAAQ,SAAS,aAAa,WAAA;AAAI,2BAAA,eAAe,GAAG;kBAAC,GAAE,IAAI;gBACpE,KAAK;AACH,sBAAI,SAAS,SAASA;AAAK;AAC3B,yBAAO,QAAQ,SAAS,aAAa,WAAA;AAAI,2BAAA,eAAe,GAAG;kBAAC,GAAE,IAAI;gBACpE,KAAK;AACH,sBAAI,SAAS,SAASA;AAAK;AAC3B,yBAAO,QAAQ,SAAS,aAAa,WAAA;AAAI,2BAAA,YAAY,GAAG;kBAAC,GAAE,IAAI;;AAGnE,qBAAO,UAAU,OAAO,GAAG;AAG3B,uBAAS,eAAe+B,MAA8D;AACpF,oBAAMkB,WAAU,IAAI;AACpB,oBAAMpC,QAAOkB,KAAI,QAAQ,iBAAiB,YAAYA,IAAG;AACzD,oBAAI,CAAClB;AAAM,wBAAM,IAAI,MAAM,cAAc;AAEzC,gBAAAkB,OAAMA,KAAI,SAAS,SAASA,KAAI,SAAS,QAAK,SAAA,SAAA,CAAA,GACxCA,IAAG,GAAA,EAAE,MAAIlB,MAAA,CAAA,IAAA,SAAA,CAAA,GACTkB,IAAG;AACT,oBAAIA,KAAI,SAAS;AAAU,kBAAAA,KAAI,SAAM,cAAA,CAAA,GAAOA,KAAI,QAAM,IAAA;AACtD,oBAAIA,KAAI;AAAM,kBAAAA,KAAI,OAAI,cAAA,CAAA,GAAOA,KAAI,MAAI,IAAA;AAErC,uBAAO,kBAAkB,WAAWA,MAAKlB,KAAI,EAAE,KAAM,SAAA,gBAAc;AACjE,sBAAM,WAAWA,MAAK,IAAI,SAAC,KAAK,GAAC;AAC/B,wBAAM,gBAAgB,eAAe,CAAC;AACtC,wBAAM,MAAM,EAAE,SAAS,MAAM,WAAW,KAAI;AAC5C,wBAAIkB,KAAI,SAAS,UAAU;AAEzB,+BAAS,KAAK,KAAK,KAAK,KAAK,eAAekB,QAAO;+BAC1ClB,KAAI,SAAS,SAAS,kBAAkB,QAAW;AAE5D,0BAAM,sBAAsB,SAAS,KAAK,KAAK,KAAK,KAAKA,KAAI,OAAO,CAAC,GAAGkB,QAAO;AAC/E,0BAAI,OAAO,QAAQ,uBAAuB,MAAM;AAC9C,8BAAM;AACN,wBAAAlB,KAAI,KAAK,CAAC,IAAI;AACd,4BAAI,CAAC,WAAW,UAAU;AACxB,uCAAaA,KAAI,OAAO,CAAC,GAAG,WAAW,SAAS,GAAG;;;2BAGlD;AAEL,0BAAM,aAAa,cAAc,eAAeA,KAAI,OAAO,CAAC,CAAC;AAC7D,0BAAM,sBAAoB,SAAS,KAAK,KAAK,KAAK,YAAY,KAAK,eAAekB,QAAO;AACzF,0BAAI,qBAAmB;AACrB,4BAAM,mBAAiBlB,KAAI,OAAO,CAAC;AACnC,+BAAO,KAAK,mBAAiB,EAAE,QAAQ,SAAA,SAAO;AAC5C,8BAAI,OAAO,kBAAgB,OAAO,GAAG;AAEnC,6CAAe,OAAO,IAAI,oBAAkB,OAAO;iCAC9C;AAEL,yCAAa,kBAAgB,SAAS,oBAAkB,OAAO,CAAC;;yBAEnE;;;AAGL,2BAAO;mBACR;AACD,yBAAO,UAAU,OAAOA,IAAG,EAAE,KAAK,SAAC7B,KAA4C;wBAA3C,WAAQA,IAAA,UAAE,UAAOA,IAAA,SAAE,cAAWA,IAAA,aAAE,aAAUA,IAAA;AAC5E,6BAAS,IAAE,GAAG,IAAEW,MAAK,QAAQ,EAAE,GAAG;AAChC,0BAAM,UAAU,UAAU,QAAQ,CAAC,IAAIA,MAAK,CAAC;AAC7C,0BAAM,MAAM,SAAS,CAAC;AACtB,0BAAI,WAAW,MAAM;AACnB,4BAAI,WAAW,IAAI,QAAQ,SAAS,CAAC,CAAC;6BACjC;AACL,4BAAI,aAAa,IAAI;0BACnBkB,KAAI,SAAS,SAAS,eAAe,CAAC,IACpCA,KAAI,OAAO,CAAC,IACZ;;;;AAIR,2BAAO,EAAC,UAAU,SAAS,aAAa,WAAU;mBACnD,EAAE,MAAM,SAAA,OAAK;AACZ,6BAAS,QAAQ,SAAA,KAAG;AAAI,6BAAA,IAAI,WAAW,IAAI,QAAQ,KAAK;oBAAC,CAAA;AACzD,2BAAO,QAAQ,OAAO,KAAK;mBAC5B;iBACF;;AAGH,uBAAS,YAAYA,MAA6B;AAChD,uBAAO,gBAAgBA,KAAI,OAAOA,KAAI,OAAO,GAAK;;AAGpD,uBAAS,gBAAgB,OAA0B,OAAuB,OAAa;AAErF,uBAAO,UAAU,MAAM,EAAC,OAAO,QAAQ,OAAO,OAAO,EAAC,OAAO,YAAY,MAAK,GAAG,MAAK,CAAC,EACtF,KAAK,SAAC7B,KAAQ;sBAAP,SAAMA,IAAA;AAGZ,yBAAO,eAAe,EAAC,MAAM,UAAU,MAAM,QAAQ,MAAK,CAAC,EAAE,KAAK,SAAA,KAAG;AACnE,wBAAI,IAAI,cAAc;AAAG,6BAAO,QAAQ,OAAO,IAAI,SAAS,CAAC,CAAC;AAC9D,wBAAI,OAAO,SAAS,OAAO;AACzB,6BAAO,EAAC,UAAU,CAAA,GAAI,aAAa,GAAG,YAAY,OAAS;2BACtD;AACL,6BAAO,gBAAgB,OAAK,SAAA,SAAA,CAAA,GAAM,KAAK,GAAA,EAAE,OAAO,OAAO,OAAO,SAAS,CAAC,GAAG,WAAW,KAAI,CAAA,GAAG,KAAK;;mBAErG;iBACF;;cAEJ,CAAA;AAIH,mBAAO;YACR,CAAA;QAAA;;AAIL,eAAS,kBACP,OACA,KACA,eAAoB;AAEpB,eAAO,IAAI,SAAS,QAChB,QAAQ,QAAQ,CAAA,CAAE,IAClB,MAAM,QAAQ,EAAE,OAAO,IAAI,OAAO,MAAM,eAAe,OAAO,YAAW,CAAE;MACjF;eC3JgB,wBACdW,OACAqC,QACA,OAAe;AAEf,YAAI;AACF,cAAI,CAACA;AAAO,mBAAO;AACnB,cAAIA,OAAM,KAAK,SAASrC,MAAK;AAAQ,mBAAO;AAC5C,cAAM,SAAgB,CAAA;AAItB,mBAAS,IAAI,GAAG,IAAI,GAAG,IAAIqC,OAAM,KAAK,UAAU,IAAIrC,MAAK,QAAQ,EAAE,GAAG;AACpE,gBAAIL,KAAI0C,OAAM,KAAK,CAAC,GAAGrC,MAAK,CAAC,CAAC,MAAM;AAAG;AACvC,mBAAO,KAAK,QAAQ,UAAUqC,OAAM,OAAO,CAAC,CAAC,IAAIA,OAAM,OAAO,CAAC,CAAC;AAChE,cAAE;;AAGJ,iBAAO,OAAO,WAAWrC,MAAK,SAAS,SAAS;iBAChDX,KAAM;AACN,iBAAO;;MAEX;AAEO,UAAM,gCAAoD;QAC/D,OAAO;QACP,OAAO;QACP,QAAQ,SAAC,MAAI;AACX,iBAAO;YACL,OAAO,SAAC,WAAS;AACf,kBAAM,QAAQ,KAAK,MAAM,SAAS;AAClC,qBAAA,SAAA,SAAA,CAAA,GACK,KAAK,GAAA,EACR,SAAS,SAAC,KAAG;AACX,oBAAI,CAAC,IAAI,OAAO;AACd,yBAAO,MAAM,QAAQ,GAAG;;AAE1B,oBAAM,eAAe,wBACnB,IAAI,MACJ,IAAI,MAAM,QAAQ,GAClB,IAAI,UAAU,OAAO;AAEvB,oBAAI,cAAc;AAChB,yBAAOU,aAAQ,QAAQ,YAAY;;AAErC,uBAAO,MAAM,QAAQ,GAAG,EAAE,KAAK,SAAC,KAAG;AACjC,sBAAI,MAAM,QAAQ,IAAI;oBACpB,MAAM,IAAI;oBACV,QAAQ,IAAI,UAAU,UAAU,UAAU,GAAG,IAAI;;AAEnD,yBAAO;iBACR;iBAEH,QAAQ,SAAC,KAAG;AAEV,oBAAI,IAAI,SAAS;AAAO,sBAAI,MAAM,QAAQ,IAAI;AAC9C,uBAAO,MAAM,OAAO,GAAG;gBACxB,CAAA;;;;;eC5DK,kBAAkB,KAAuB,OAAkB;AACzE,eACE,IAAI,MAAM,SAAS,cACnB,CAAC,CAAC,IAAI,UACN,CAAC,IAAI,MAAM,YACX,IAAI,MAAM,GAAG,SAAS,UAAU,cAChC,CAAC,MAAM,OAAO,WAAW;MAE7B;eCRgB,kBAAkBT,OAAc,KAAyH;AACvK,gBAAQA,OAAI;UACV,KAAK;AACH,mBAAO,IAAI,UAAU,CAAC,IAAI;UAC5B,KAAK;AACH,mBAAO;UACT,KAAK;AACH,mBAAO;UACT,KAAK;AACH,mBAAO;UACT,KAAK;AACH,mBAAO;;MAEb;ACYO,UAAM,0BAA8C;QACzD,OAAO;QACP,OAAO;QACP,MAAM;QACN,QAAQ,SAAC,MAAI;AACX,cAAM,SAAS,KAAK,OAAO;AAC3B,cAAM,aAAa,IAAIuC,UAAS,KAAK,SAAS,KAAK,OAAO;AAE1D,iBAAA,SAAA,SAAA,CAAA,GACK,IAAI,GAAA,EACP,aAAa,SAAC,QAAQ,MAAM,SAAO;AACjC,gBAAI,IAAI,UAAU,SAAS,YAAY;AACrC,oBAAM,IAAI,WAAW,SAAS,+DAAA,OAAgE,IAAyB,OAAO,CAAE;;AAElI,mBAAO,KAAK,YAAY,QAAQ,MAAM,OAAO;aAE/C,OAAO,SAAC,WAAS;AACf,gBAAM,QAAQ,KAAK,MAAM,SAAS;AAC1B,gBAAA,SAAW,MAAK;AAChB,gBAAA,aAAwB,OAAM,YAAlB,UAAY,OAAM;AAC9B,gBAAA,aAAyB,WAAU,YAAvB,WAAa,WAAU;AAC3C,gBAAM,uBAAuB,WAAW,iBAAiB,QAAQ,OAC/D,SAAC,OAAK;AAAK,qBAAA,MAAM,YAAa,MAAM,QAAqB,SAAS,WAAW,OAAiB;YAAC,CAAA;AAEjG,gBAAM,aAAU,SAAA,SAAA,CAAA,GACX,KAAK,GAAA,EACR,QAAQ,SAAC,KAAG;;AACV,kBAAM,QAAQ,IAAI;AAGlB,kBAAM,eAAe,IAAI,iBAAiB,IAAI,eAAe,CAAA;AAC7D,kBAAM,cAAc,SAAC,WAAiB;AACpC,oBAAM,OAAO,SAAA,OAAS,QAAM,GAAA,EAAA,OAAI,WAAS,GAAA,EAAA,OAAI,SAAS;AACtD,uBAAQ,aAAa,IAAI,MACtB,aAAa,IAAI,IAAI,IAAIA,UAAQ;;AAEtC,kBAAM,aAAa,YAAY,EAAE;AACjC,kBAAM,eAAe,YAAY,OAAO;AAEhC,kBAAAvC,QAAS,IAAG;AAChB,kBAAA,KACF,IAAI,SAAS,gBACT,CAAC,IAAI,KAAK,IACV,IAAI,SAAS,WACb,CAAC,IAAI,IAAI,IACT,IAAI,OAAO,SAAS,KACpB,CAAC,iBAAiB,YAAY,GAAG,EAAE,OAAO,SAAA,IAAE;AAAI,uBAAA;cAAE,CAAA,GAAG,IAAI,MAAM,IAC/D,CAAA,GAPDU,QAAI,GAAA,CAAA,GAAE,UAAO,GAAA,CAAA;AASlB,kBAAM,WAAW,IAAI,MAAM,QAAQ;AAInC,kBAAI,QAAQA,KAAI,GAAG;AAGjB,2BAAW,QAAQA,KAAI;AAGvB,oBAAM,UAAUV,UAAS,YAAYU,MAAK,WAAW,QAAQ,SAAS,wBAAwBA,OAAM,QAAQ,IAAI;AAGhH,oBAAI,CAAC,SAAS;AAGZ,+BAAa,QAAQA,KAAI;;AAE3B,oBAAI,WAAW,SAAS;AAEtB,uCAAqB,aAAa,QAAQ,SAAS,OAAO;;yBAEnDA,OAAM;AAKf,oBAAM,QAAQ;kBACZ,OAAMX,MAAAW,MAAK,WAAK,QAAAX,QAAA,SAAAA,MAAI,KAAK;kBACzB,KAAI,KAAAW,MAAK,WAAK,QAAA,OAAA,SAAA,KAAI,KAAK;;AAEzB,6BAAa,IAAI,KAAK;AAEtB,2BAAW,IAAI,KAAK;qBACf;AAIL,2BAAW,IAAI,UAAU;AACzB,6BAAa,IAAI,UAAU;AAC3B,uBAAO,QAAQ,QAAQ,SAAA,KAAG;AAAI,yBAAA,YAAY,IAAI,IAAI,EAAE,IAAI,UAAU;gBAAC,CAAA;;AAGrE,qBAAO,MAAM,OAAO,GAAG,EAAE,KAAK,SAAC,KAAG;AAGhC,oBAAIA,UAAS,IAAI,SAAS,SAAS,IAAI,SAAS,QAAQ;AAGtD,6BAAW,QAAQ,IAAI,OAAO;AAC9B,sBAAI,sBAAsB;AAKxB,yCAAqB,QAAQ,SAAA,KAAG;AAE9B,0BAAM,UAAU,IAAI,OAAO,IAAI,SAAA,GAAC;AAAI,+BAAA,IAAI,WAAW,CAAC;sBAAC,CAAA;AAErD,0BAAM,QAAS,IAAI,QAAqB,UAAU,SAAA,MAAI;AAAI,+BAAA,SAAS,WAAW;sBAAO,CAAA;AAErF,+BAAS,IAAI,GAAG,MAAM,IAAI,QAAS,QAAQ,IAAI,KAAK,EAAE,GAAG;AACvD,gCAAQ,CAAC,EAAE,KAAK,IAAI,IAAI,QAAS,CAAC;;AAGpC,kCAAY,IAAI,IAAI,EAAE,QAAQ,OAAO;qBACtC;;;AAGL,sBAAM,eAAe,uBACnB,MAAM,gBAAgB,CAAA,GACtB,YAAY;AAEd,uBAAO;eACR;cACF,CAAA;AAGH,gBAAM,WAAkD,SAACX,KAK9B;;kBAJzB,KAAAA,IAAA,OAAS,QAAK,GAAA,OAAE,QAAK,GAAA;AAIS,qBAAA;gBAC9B;gBACA,IAAIwC,WAAS,KAAA,MAAM,WAAK,QAAA,OAAA,SAAA,KAAI,KAAK,UAAS,KAAA,MAAM,WAAK,QAAA,OAAA,SAAA,KAAI,KAAK,OAAO;;;AAGvE,gBAAM,kBAGF;cACF,KAAK,SAAC,KAAG;AAAK,uBAAA,CAAC,YAAY,IAAIA,UAAS,IAAI,GAAG,CAAC;cAAC;cACjD,SAAS,SAAC,KAAG;AAAK,uBAAA,CAAC,YAAY,IAAIA,UAAQ,EAAG,QAAQ,IAAI,IAAI,CAAC;cAAC;cAChE,OAAO;cACP,OAAO;cACP,YAAY;;AAGd,iBAAK,eAAe,EAAE,QAAQ,SAAC,QAA4D;AACzF,yBAAW,MAAM,IAAI,SACnB,KAK2B;AAEnB,oBAAA,SAAW,IAAuB;AAC1C,oBAAM,cAAc,CAAC,CAAC;AACtB,oBAAI,WAAW,kBAAkB,KAAyB,KAAK,KAAK,kBAAkB,QAAQ,GAAG;AACjG,oBAAM,SAAS,WACX,IAAI,SAAS,CAAA,IACb;AAEJ,oBAAI,aAAa;AAKf,sBAAM,cAAc,SAAC,WAAiB;AACpC,wBAAM,OAAO,SAAA,OAAS,QAAM,GAAA,EAAA,OAAI,WAAS,GAAA,EAAA,OAAI,SAAS;AACtD,2BAAQ,OAAO,IAAI,MAChB,OAAO,IAAI,IAAI,IAAIA,UAAQ;;AAEhC,sBAAM,eAAa,YAAY,EAAE;AACjC,sBAAM,iBAAe,YAAY,OAAO;AAClC,sBAAAxC,MAAgC,gBAAgB,MAAM,EAAE,GAAG,GAA1D,eAAYA,IAAA,CAAA,GAAE,gBAAaA,IAAA,CAAA;AAElC,sBAAI,WAAW,WAAW,aAAa,gBAAgB,CAAE,IAA2B,QAAQ;AAE1F,mCAAa,IAAI,aAAa;yBACzB;AACL,gCAAY,aAAa,QAAQ,EAAE,EAAE,IAAI,aAAa;;AAExD,sBAAI,CAAC,aAAa,cAAc;AAU9B,wBAAI,WAAW,SAAS;AAKtB,qCAAa,IAAI,UAAU;2BACtB;AAIL,0BAAM,gBACJ,WAAW,WACX,YACC,IAA2B,UAC5B,MAAM,MAAK,SAAA,SAAA,CAAA,GACL,GAA0B,GAAA,EAC9B,QAAQ,MAAK,CAAA,CAAA;AAGjB,6BAAO,MAAM,MAAM,EAAE,MAAM,MAAM,SAAS,EAAE,KAAK,SAAC,KAAG;AACnD,4BAAI,WAAW,SAAS;AACtB,8BAAI,YAAa,IAA2B,QAAQ;AAMlD,mCAAO,cAAY,KACjB,SAACA,KAA8C;kCAApC,gBAAaA,IAAA;AACtB,2CAAW,QAAQ,aAAa;AAChC,qCAAO;6BACR;;AAKL,8BAAM,QAAS,IAA2B,SACrC,IAA4B,OAAO,IAAI,UAAU,IACjD,IAA4B;AACjC,8BAAK,IAA2B,QAAQ;AAGtC,yCAAW,QAAQ,KAAK;iCACnB;AAQL,2CAAa,QAAQ,KAAK;;mCAEnB,WAAW,cAAc;AAKlC,8BAAM,WAA8B;AACpC,8BAAM,eAAc,IAAgC;AACpD,iCACE,YACA,OAAO,OAAO,UAAQ;4BACpB,KAAK;8BACH,KAAG,WAAA;AACD,+CAAa,OAAO,SAAO,UAAU;AACrC,uCAAO,SAAO;;;4BAGlB,YAAY;8BACV,KAAG,WAAA;AACD,oCAAM,OAAO,SAAO;AACpB,+CAAa,OAAO,IAAI;AACxB,uCAAO;;;4BAGX,OAAO;8BACL,KAAG,WAAA;AACD,gDAAc,aAAW,OAAO,SAAO,UAAU;AACjD,uCAAO,SAAO;;;2BAGnB;;AAGL,+BAAO;uBACR;;;;AAIP,uBAAO,MAAM,MAAM,EAAE,MAAM,MAAM,SAAS;;aAE7C;AACD,mBAAO;YACR,CAAA;;;AAKP,eAAS,qBACP,aACA,QACA,SACA,SAAmC;AAEnC,iBAAS,iBAAiB,IAAe;AACvC,cAAM,WAAW,YAAY,GAAG,QAAQ,EAAE;AAC1C,mBAAS,WAAW,KAAQ;AAC1B,mBAAO,OAAO,OAAO,GAAG,WAAW,GAAG,IAAI;;AAE5C,cAAM,eAAe,SAAC,KAAQ;AAAK,mBAAA,GAAG,cAAc,QAAQ,GAAG,IAE3D,IAAI,QAAQ,SAAAiD,MAAG;AAAI,qBAAA,SAAS,OAAOA,IAAG;YAAC,CAAA,IAEvC,SAAS,OAAO,GAAG;UAAC;AAExB,WAAC,WAAW,SAAS,QAAQ,SAAC,GAAG,GAAC;AAChC,gBAAM,SAAS,WAAW,WAAW,QAAQ,CAAC,CAAC;AAC/C,gBAAM,SAAS,WAAW,WAAW,QAAQ,CAAC,CAAC;AAC/C,gBAAI3C,KAAI,QAAQ,MAAM,MAAM,GAAG;AAE7B,kBAAI,UAAU;AAAM,6BAAa,MAAM;AACvC,kBAAI,UAAU;AAAM,6BAAa,MAAM;;WAE1C;;AAEH,eAAO,QAAQ,QAAQ,gBAAgB;MACzC;eCtVgB,6BACd,UACA,KACA,KAAyB;AAEzB,YAAI,IAAI,gBAAgB;AAAG,iBAAO;AAClC,YAAI,IAAI,SAAS,eAAe;AAE9B,iBAAO;;AAGT,YAAM,aAAa,IAAI,OACnB,IAAI,KAAK,SACT,YAAY,OAAO,IAAI,SACvB,IAAI,OAAO,SACX;AACJ,YAAI,IAAI,gBAAgB,YAAY;AAElC,iBAAO;;AAGT,YAAM,QAAK,SAAA,CAAA,GAA6B,GAAG;AAE3C,YAAI,QAAQ,MAAM,IAAI,GAAG;AACvB,gBAAM,OAAO,MAAM,KAAK,OAAO,SAAC,GAAG,GAAC;AAAK,mBAAA,EAAE,KAAK,IAAI;UAAS,CAAA;;AAE/D,YAAI,YAAY,SAAS,QAAQ,MAAM,MAAM,GAAG;AAC9C,gBAAM,SAAS,MAAM,OAAO,OAAO,SAAC,GAAG,GAAC;AAAK,mBAAA,EAAE,KAAK,IAAI;UAAS,CAAA;;AAEnE,eAAO;MACT;eCjCgB,aAAa,KAAoB,OAAqB;AACpE,eAAO,MAAM,UAAU,SACnB,OACA,MAAM,YACNA,KAAI,KAAK,MAAM,KAAK,IAAI,IACxBA,KAAI,KAAK,MAAM,KAAK,KAAK;MAC/B;eAEgB,aAAa,KAAoB,OAAqB;AACpE,eAAO,MAAM,UAAU,SACnB,OACA,MAAM,YACNA,KAAI,KAAK,MAAM,KAAK,IAAI,IACxBA,KAAI,KAAK,MAAM,KAAK,KAAK;MAC/B;eAEgB,cAAc,KAAoB,OAAqB;AACrE,eAAO,aAAa,KAAK,KAAK,KAAK,aAAa,KAAK,KAAK;MAC5D;eCXgB,mBACd,QACA,KACA,KACA,OACA,YACA,WAAkB;AAElB,YAAI,CAAC,OAAO,IAAI,WAAW;AAAG,iBAAO;AACrC,YAAM,QAAQ,IAAI,MAAM;AAChB,YAAA,aAAe,MAAK;AAC5B,YAAM,aAAa,IAAI,MAAM;AAC7B,YAAM,aAAa,MAAM,OAAO;AAChC,YAAM,iBAAiB,WAAW;AAClC,YAAM,eAAe,MAAM;AAC3B,YAAM,wBAAwB,MAAM,iBAAiB,OAAO;AAE5D,YAAI,cAAc,IAAI,OAAO,SAACsB,SAAQ,IAAE;AACtC,cAAI,gBAAgBA;AACpB,cAAM,iBAAwB,CAAA;AAC9B,cAAI,GAAG,SAAS,SAAS,GAAG,SAAS,OAAO;AAC1C,gBAAM,cAAc,IAAIY,UAAQ;AAChC,qBAAS,IAAI,GAAG,OAAO,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAE9C,kBAAM,QAAQ,GAAG,OAAO,CAAC;AACzB,kBAAM,KAAK,eAAe,KAAK;AAC/B,kBAAI,YAAY,OAAO,EAAE;AAAG;AAC5B,kBAAM,MAAM,aAAa,KAAK;AAC9B,kBACE,cAAc,QAAQ,GAAG,IACrB,IAAI,KAAK,SAAC,GAAC;AAAK,uBAAA,cAAc,GAAG,UAAU;cAAC,CAAA,IAC5C,cAAc,KAAK,UAAU,GACjC;AACA,4BAAY,OAAO,EAAE;AACrB,+BAAe,KAAK,KAAK;;;;AAI/B,kBAAQ,GAAG,MAAI;YACb,KAAK,OAAO;AACV,kBAAM,iBAAe,IAAIA,UAAQ,EAAG,QAClC,IAAI,SAASZ,QAAO,IAAI,SAAC,GAAC;AAAK,uBAAA,eAAe,CAAC;cAAC,CAAA,IAAIA,OAAM;AAG5D,8BAAgBA,QAAO,OACrB,IAAI,SACA,eAAe,OAAO,SAAC,GAAC;AACtB,oBAAMqB,OAAM,eAAe,CAAC;AAC5B,oBAAI,eAAa,OAAOA,IAAG;AAAG,yBAAO;AACrC,+BAAa,OAAOA,IAAG;AACvB,uBAAO;eACR,IACD,eACG,IAAI,SAAC,GAAC;AAAK,uBAAA,eAAe,CAAC;cAAC,CAAA,EAC5B,OAAO,SAAC,GAAC;AACR,oBAAI,eAAa,OAAO,CAAC;AAAG,yBAAO;AACnC,+BAAa,OAAO,CAAC;AACrB,uBAAO;eACR,CAAC;AAEV;;YAEF,KAAK,OAAO;AACV,kBAAM,WAAS,IAAIT,UAAQ,EAAG,QAC5B,GAAG,OAAO,IAAI,SAAC,GAAC;AAAK,uBAAA,eAAe,CAAC;cAAC,CAAA,CAAC;AAEzC,8BAAgBZ,QACb;gBAEC,SAAC,MAAI;AAAK,yBAAA,CAAC,SAAO,OAAO,IAAI,SAAS,eAAe,IAAI,IAAI,IAAI;gBAAC;cAAA,EAEnE;gBAEC,IAAI,SACA,iBACA,eAAe,IAAI,SAAC,GAAC;AAAK,yBAAA,eAAe,CAAC;gBAAC,CAAA;cAAC;AAEpD;;YAEF,KAAK;AACH,kBAAM,iBAAe,IAAIY,UAAQ,EAAG,QAAQ,GAAG,IAAI;AACnD,8BAAgBZ,QAAO,OACrB,SAAC,MAAI;AACH,uBAAA,CAAC,eAAa,OAAO,IAAI,SAAS,eAAe,IAAI,IAAI,IAAI;eAAC;AAGlE;YACF,KAAK;AACH,kBAAM,UAAQ,GAAG;AACjB,8BAAgBA,QAAO,OACrB,SAAC,MAAI;AAAK,uBAAA,CAAC,cAAc,eAAe,IAAI,GAAG,OAAK;cAAC,CAAA;AAEvD;;AAEJ,iBAAO;WACN,MAAM;AAGT,YAAI,gBAAgB;AAAQ,iBAAO;AAGnC,oBAAY,KAAK,SAAC,GAAG,GAAC;AACpB,iBAAAtB,KAAI,qBAAqB,CAAC,GAAG,qBAAqB,CAAC,CAAC,KACpDA,KAAI,eAAe,CAAC,GAAG,eAAe,CAAC,CAAC;SAAC;AAI3C,YAAI,IAAI,SAAS,IAAI,QAAQ,UAAU;AACrC,cAAI,YAAY,SAAS,IAAI,OAAO;AAClC,wBAAY,SAAS,IAAI;qBAChB,OAAO,WAAW,IAAI,SAAS,YAAY,SAAS,IAAI,OAAO;AAIxE,uBAAW,QAAQ;;;AAGvB,eAAO,YAAY,OAAO,OAAO,WAAW,IAAa;MAC3D;eC9HgB,eAAe,IAAoB,IAAkB;AACnE,eACEA,KAAI,GAAG,OAAO,GAAG,KAAK,MAAM,KAC5BA,KAAI,GAAG,OAAO,GAAG,KAAK,MAAM,KAC5B,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,GAAG,aACxB,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,GAAG;MAE5B;eCPgB,cAAc,QAAa,QAAa,YAAqB,YAAmB;AAC9F,YAAI,WAAW;AAAW,iBAAO,WAAW,SAAY,KAAK;AAC7D,YAAI,WAAW;AAAW,iBAAO;AACjC,YAAM,IAAIA,KAAI,QAAQ,MAAM;AAC5B,YAAI,MAAM,GAAG;AACX,cAAI,cAAc;AAAY,mBAAO;AACrC,cAAI;AAAY,mBAAO;AACvB,cAAI;AAAY,mBAAO;;AAEzB,eAAO;MACT;eAEgB,cAAc,QAAa,QAAa,YAAqB,YAAmB;AAC9F,YAAI,WAAW;AAAW,iBAAO,WAAW,SAAY,IAAI;AAC5D,YAAI,WAAW;AAAW,iBAAO;AACjC,YAAM,IAAIA,KAAI,QAAQ,MAAM;AAC5B,YAAI,MAAM,GAAG;AACX,cAAI,cAAc;AAAY,mBAAO;AACrC,cAAI;AAAY,mBAAO;AACvB,cAAI;AAAY,mBAAO;;AAEzB,eAAO;MACT;eAEgB,aAAa,IAAoB,IAAkB;AACjE,eACE,cAAc,GAAG,OAAO,GAAG,OAAO,GAAG,WAAW,GAAG,SAAS,KAAK,KACjE,cAAc,GAAG,OAAO,GAAG,OAAO,GAAG,WAAW,GAAG,SAAS,KAAK;MAErE;eCXgB,oBACd,QACA,WACAL,OACA,KAA8D;AAE9D,YAAM,WAAW,MAAM,SAAA,OAAS,QAAM,GAAA,EAAA,OAAI,SAAS,CAAE;AACrD,YAAI,CAAC;AAAU,iBAAO,CAAA;AACtB,YAAM,UAAU,SAAS,QAAQA,KAAI;AACrC,YAAI,CAAC;AAAS,iBAAO,CAAC,MAAM,OAAO,UAAU,IAAI;AACjD,YAAM,YAAY,IAAI,QAAQ,IAAI,MAAM,MAAM,OAAO;AACrD,YAAM,UAAU,QAAQ,aAAa,EAAE;AACvC,YAAI,CAAC;AAAS,iBAAO,CAAC,MAAM,OAAO,UAAU,IAAI;AAEjD,gBAAQA,OAAI;UACV,KAAK;AACH,gBAAM,aAAa,QAAQ,KACzB,SAAC,OAAK;AACJ,qBAAC,MAAM,IAA2B,UAAU,IAAI,SAC/C,MAAM,IAA2B,WAAW,IAAI,UACjD,eAAe,MAAM,IAAI,MAAM,OAAO,IAAI,MAAM,KAAK;aAAC;AAE1D,gBAAI;AACF,qBAAO;gBACL;gBACA;gBACA;gBACA;;AAEJ,gBAAM,aAAa,QAAQ,KAAK,SAAC,OAAK;AACpC,kBAAM,QAAQ,WAAW,MAAM,MAAM,MAAM,IAAI,QAAQ;AACvD,qBACE,SAAS,IAAI,UACZ,IAAI,SAAU,MAAM,IAA2B,SAAS,SACzD,aAAa,MAAM,IAAI,MAAM,OAAO,IAAI,MAAM,KAAK;aAEtD;AACD,mBAAO,CAAC,YAAY,OAAO,UAAU,OAAO;UAC9C,KAAK;AACH,gBAAM,aAAa,QAAQ,KAAK,SAAC,OAAK;AACpC,qBAAA,eAAe,MAAM,IAAI,MAAM,OAAO,IAAI,MAAM,KAAK;aAAC;AAExD,mBAAO,CAAC,YAAY,CAAC,CAAC,YAAY,UAAU,OAAO;;MAEzD;eC9DgB,sBAAsB,YAAwB,WAAyB,SAAmB,QAAmB;AAC3H,mBAAW,YAAY,IAAI,OAAO;AAClC,eAAO,iBAAiB,SAAS,WAAA;AAC/B,qBAAW,YAAY,OAAO,OAAO;AACrC,cAAI,WAAW,YAAY,SAAS,GAAG;AACrC,6BAAiB,YAAY,SAAS;;SAEzC;MACH;AAGA,eAAS,iBAAiB,YAAwB,WAAuB;AACvE,mBAAW,WAAA;AACT,cAAI,WAAW,YAAY,SAAS,GAAG;AACrC,yBAAa,WAAW,UAAU;;WAEnC,GAAI;MACT;ACCO,UAAM,kBAAsC;QACjD,OAAO;QACP,OAAO;QACP,MAAM;QACN,QAAQ,SAAC,MAAI;AACX,cAAM,SAAS,KAAK,OAAO;AAC3B,cAAM,SAAM,SAAA,SAAA,CAAA,GACP,IAAI,GAAA,EACP,aAAa,SAAC,QAAQ,MAAM,SAAO;AACjC,gBAAM,WAAW,KAAK,YACpB,QACA,MACA,OAAO;AAMT,gBAAI,SAAS,aAAa;AACxB,kBAAM,OAAK,IAAI,gBAAe;AACtB,kBAAA,SAAW,KAAE;AACrB,kBAAM,iBAAiB,SAAC,cAAqB;AAAK,uBAAA,WAAA;AAChD,uBAAG,MAAK;AACR,sBAAI,SAAS,aAAa;AAExB,wBAAM,wBAAsB,oBAAI,IAAG;AAGnC,6BAAwB,KAAA,GAAA,WAAA,QAAA,KAAA,SAAA,QAAA,MAAQ;AAA3B,0BAAM,YAAS,SAAA,EAAA;AAClB,0BAAM,WAAW,MAAM,SAAA,OAAS,QAAM,GAAA,EAAA,OAAI,SAAS,CAAE;AACrD,0BAAI,UAAU;AACZ,4BAAM,QAAQ,KAAK,MAAM,SAAS;AAElC,4BAAM,MAAM,SAAS,cAAc,OACjC,SAAC,IAAE;AAAK,iCAAA,GAAG,UAAU;wBAAQ,CAAA;AAG/B,4BAAI,SAAS,aAAa,gBAAgB,SAAS,cAAc;AAE/D,mCAAsBD,MAAA,GAAA,KAAA,OAAO,OAC3B,SAAS,QAAQ,KAAK,GADFA,MAAA,GAAA,QAAAA,OAEnB;AAFE,gCAAM,UAAO,GAAAA,GAAA;AAGhB,qCAAoB,KAAA,GAAA,KAAA,QAAQ,MAAK,GAAb,KAAA,GAAA,QAAA,MAAiB;AAAhC,kCAAM,QAAK,GAAA,EAAA;AACd,kCAAI,eAAe,MAAM,QAAQ,SAAS,YAAY,GAAG;AACvD,6CAAa,SAAS,KAAK;AAC3B,sCAAM,YAAY,QAAQ,SAAC,SAAO;AAAK,yCAAA,sBAAoB,IAAI,OAAO;gCAAC,CAAA;;;;mCAIpE,IAAI,SAAS,GAAG;AAEzB,mCAAS,gBAAgB,SAAS,cAAc,OAC9C,SAAC,IAAE;AAAK,mCAAA,GAAG,UAAU;0BAAQ,CAAA;AAG/B,mCAAsB,KAAA,GAAA,KAAA,OAAO,OAC3B,SAAS,QAAQ,KAAK,GADF,KAAA,GAAA,QAAA,MAEnB;AAFE,gCAAM,UAAO,GAAA,EAAA;AAGhB,qCAAoB,KAAA,GAAA,KAAA,QAAQ,MAAK,GAAb,KAAA,GAAA,QAAA,MAAiB;AAAhC,kCAAM,QAAK,GAAA,EAAA;AACd,kCACE,MAAM,OAAO,QACb,SAAS,cAET;AACA,oCAAI,gBAAgB,CAAC,MAAM,OAAO;AAChC,sCAAM,gBAAgB,OAAO,SAAS,MAAM,GAAG;AAC/C,sCAAM,SAAS,mBACb,MAAM,KACN,MAAM,KACN,KACA,OACA,OACA,aAAa;AAEf,sCAAI,MAAM,OAAO;AAEf,iDAAa,SAAS,KAAK;AAC3B,0CAAM,YAAY,QAAQ,SAAC,SAAO;AAAK,6CAAA,sBAAoB,IAAI,OAAO;oCAAC,CAAA;6CAC9D,WAAW,MAAM,KAAK;AAC/B,0CAAM,MAAM;AAEZ,0CAAM,UAAU,aAAa,QAAQ,EAAC,QAAQ,OAAM,CAA+B;;uCAQhF;AACL,sCAAI,MAAM,OAAO;AAGf,iDAAa,SAAS,KAAK;;AAI7B,wCAAM,YAAY,QAAQ,SAAC,SAAO;AAAK,2CAAA,sBAAoB,IAAI,OAAO;kCAAC,CAAA;;;;;;;;AAQrF,0CAAoB,QAAQ,SAAC,SAAO;AAAK,6BAAA,QAAO;oBAAE,CAAA;;;cAErD;AACD,uBAAS,iBAAiB,SAAS,eAAe,KAAK,GAAG;gBACxD;eACD;AACD,uBAAS,iBAAiB,SAAS,eAAe,KAAK,GAAG;gBACxD;eACD;AACD,uBAAS,iBAAiB,YAAY,eAAe,IAAI,GAAG;gBAC1D;eACD;;AAEH,mBAAO;aAET,OAAK,SAAC,WAAiB;AACrB,gBAAM,YAAY,KAAK,MAAM,SAAS;AACtC,gBAAM,UAAU,UAAU,OAAO;AACjC,gBAAM,UAAO,SAAA,SAAA,CAAA,GACR,SAAS,GAAA,EACZ,QAAM,SAAC,KAAwB;AAC7B,kBAAM,QAAQ,IAAI;AAClB,kBACE,QAAQ,YACR,MAAM,GAAG,SAAS,UAAU,cAC5B,MAAM,YACN,MAAM,SAAS,SAAS,aACxB;AAEA,uBAAO,UAAU,OAAO,GAAG;;AAG7B,kBAAM,WAAW,MAAM,SAAA,OAAS,QAAM,GAAA,EAAA,OAAI,SAAS,CAAE;AACrD,kBAAI,CAAC;AAAU,uBAAO,UAAU,OAAO,GAAG;AAE1C,kBAAM,UAAU,UAAU,OAAO,GAAG;AACpC,mBAAK,IAAI,SAAS,SAAS,IAAI,SAAS,WAAW,IAAI,OAAO,UAAU,MAAM,iBAAiB,SAAS,GAAG,EAAE,KAAK,SAAA,KAAG;AAAI,uBAAA,OAAO;cAAI,CAAA,IAAI;AAGtI,wBAAQ,KAAK,SAAC,KAAG;AAEf,sBAAM,sBAAmB,SAAA,SAAA,CAAA,GACpB,GAAG,GAAA,EACN,QAAQ,IAAI,OAAO,IAAI,SAAC,OAAO,GAAC;;AAC9B,wBAAI,IAAI,SAAS,CAAC;AAAG,6BAAO;AAC5B,wBAAM,iBAAeA,MAAA,QAAQ,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAE,SAAS,GAAG,KAC9C,UAAU,KAAK,iBAEZ,KAAK;AAEZ,iCAAa,cAAc,QAAQ,SAAS,IAAI,QAAS,CAAC,CAAC;AAC3D,2BAAO;mBACR,EAAC,CAAA;AAEJ,sBAAM,cAAc,6BAA6B,UAAU,qBAAqB,GAAG;AACnF,2BAAS,cAAc,KAAK,WAAW;AAIvC,iCAAe,WAAA;AAAI,2BAAA,IAAI,gBAAgB,wBAAwB,IAAI,YAAY;kBAAC,CAAA;iBACjF;qBACI;AAEL,yBAAS,cAAc,KAAK,GAAG;AAE/B,oBAAI,gBAAgB,wBAAwB,IAAI,YAAY;AAC5D,wBAAQ,KAAK,SAAC,KAAG;AACf,sBAAI,IAAI,cAAc,GAAG;AAEvB,iCAAa,SAAS,eAAe,GAAG;AACxC,wBAAM,cAAc,6BAA6B,UAAU,KAAK,GAAG;AACnE,wBAAI,aAAa;AACf,+BAAS,cAAc,KAAK,WAAW;;AAEzC,wBAAI,gBAAgB,wBAAwB,IAAI,YAAY;;iBAE/D;AACD,wBAAQ,MAAM,WAAA;AAEZ,+BAAa,SAAS,eAAe,GAAG;AACxC,sBAAI,gBAAgB,wBAAwB,IAAI,YAAY;iBAC7D;;AAEH,qBAAO;eAET,OAAK,SAAC,KAAuB;;AAC3B,kBAAI,CAAC,kBAAkB,KAAK,SAAS,KAAK,CAAC,kBAAkB,SAAS,GAAG;AAAG,uBAAO,UAAU,MAAM,GAAG;AACtG,kBAAM,kBACJA,MAAC,IAAyB,WAAK,QAAAA,QAAA,SAAA,SAAAA,IAAE,GAAG,SAAS,WAAU;AACnD,kBAAA,KAAsB,KAApB,UAAO,GAAA,SAAE,SAAM,GAAA;AACnB,kBAAA,KACF,oBAAoB,QAAQ,WAAW,SAAS,GAAG,GADhD,aAAU,GAAA,CAAA,GAAE,aAAU,GAAA,CAAA,GAAE,WAAQ,GAAA,CAAA,GAAE,YAAS,GAAA,CAAA;AAEhD,kBAAI,cAAc,YAAY;AAC5B,2BAAW,SAAS,IAAI;qBAWnB;AAKL,oBAAM,UAAU,UAAU,MAAM,GAAG,EAAE,KAAK,SAAC,KAAG;AAE5C,sBAAM,SAAS,IAAI;AACnB,sBAAI;AAAY,+BAAW,MAAM;AACjC,sBAAI,eAAe;AAMjB,6BAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC7C,6BAAO,OAAO,OAAO,CAAC,CAAC;;AAEzB,2BAAO,OAAO,MAAM;yBACf;AAIL,wBAAI,SAAS,UAAU,MAAM;;AAE/B,yBAAO;iBACR,EAAE,MAAM,SAAA,OAAK;AAIZ,sBAAI,aAAa;AAAY,iCAAa,WAAW,UAAU;AAC/D,yBAAO,QAAQ,OAAO,KAAK;iBAC5B;AACD,6BAAa;kBACX,QAAQ,IAAI;kBACZ;kBACA,aAAa,oBAAI,IAAG;kBACpB,MAAM;kBACN;kBACA,OAAO;;AAET,oBAAI,WAAW;AACb,4BAAU,KAAK,UAAU;uBACpB;AACL,8BAAY,CAAC,UAAU;AACvB,sBAAI,CAAC,UAAU;AACb,+BAAW,MAAM,SAAA,OAAS,QAAM,GAAA,EAAA,OAAI,SAAS,CAAE,IAAI;sBACjD,SAAS;wBACP,OAAO,CAAA;wBACP,OAAO,CAAA;;sBAET,MAAM,oBAAI,IAAG;sBACb,eAAe,CAAA;sBACf,iBAAiB,CAAA;;;AAGrB,2BAAS,QAAQ,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,IAAI;;;AAGzD,oCAAsB,YAAY,WAAY,SAAS,MAAM;AAC7D,qBAAO,WAAW,QAAQ,KAAK,SAAC,KAAwB;AACtD,uBAAO;kBACL,QAAQ,mBACN,IAAI,QACJ,KACA,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,eACV,WACA,YACA,aAAa;;eAGlB;cACF,CAAA;AAEH,mBAAO;YACR,CAAA;AAEH,iBAAO;;;eC/SK,OACd,QACA,OAAY;AAEZ,eAAO,IAAI,MAAM,QAAQ;UACvB,KAAG,SAAE0C,SAAQ,MAAM,UAAQ;AAIzB,gBAAI,SAAS;AAAM,qBAAO;AAC1B,mBAAO,QAAQ,IAAIA,SAAQ,MAAM,QAAQ;;SAE5C;MACH;;AC6EE,iBAAAH,OAAY,MAAc,SAAsB;AAAhD,cAAA,QAAA;AAlBA,eAAA,eAA0F,CAAA;AAM1F,eAAA,QAAgB;AAad,cAAM,OAAQA,OAAkC;AAChD,eAAK,WAAW,UAAO,SAAA;YAErB,QAASA,OAAkC;YAC3C,UAAU;YAEV,WAAW,KAAK;YAChB,aAAa,KAAK;YAClB,OAAO;UAAQ,GACZ,OAAO;AAEZ,eAAK,QAAQ;YACX,WAAW,QAAQ;YACnB,aAAa,QAAQ;;AAGrB,cAAA,SACE,QAAO;AACX,eAAK,YAAY,CAAA;AACjB,eAAK,YAAY,CAAA;AACjB,eAAK,cAAc,CAAA;AACnB,eAAK,aAAa,CAAA;AAClB,eAAK,QAAQ;AACb,eAAK,SAAS;AACd,cAAM,QAAsB;YAC1B,aAAa;YACb,eAAe;YACf,mBAAmB;YACnB,cAAc;YACd,gBAAgBzC;YAChB,gBAAgB;YAChB,YAAYA;YACZ,eAAe;YACf,YAAY;YACZ,gBAAgB;YAChB,UAAU,QAAQ;;AAEpB,gBAAM,iBAAiB,IAAIY,aAAQ,SAAA,SAAO;AACxC,kBAAM,iBAAiB;WACxB;AACD,gBAAM,gBAAgB,IAAIA,aAAQ,SAAC,GAAG,QAAM;AAC1C,kBAAM,aAAa;WACpB;AACD,eAAK,SAAS;AACd,eAAK,OAAO;AACZ,eAAK,KAAK,OAAO,MAAM,YAAY,WAAW,iBAAiB,SAAS,EAAE,OAAO,CAACX,kBAAiBD,IAAG,EAAC,CAAE;AACzG,eAAK,GAAG,MAAM,YAAYH,UAAS,KAAK,GAAG,MAAM,WAAW,SAAA,WAAS;AACnE,mBAAO,SAAC,YAAY,SAAO;AACxB,cAAA4C,OAAkC,IAAI,WAAA;AACrC,oBAAMW,SAAQ,MAAK;AACnB,oBAAIA,OAAM,cAAc;AAEtB,sBAAI,CAACA,OAAM;AAAaxC,iCAAQ,QAAO,EAAG,KAAK,UAAU;AAEzD,sBAAI;AAAS,8BAAU,UAAU;2BACxBwC,OAAM,mBAAmB;AAElC,kBAAAA,OAAM,kBAAkB,KAAK,UAAU;AACvC,sBAAI;AAAS,8BAAU,UAAU;uBAC5B;AAEL,4BAAU,UAAU;AAEpB,sBAAM,OAAK;AACX,sBAAI,CAAC;AAAS,8BAAU,SAAS,cAAW;AAC1C,2BAAG,GAAG,MAAM,YAAY,UAAU;AAClC,2BAAG,GAAG,MAAM,YAAY,WAAW;qBACpC;;eAEJ;;WAEJ;AAGD,eAAK,aAAa,4BAA4B,IAAI;AAClD,eAAK,QAAQ,uBAAuB,IAAI;AACxC,eAAK,cAAc,6BAA6B,IAAI;AACpD,eAAK,UAAU,yBAAyB,IAAI;AAC5C,eAAK,cAAc,6BAA6B,IAAI;AAKpD,eAAK,GAAG,iBAAiB,SAAA,IAAE;AAKzB,gBAAI,GAAG,aAAa;AAClB,sBAAQ,KAAK,iDAAA,OAAiD,MAAK,MAAI,0CAAA,CAA0C;;AAEjH,sBAAQ,KAAK,gDAAA,OAAgD,MAAK,MAAI,iDAAA,CAAiD;AACzH,kBAAK,MAAM,EAAC,iBAAiB,MAAK,CAAC;WAOpC;AACD,eAAK,GAAG,WAAW,SAAA,IAAE;AACnB,gBAAI,CAAC,GAAG,cAAc,GAAG,aAAa,GAAG;AACvC,sBAAQ,KAAK,iBAAA,OAAiB,MAAK,MAAI,gBAAA,CAAgB;;AAEvD,sBAAQ,KAAK,YAAA,OAAY,MAAK,MAAI,gDAAA,EAAA,OAAiD,GAAG,aAAa,EAAE,CAAE;WAC1G;AAED,eAAK,UAAU,UAAU,QAAQ,WAAiC;AAElE,eAAK,qBAAqB,SACxB,MACA,YACA,UACA,mBAA+B;AAAK,mBAAA,IAAI,MAAK,YAAY,MAAM,YAAY,UAAU,MAAK,SAAS,6BAA6B,iBAAiB;UAAC;AAEpJ,eAAK,iBAAiB,SAAA,IAAE;AACtB,kBAAK,GAAG,SAAS,EAAE,KAAK,EAAE;AAE1B,wBACG,OAAO,SAAA,GAAC;AAAI,qBAAA,EAAE,SAAS,MAAK,QAAQ,MAAM,SAAQ,CAAC,EAAE,OAAO;YAAO,CAAA,EACnE,IAAI,SAAA,GAAC;AAAI,qBAAA,EAAE,GAAG,eAAe,EAAE,KAAK,EAAE;YAAC,CAAA;;AAI5C,eAAK,IAAI,6BAA6B;AACtC,eAAK,IAAI,eAAe;AACxB,eAAK,IAAI,uBAAuB;AAChC,eAAK,IAAI,sBAAsB;AAC/B,eAAK,IAAI,eAAe;AAExB,cAAM,QAAQ,IAAI,MAAM,MAAM;YAC5B,KAAK,SAAC,GAAG,MAAM,UAAQ;AACrB,kBAAI,SAAS;AAAQ,uBAAO;AAC5B,kBAAI,SAAS;AAAS,uBAAO,SAAC,WAAiB;AAAK,yBAAA,OAAO,MAAK,MAAM,SAAS,GAAG,KAAK;gBAAC;AACxF,kBAAM,KAAK,QAAQ,IAAI,GAAG,MAAM,QAAQ;AACxC,kBAAI,cAAc;AAAO,uBAAO,OAAO,IAAI,KAAK;AAChD,kBAAI,SAAS;AAAU,uBAAQ,GAAe,IAAI,SAAA,GAAC;AAAI,yBAAA,OAAO,GAAG,KAAK;gBAAC,CAAA;AACvE,kBAAI,SAAS;AAAsB,uBAAO,WAAA;AACxC,sBAAM,KAAmB,GAAsC,MAAM,MAAM,SAAS;AACpF,yBAAO,OAAO,IAAI,KAAK;;AAEzB,qBAAO;;WAEV;AACD,eAAK,MAAM;AAGX,iBAAO,QAAQ,SAAA,OAAK;AAAI,mBAAA,MAAM,KAAI;UAAC,CAAA;;AAGrC,QAAAX,OAAA,UAAA,UAAA,SAAQ,eAAqB;AAC3B,cAAI,MAAM,aAAa,KAAK,gBAAgB;AAAK,kBAAM,IAAI,WAAW,KAAK,wCAAwC;AACnH,0BAAgB,KAAK,MAAM,gBAAgB,EAAE,IAAI;AACjD,cAAI,KAAK,SAAS,KAAK,OAAO;AAC5B,kBAAM,IAAI,WAAW,OAAO,0CAA0C;AACxE,eAAK,QAAQ,KAAK,IAAI,KAAK,OAAO,aAAa;AAC/C,cAAM,WAAW,KAAK;AACtB,cAAI,kBAAkB,SAAS,OAC7B,SAAA,GAAC;AAAI,mBAAA,EAAE,KAAK,YAAY;UAAa,CAAA,EAAE,CAAC;AAC1C,cAAI;AAAiB,mBAAO;AAC5B,4BAAkB,IAAI,KAAK,QAAQ,aAAa;AAChD,mBAAS,KAAK,eAAe;AAC7B,mBAAS,KAAK,iBAAiB;AAC/B,0BAAgB,OAAO,CAAA,CAAE;AAEzB,eAAK,OAAO,aAAa;AACzB,iBAAO;;AAGT,QAAAA,OAAA,UAAA,aAAA,SAAc,IAAoB;AAAlC,cAAA,QAAA;AACE,iBAAQ,KAAK,UAAU,KAAK,OAAO,gBAAgB,IAAI,cAAc,KAAK,QAAS,GAAE,IAAK,IAAI7B,aAAW,SAAC,SAAS,QAAM;AACvH,gBAAI,MAAK,OAAO,cAAc;AAG5B,qBAAO,OAAO,IAAI,WAAW,eAAe,MAAK,OAAO,WAAW,CAAC;;AAEtE,gBAAI,CAAC,MAAK,OAAO,eAAe;AAC9B,kBAAI,CAAC,MAAK,OAAO,UAAU;AACzB,uBAAO,IAAI,WAAW,eAAc,CAAE;AACtC;;AAEF,oBAAK,KAAI,EAAG,MAAMZ,IAAG;;AAEvB,kBAAK,OAAO,eAAe,KAAK,SAAS,MAAM;WAChD,EAAE,KAAK,EAAE;;AAGZ,QAAAyC,OAAA,UAAA,MAAA,SAAIvC,KAAgD;cAA/C,QAAKA,IAAA,OAAE,SAAMA,IAAA,QAAE,QAAKA,IAAA,OAAE,OAAIA,IAAA;AAC7B,cAAI;AAAM,iBAAK,MAAM,EAAC,OAAO,KAAI,CAAC;AAClC,cAAM,cAAc,KAAK,aAAa,KAAK,MAAM,KAAK,aAAa,KAAK,IAAI,CAAA;AAC5E,sBAAY,KAAK,EAAC,OAAO,QAAQ,OAAO,SAAS,OAAO,KAAK,OAAO,KAAI,CAAC;AACzE,sBAAY,KAAK,SAAC,GAAG,GAAC;AAAK,mBAAA,EAAE,QAAQ,EAAE;UAAK,CAAA;AAG5C,iBAAO;;AAKT,QAAAuC,OAAA,UAAA,QAAA,SAAMvC,KAAmF;cAAlF,QAAKA,IAAA,OAAE,OAAIA,IAAA,MAAE,SAAMA,IAAA;AACxB,cAAI,SAAS,KAAK,aAAa,KAAK,GAAG;AACrC,iBAAK,aAAa,KAAK,IAAI,KAAK,aAAa,KAAK,EAAE,OAAO,SAAA,IAAE;AAC3D,qBAAA,SAAS,GAAG,WAAW,SACvB,OAAO,GAAG,SAAS,OACnB;aAAK;;AAET,iBAAO;;AAGT,QAAAuC,OAAA,UAAA,OAAA,WAAA;AAAA,cAAA,QAAA;AACE,iBAAO;YACL;YACA,WAAA;AAAM,qBAAA,UAAU,KAAI;YAAC;UAAA;;AAIzB,QAAAA,OAAA,UAAA,SAAA,WAAA;AACE,cAAM,QAAQ,KAAK;AACnB,cAAM,MAAM,YAAY,QAAQ,IAAI;AACpC,cAAI,OAAO;AAAG,wBAAY,OAAO,KAAK,CAAC;AACvC,cAAI,KAAK,OAAO;AACd,gBAAI;AAAE,mBAAK,MAAM,MAAK;qBAAa,GAAG;YAAA;AACtC,iBAAK,QAAQ;;AAGf,cAAI,CAAC,MAAM,eAAe;AAIxB,kBAAM,iBAAiB,IAAI7B,aAAQ,SAAA,SAAO;AACxC,oBAAM,iBAAiB;aACxB;AACD,kBAAM,gBAAgB,IAAIA,aAAQ,SAAC,GAAG,QAAM;AAC1C,oBAAM,aAAa;aACpB;;;AAIL,QAAA6B,OAAA,UAAA,QAAA,SAAMvC,KAA2C;cAA3C,KAAAA,QAAA,SAAoB,EAAC,iBAAiB,KAAI,IAACA,KAA1C,kBAAe,GAAA;AACpB,cAAM,QAAQ,KAAK;AACnB,cAAI,iBAAiB;AACnB,gBAAI,MAAM,eAAe;AAEvB,oBAAM,WAAW,IAAI,WAAW,eAAc,CAAE;;AAElD,iBAAK,OAAM;AACX,kBAAM,WAAW;AACjB,kBAAM,cAAc,IAAI,WAAW,eAAc;iBAC5C;AACL,iBAAK,OAAM;AACX,kBAAM,WAAW,KAAK,SAAS,YAC7B,MAAM;AACR,kBAAM,eAAe;AACrB,kBAAM,cAAc;;;AAIxB,QAAAuC,OAAA,UAAA,SAAA,SAAO,cAAsC;AAA7C,cAAA,QAAA;AAAO,cAAA,iBAAA,QAAA;AAAA,2BAAA,EAAgB,iBAAiB,KAAI;UAAC;AAE3C,cAAM,sBAAsB,UAAU,SAAS,KAAK,OAAO,UAAU,CAAC,MAAM;AAC5E,cAAM,QAAQ,KAAK;AACnB,iBAAO,IAAI7B,aAAQ,SAAC,SAAS,QAAM;AACjC,gBAAM,WAAW,WAAA;AACf,oBAAK,MAAM,YAAY;AACvB,kBAAI,MAAM,MAAK,MAAM,UAAU,eAAe,MAAK,IAAI;AACvD,kBAAI,YAAY,KAAK,WAAA;AACnB,mCAAmB,MAAK,OAAO,MAAK,IAAI;AACxC,wBAAO;eACR;AACD,kBAAI,UAAU,mBAAmB,MAAM;AACvC,kBAAI,YAAY,MAAK;;AAGvB,gBAAI;AAAqB,oBAAM,IAAI,WAAW,gBAAgB,8CAA8C;AAC5G,gBAAI,MAAM,eAAe;AACvB,oBAAM,eAAe,KAAK,QAAQ;mBAC7B;AACL,uBAAQ;;WAEX;;AAGH,QAAA6B,OAAA,UAAA,YAAA,WAAA;AACE,iBAAO,KAAK;;AAGd,QAAAA,OAAA,UAAA,SAAA,WAAA;AACE,iBAAO,KAAK,UAAU;;AAGxB,QAAAA,OAAA,UAAA,gBAAA,WAAA;AACE,cAAM,cAAc,KAAK,OAAO;AAChC,iBAAO,eAAgB,YAAY,SAAS;;AAG9C,QAAAA,OAAA,UAAA,YAAA,WAAA;AACE,iBAAO,KAAK,OAAO,gBAAgB;;AAGrC,QAAAA,OAAA,UAAA,oBAAA,WAAA;AACE,iBAAO,KAAK,OAAO;;AAGrB,eAAA,eAAIA,OAAA,WAAA,UAAM;eAAV,WAAA;AAAA,gBAAA,QAAA;AACE,mBAAO,KAAK,KAAK,UAAU,EAAE,IAAI,SAAA,MAAI;AAAI,qBAAA,MAAK,WAAW,IAAI;YAAC,CAAA;;;;;AAGhE,QAAAA,OAAA,UAAA,cAAA,WAAA;AACE,cAAM,OAAO,uBAAuB,MAAM,MAAM,SAAS;AACzD,iBAAO,KAAK,aAAa,MAAM,MAAM,IAAI;;AAG3C,QAAAA,OAAA,UAAA,eAAA,SAAa,MAAuB,QAAgC,WAAmB;AAAvF,cAAA,QAAA;AACE,cAAI,oBAAoB,IAAI;AAE5B,cAAI,CAAC,qBAAqB,kBAAkB,OAAO,QAAQ,KAAK,QAAQ,GAAG,MAAM;AAAI,gCAAoB;AACzG,cAAM,mBAAmB,KAAK,QAAQ,GAAG,MAAM;AAC/C,iBAAO,KAAK,QAAQ,KAAK,EAAE,EAAE,QAAQ,KAAK,EAAE;AAC5C,cAAI,SACA;AAEJ,cAAI;AAIA,yBAAa,OAAO,IAAI,SAAA,OAAK;AACzB,kBAAI,YAAY,iBAAiB,MAAK,QAAQ,MAAM,OAAO;AAC3D,kBAAI,OAAO,cAAc;AAAU,sBAAM,IAAI,UAAU,iFAAiF;AACxI,qBAAO;aACV;AAKD,gBAAI,QAAQ,OAAO,SAAS;AAC1B,wBAAU;qBACH,QAAQ,QAAQ,QAAQ;AAC/B,wBAAU;;AAER,oBAAM,IAAI,WAAW,gBAAgB,+BAA+B,IAAI;AAE5E,gBAAI,mBAAmB;AAEnB,kBAAI,kBAAkB,SAAS,YAAY,YAAY,WAAW;AAC9D,oBAAI,kBAAkB;AAElB,sCAAoB;;AAEnB,wBAAM,IAAI,WAAW,eAAe,wFAAwF;;AAErI,kBAAI,mBAAmB;AACnB,2BAAW,QAAQ,SAAA,WAAS;AACxB,sBAAI,qBAAqB,kBAAkB,WAAW,QAAQ,SAAS,MAAM,IAAI;AAC7E,wBAAI,kBAAkB;AAElB,0CAAoB;;AAEnB,4BAAM,IAAI,WAAW,eAAe,WAAW,YAChD,sCAAsC;;iBAEjD;;AAEL,kBAAI,oBAAoB,qBAAqB,CAAC,kBAAkB,QAAQ;AAEpE,oCAAoB;;;mBAGvB,GAAG;AACR,mBAAO,oBACH,kBAAkB,SAAS,MAAM,SAAC,GAAG,QAAM;AAAM,qBAAO,CAAC;YAAE,CAAC,IAC5D,UAAW,CAAC;;AAGpB,cAAM,mBAAmB,sBAAsB,KAAK,MAAM,MAAM,SAAS,YAAY,mBAAmB,SAAS;AACjH,iBAAQ,oBACJ,kBAAkB,SAAS,SAAS,kBAAkB,MAAM,IAC5D,IAAI,QAIA,OAAO,IAAI,WAAW,WAAA;AAAI,mBAAA,MAAK,WAAW,gBAAgB;UAAC,CAAA,IAC3D,KAAK,WAAY,gBAAgB;;AAK3C,QAAAA,OAAA,UAAA,QAAA,SAAM,WAAiB;AACrB,cAAI,CAAC,OAAO,KAAK,YAAY,SAAS,GAAG;AACvC,kBAAM,IAAI,WAAW,aAAa,SAAA,OAAS,WAAS,iBAAA,CAAiB;;AACvE,iBAAO,KAAK,WAAW,SAAS;;AAEpC,eAAAA;MAAA,EAAC;ACheD,UAAM,mBACJ,OAAO,WAAW,eAAe,gBAAgB,SAC7C,OAAO,aACP;AAEN,UAAAY,cAAA,WAAA;AAKE,iBAAAA,YAAY,WAAkD;AAC5D,eAAK,aAAa;;AASpB,QAAAA,YAAA,UAAA,YAAA,SAAU,GAAS,OAAa,UAAc;AAC5C,iBAAO,KAAK,WACV,CAAC,KAAK,OAAO,MAAM,aAAa,EAAE,MAAM,GAAG,OAAO,SAAQ,IAAK,CAAC;;AAIpE,QAAAA,YAAA,UAAC,gBAAgB,IAAjB,WAAA;AACE,iBAAO;;AAEX,eAAAA;MAAA,EAAC;AChCM,UAAI;AAEX,UAAI;AACF,kBAAU;UAER,WAAW,QAAQ,aAAa,QAAQ,gBAAgB,QAAQ,mBAAmB,QAAQ;UAC3F,aAAa,QAAQ,eAAe,QAAQ;;MAEhD,SAAS,GAAG;AACV,kBAAU,EAAE,WAAW,MAAM,aAAa,KAAI;MAChD;eCuBgBC,WAAa,SAA6B;AACxD,YAAI,WAAW;AACf,YAAI;AACJ,YAAM,aAAa,IAAID,YAAc,SAAC,UAAQ;AAC5C,cAAM,mBAAmB,gBAAgB,OAAO;AAChD,mBAAS,QAAQ,KAAqB;AACpC,gBAAM,cAAc,oBAAmB;AACvC,gBAAI;AACF,kBAAI,kBAAkB;AACpB,wCAAuB;;AAEzB,kBAAI,KAAK,SAAS,SAAS,GAAG;AAC9B,kBAAI,kBAAkB;AAGpB,qBAAM,GAAoB,QAAQ,uBAAuB;;AAE3D,qBAAO;;AAEP,6BAAe,kBAAiB;;;AAIpC,cAAI,SAAS;AACb,cAAI;AAEJ,cAAI,YAA8B,CAAA;AAClC,cAAI,aAA+B,CAAA;AAEnC,cAAM,eAA6B;YACjC,IAAI,SAAM;AACR,qBAAO;;YAET,aAAa,WAAA;AACX,kBAAI;AAAQ;AACZ,uBAAS;AACT,kBAAI;AAAiB,gCAAgB,MAAK;AAC1C,kBAAI;AAAkB,6BAAa,eAAe,YAAY,gBAAgB;;;AAIlF,mBAAS,SAAS,SAAS,MAAM,YAAY;AAE7C,cAAI,mBAAmB;AAEvB,cAAM,UAAU,WAAA;AAAM,mBAAA,oBAAoB,QAAQ;UAAC;AAEnD,mBAAS,eAAY;AACnB,mBAAO,eAAe,YAAY,SAAS;;AAG7C,cAAM,mBAAmB,SAAC,OAAuB;AAC/C,mCAAuB,WAAW,KAAK;AACvC,gBAAI,aAAY,GAAI;AAClB,sBAAO;;;AAIX,cAAM,WAAW,WAAA;AACf,gBACE,UACA,CAAC,QAAQ,WACX;AACE;;AAEF,wBAAY,CAAA;AACZ,gBAAM,SAA2B,CAAA;AAMjC,gBAAI;AAAiB,8BAAgB,MAAK;AAC1C,8BAAkB,IAAI,gBAAe;AAErC,gBAAM,MAAwB;cAC5B;cACA,QAAQ,gBAAgB;cACxB,SAAS;cACT;cACA,OAAO;;AAET,gBAAM,MAAM,QAAQ,GAAG;AACvB,oBAAQ,QAAQ,GAAG,EAAE,KACnB,SAAC,QAAM;AACL,yBAAW;AACX,6BAAe;AACf,kBAAI,UAAU,IAAI,OAAO,SAAS;AAOhC;;AAEF,0BAAY,CAAA;AAEZ,2BAAa;AACb,kBAAI,CAAC,cAAc,UAAU,KAAK,CAAC,kBAAkB;AACnD,6BAAa,kCAAkC,gBAAgB;AAC/D,mCAAmB;;AAErB,kCAAoB,WAAA;AAAI,uBAAA,CAAC,UAAU,SAAS,QAAQ,SAAS,KAAK,MAAM;cAAC,CAAA;eAE3E,SAAC,KAAG;AACF,yBAAW;AACX,kBAAI,CAAC,CAAC,uBAAuB,YAAY,EAAE,SAAS,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,IAAI,GAAG;AAC9D,oBAAI,CAAC;AAAQ,sCAAoB,WAAA;AAC/B,wBAAI;AAAQ;AACZ,6BAAS,SAAS,SAAS,MAAM,GAAG;mBACrC;;aAEJ;;AAYL,qBAAW,SAAS,CAAC;AACrB,iBAAO;SACR;AACD,mBAAW,WAAW,WAAA;AAAM,iBAAA;QAAQ;AACpC,mBAAW,WAAW,WAAA;AAAM,iBAAA;QAAY;AACxC,eAAO;MACT;ACjIA,UAAMZ,SAAQc;AAKd,YAAMd,QAAK,SAAA,SAAA,CAAA,GAIN,kBAAkB,GAAA;QAKrB,QAAM,SAAC,cAAoB;AACzB,cAAM,KAAK,IAAIA,OAAM,cAAc,EAAC,QAAQ,CAAA,EAAE,CAAC;AAC/C,iBAAO,GAAG,OAAM;;QAMlB,QAAM,SAAC,MAAY;AACjB,iBAAO,IAAIA,OAAM,MAAM,EAAE,QAAQ,CAAA,EAAE,CAAE,EAAE,KAAI,EAAG,KAAK,SAAA,IAAE;AACnD,eAAG,MAAK;AACR,mBAAO;WACR,EAAE,MAAM,uBAAuB,WAAA;AAAM,mBAAA;UAAK,CAAA;;QAM7C,kBAAgB,SAAC,IAAE;AACjB,cAAI;AACF,mBAAO,iBAAiBA,OAAM,YAAY,EAAE,KAAK,EAAE;mBACnDvC,KAAM;AACN,mBAAO,UAAU,IAAI,WAAW,WAAU,CAAE;;;QAKhD,aAAW,WAAA;AACT,mBAAS,MAAM,SAAO;AACpB,mBAAO,MAAM,OAAO;;AAEtB,iBAAO;;QAGT,mBAAiB,SAAC,WAAS;AAsBzB,iBAAO,IAAI,QACT,OAAO,IAAI,WAAW,SAAS,IAC/B,UAAS;;QAGb;QAEA,OAAO,SAAU,aAAqB;AACpC,iBAAO,WAAA;AACL,gBAAI;AACF,kBAAI,KAAK,cAAc,YAAY,MAAM,MAAM,SAAS,CAAC;AACzD,kBAAI,CAAC,MAAM,OAAO,GAAG,SAAS;AAC5B,uBAAOU,aAAQ,QAAQ,EAAE;AAC3B,qBAAO;qBACA,GAAG;AACV,qBAAO,UAAU,CAAC;;;;QAKxB,OAAO,SAAU,aAAa,MAAM,MAAI;AACtC,cAAI;AACF,gBAAI,KAAK,cAAc,YAAY,MAAM,MAAM,QAAQ,CAAA,CAAE,CAAC;AAC1D,gBAAI,CAAC,MAAM,OAAO,GAAG,SAAS;AAC5B,qBAAOA,aAAQ,QAAQ,EAAE;AAC3B,mBAAO;mBACA,GAAG;AACV,mBAAO,UAAU,CAAC;;;QAKtB,oBAAoB;UAClB,KAAK,WAAA;AAAM,mBAAA,IAAI,SAAS;UAAI;;QAG9B,SAAS,SAAU,mBAAmB,iBAAe;AAEnD,cAAM,UAAUA,aAAQ,QACtB,OAAO,sBAAsB,aAC3B6B,OAAM,kBAAkB,iBAAiB,IACzC,iBAAiB,EAClB,QAAQ,mBAAmB,GAAK;AAInC,iBAAO,IAAI,QACT,IAAI,MAAM,QAAQ,OAAO,IACzB;;QAIJ,SAAS7B;QAMT,OAAO;UACL,KAAK,WAAA;AAAM,mBAAA4C;UAAW;UACtB,KAAK,SAAA,OAAK;AACRC,qBAAe,KAA6D;;;QAKhF;QACA;QACA;QACA,UAAU5D;QAEV;QACA,IAAI;QACJ,WAASyD;QACT;QAEA;QACA;QACA;QACA;QACA;QACA;QACA,KAAG9C;QACH,MAAMV;QAEN;QAEA,QAAQ,CAAA;QAER;QAGA;QAcA,cAAc;QACd;QAGA,QAAQ;QACR,SAAS,cAAc,MAAM,GAAG,EAC7B,IAAI,SAAA,GAAC;AAAI,iBAAA,SAAS,CAAC;QAAC,CAAA,EACpB,OAAO,SAAC,GAAG,GAAG,GAAC;AAAK,iBAAA,IAAK,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC;QAAE,CAAA;MAAC,CAAA,CAAA;AAcvD,MAAA2C,OAAM,SAAS,UAAUA,OAAM,aAAa,WAAW;ACvOvD,UAAI,OAAO,kBAAkB,eAAe,OAAO,qBAAqB,aAAa;AACnF,qBAAa,kCAAkC,SAAA,cAAY;AACzD,cAAI,CAAC,oBAAoB;AACvB,gBAAI;AACJ,sBAAQ,IAAI,YAAY,gCAAgC;cACtD,QAAQ;aACT;AACD,iCAAqB;AACrB,0BAAc,OAAK;AACnB,iCAAqB;;SAExB;AACD,yBAAiB,gCAAgC,SAACvC,KAAuC;cAAtC,SAAMA,IAAA;AACvD,cAAI,CAAC,oBAAoB;AACvB,6BAAiB,MAAM;;SAE1B;MACH;eAWgB,iBAAiB,aAA6B;AAC5D,YAAI,QAAQ;AACZ,YAAI;AACF,+BAAqB;AAErB,uBAAa,eAAe,KAAK,WAAW;AAE5C,+BAAqB,aAAa,IAAI;;AAEtC,+BAAqB;;MAEzB;AAEO,UAAI,qBAAqB;ACtCzB,UAAI;AAEJ,UAAI,WAAW,WAAA;MAAA;AAEtB,UAAI,OAAO,qBAAqB,aAAa;AAC3C,mBAAW,WAAA;AACT,eAAK,IAAI,iBAAiB,8BAA8B;AACxD,aAAG,YAAY,SAAA,IAAE;AAAI,mBAAA,GAAG,QAAQ,iBAAiB,GAAG,IAAI;UAAC;;AAE3D,iBAAQ;AAUR,YAAI,OAAQ,GAAW,UAAU,YAAY;AAC1C,aAAW,MAAK;;AAMnB,qBAAa,kCAAkC,SAAC,cAAY;AAC1D,cAAI,CAAC,oBAAoB;AACvB,eAAG,YAAY,YAAY;;SAE9B;MACH;AC9BA,UAAI,OAAO,qBAAqB,aAAa;AAC3C,yBAAiB,YAAY,SAAC,OAAK;AACjC,cAAI,CAACuC,QAAM,kBAAkB,MAAM,WAAW;AAC5C,gBAAI;AAAO,sBAAQ,MAAM,oCAAoC;AAC7D,mBAAE,QAAF,OAAE,SAAA,SAAF,GAAI,MAAK;AACT,qBAAiB,KAAA,GAAA,gBAAA,aAAA,KAAA,cAAA,QAAA,MAAa;AAAzB,kBAAM,KAAE,cAAA,EAAA;AACX,iBAAG,MAAM,EAAC,iBAAiB,MAAK,CAAC;;;SAGtC;AACD,yBAAiB,YAAY,SAAC,OAAK;AACjC,cAAI,CAACA,QAAM,kBAAkB,MAAM,WAAW;AAC5C,gBAAI;AAAO,sBAAQ,MAAM,oCAAoC;AAC7D,qBAAQ;AACR,6BAAiB,EAAC,KAAK,IAAIC,UAAS,WAAW,CAAC,CAAA,CAAE,CAAC,EAAC,CAAC;;SAExD;MACH;eCvBgB3B,KAAI,OAA+C;AACjE,eAAO,IAAIE,kBAAiB,EAAC,KAAK,MAAK,CAAC;MAC1C;eCFgByC,QAAO,OAA+C;AACpE,eAAO,IAAIzC,kBAAiB,EAAC,QAAQ,MAAK,CAAC;MAC7C;eCFgB0C,eAAc,GAAW,GAAQ;AAC/C,eAAO,IAAI1C,kBAAiB,EAAC,eAAe,CAAC,GAAG,CAAC,EAAC,CAAC;MACrD;ACmBA,mBAAa,kBAAkB;AAG/BwC,eAAeD,KAAkC;;;;;;;;;;;;;;;;ACnBjD,eAASf,SAAO,cAAc,EAAC,SAASA,QAAK,CAAC;;;;;;;;;;;;ACN9C,QAAsB,cAAtB,MAAiC;;AAAjC,YAAA,cAAA;AAOa,YAAA,aAAa;AAE1B,QAAa,OAAb,cAA0B,YAAW;MAEnC,YAAY,GAAS;AACnB,cAAK;AACL,YAAI,CAAC,QAAA,WAAW,KAAK,CAAC;AAAG,gBAAM,IAAI,MAAM,0CAA0C;AACnF,aAAK,MAAM;MACb;MAEA,WAAQ;AACN,eAAO,KAAK;MACd;MAEA,WAAQ;AACN,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,EAAC,CAAC,KAAK,GAAG,GAAG,EAAC;MACvB;;AAlBF,YAAA,OAAA;AAqBA,QAAa,QAAb,cAA2B,YAAW;MAKpC,YAAY,MAAkC;AAC5C,cAAK;AACL,aAAK,SAAS,OAAO,SAAS,WAAW,CAAC,IAAI,IAAI;MACpD;MAEA,WAAQ;AACN,eAAO,KAAK;MACd;MAEA,WAAQ;AACN,YAAI,KAAK,OAAO,SAAS;AAAG,iBAAO;AACnC,cAAM,OAAO,KAAK,OAAO,CAAC;AAC1B,eAAO,SAAS,MAAM,SAAS;MACjC;MAEA,IAAI,MAAG;;AACL,gBAAO,KAAC,KAAK,UAAI,QAAA,OAAA,SAAA,KAAT,KAAK,OAAS,KAAK,OAAO,OAAO,CAAC,GAAW,MAAgB,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;MACrF;MAEA,IAAI,QAAK;;AACP,gBAAO,KAAC,KAAK,YAAM,QAAA,OAAA,SAAA,KAAX,KAAK,SAAW,KAAK,OAAO,OAAO,CAAC,OAAkB,MAAK;AACjE,cAAI,aAAa;AAAM,kBAAM,EAAE,GAAG,KAAK,MAAM,EAAE,GAAG,KAAK,KAAK;AAC5D,iBAAO;QACT,GAAG,CAAA,CAAE;MACP;;AA7BF,YAAA,QAAA;AAwCa,YAAA,MAAM,IAAI,MAAM,EAAE;AAI/B,aAAgB,EAAE,SAA+B,MAAe;AAC9D,YAAM,OAAmB,CAAC,KAAK,CAAC,CAAC;AACjC,UAAI,IAAI;AACR,aAAO,IAAI,KAAK,QAAQ;AACtB,mBAAW,MAAM,KAAK,CAAC,CAAC;AACxB,aAAK,KAAK,KAAK,EAAE,CAAC,CAAC;MACrB;AACA,aAAO,IAAI,MAAM,IAAI;IACvB;AARA,YAAA,IAAA;AAUA,QAAM,OAAO,IAAI,MAAM,GAAG;AAE1B,aAAgB,IAAI,SAA+B,MAA4B;AAC7E,YAAM,OAAmB,CAAC,cAAc,KAAK,CAAC,CAAC,CAAC;AAChD,UAAI,IAAI;AACR,aAAO,IAAI,KAAK,QAAQ;AACtB,aAAK,KAAK,IAAI;AACd,mBAAW,MAAM,KAAK,CAAC,CAAC;AACxB,aAAK,KAAK,MAAM,cAAc,KAAK,EAAE,CAAC,CAAC,CAAC;MAC1C;AACA,eAAS,IAAI;AACb,aAAO,IAAI,MAAM,IAAI;IACvB;AAVA,YAAA,MAAA;AAYA,aAAgB,WAAW,MAAkB,KAAuB;AAClE,UAAI,eAAe;AAAO,aAAK,KAAK,GAAG,IAAI,MAAM;eACxC,eAAe;AAAM,aAAK,KAAK,GAAG;;AACtC,aAAK,KAAK,YAAY,GAAG,CAAC;IACjC;AAJA,YAAA,aAAA;AAMA,aAAS,SAAS,MAAgB;AAChC,UAAI,IAAI;AACR,aAAO,IAAI,KAAK,SAAS,GAAG;AAC1B,YAAI,KAAK,CAAC,MAAM,MAAM;AACpB,gBAAM,MAAM,eAAe,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;AACnD,cAAI,QAAQ,QAAW;AACrB,iBAAK,OAAO,IAAI,GAAG,GAAG,GAAG;AACzB;UACF;AACA,eAAK,GAAG,IAAI;QACd;AACA;MACF;IACF;AAEA,aAAS,eAAe,GAAa,GAAW;AAC9C,UAAI,MAAM;AAAM,eAAO;AACvB,UAAI,MAAM;AAAM,eAAO;AACvB,UAAI,OAAO,KAAK,UAAU;AACxB,YAAI,aAAa,QAAQ,EAAE,EAAE,SAAS,CAAC,MAAM;AAAK;AAClD,YAAI,OAAO,KAAK;AAAU,iBAAO,GAAG,EAAE,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC;AACtD,YAAI,EAAE,CAAC,MAAM;AAAK,iBAAO,EAAE,MAAM,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC;AACnD;MACF;AACA,UAAI,OAAO,KAAK,YAAY,EAAE,CAAC,MAAM,OAAO,EAAE,aAAa;AAAO,eAAO,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC3F;IACF;AAEA,aAAgB,UAAU,IAAU,IAAQ;AAC1C,aAAO,GAAG,SAAQ,IAAK,KAAK,GAAG,SAAQ,IAAK,KAAK,MAAM,EAAE,GAAG,EAAE;IAChE;AAFA,YAAA,YAAA;AAKA,aAAS,YAAY,GAA+C;AAClE,aAAO,OAAO,KAAK,YAAY,OAAO,KAAK,aAAa,MAAM,OAC1D,IACA,cAAc,MAAM,QAAQ,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,CAAC;IACtD;AAEA,aAAgB,UAAU,GAAU;AAClC,aAAO,IAAI,MAAM,cAAc,CAAC,CAAC;IACnC;AAFA,YAAA,YAAA;AAIA,aAAgB,cAAc,GAAU;AACtC,aAAO,KAAK,UAAU,CAAC,EACpB,QAAQ,WAAW,SAAS,EAC5B,QAAQ,WAAW,SAAS;IACjC;AAJA,YAAA,gBAAA;AAMA,aAAgB,YAAY,KAA2B;AACrD,aAAO,OAAO,OAAO,YAAY,QAAA,WAAW,KAAK,GAAG,IAAI,IAAI,MAAM,IAAI,GAAG,EAAE,IAAI,KAAK,GAAG;IACzF;AAFA,YAAA,cAAA;AAKA,aAAgB,iBAAiB,KAA2B;AAC1D,UAAI,OAAO,OAAO,YAAY,QAAA,WAAW,KAAK,GAAG,GAAG;AAClD,eAAO,IAAI,MAAM,GAAG,GAAG,EAAE;MAC3B;AACA,YAAM,IAAI,MAAM,iCAAiC,GAAG,iCAAiC;IACvF;AALA,YAAA,mBAAA;AAOA,aAAgB,WAAW,IAAU;AACnC,aAAO,IAAI,MAAM,GAAG,SAAQ,CAAE;IAChC;AAFA,YAAA,aAAA;;;;;;;;;;ACtKA,QAAA,SAAA;AAeA,QAAM,aAAN,cAAyB,MAAK;MAE5B,YAAY,MAAoB;AAC9B,cAAM,uBAAuB,IAAI,cAAc;AAC/C,aAAK,QAAQ,KAAK;MACpB;;AAwBF,QAAY;AAAZ,KAAA,SAAYmB,iBAAc;AACxB,MAAAA,gBAAAA,gBAAA,SAAA,IAAA,CAAA,IAAA;AACA,MAAAA,gBAAAA,gBAAA,WAAA,IAAA,CAAA,IAAA;IACF,GAHY,mBAAc,QAAA,iBAAd,iBAAc,CAAA,EAAA;AASb,YAAA,WAAW;MACtB,OAAO,IAAI,OAAA,KAAK,OAAO;MACvB,KAAK,IAAI,OAAA,KAAK,KAAK;MACnB,KAAK,IAAI,OAAA,KAAK,KAAK;;AAGrB,QAAa,QAAb,MAAkB;MAKhB,YAAY,EAAC,UAAU,OAAM,IAAkB,CAAA,GAAE;AAJ9B,aAAA,SAA2C,CAAA;AAK5D,aAAK,YAAY;AACjB,aAAK,UAAU;MACjB;MAEA,OAAO,cAA2B;AAChC,eAAO,wBAAwB,OAAA,OAAO,eAAe,KAAK,KAAK,YAAY;MAC7E;MAEA,KAAK,QAAc;AACjB,eAAO,IAAI,OAAA,KAAK,KAAK,SAAS,MAAM,CAAC;MACvC;MAEU,SAAS,QAAc;AAC/B,cAAM,KAAK,KAAK,OAAO,MAAM,KAAK,KAAK,WAAW,MAAM;AACxD,eAAO,GAAG,MAAM,GAAG,GAAG,OAAO;MAC/B;MAEQ,WAAW,QAAc;;AAC/B,cAAI,MAAA,KAAA,KAAK,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,eAAS,QAAA,OAAA,SAAA,SAAA,GAAE,IAAI,MAAM,MAAM,KAAK,aAAa,CAAC,KAAK,UAAU,IAAI,MAAM,GAAI;AAC3F,gBAAM,IAAI,MAAM,oBAAoB,MAAM,gCAAgC;QAC5E;AACA,eAAQ,KAAK,OAAO,MAAM,IAAI,EAAC,QAAQ,OAAO,EAAC;MACjD;;AA5BF,YAAA,QAAA;AAoCA,QAAa,iBAAb,cAAoC,OAAA,KAAI;MAKtC,YAAY,QAAgB,SAAe;AACzC,cAAM,OAAO;AACb,aAAK,SAAS;MAChB;MAEA,SAAS,OAAkB,EAAC,UAAU,UAAS,GAAY;AACzD,aAAK,QAAQ;AACb,aAAK,aAAY,GAAA,OAAA,MAAK,IAAI,OAAA,KAAK,QAAQ,CAAC,IAAI,SAAS;MACvD;;AAbF,YAAA,iBAAA;AAoBA,QAAM,QAAO,GAAA,OAAA;AAEb,QAAa,aAAb,cAAgC,MAAK;MAKnC,YAAY,MAAuB;AACjC,cAAM,IAAI;AALO,aAAA,UAAuB,CAAA;AAMxC,aAAK,SAAS,KAAK;AACnB,aAAK,OAAO,EAAC,GAAG,MAAM,IAAI,KAAK,QAAQ,OAAO,OAAA,IAAG;MACnD;MAEA,MAAG;AACD,eAAO,KAAK;MACd;MAEA,KAAK,QAAc;AACjB,eAAO,IAAI,eAAe,QAAQ,KAAK,SAAS,MAAM,CAAC;MACzD;MAEA,MAAM,cAAuC,OAAgB;;AAC3D,YAAI,MAAM,QAAQ;AAAW,gBAAM,IAAI,MAAM,sCAAsC;AACnF,cAAM,OAAO,KAAK,OAAO,YAAY;AACrC,cAAM,EAAC,OAAM,IAAI;AACjB,cAAM,YAAW,KAAA,MAAM,SAAG,QAAA,OAAA,SAAA,KAAI,MAAM;AACpC,YAAI,KAAK,KAAK,QAAQ,MAAM;AAC5B,YAAI,IAAI;AACN,gBAAM,QAAQ,GAAG,IAAI,QAAQ;AAC7B,cAAI;AAAO,mBAAO;QACpB,OAAO;AACL,eAAK,KAAK,QAAQ,MAAM,IAAI,oBAAI,IAAG;QACrC;AACA,WAAG,IAAI,UAAU,IAAI;AAErB,cAAM,IAAI,KAAK,OAAO,MAAM,MAAM,KAAK,OAAO,MAAM,IAAI,CAAA;AACxD,cAAM,YAAY,EAAE;AACpB,UAAE,SAAS,IAAI,MAAM;AACrB,aAAK,SAAS,OAAO,EAAC,UAAU,QAAQ,UAAS,CAAC;AAClD,eAAO;MACT;MAEA,SAAS,QAAgB,UAAiB;AACxC,cAAM,KAAK,KAAK,QAAQ,MAAM;AAC9B,YAAI,CAAC;AAAI;AACT,eAAO,GAAG,IAAI,QAAQ;MACxB;MAEA,UAAU,WAAiB,SAAuC,KAAK,SAAO;AAC5E,eAAO,KAAK,cAAc,QAAQ,CAAC,SAAwB;AACzD,cAAI,KAAK,cAAc;AAAW,kBAAM,IAAI,MAAM,kBAAkB,IAAI,gBAAgB;AACxF,kBAAO,GAAA,OAAA,KAAI,SAAS,GAAG,KAAK,SAAS;QACvC,CAAC;MACH;MAEA,UACE,SAAuC,KAAK,SAC5C,YACA,SAAiD;AAEjD,eAAO,KAAK,cACV,QACA,CAAC,SAAwB;AACvB,cAAI,KAAK,UAAU;AAAW,kBAAM,IAAI,MAAM,kBAAkB,IAAI,gBAAgB;AACpF,iBAAO,KAAK,MAAM;QACpB,GACA,YACA,OAAO;MAEX;MAEQ,cACN,QACA,WACA,aAA8B,CAAA,GAC9B,SAAiD;AAEjD,YAAI,OAAa,OAAA;AACjB,mBAAW,UAAU,QAAQ;AAC3B,gBAAM,KAAK,OAAO,MAAM;AACxB,cAAI,CAAC;AAAI;AACT,gBAAM,UAAW,WAAW,MAAM,IAAI,WAAW,MAAM,KAAK,oBAAI,IAAG;AACnE,aAAG,QAAQ,CAAC,SAAwB;AAClC,gBAAI,QAAQ,IAAI,IAAI;AAAG;AACvB,oBAAQ,IAAI,MAAM,eAAe,OAAO;AACxC,gBAAI,IAAI,UAAU,IAAI;AACtB,gBAAI,GAAG;AACL,oBAAM,MAAM,KAAK,KAAK,MAAM,QAAA,SAAS,MAAM,QAAA,SAAS;AACpD,sBAAO,GAAA,OAAA,KAAI,IAAI,GAAG,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,EAAE;YACtD,WAAY,IAAI,YAAO,QAAP,YAAO,SAAA,SAAP,QAAU,IAAI,GAAI;AAChC,sBAAO,GAAA,OAAA,KAAI,IAAI,GAAG,CAAC,GAAG,KAAK,KAAK,EAAE;YACpC,OAAO;AACL,oBAAM,IAAI,WAAW,IAAI;YAC3B;AACA,oBAAQ,IAAI,MAAM,eAAe,SAAS;UAC5C,CAAC;QACH;AACA,eAAO;MACT;;AAhGF,YAAA,aAAA;;;;;;;;;;ACpHA,QAAA,SAAA;AACA,QAAA,UAAA;AAEA,QAAA,SAAA;AAAQ,WAAA,eAAA,SAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAC,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAW,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAU,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAI,EAAA,CAAA;AACxE,QAAA,UAAA;AAAQ,WAAA,eAAA,SAAA,SAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAK,EAAA,CAAA;AAAc,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAU,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAc,EAAA,CAAA;AAAkB,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAQ,EAAA,CAAA;AAQlE,YAAA,YAAY;MACvB,IAAI,IAAI,OAAA,MAAM,GAAG;MACjB,KAAK,IAAI,OAAA,MAAM,IAAI;MACnB,IAAI,IAAI,OAAA,MAAM,GAAG;MACjB,KAAK,IAAI,OAAA,MAAM,IAAI;MACnB,IAAI,IAAI,OAAA,MAAM,KAAK;MACnB,KAAK,IAAI,OAAA,MAAM,KAAK;MACpB,KAAK,IAAI,OAAA,MAAM,GAAG;MAClB,IAAI,IAAI,OAAA,MAAM,IAAI;MAClB,KAAK,IAAI,OAAA,MAAM,IAAI;MACnB,KAAK,IAAI,OAAA,MAAM,GAAG;;AAGpB,QAAe,OAAf,MAAmB;MAGjB,gBAAa;AACX,eAAO;MACT;MAEA,cAAc,QAAmB,YAAqB;AACpD,eAAO;MACT;;AAOF,QAAM,MAAN,cAAkB,KAAI;MACpB,YACmB,SACA,MACT,KAAc;AAEtB,cAAK;AAJY,aAAA,UAAA;AACA,aAAA,OAAA;AACT,aAAA,MAAA;MAGV;MAEA,OAAO,EAAC,KAAK,GAAE,GAAY;AACzB,cAAM,UAAU,MAAM,QAAA,SAAS,MAAM,KAAK;AAC1C,cAAM,MAAM,KAAK,QAAQ,SAAY,KAAK,MAAM,KAAK,GAAG;AACxD,eAAO,GAAG,OAAO,IAAI,KAAK,IAAI,GAAG,GAAG,MAAM;MAC5C;MAEA,cAAc,OAAkB,WAAoB;AAClD,YAAI,CAAC,MAAM,KAAK,KAAK,GAAG;AAAG;AAC3B,YAAI,KAAK;AAAK,eAAK,MAAM,aAAa,KAAK,KAAK,OAAO,SAAS;AAChE,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,eAAe,OAAA,cAAc,KAAK,IAAI,QAAQ,CAAA;MAC5D;;AAGF,QAAM,SAAN,cAAqB,KAAI;MACvB,YACW,KACF,KACU,aAAqB;AAEtC,cAAK;AAJI,aAAA,MAAA;AACF,aAAA,MAAA;AACU,aAAA,cAAA;MAGnB;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,GAAG,KAAK,GAAG,MAAM,KAAK,GAAG,MAAM;MACxC;MAEA,cAAc,OAAkB,WAAoB;AAClD,YAAI,KAAK,eAAe,OAAA,QAAQ,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,KAAK;AAAa;AAC3E,aAAK,MAAM,aAAa,KAAK,KAAK,OAAO,SAAS;AAClD,eAAO;MACT;MAEA,IAAI,QAAK;AACP,cAAM,QAAQ,KAAK,eAAe,OAAA,OAAO,CAAA,IAAK,EAAC,GAAG,KAAK,IAAI,MAAK;AAChE,eAAO,aAAa,OAAO,KAAK,GAAG;MACrC;;AAGF,QAAM,WAAN,cAAuB,OAAM;MAC3B,YACE,KACiB,IACjB,KACA,aAAqB;AAErB,cAAM,KAAK,KAAK,WAAW;AAJV,aAAA,KAAA;MAKnB;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,GAAG,KAAK,GAAG,IAAI,KAAK,EAAE,KAAK,KAAK,GAAG,MAAM;MAClD;;AAGF,QAAM,QAAN,cAAoB,KAAI;MAEtB,YAAqB,OAAW;AAC9B,cAAK;AADc,aAAA,QAAA;AADZ,aAAA,QAAmB,CAAA;MAG5B;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,GAAG,KAAK,KAAK,MAAM;MAC5B;;AAGF,QAAM,QAAN,cAAoB,KAAI;MAEtB,YAAqB,OAAY;AAC/B,cAAK;AADc,aAAA,QAAA;AADZ,aAAA,QAAmB,CAAA;MAG5B;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,cAAM,QAAQ,KAAK,QAAQ,IAAI,KAAK,KAAK,KAAK;AAC9C,eAAO,QAAQ,KAAK,MAAM;MAC5B;;AAGF,QAAM,QAAN,cAAoB,KAAI;MACtB,YAAqB,OAAW;AAC9B,cAAK;AADc,aAAA,QAAA;MAErB;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,SAAS,KAAK,KAAK,MAAM;MAClC;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,MAAM;MACpB;;AAGF,QAAM,UAAN,cAAsB,KAAI;MACxB,YAAoB,MAAc;AAChC,cAAK;AADa,aAAA,OAAA;MAEpB;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,GAAG,KAAK,IAAI,MAAM;MAC3B;MAEA,gBAAa;AACX,eAAO,GAAG,KAAK,IAAI,KAAK,OAAO;MACjC;MAEA,cAAc,OAAkB,WAAoB;AAClD,aAAK,OAAO,aAAa,KAAK,MAAM,OAAO,SAAS;AACpD,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,gBAAgB,OAAA,cAAc,KAAK,KAAK,QAAQ,CAAA;MAC9D;;AAGF,QAAe,aAAf,cAAkC,KAAI;MACpC,YAAqB,QAAqB,CAAA,GAAE;AAC1C,cAAK;AADc,aAAA,QAAA;MAErB;MAEA,OAAO,MAAe;AACpB,eAAO,KAAK,MAAM,OAAO,CAAC,MAAM,MAAM,OAAO,EAAE,OAAO,IAAI,GAAG,EAAE;MACjE;MAEA,gBAAa;AACX,cAAM,EAAC,MAAK,IAAI;AAChB,YAAI,IAAI,MAAM;AACd,eAAO,KAAK;AACV,gBAAM,IAAI,MAAM,CAAC,EAAE,cAAa;AAChC,cAAI,MAAM,QAAQ,CAAC;AAAG,kBAAM,OAAO,GAAG,GAAG,GAAG,CAAC;mBACpC;AAAG,kBAAM,CAAC,IAAI;;AAClB,kBAAM,OAAO,GAAG,CAAC;QACxB;AACA,eAAO,MAAM,SAAS,IAAI,OAAO;MACnC;MAEA,cAAc,OAAkB,WAAoB;AAClD,cAAM,EAAC,MAAK,IAAI;AAChB,YAAI,IAAI,MAAM;AACd,eAAO,KAAK;AAEV,gBAAM,IAAI,MAAM,CAAC;AACjB,cAAI,EAAE,cAAc,OAAO,SAAS;AAAG;AACvC,wBAAc,OAAO,EAAE,KAAK;AAC5B,gBAAM,OAAO,GAAG,CAAC;QACnB;AACA,eAAO,MAAM,SAAS,IAAI,OAAO;MACnC;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,MAAM,OAAO,CAAC,OAAkB,MAAM,SAAS,OAAO,EAAE,KAAK,GAAG,CAAA,CAAE;MAChF;;AAOF,QAAe,YAAf,cAAiC,WAAU;MACzC,OAAO,MAAe;AACpB,eAAO,MAAM,KAAK,KAAK,MAAM,OAAO,IAAI,IAAI,MAAM,KAAK;MACzD;;AAGF,QAAM,OAAN,cAAmB,WAAU;;AAE7B,QAAM,OAAN,cAAmB,UAAS;;AACV,SAAA,OAAO;AAGzB,QAAM,KAAN,MAAM,YAAW,UAAS;MAGxB,YACU,WACR,OAAmB;AAEnB,cAAM,KAAK;AAHH,aAAA,YAAA;MAIV;MAEA,OAAO,MAAe;AACpB,YAAI,OAAO,MAAM,KAAK,SAAS,MAAM,MAAM,OAAO,IAAI;AACtD,YAAI,KAAK;AAAM,kBAAQ,UAAU,KAAK,KAAK,OAAO,IAAI;AACtD,eAAO;MACT;MAEA,gBAAa;AACX,cAAM,cAAa;AACnB,cAAM,OAAO,KAAK;AAClB,YAAI,SAAS;AAAM,iBAAO,KAAK;AAC/B,YAAI,IAAI,KAAK;AACb,YAAI,GAAG;AACL,gBAAM,KAAK,EAAE,cAAa;AAC1B,cAAI,KAAK,OAAO,MAAM,QAAQ,EAAE,IAAI,IAAI,KAAK,EAAE,IAAK;QACtD;AACA,YAAI,GAAG;AACL,cAAI,SAAS;AAAO,mBAAO,aAAa,MAAK,IAAI,EAAE;AACnD,cAAI,KAAK,MAAM;AAAQ,mBAAO;AAC9B,iBAAO,IAAI,IAAG,IAAI,IAAI,GAAG,aAAa,MAAK,CAAC,CAAC,IAAI,EAAE,KAAK;QAC1D;AACA,YAAI,SAAS,SAAS,CAAC,KAAK,MAAM;AAAQ,iBAAO;AACjD,eAAO;MACT;MAEA,cAAc,OAAkB,WAAoB;;AAClD,aAAK,QAAO,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,cAAc,OAAO,SAAS;AACrD,YAAI,EAAE,MAAM,cAAc,OAAO,SAAS,KAAK,KAAK;AAAO;AAC3D,aAAK,YAAY,aAAa,KAAK,WAAW,OAAO,SAAS;AAC9D,eAAO;MACT;MAEA,IAAI,QAAK;AACP,cAAM,QAAQ,MAAM;AACpB,qBAAa,OAAO,KAAK,SAAS;AAClC,YAAI,KAAK;AAAM,mBAAS,OAAO,KAAK,KAAK,KAAK;AAC9C,eAAO;MACT;;AA7CgB,OAAA,OAAO;AAoDzB,QAAe,MAAf,cAA2B,UAAS;;AAClB,QAAA,OAAO;AAGzB,QAAM,UAAN,cAAsB,IAAG;MACvB,YAAoB,WAAe;AACjC,cAAK;AADa,aAAA,YAAA;MAEpB;MAEA,OAAO,MAAe;AACpB,eAAO,OAAO,KAAK,SAAS,MAAM,MAAM,OAAO,IAAI;MACrD;MAEA,cAAc,OAAkB,WAAoB;AAClD,YAAI,CAAC,MAAM,cAAc,OAAO,SAAS;AAAG;AAC5C,aAAK,YAAY,aAAa,KAAK,WAAW,OAAO,SAAS;AAC9D,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,SAAS,MAAM,OAAO,KAAK,UAAU,KAAK;MACnD;;AAGF,QAAM,WAAN,cAAuB,IAAG;MACxB,YACmB,SACA,MACA,MACA,IAAY;AAE7B,cAAK;AALY,aAAA,UAAA;AACA,aAAA,OAAA;AACA,aAAA,OAAA;AACA,aAAA,KAAA;MAGnB;MAEA,OAAO,MAAe;AACpB,cAAM,UAAU,KAAK,MAAM,QAAA,SAAS,MAAM,KAAK;AAC/C,cAAM,EAAC,MAAM,MAAM,GAAE,IAAI;AACzB,eAAO,OAAO,OAAO,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE,KAAK,IAAI,QAAQ,MAAM,OAAO,IAAI;MACxF;MAEA,IAAI,QAAK;AACP,cAAM,QAAQ,aAAa,MAAM,OAAO,KAAK,IAAI;AACjD,eAAO,aAAa,OAAO,KAAK,EAAE;MACpC;;AAGF,QAAM,UAAN,cAAsB,IAAG;MACvB,YACmB,MACA,SACA,MACT,UAAc;AAEtB,cAAK;AALY,aAAA,OAAA;AACA,aAAA,UAAA;AACA,aAAA,OAAA;AACT,aAAA,WAAA;MAGV;MAEA,OAAO,MAAe;AACpB,eAAO,OAAO,KAAK,OAAO,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,QAAQ,MAAM,MAAM,OAAO,IAAI;MAC9F;MAEA,cAAc,OAAkB,WAAoB;AAClD,YAAI,CAAC,MAAM,cAAc,OAAO,SAAS;AAAG;AAC5C,aAAK,WAAW,aAAa,KAAK,UAAU,OAAO,SAAS;AAC5D,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,SAAS,MAAM,OAAO,KAAK,SAAS,KAAK;MAClD;;AAGF,QAAM,OAAN,cAAmB,UAAS;MAE1B,YACS,MACA,MACA,OAAe;AAEtB,cAAK;AAJE,aAAA,OAAA;AACA,aAAA,OAAA;AACA,aAAA,QAAA;MAGT;MAEA,OAAO,MAAe;AACpB,cAAM,SAAS,KAAK,QAAQ,WAAW;AACvC,eAAO,GAAG,MAAM,YAAY,KAAK,IAAI,IAAI,KAAK,IAAI,MAAM,MAAM,OAAO,IAAI;MAC3E;;AAZgB,SAAA,OAAO;AAezB,QAAM,SAAN,cAAqB,WAAU;MAG7B,OAAO,MAAe;AACpB,eAAO,YAAY,MAAM,OAAO,IAAI;MACtC;;AAJgB,WAAA,OAAO;AAOzB,QAAM,MAAN,cAAkB,UAAS;MAIzB,OAAO,MAAe;AACpB,YAAI,OAAO,QAAQ,MAAM,OAAO,IAAI;AACpC,YAAI,KAAK;AAAO,kBAAQ,KAAK,MAAM,OAAO,IAAI;AAC9C,YAAI,KAAK;AAAS,kBAAQ,KAAK,QAAQ,OAAO,IAAI;AAClD,eAAO;MACT;MAEA,gBAAa;;AACX,cAAM,cAAa;AACnB,SAAA,KAAA,KAAK,WAAK,QAAA,OAAA,SAAA,SAAA,GAAE,cAAa;AACzB,SAAA,KAAA,KAAK,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,cAAa;AAC3B,eAAO;MACT;MAEA,cAAc,OAAkB,WAAoB;;AAClD,cAAM,cAAc,OAAO,SAAS;AACpC,SAAA,KAAA,KAAK,WAAK,QAAA,OAAA,SAAA,SAAA,GAAE,cAAc,OAAO,SAAS;AAC1C,SAAA,KAAA,KAAK,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,cAAc,OAAO,SAAS;AAC5C,eAAO;MACT;MAEA,IAAI,QAAK;AACP,cAAM,QAAQ,MAAM;AACpB,YAAI,KAAK;AAAO,mBAAS,OAAO,KAAK,MAAM,KAAK;AAChD,YAAI,KAAK;AAAS,mBAAS,OAAO,KAAK,QAAQ,KAAK;AACpD,eAAO;MACT;;AAOF,QAAM,QAAN,cAAoB,UAAS;MAE3B,YAAqB,OAAW;AAC9B,cAAK;AADc,aAAA,QAAA;MAErB;MAEA,OAAO,MAAe;AACpB,eAAO,SAAS,KAAK,KAAK,MAAM,MAAM,OAAO,IAAI;MACnD;;AAPgB,UAAA,OAAO;AAUzB,QAAM,UAAN,cAAsB,UAAS;MAE7B,OAAO,MAAe;AACpB,eAAO,YAAY,MAAM,OAAO,IAAI;MACtC;;AAHgB,YAAA,OAAO;AAiCzB,QAAa,UAAb,MAAoB;MASlB,YAAY,UAAsB,OAAuB,CAAA,GAAE;AANlD,aAAA,UAA0B,CAAA;AAElB,aAAA,eAAyB,CAAA;AACzB,aAAA,aAAwB,CAAA;AAIvC,aAAK,OAAO,EAAC,GAAG,MAAM,IAAI,KAAK,QAAQ,OAAO,GAAE;AAChD,aAAK,YAAY;AACjB,aAAK,SAAS,IAAI,QAAA,MAAM,EAAC,QAAQ,SAAQ,CAAC;AAC1C,aAAK,SAAS,CAAC,IAAI,KAAI,CAAE;MAC3B;MAEA,WAAQ;AACN,eAAO,KAAK,MAAM,OAAO,KAAK,IAAI;MACpC;;MAGA,KAAK,QAAc;AACjB,eAAO,KAAK,OAAO,KAAK,MAAM;MAChC;;MAGA,UAAU,QAAc;AACtB,eAAO,KAAK,UAAU,KAAK,MAAM;MACnC;;MAGA,WAAW,cAAuC,OAAgB;AAChE,cAAM,OAAO,KAAK,UAAU,MAAM,cAAc,KAAK;AACrD,cAAM,KAAK,KAAK,QAAQ,KAAK,MAAM,MAAM,KAAK,QAAQ,KAAK,MAAM,IAAI,oBAAI,IAAG;AAC5E,WAAG,IAAI,IAAI;AACX,eAAO;MACT;MAEA,cAAc,QAAgB,UAAiB;AAC7C,eAAO,KAAK,UAAU,SAAS,QAAQ,QAAQ;MACjD;;;MAIA,UAAU,WAAe;AACvB,eAAO,KAAK,UAAU,UAAU,WAAW,KAAK,OAAO;MACzD;MAEA,YAAS;AACP,eAAO,KAAK,UAAU,UAAU,KAAK,OAAO;MAC9C;MAEQ,KACN,SACA,cACA,KACA,UAAkB;AAElB,cAAM,OAAO,KAAK,OAAO,OAAO,YAAY;AAC5C,YAAI,QAAQ,UAAa;AAAU,eAAK,WAAW,KAAK,GAAG,IAAI;AAC/D,aAAK,UAAU,IAAI,IAAI,SAAS,MAAM,GAAG,CAAC;AAC1C,eAAO;MACT;;MAGA,MAAM,cAA6B,KAAe,WAAmB;AACnE,eAAO,KAAK,KAAK,QAAA,SAAS,OAAO,cAAc,KAAK,SAAS;MAC/D;;MAGA,IAAI,cAA6B,KAAgB,WAAmB;AAClE,eAAO,KAAK,KAAK,QAAA,SAAS,KAAK,cAAc,KAAK,SAAS;MAC7D;;MAGA,IAAI,cAA6B,KAAgB,WAAmB;AAClE,eAAO,KAAK,KAAK,QAAA,SAAS,KAAK,cAAc,KAAK,SAAS;MAC7D;;MAGA,OAAO,KAAW,KAAe,aAAqB;AACpD,eAAO,KAAK,UAAU,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC;MACzD;;MAGA,IAAI,KAAW,KAAa;AAC1B,eAAO,KAAK,UAAU,IAAI,SAAS,KAAK,QAAA,UAAU,KAAK,GAAG,CAAC;MAC7D;;MAGA,KAAK,GAAmB;AACtB,YAAI,OAAO,KAAK;AAAY,YAAC;iBACpB,MAAM,OAAA;AAAK,eAAK,UAAU,IAAI,QAAQ,CAAC,CAAC;AACjD,eAAO;MACT;;MAGA,UAAU,WAA+C;AACvD,cAAM,OAAmB,CAAC,GAAG;AAC7B,mBAAW,CAAC,KAAK,KAAK,KAAK,WAAW;AACpC,cAAI,KAAK,SAAS;AAAG,iBAAK,KAAK,GAAG;AAClC,eAAK,KAAK,GAAG;AACb,cAAI,QAAQ,SAAS,KAAK,KAAK,KAAK;AAClC,iBAAK,KAAK,GAAG;AACb,aAAA,GAAA,OAAA,YAAW,MAAM,KAAK;UACxB;QACF;AACA,aAAK,KAAK,GAAG;AACb,eAAO,IAAI,OAAA,MAAM,IAAI;MACvB;;MAGA,GAAG,WAA2B,UAAkB,UAAgB;AAC9D,aAAK,WAAW,IAAI,GAAG,SAAS,CAAC;AAEjC,YAAI,YAAY,UAAU;AACxB,eAAK,KAAK,QAAQ,EAAE,KAAI,EAAG,KAAK,QAAQ,EAAE,MAAK;QACjD,WAAW,UAAU;AACnB,eAAK,KAAK,QAAQ,EAAE,MAAK;QAC3B,WAAW,UAAU;AACnB,gBAAM,IAAI,MAAM,0CAA0C;QAC5D;AACA,eAAO;MACT;;MAGA,OAAO,WAAyB;AAC9B,eAAO,KAAK,UAAU,IAAI,GAAG,SAAS,CAAC;MACzC;;MAGA,OAAI;AACF,eAAO,KAAK,UAAU,IAAI,KAAI,CAAE;MAClC;;MAGA,QAAK;AACH,eAAO,KAAK,cAAc,IAAI,IAAI;MACpC;MAEQ,KAAK,MAAW,SAAe;AACrC,aAAK,WAAW,IAAI;AACpB,YAAI;AAAS,eAAK,KAAK,OAAO,EAAE,OAAM;AACtC,eAAO;MACT;;MAGA,IAAI,WAAiB,SAAe;AAClC,eAAO,KAAK,KAAK,IAAI,QAAQ,SAAS,GAAG,OAAO;MAClD;;MAGA,SACE,cACA,MACA,IACA,SACA,UAAgB,KAAK,KAAK,MAAM,QAAA,SAAS,MAAM,QAAA,SAAS,KAAG;AAE3D,cAAM,OAAO,KAAK,OAAO,OAAO,YAAY;AAC5C,eAAO,KAAK,KAAK,IAAI,SAAS,SAAS,MAAM,MAAM,EAAE,GAAG,MAAM,QAAQ,IAAI,CAAC;MAC7E;;MAGA,MACE,cACA,UACA,SACA,UAAgB,QAAA,SAAS,OAAK;AAE9B,cAAM,OAAO,KAAK,OAAO,OAAO,YAAY;AAC5C,YAAI,KAAK,KAAK,KAAK;AACjB,gBAAM,MAAM,oBAAoB,OAAA,OAAO,WAAW,KAAK,IAAI,QAAQ,QAAQ;AAC3E,iBAAO,KAAK,SAAS,MAAM,IAAG,GAAA,OAAA,KAAI,GAAG,WAAW,CAAC,MAAK;AACpD,iBAAK,IAAI,OAAM,GAAA,OAAA,KAAI,GAAG,IAAI,CAAC,GAAG;AAC9B,oBAAQ,IAAI;UACd,CAAC;QACH;AACA,eAAO,KAAK,KAAK,IAAI,QAAQ,MAAM,SAAS,MAAM,QAAQ,GAAG,MAAM,QAAQ,IAAI,CAAC;MAClF;;;MAIA,MACE,cACA,KACA,SACA,UAAgB,KAAK,KAAK,MAAM,QAAA,SAAS,MAAM,QAAA,SAAS,OAAK;AAE7D,YAAI,KAAK,KAAK,eAAe;AAC3B,iBAAO,KAAK,MAAM,eAAc,GAAA,OAAA,iBAAgB,GAAG,KAAK,OAAO;QACjE;AACA,cAAM,OAAO,KAAK,OAAO,OAAO,YAAY;AAC5C,eAAO,KAAK,KAAK,IAAI,QAAQ,MAAM,SAAS,MAAM,GAAG,GAAG,MAAM,QAAQ,IAAI,CAAC;MAC7E;;MAGA,SAAM;AACJ,eAAO,KAAK,cAAc,GAAG;MAC/B;;MAGA,MAAM,OAAW;AACf,eAAO,KAAK,UAAU,IAAI,MAAM,KAAK,CAAC;MACxC;;MAGA,MAAM,OAAY;AAChB,eAAO,KAAK,UAAU,IAAI,MAAM,KAAK,CAAC;MACxC;;MAGA,OAAO,OAAuB;AAC5B,cAAM,OAAO,IAAI,OAAM;AACvB,aAAK,WAAW,IAAI;AACpB,aAAK,KAAK,KAAK;AACf,YAAI,KAAK,MAAM,WAAW;AAAG,gBAAM,IAAI,MAAM,wCAAwC;AACrF,eAAO,KAAK,cAAc,MAAM;MAClC;;MAGA,IAAI,SAAgB,WAA+B,aAAmB;AACpE,YAAI,CAAC,aAAa,CAAC;AAAa,gBAAM,IAAI,MAAM,8CAA8C;AAC9F,cAAM,OAAO,IAAI,IAAG;AACpB,aAAK,WAAW,IAAI;AACpB,aAAK,KAAK,OAAO;AACjB,YAAI,WAAW;AACb,gBAAM,QAAQ,KAAK,KAAK,GAAG;AAC3B,eAAK,YAAY,KAAK,QAAQ,IAAI,MAAM,KAAK;AAC7C,oBAAU,KAAK;QACjB;AACA,YAAI,aAAa;AACf,eAAK,YAAY,KAAK,UAAU,IAAI,QAAO;AAC3C,eAAK,KAAK,WAAW;QACvB;AACA,eAAO,KAAK,cAAc,OAAO,OAAO;MAC1C;;MAGA,MAAM,OAAW;AACf,eAAO,KAAK,UAAU,IAAI,MAAM,KAAK,CAAC;MACxC;;MAGA,MAAM,MAAc,WAAkB;AACpC,aAAK,aAAa,KAAK,KAAK,OAAO,MAAM;AACzC,YAAI;AAAM,eAAK,KAAK,IAAI,EAAE,SAAS,SAAS;AAC5C,eAAO;MACT;;MAGA,SAAS,WAAkB;AACzB,cAAM,MAAM,KAAK,aAAa,IAAG;AACjC,YAAI,QAAQ;AAAW,gBAAM,IAAI,MAAM,sCAAsC;AAC7E,cAAM,UAAU,KAAK,OAAO,SAAS;AACrC,YAAI,UAAU,KAAM,cAAc,UAAa,YAAY,WAAY;AACrE,gBAAM,IAAI,MAAM,mCAAmC,OAAO,OAAO,SAAS,WAAW;QACvF;AACA,aAAK,OAAO,SAAS;AACrB,eAAO;MACT;;MAGA,KAAK,MAAY,OAAa,OAAA,KAAK,OAAiB,UAAgB;AAClE,aAAK,WAAW,IAAI,KAAK,MAAM,MAAM,KAAK,CAAC;AAC3C,YAAI;AAAU,eAAK,KAAK,QAAQ,EAAE,QAAO;AACzC,eAAO;MACT;;MAGA,UAAO;AACL,eAAO,KAAK,cAAc,IAAI;MAChC;MAEA,SAAS,IAAI,GAAC;AACZ,eAAO,MAAM,GAAG;AACd,eAAK,MAAM,cAAa;AACxB,eAAK,MAAM,cAAc,KAAK,MAAM,OAAO,KAAK,UAAU;QAC5D;MACF;MAEQ,UAAU,MAAc;AAC9B,aAAK,UAAU,MAAM,KAAK,IAAI;AAC9B,eAAO;MACT;MAEQ,WAAW,MAAoB;AACrC,aAAK,UAAU,MAAM,KAAK,IAAI;AAC9B,aAAK,OAAO,KAAK,IAAI;MACvB;MAEQ,cAAc,IAAsB,IAAqB;AAC/D,cAAM,IAAI,KAAK;AACf,YAAI,aAAa,MAAO,MAAM,aAAa,IAAK;AAC9C,eAAK,OAAO,IAAG;AACf,iBAAO;QACT;AACA,cAAM,IAAI,MAAM,0BAA0B,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,GAAG;MACrF;MAEQ,UAAU,MAAe;AAC/B,cAAM,IAAI,KAAK;AACf,YAAI,EAAE,aAAa,KAAK;AACtB,gBAAM,IAAI,MAAM,8BAA8B;QAChD;AACA,aAAK,YAAY,EAAE,OAAO;AAC1B,eAAO;MACT;MAEA,IAAY,QAAK;AACf,eAAO,KAAK,OAAO,CAAC;MACtB;MAEA,IAAY,YAAS;AACnB,cAAM,KAAK,KAAK;AAChB,eAAO,GAAG,GAAG,SAAS,CAAC;MACzB;MAEA,IAAY,UAAU,MAAgB;AACpC,cAAM,KAAK,KAAK;AAChB,WAAG,GAAG,SAAS,CAAC,IAAI;MACtB;;AAjUF,YAAA,UAAA;AAwUA,aAAS,SAAS,OAAkB,MAAe;AACjD,iBAAW,KAAK;AAAM,cAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,KAAK,CAAC,KAAK;AAC/D,aAAO;IACT;AAEA,aAAS,aAAa,OAAkB,MAAc;AACpD,aAAO,gBAAgB,OAAA,cAAc,SAAS,OAAO,KAAK,KAAK,IAAI;IACrE;AAGA,aAAS,aAAa,MAAgB,OAAkB,WAAoB;AAC1E,UAAI,gBAAgB,OAAA;AAAM,eAAO,YAAY,IAAI;AACjD,UAAI,CAAC,YAAY,IAAI;AAAG,eAAO;AAC/B,aAAO,IAAI,OAAA,MACT,KAAK,OAAO,OAAO,CAAC,OAAmB,MAAwB;AAC7D,YAAI,aAAa,OAAA;AAAM,cAAI,YAAY,CAAC;AACxC,YAAI,aAAa,OAAA;AAAO,gBAAM,KAAK,GAAG,EAAE,MAAM;;AACzC,gBAAM,KAAK,CAAC;AACjB,eAAO;MACT,GAAG,CAAA,CAAE,CAAC;AAGR,eAAS,YAAY,GAAO;AAC1B,cAAM,IAAI,UAAU,EAAE,GAAG;AACzB,YAAI,MAAM,UAAa,MAAM,EAAE,GAAG,MAAM;AAAG,iBAAO;AAClD,eAAO,MAAM,EAAE,GAAG;AAClB,eAAO;MACT;AAEA,eAAS,YAAY,GAAW;AAC9B,eACE,aAAa,OAAA,SACb,EAAE,OAAO,KACP,CAAC,MAAM,aAAa,OAAA,QAAQ,MAAM,EAAE,GAAG,MAAM,KAAK,UAAU,EAAE,GAAG,MAAM,MAAS;MAGtF;IACF;AAEA,aAAS,cAAc,OAAkB,MAAe;AACtD,iBAAW,KAAK;AAAM,cAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,KAAK,CAAC,KAAK;IACjE;AAGA,aAAgB,IAAI,GAAkB;AACpC,aAAO,OAAO,KAAK,aAAa,OAAO,KAAK,YAAY,MAAM,OAAO,CAAC,KAAI,GAAA,OAAA,MAAK,IAAI,CAAC,CAAC;IACvF;AAFA,YAAA,MAAA;AAIA,QAAM,UAAU,QAAQ,QAAA,UAAU,GAAG;AAGrC,aAAgB,OAAO,MAAY;AACjC,aAAO,KAAK,OAAO,OAAO;IAC5B;AAFA,YAAA,MAAA;AAIA,QAAM,SAAS,QAAQ,QAAA,UAAU,EAAE;AAGnC,aAAgB,MAAM,MAAY;AAChC,aAAO,KAAK,OAAO,MAAM;IAC3B;AAFA,YAAA,KAAA;AAMA,aAAS,QAAQ,IAAQ;AACvB,aAAO,CAAC,GAAG,MAAO,MAAM,OAAA,MAAM,IAAI,MAAM,OAAA,MAAM,KAAI,GAAA,OAAA,KAAI,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC;IAC9E;AAEA,aAAS,IAAI,GAAO;AAClB,aAAO,aAAa,OAAA,OAAO,KAAI,GAAA,OAAA,MAAK,CAAC;IACvC;;;;;;;;;;ACj1BA,QAAA,YAAA;AACA,QAAA,SAAA;AAIA,aAAgB,OAAkC,KAAQ;AACxD,YAAM,OAA0B,CAAA;AAChC,iBAAW,QAAQ;AAAK,aAAK,IAAI,IAAI;AACrC,aAAO;IACT;AAJA,YAAA,SAAA;AAMA,aAAgB,kBAAkB,IAAe,QAAiB;AAChE,UAAI,OAAO,UAAU;AAAW,eAAO;AACvC,UAAI,OAAO,KAAK,MAAM,EAAE,WAAW;AAAG,eAAO;AAC7C,wBAAkB,IAAI,MAAM;AAC5B,aAAO,CAAC,eAAe,QAAQ,GAAG,KAAK,MAAM,GAAG;IAClD;AALA,YAAA,oBAAA;AAOA,aAAgB,kBAAkB,IAAe,SAAoB,GAAG,QAAM;AAC5E,YAAM,EAAC,MAAM,MAAAC,MAAI,IAAI;AACrB,UAAI,CAAC,KAAK;AAAc;AACxB,UAAI,OAAO,WAAW;AAAW;AACjC,YAAM,QAAQA,MAAK,MAAM;AACzB,iBAAW,OAAO,QAAQ;AACxB,YAAI,CAAC,MAAM,GAAG;AAAG,0BAAgB,IAAI,qBAAqB,GAAG,GAAG;MAClE;IACF;AARA,YAAA,oBAAA;AAUA,aAAgB,eACd,QACA,OAAyC;AAEzC,UAAI,OAAO,UAAU;AAAW,eAAO,CAAC;AACxC,iBAAW,OAAO;AAAQ,YAAI,MAAM,GAAG;AAAG,iBAAO;AACjD,aAAO;IACT;AAPA,YAAA,iBAAA;AASA,aAAgB,qBAAqB,QAAmB,OAAsB;AAC5E,UAAI,OAAO,UAAU;AAAW,eAAO,CAAC;AACxC,iBAAW,OAAO;AAAQ,YAAI,QAAQ,UAAU,MAAM,IAAI,GAAG;AAAG,iBAAO;AACvE,aAAO;IACT;AAJA,YAAA,uBAAA;AAMA,aAAgB,eACd,EAAC,cAAc,WAAU,GACzB,QACA,SACA,OAAsB;AAEtB,UAAI,CAAC,OAAO;AACV,YAAI,OAAO,UAAU,YAAY,OAAO,UAAU;AAAW,iBAAO;AACpE,YAAI,OAAO,UAAU;AAAU,kBAAO,GAAA,UAAA,KAAI,MAAM;MAClD;AACA,cAAO,GAAA,UAAA,KAAI,YAAY,GAAG,UAAU,IAAG,GAAA,UAAA,aAAY,OAAO,CAAC;IAC7D;AAXA,YAAA,iBAAA;AAaA,aAAgB,iBAAiB,KAAW;AAC1C,aAAO,oBAAoB,mBAAmB,GAAG,CAAC;IACpD;AAFA,YAAA,mBAAA;AAIA,aAAgB,eAAe,KAAoB;AACjD,aAAO,mBAAmB,kBAAkB,GAAG,CAAC;IAClD;AAFA,YAAA,iBAAA;AAIA,aAAgB,kBAAkB,KAAoB;AACpD,UAAI,OAAO,OAAO;AAAU,eAAO,GAAG,GAAG;AACzC,aAAO,IAAI,QAAQ,MAAM,IAAI,EAAE,QAAQ,OAAO,IAAI;IACpD;AAHA,YAAA,oBAAA;AAKA,aAAgB,oBAAoB,KAAW;AAC7C,aAAO,IAAI,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;IACnD;AAFA,YAAA,sBAAA;AAIA,aAAgB,SAAY,IAAaC,IAAiB;AACxD,UAAI,MAAM,QAAQ,EAAE,GAAG;AACrB,mBAAW,KAAK;AAAI,UAAAA,GAAE,CAAC;MACzB,OAAO;AACL,QAAAA,GAAE,EAAE;MACN;IACF;AANA,YAAA,WAAA;AAwBA,aAAS,mBAA4C,EACnD,YACA,aACA,aACA,aAAY,GACS;AACrB,aAAO,CAAC,KAAK,MAAM,IAAI,WAAU;AAC/B,cAAM,MACJ,OAAO,SACH,OACA,cAAc,UAAA,QACb,gBAAgB,UAAA,OAAO,WAAW,KAAK,MAAM,EAAE,IAAI,YAAY,KAAK,MAAM,EAAE,GAAG,MAChF,gBAAgB,UAAA,QACf,YAAY,KAAK,IAAI,IAAI,GAAG,QAC7B,YAAY,MAAM,EAAE;AAC1B,eAAO,WAAW,UAAA,QAAQ,EAAE,eAAe,UAAA,QAAQ,aAAa,KAAK,GAAG,IAAI;MAC9E;IACF;AAOa,YAAA,iBAAiC;MAC5C,OAAO,mBAAmB;QACxB,YAAY,CAAC,KAAK,MAAM,OACtB,IAAI,IAAG,GAAA,UAAA,KAAI,EAAE,gBAAgB,IAAI,kBAAkB,MAAK;AACtD,cAAI,IACF,GAAA,UAAA,KAAI,IAAI,aACR,MAAM,IAAI,OAAO,IAAI,IAAI,GACzB,MAAM,IAAI,OAAO,KAAI,GAAA,UAAA,KAAI,EAAE,QAAQ,EAAE,MAAK,GAAA,UAAA,mBAAkB,EAAE,KAAK,IAAI,GAAG,CAAC;QAE/E,CAAC;QACH,aAAa,CAAC,KAAK,MAAM,OACvB,IAAI,IAAG,GAAA,UAAA,KAAI,EAAE,aAAa,MAAK;AAC7B,cAAI,SAAS,MAAM;AACjB,gBAAI,OAAO,IAAI,IAAI;UACrB,OAAO;AACL,gBAAI,OAAO,KAAI,GAAA,UAAA,KAAI,EAAE,QAAQ;AAC7B,yBAAa,KAAK,IAAI,IAAI;UAC5B;QACF,CAAC;QACH,aAAa,CAAC,MAAM,OAAQ,SAAS,OAAO,OAAO,EAAC,GAAG,MAAM,GAAG,GAAE;QAClE,cAAc;OACf;MACD,OAAO,mBAAmB;QACxB,YAAY,CAAC,KAAK,MAAM,OACtB,IAAI,IAAG,GAAA,UAAA,KAAI,EAAE,gBAAgB,IAAI,kBAAkB,MACjD,IAAI,OAAO,KAAI,GAAA,UAAA,KAAI,IAAI,sBAAsB,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,IAAI,EAAE,CAAC;QAElF,aAAa,CAAC,KAAK,MAAM,OACvB,IAAI,IAAG,GAAA,UAAA,KAAI,EAAE,aAAa,MACxB,IAAI,OAAO,IAAI,SAAS,OAAO,QAAO,GAAA,UAAA,KAAI,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,IAAI,EAAE,CAAC;QAE/E,aAAa,CAAC,MAAM,OAAQ,SAAS,OAAO,OAAO,KAAK,IAAI,MAAM,EAAE;QACpE,cAAc,CAAC,KAAK,UAAU,IAAI,IAAI,SAAS,KAAK;OACrD;;AAGH,aAAgB,qBAAqB,KAAc,IAAwB;AACzE,UAAI,OAAO;AAAM,eAAO,IAAI,IAAI,SAAS,IAAI;AAC7C,YAAM,QAAQ,IAAI,IAAI,UAAS,GAAA,UAAA,MAAK;AACpC,UAAI,OAAO;AAAW,qBAAa,KAAK,OAAO,EAAE;AACjD,aAAO;IACT;AALA,YAAA,uBAAA;AAOA,aAAgB,aAAa,KAAc,OAAa,IAA0B;AAChF,aAAO,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,IAAI,QAAO,GAAA,UAAA,KAAI,KAAK,IAAG,GAAA,UAAA,aAAY,CAAC,CAAC,IAAI,IAAI,CAAC;IAC/E;AAFA,YAAA,eAAA;AAIA,QAAM,WAAoC,CAAA;AAE1C,aAAgB,QAAQ,KAAcA,IAAiB;AACrD,aAAO,IAAI,WAAW,QAAQ;QAC5B,KAAKA;QACL,MAAM,SAASA,GAAE,IAAI,MAAM,SAASA,GAAE,IAAI,IAAI,IAAI,OAAA,MAAMA,GAAE,IAAI;OAC/D;IACH;AALA,YAAA,UAAA;AAOA,QAAY;AAAZ,KAAA,SAAYC,OAAI;AACd,MAAAA,MAAAA,MAAA,KAAA,IAAA,CAAA,IAAA;AACA,MAAAA,MAAAA,MAAA,KAAA,IAAA,CAAA,IAAA;IACF,GAHY,SAAI,QAAA,OAAJ,OAAI,CAAA,EAAA;AAKhB,aAAgB,aACd,UACA,cACA,kBAA0B;AAG1B,UAAI,oBAAoB,UAAA,MAAM;AAC5B,cAAM,WAAW,iBAAiB,KAAK;AACvC,eAAO,mBACH,YACE,GAAA,UAAA,WAAU,QAAQ,YAClB,GAAA,UAAA,YAAW,QAAQ,YACrB,YACA,GAAA,UAAA,WAAU,QAAQ,MAClB,GAAA,UAAA,WAAU,QAAQ;MACxB;AACA,aAAO,oBAAmB,GAAA,UAAA,aAAY,QAAQ,EAAE,SAAQ,IAAK,MAAM,kBAAkB,QAAQ;IAC/F;AAjBA,YAAA,eAAA;AAmBA,aAAgB,gBACd,IACA,KACA,OAAwB,GAAG,KAAK,cAAY;AAE5C,UAAI,CAAC;AAAM;AACX,YAAM,gBAAgB,GAAG;AACzB,UAAI,SAAS;AAAM,cAAM,IAAI,MAAM,GAAG;AACtC,SAAG,KAAK,OAAO,KAAK,GAAG;IACzB;AATA,YAAA,kBAAA;;;;;;;;;AC3MA,QAAA,YAAA;AAEA,QAAM,QAAQ;;MAEZ,MAAM,IAAI,UAAA,KAAK,MAAM;;;MAErB,QAAQ,IAAI,UAAA,KAAK,QAAQ;;MACzB,cAAc,IAAI,UAAA,KAAK,cAAc;MACrC,YAAY,IAAI,UAAA,KAAK,YAAY;MACjC,oBAAoB,IAAI,UAAA,KAAK,oBAAoB;MACjD,UAAU,IAAI,UAAA,KAAK,UAAU;;MAC7B,gBAAgB,IAAI,UAAA,KAAK,gBAAgB;;;MAEzC,SAAS,IAAI,UAAA,KAAK,SAAS;;MAC3B,QAAQ,IAAI,UAAA,KAAK,QAAQ;;MACzB,MAAM,IAAI,UAAA,KAAK,MAAM;;MAErB,MAAM,IAAI,UAAA,KAAK,MAAM;MACrB,OAAO,IAAI,UAAA,KAAK,OAAO;;MAEvB,MAAM,IAAI,UAAA,KAAK,MAAM;MACrB,SAAS,IAAI,UAAA,KAAK,SAAS;MAC3B,SAAS,IAAI,UAAA,KAAK,SAAS;MAC3B,UAAU,IAAI,UAAA,KAAK,UAAU;;AAG/B,YAAA,UAAe;;;;;;;;;;ACxBf,QAAA,YAAA;AAEA,QAAA,SAAA;AACA,QAAA,UAAA;AAEa,YAAA,eAAuC;MAClD,SAAS,CAAC,EAAC,QAAO,OAAM,GAAA,UAAA,kBAAiB,OAAO;;AAGrC,YAAA,oBAA4C;MACvD,SAAS,CAAC,EAAC,SAAS,WAAU,MAC5B,cACI,GAAA,UAAA,QAAO,OAAO,qBAAqB,UAAU,cAC7C,GAAA,UAAA,QAAO,OAAO;;AAStB,aAAgB,YACd,KACA,QAAgC,QAAA,cAChC,YACA,mBAA2B;AAE3B,YAAM,EAAC,GAAE,IAAI;AACb,YAAM,EAAC,KAAK,eAAe,UAAS,IAAI;AACxC,YAAM,SAAS,gBAAgB,KAAK,OAAO,UAAU;AACrD,UAAI,sBAAiB,QAAjB,sBAAiB,SAAjB,oBAAsB,iBAAiB,WAAY;AACrD,iBAAS,KAAK,MAAM;MACtB,OAAO;AACL,qBAAa,KAAI,GAAA,UAAA,MAAK,MAAM,GAAG;MACjC;IACF;AAdA,YAAA,cAAA;AAgBA,aAAgB,iBACd,KACA,QAAgC,QAAA,cAChC,YAAuB;AAEvB,YAAM,EAAC,GAAE,IAAI;AACb,YAAM,EAAC,KAAK,eAAe,UAAS,IAAI;AACxC,YAAM,SAAS,gBAAgB,KAAK,OAAO,UAAU;AACrD,eAAS,KAAK,MAAM;AACpB,UAAI,EAAE,iBAAiB,YAAY;AACjC,qBAAa,IAAI,QAAA,QAAE,OAAO;MAC5B;IACF;AAZA,YAAA,mBAAA;AAcA,aAAgB,iBAAiB,KAAc,WAAe;AAC5D,UAAI,OAAO,QAAA,QAAE,QAAQ,SAAS;AAC9B,UAAI,IAAG,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,aAAa,MAC/B,IAAI,GACF,WACA,MAAM,IAAI,QAAO,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,WAAW,SAAS,GAClD,MAAM,IAAI,OAAO,QAAA,QAAE,SAAS,IAAI,CAAC,CAClC;IAEL;AATA,YAAA,mBAAA;AAWA,aAAgB,aAAa,EAC3B,KACA,SACA,aACA,MACA,WACA,GAAE,GACc;AAEhB,UAAI,cAAc;AAAW,cAAM,IAAI,MAAM,0BAA0B;AACvE,YAAM,MAAM,IAAI,KAAK,KAAK;AAC1B,UAAI,SAAS,KAAK,WAAW,QAAA,QAAE,QAAQ,CAAC,MAAK;AAC3C,YAAI,MAAM,MAAK,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,IAAI,CAAC,GAAG;AACpC,YAAI,IAAG,GAAA,UAAA,KAAI,GAAG,+BAA+B,MAC3C,IAAI,QAAO,GAAA,UAAA,KAAI,GAAG,kBAAiB,GAAA,UAAA,WAAU,QAAA,QAAE,cAAc,GAAG,SAAS,CAAC,CAAC;AAE7E,YAAI,QAAO,GAAA,UAAA,KAAI,GAAG,gBAAe,GAAA,UAAA,OAAM,GAAG,aAAa,IAAI,OAAO,EAAE;AACpE,YAAI,GAAG,KAAK,SAAS;AACnB,cAAI,QAAO,GAAA,UAAA,KAAI,GAAG,WAAW,WAAW;AACxC,cAAI,QAAO,GAAA,UAAA,KAAI,GAAG,SAAS,IAAI;QACjC;MACF,CAAC;IACH;AAtBA,YAAA,eAAA;AAwBA,aAAS,SAAS,KAAc,QAAY;AAC1C,YAAM,MAAM,IAAI,MAAM,OAAO,MAAM;AACnC,UAAI,IACF,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,aACb,MAAM,IAAI,OAAO,QAAA,QAAE,UAAS,GAAA,UAAA,MAAK,GAAG,GAAG,IACvC,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,SAAS,GAAG,GAAG;AAE9B,UAAI,MAAK,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI;IAC3B;AAEA,aAAS,aAAa,IAAe,MAAU;AAC7C,YAAM,EAAC,KAAK,cAAc,UAAS,IAAI;AACvC,UAAI,UAAU,QAAQ;AACpB,YAAI,OAAM,GAAA,UAAA,SAAQ,GAAG,eAAuB,IAAI,IAAI,GAAG;MACzD,OAAO;AACL,YAAI,QAAO,GAAA,UAAA,KAAI,YAAY,WAAW,IAAI;AAC1C,YAAI,OAAO,KAAK;MAClB;IACF;AAEA,QAAM,IAAI;MACR,SAAS,IAAI,UAAA,KAAK,SAAS;MAC3B,YAAY,IAAI,UAAA,KAAK,YAAY;;MACjC,QAAQ,IAAI,UAAA,KAAK,QAAQ;MACzB,cAAc,IAAI,UAAA,KAAK,cAAc;MACrC,SAAS,IAAI,UAAA,KAAK,SAAS;MAC3B,QAAQ,IAAI,UAAA,KAAK,QAAQ;MACzB,cAAc,IAAI,UAAA,KAAK,cAAc;;AAGvC,aAAS,gBACP,KACA,OACA,YAAuB;AAEvB,YAAM,EAAC,aAAY,IAAI,IAAI;AAC3B,UAAI,iBAAiB;AAAO,gBAAO,GAAA,UAAA;AACnC,aAAO,YAAY,KAAK,OAAO,UAAU;IAC3C;AAEA,aAAS,YACP,KACA,OACA,aAAyB,CAAA,GAAE;AAE3B,YAAM,EAAC,KAAK,GAAE,IAAI;AAClB,YAAM,YAAyC;QAC7C,kBAAkB,IAAI,UAAU;QAChC,gBAAgB,KAAK,UAAU;;AAEjC,sBAAgB,KAAK,OAAO,SAAS;AACrC,aAAO,IAAI,OAAO,GAAG,SAAS;IAChC;AAEA,aAAS,kBAAkB,EAAC,UAAS,GAAc,EAAC,aAAY,GAAa;AAC3E,YAAM,WAAW,gBACb,GAAA,UAAA,OAAM,SAAS,IAAG,GAAA,OAAA,cAAa,cAAc,OAAA,KAAK,GAAG,CAAC,KACtD;AACJ,aAAO,CAAC,QAAA,QAAE,eAAc,GAAA,UAAA,WAAU,QAAA,QAAE,cAAc,QAAQ,CAAC;IAC7D;AAEA,aAAS,gBACP,EAAC,SAAS,IAAI,EAAC,cAAa,EAAC,GAC7B,EAAC,YAAY,aAAY,GAAa;AAEtC,UAAI,UAAU,eAAe,iBAAgB,GAAA,UAAA,OAAM,aAAa,IAAI,OAAO;AAC3E,UAAI,YAAY;AACd,mBAAU,GAAA,UAAA,OAAM,OAAO,IAAG,GAAA,OAAA,cAAa,YAAY,OAAA,KAAK,GAAG,CAAC;MAC9D;AACA,aAAO,CAAC,EAAE,YAAY,OAAO;IAC/B;AAEA,aAAS,gBACP,KACA,EAAC,QAAQ,QAAO,GAChB,WAAsC;AAEtC,YAAM,EAAC,SAAS,MAAM,aAAa,GAAE,IAAI;AACzC,YAAM,EAAC,MAAM,cAAc,cAAc,WAAU,IAAI;AACvD,gBAAU,KACR,CAAC,EAAE,SAAS,OAAO,GACnB,CAAC,EAAE,QAAQ,OAAO,UAAU,aAAa,OAAO,GAAG,IAAI,WAAU,GAAA,UAAA,MAAK,CAAC;AAEzE,UAAI,KAAK,UAAU;AACjB,kBAAU,KAAK,CAAC,EAAE,SAAS,OAAO,WAAW,aAAa,QAAQ,GAAG,IAAI,OAAO,CAAC;MACnF;AACA,UAAI,KAAK,SAAS;AAChB,kBAAU,KACR,CAAC,EAAE,QAAQ,WAAW,GACtB,CAAC,EAAE,eAAc,GAAA,UAAA,KAAI,YAAY,GAAG,UAAU,EAAE,GAChD,CAAC,QAAA,QAAE,MAAM,IAAI,CAAC;MAElB;AACA,UAAI;AAAc,kBAAU,KAAK,CAAC,EAAE,cAAc,YAAY,CAAC;IACjE;;;;;;;;;;ACrLA,QAAA,WAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AAEA,QAAM,YAAoC;MACxC,SAAS;;AAGX,aAAgB,qBAAqB,IAAa;AAChD,YAAM,EAAC,KAAK,QAAQ,aAAY,IAAI;AACpC,UAAI,WAAW,OAAO;AACpB,yBAAiB,IAAI,KAAK;MAC5B,WAAW,OAAO,UAAU,YAAY,OAAO,WAAW,MAAM;AAC9D,YAAI,OAAO,QAAA,QAAE,IAAI;MACnB,OAAO;AACL,YAAI,QAAO,GAAA,UAAA,KAAI,YAAY,WAAW,IAAI;AAC1C,YAAI,OAAO,IAAI;MACjB;IACF;AAVA,YAAA,uBAAA;AAYA,aAAgB,kBAAkB,IAAe,OAAW;AAC1D,YAAM,EAAC,KAAK,OAAM,IAAI;AACtB,UAAI,WAAW,OAAO;AACpB,YAAI,IAAI,OAAO,KAAK;AACpB,yBAAiB,EAAE;MACrB,OAAO;AACL,YAAI,IAAI,OAAO,IAAI;MACrB;IACF;AARA,YAAA,oBAAA;AAUA,aAAS,iBAAiB,IAAe,mBAA2B;AAClE,YAAM,EAAC,KAAK,KAAI,IAAI;AAEpB,YAAM,MAAuB;QAC3B;QACA,SAAS;QACT;QACA,QAAQ;QACR,YAAY;QACZ,aAAa;QACb,QAAQ,CAAA;QACR;;AAEF,OAAA,GAAA,SAAA,aAAY,KAAK,WAAW,QAAW,iBAAiB;IAC1D;;;;;;;;;;AC5CA,QAAM,aAAa,CAAC,UAAU,UAAU,WAAW,WAAW,QAAQ,UAAU,OAAO;AAIvF,QAAM,YAAyB,IAAI,IAAI,UAAU;AAEjD,aAAgB,WAAW,GAAU;AACnC,aAAO,OAAO,KAAK,YAAY,UAAU,IAAI,CAAC;IAChD;AAFA,YAAA,aAAA;AA2BA,aAAgB,WAAQ;AACtB,YAAM,SAAsE;QAC1E,QAAQ,EAAC,MAAM,UAAU,OAAO,CAAA,EAAE;QAClC,QAAQ,EAAC,MAAM,UAAU,OAAO,CAAA,EAAE;QAClC,OAAO,EAAC,MAAM,SAAS,OAAO,CAAA,EAAE;QAChC,QAAQ,EAAC,MAAM,UAAU,OAAO,CAAA,EAAE;;AAEpC,aAAO;QACL,OAAO,EAAC,GAAG,QAAQ,SAAS,MAAM,SAAS,MAAM,MAAM,KAAI;QAC3D,OAAO,CAAC,EAAC,OAAO,CAAA,EAAE,GAAG,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,MAAM;QAC9E,MAAM,EAAC,OAAO,CAAA,EAAE;QAChB,KAAK,CAAA;QACL,UAAU,CAAA;;IAEd;AAdA,YAAA,WAAA;;;;;;;;;;AC/BA,aAAgB,sBACd,EAAC,QAAQ,MAAAC,MAAI,GACb,MAAc;AAEd,YAAM,QAAQA,MAAK,MAAM,MAAM,IAAI;AACnC,aAAO,SAAS,UAAU,QAAQ,eAAe,QAAQ,KAAK;IAChE;AANA,YAAA,wBAAA;AAQA,aAAgB,eAAe,QAAyB,OAAgB;AACtE,aAAO,MAAM,MAAM,KAAK,CAAC,SAAS,cAAc,QAAQ,IAAI,CAAC;IAC/D;AAFA,YAAA,iBAAA;AAIA,aAAgB,cAAc,QAAyB,MAAU;;AAC/D,aACE,OAAO,KAAK,OAAO,MAAM,YACzB,KAAA,KAAK,WAAW,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAE,KAAK,CAAC,QAAQ,OAAO,GAAG,MAAM,MAAS;IAEvE;AALA,YAAA,gBAAA;;;;;;;;;;ACTA,QAAA,UAAA;AACA,QAAA,kBAAA;AACA,QAAA,WAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AAEA,QAAY;AAAZ,KAAA,SAAYC,WAAQ;AAClB,MAAAA,UAAAA,UAAA,SAAA,IAAA,CAAA,IAAA;AACA,MAAAA,UAAAA,UAAA,OAAA,IAAA,CAAA,IAAA;IACF,GAHY,aAAQ,QAAA,WAAR,WAAQ,CAAA,EAAA;AAKpB,aAAgB,eAAe,QAAuB;AACpD,YAAM,QAAQ,aAAa,OAAO,IAAI;AACtC,YAAM,UAAU,MAAM,SAAS,MAAM;AACrC,UAAI,SAAS;AACX,YAAI,OAAO,aAAa;AAAO,gBAAM,IAAI,MAAM,wCAAwC;MACzF,OAAO;AACL,YAAI,CAAC,MAAM,UAAU,OAAO,aAAa,QAAW;AAClD,gBAAM,IAAI,MAAM,0CAA0C;QAC5D;AACA,YAAI,OAAO,aAAa;AAAM,gBAAM,KAAK,MAAM;MACjD;AACA,aAAO;IACT;AAZA,YAAA,iBAAA;AAeA,aAAgB,aAAa,IAAuB;AAClD,YAAM,QAAmB,MAAM,QAAQ,EAAE,IAAI,KAAK,KAAK,CAAC,EAAE,IAAI,CAAA;AAC9D,UAAI,MAAM,MAAM,QAAA,UAAU;AAAG,eAAO;AACpC,YAAM,IAAI,MAAM,0CAA0C,MAAM,KAAK,GAAG,CAAC;IAC3E;AAJA,YAAA,eAAA;AAMA,aAAgB,uBAAuB,IAAkB,OAAiB;AACxE,YAAM,EAAC,KAAK,MAAM,KAAI,IAAI;AAC1B,YAAM,WAAW,cAAc,OAAO,KAAK,WAAW;AACtD,YAAM,aACJ,MAAM,SAAS,KACf,EAAE,SAAS,WAAW,KAAK,MAAM,WAAW,MAAK,GAAA,gBAAA,uBAAsB,IAAI,MAAM,CAAC,CAAC;AACrF,UAAI,YAAY;AACd,cAAM,YAAY,eAAe,OAAO,MAAM,KAAK,eAAe,SAAS,KAAK;AAChF,YAAI,GAAG,WAAW,MAAK;AACrB,cAAI,SAAS;AAAQ,uBAAW,IAAI,OAAO,QAAQ;;AAC9C,4BAAgB,EAAE;QACzB,CAAC;MACH;AACA,aAAO;IACT;AAdA,YAAA,yBAAA;AAgBA,QAAM,YAA2B,oBAAI,IAAI,CAAC,UAAU,UAAU,WAAW,WAAW,MAAM,CAAC;AAC3F,aAAS,cAAc,OAAmB,aAA+B;AACvE,aAAO,cACH,MAAM,OAAO,CAAC,MAAM,UAAU,IAAI,CAAC,KAAM,gBAAgB,WAAW,MAAM,OAAQ,IAClF,CAAA;IACN;AAEA,aAAS,WAAW,IAAkB,OAAmB,UAAoB;AAC3E,YAAM,EAAC,KAAK,MAAM,KAAI,IAAI;AAC1B,YAAM,WAAW,IAAI,IAAI,aAAY,GAAA,UAAA,YAAW,IAAI,EAAE;AACtD,YAAM,UAAU,IAAI,IAAI,YAAW,GAAA,UAAA,aAAY;AAC/C,UAAI,KAAK,gBAAgB,SAAS;AAChC,YAAI,IAAG,GAAA,UAAA,KAAI,QAAQ,iCAAiC,IAAI,QAAQ,IAAI,gBAAgB,MAClF,IACG,OAAO,OAAM,GAAA,UAAA,KAAI,IAAI,KAAK,EAC1B,OAAO,WAAU,GAAA,UAAA,YAAW,IAAI,EAAE,EAClC,GAAG,eAAe,OAAO,MAAM,KAAK,aAAa,GAAG,MAAM,IAAI,OAAO,SAAS,IAAI,CAAC,CAAC;MAE3F;AACA,UAAI,IAAG,GAAA,UAAA,KAAI,OAAO,gBAAgB;AAClC,iBAAW,KAAK,UAAU;AACxB,YAAI,UAAU,IAAI,CAAC,KAAM,MAAM,WAAW,KAAK,gBAAgB,SAAU;AACvE,6BAAmB,CAAC;QACtB;MACF;AACA,UAAI,KAAI;AACR,sBAAgB,EAAE;AAClB,UAAI,MAAK;AAET,UAAI,IAAG,GAAA,UAAA,KAAI,OAAO,kBAAkB,MAAK;AACvC,YAAI,OAAO,MAAM,OAAO;AACxB,yBAAiB,IAAI,OAAO;MAC9B,CAAC;AAED,eAAS,mBAAmB,GAAS;AACnC,gBAAQ,GAAG;UACT,KAAK;AACH,gBACG,QAAO,GAAA,UAAA,KAAI,QAAQ,mBAAmB,QAAQ,eAAe,EAC7D,OAAO,UAAS,GAAA,UAAA,UAAS,IAAI,EAAE,EAC/B,QAAO,GAAA,UAAA,KAAI,IAAI,WAAW,EAC1B,OAAO,UAAS,GAAA,UAAA,MAAK;AACxB;UACF,KAAK;AACH,gBACG,QACC,GAAA,UAAA,KAAI,QAAQ,oBAAoB,IAAI;oBAC5B,QAAQ,mBAAmB,IAAI,OAAO,IAAI,QAAQ,IAAI,GAAG,EAElE,OAAO,UAAS,GAAA,UAAA,MAAK,IAAI,EAAE;AAC9B;UACF,KAAK;AACH,gBACG,QACC,GAAA,UAAA,KAAI,QAAQ,qBAAqB,IAAI;oBAC7B,QAAQ,oBAAoB,IAAI,OAAO,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,EAErF,OAAO,UAAS,GAAA,UAAA,MAAK,IAAI,EAAE;AAC9B;UACF,KAAK;AACH,gBACG,QAAO,GAAA,UAAA,KAAI,IAAI,mBAAmB,IAAI,aAAa,IAAI,WAAW,EAClE,OAAO,SAAS,KAAK,EACrB,QAAO,GAAA,UAAA,KAAI,IAAI,kBAAkB,IAAI,QAAQ,EAC7C,OAAO,SAAS,IAAI;AACvB;UACF,KAAK;AACH,gBAAI,QAAO,GAAA,UAAA,KAAI,IAAI,cAAc,IAAI,aAAa,IAAI,YAAY;AAClE,gBAAI,OAAO,SAAS,IAAI;AACxB;UAEF,KAAK;AACH,gBACG,QACC,GAAA,UAAA,KAAI,QAAQ,oBAAoB,QAAQ;mBACjC,QAAQ,qBAAqB,IAAI,WAAW,EAEpD,OAAO,UAAS,GAAA,UAAA,MAAK,IAAI,GAAG;QACnC;MACF;IACF;AAEA,aAAS,iBAAiB,EAAC,KAAK,YAAY,mBAAkB,GAAiB,MAAU;AAEvF,UAAI,IAAG,GAAA,UAAA,KAAI,UAAU,kBAAkB,MACrC,IAAI,QAAO,GAAA,UAAA,KAAI,UAAU,IAAI,kBAAkB,KAAK,IAAI,CAAC;IAE7D;AAEA,aAAgB,cACd,UACA,MACA,YACA,UAAU,SAAS,SAAO;AAE1B,YAAM,KAAK,YAAY,SAAS,UAAU,UAAA,UAAU,KAAK,UAAA,UAAU;AACnE,UAAI;AACJ,cAAQ,UAAU;QAChB,KAAK;AACH,kBAAO,GAAA,UAAA,KAAI,IAAI,IAAI,EAAE;QACvB,KAAK;AACH,kBAAO,GAAA,UAAA,mBAAkB,IAAI;AAC7B;QACF,KAAK;AACH,kBAAO,GAAA,UAAA,KAAI,IAAI,cAAc,IAAI,kCAAkC,IAAI;AACvE;QACF,KAAK;AACH,iBAAO,SAAQ,GAAA,UAAA,OAAM,IAAI,mBAAmB,IAAI,GAAG;AACnD;QACF,KAAK;AACH,iBAAO,QAAO;AACd;QACF;AACE,kBAAO,GAAA,UAAA,YAAW,IAAI,IAAI,EAAE,IAAI,QAAQ;MAC5C;AACA,aAAO,YAAY,SAAS,UAAU,QAAO,GAAA,UAAA,KAAI,IAAI;AAErD,eAAS,QAAQ,QAAc,UAAA,KAAG;AAChC,gBAAO,GAAA,UAAA,MAAI,GAAA,UAAA,YAAW,IAAI,gBAAgB,OAAO,cAAa,GAAA,UAAA,cAAa,IAAI,MAAM,UAAA,GAAG;MAC1F;IACF;AA/BA,YAAA,gBAAA;AAiCA,aAAgB,eACd,WACA,MACA,YACA,SAAkB;AAElB,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO,cAAc,UAAU,CAAC,GAAG,MAAM,YAAY,OAAO;MAC9D;AACA,UAAI;AACJ,YAAM,SAAQ,GAAA,OAAA,QAAO,SAAS;AAC9B,UAAI,MAAM,SAAS,MAAM,QAAQ;AAC/B,cAAM,UAAS,GAAA,UAAA,YAAW,IAAI;AAC9B,eAAO,MAAM,OAAO,UAAS,GAAA,UAAA,MAAK,IAAI,OAAO,MAAM;AACnD,eAAO,MAAM;AACb,eAAO,MAAM;AACb,eAAO,MAAM;MACf,OAAO;AACL,eAAO,UAAA;MACT;AACA,UAAI,MAAM;AAAQ,eAAO,MAAM;AAC/B,iBAAW,KAAK;AAAO,gBAAO,GAAA,UAAA,KAAI,MAAM,cAAc,GAAe,MAAM,YAAY,OAAO,CAAC;AAC/F,aAAO;IACT;AAvBA,YAAA,iBAAA;AA2BA,QAAM,YAAoC;MACxC,SAAS,CAAC,EAAC,OAAM,MAAM,WAAW,MAAM;MACxC,QAAQ,CAAC,EAAC,QAAQ,YAAW,MAC3B,OAAO,UAAU,YAAW,GAAA,UAAA,YAAW,MAAM,OAAM,GAAA,UAAA,YAAW,WAAW;;AAG7E,aAAgB,gBAAgB,IAAgB;AAC9C,YAAM,MAAM,oBAAoB,EAAE;AAClC,OAAA,GAAA,SAAA,aAAY,KAAK,SAAS;IAC5B;AAHA,YAAA,kBAAA;AAKA,aAAS,oBAAoB,IAAgB;AAC3C,YAAM,EAAC,KAAK,MAAM,OAAM,IAAI;AAC5B,YAAM,cAAa,GAAA,OAAA,gBAAe,IAAI,QAAQ,MAAM;AACpD,aAAO;QACL;QACA,SAAS;QACT;QACA,QAAQ,OAAO;QACf;QACA,aAAa;QACb,cAAc;QACd,QAAQ,CAAA;QACR;;IAEJ;;;;;;;;;;ACpOA,QAAA,YAAA;AACA,QAAA,SAAA;AAEA,aAAgB,eAAe,IAAkB,IAAW;AAC1D,YAAM,EAAC,YAAY,MAAK,IAAI,GAAG;AAC/B,UAAI,OAAO,YAAY,YAAY;AACjC,mBAAW,OAAO,YAAY;AAC5B,wBAAc,IAAI,KAAK,WAAW,GAAG,EAAE,OAAO;QAChD;MACF,WAAW,OAAO,WAAW,MAAM,QAAQ,KAAK,GAAG;AACjD,cAAM,QAAQ,CAAC,KAAK,MAAc,cAAc,IAAI,GAAG,IAAI,OAAO,CAAC;MACrE;IACF;AATA,YAAA,iBAAA;AAWA,aAAS,cAAc,IAAkB,MAAuB,cAAqB;AACnF,YAAM,EAAC,KAAK,eAAe,MAAM,KAAI,IAAI;AACzC,UAAI,iBAAiB;AAAW;AAChC,YAAM,aAAY,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,aAAY,IAAI,CAAC;AAC9C,UAAI,eAAe;AACjB,SAAA,GAAA,OAAA,iBAAgB,IAAI,2BAA2B,SAAS,EAAE;AAC1D;MACF;AAEA,UAAI,aAAY,GAAA,UAAA,KAAI,SAAS;AAC7B,UAAI,KAAK,gBAAgB,SAAS;AAChC,qBAAY,GAAA,UAAA,KAAI,SAAS,OAAO,SAAS,gBAAgB,SAAS;MACpE;AAGA,UAAI,GAAG,YAAW,GAAA,UAAA,KAAI,SAAS,OAAM,GAAA,UAAA,WAAU,YAAY,CAAC,EAAE;IAChE;;;;;;;;;;AC5BA,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AACA,aAAgB,uBAAuB,KAAiB,MAAY;AAClE,YAAM,EAAC,KAAK,MAAM,GAAE,IAAI;AACxB,UAAI,GAAG,iBAAiB,KAAK,MAAM,MAAM,GAAG,KAAK,aAAa,GAAG,MAAK;AACpE,YAAI,UAAU,EAAC,kBAAiB,GAAA,UAAA,KAAI,IAAI,GAAE,GAAG,IAAI;AACjD,YAAI,MAAK;MACX,CAAC;IACH;AANA,YAAA,yBAAA;AAQA,aAAgB,iBACd,EAAC,KAAK,MAAM,IAAI,EAAC,KAAI,EAAC,GACtB,YACA,SAAa;AAEb,cAAO,GAAA,UAAA,IACL,GAAG,WAAW,IAAI,CAAC,UACjB,GAAA,UAAA,KAAI,iBAAiB,KAAK,MAAM,MAAM,KAAK,aAAa,IAAG,GAAA,UAAA,KAAI,OAAO,MAAM,IAAI,EAAE,CAAC,CACpF;IAEL;AAVA,YAAA,mBAAA;AAYA,aAAgB,kBAAkB,KAAiB,SAAa;AAC9D,UAAI,UAAU,EAAC,iBAAiB,QAAO,GAAG,IAAI;AAC9C,UAAI,MAAK;IACX;AAHA,YAAA,oBAAA;AAKA,aAAgB,YAAY,KAAY;AACtC,aAAO,IAAI,WAAW,QAAQ;;QAE5B,KAAK,OAAO,UAAU;QACtB,OAAM,GAAA,UAAA;OACP;IACH;AANA,YAAA,cAAA;AAQA,aAAgB,cAAc,KAAc,MAAY,UAAuB;AAC7E,cAAO,GAAA,UAAA,KAAI,YAAY,GAAG,CAAC,SAAS,IAAI,KAAK,QAAQ;IACvD;AAFA,YAAA,gBAAA;AAIA,aAAgB,eACd,KACA,MACA,UACA,eAAuB;AAEvB,YAAM,QAAO,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,aAAY,QAAQ,CAAC;AAC7C,aAAO,iBAAgB,GAAA,UAAA,KAAI,IAAI,OAAO,cAAc,KAAK,MAAM,QAAQ,CAAC,KAAK;IAC/E;AARA,YAAA,iBAAA;AAUA,aAAgB,iBACd,KACA,MACA,UACA,eAAuB;AAEvB,YAAM,QAAO,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,aAAY,QAAQ,CAAC;AAC7C,aAAO,iBAAgB,GAAA,UAAA,IAAG,OAAM,GAAA,UAAA,KAAI,cAAc,KAAK,MAAM,QAAQ,CAAC,CAAC,IAAI;IAC7E;AARA,YAAA,mBAAA;AAUA,aAAgB,oBAAoB,WAAqB;AACvD,aAAO,YAAY,OAAO,KAAK,SAAS,EAAE,OAAO,CAAC,MAAM,MAAM,WAAW,IAAI,CAAA;IAC/E;AAFA,YAAA,sBAAA;AAIA,aAAgB,iBAAiB,IAAe,WAAoB;AAClE,aAAO,oBAAoB,SAAS,EAAE,OACpC,CAAC,MAAM,EAAC,GAAA,OAAA,mBAAkB,IAAI,UAAU,CAAC,CAAc,CAAC;IAE5D;AAJA,YAAA,mBAAA;AAMA,aAAgB,iBACd,EAAC,YAAY,MAAM,IAAI,EAAC,KAAK,cAAc,YAAY,UAAS,GAAG,GAAE,GACrE,MACA,SACA,YAAoB;AAEpB,YAAM,gBAAgB,cAAa,GAAA,UAAA,KAAI,UAAU,KAAK,IAAI,KAAK,YAAY,GAAG,UAAU,KAAK;AAC7F,YAAM,SAAkC;QACtC,CAAC,QAAA,QAAE,eAAc,GAAA,UAAA,WAAU,QAAA,QAAE,cAAc,SAAS,CAAC;QACrD,CAAC,QAAA,QAAE,YAAY,GAAG,UAAU;QAC5B,CAAC,QAAA,QAAE,oBAAoB,GAAG,kBAAkB;QAC5C,CAAC,QAAA,QAAE,UAAU,QAAA,QAAE,QAAQ;;AAEzB,UAAI,GAAG,KAAK;AAAY,eAAO,KAAK,CAAC,QAAA,QAAE,gBAAgB,QAAA,QAAE,cAAc,CAAC;AACxE,YAAM,QAAO,GAAA,UAAA,KAAI,aAAa,KAAK,IAAI,OAAO,GAAG,MAAM,CAAC;AACxD,aAAO,YAAY,UAAA,OAAM,GAAA,UAAA,KAAI,IAAI,SAAS,OAAO,KAAK,IAAI,OAAM,GAAA,UAAA,KAAI,IAAI,IAAI,IAAI;IAClF;AAhBA,YAAA,mBAAA;AAkBA,QAAM,aAAY,GAAA,UAAA;AAElB,aAAgB,WAAW,EAAC,KAAK,IAAI,EAAC,KAAI,EAAC,GAAe,SAAe;AACvE,YAAM,IAAI,KAAK,gBAAgB,MAAM;AACrC,YAAM,EAAC,OAAM,IAAI,KAAK;AACtB,YAAM,KAAK,OAAO,SAAS,CAAC;AAE5B,aAAO,IAAI,WAAW,WAAW;QAC/B,KAAK,GAAG,SAAQ;QAChB,KAAK;QACL,OAAM,GAAA,UAAA,KAAI,OAAO,SAAS,eAAe,aAAY,GAAA,OAAA,SAAQ,KAAK,MAAM,CAAC,IAAI,OAAO,KAAK,CAAC;OAC3F;IACH;AAVA,YAAA,aAAA;AAYA,aAAgB,cAAc,KAAe;AAC3C,YAAM,EAAC,KAAK,MAAM,SAAS,GAAE,IAAI;AACjC,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,UAAI,GAAG,WAAW;AAChB,cAAM,WAAW,IAAI,IAAI,SAAS,IAAI;AACtC,sBAAc,MAAM,IAAI,OAAO,UAAU,KAAK,CAAC;AAC/C,eAAO;MACT;AACA,UAAI,IAAI,OAAO,IAAI;AACnB,oBAAc,MAAM,IAAI,MAAK,CAAE;AAC/B,aAAO;AAEP,eAAS,cAAc,UAAoB;AACzC,cAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,SAAS;AAC9C,YAAI,SAAS,KAAK,GAAG,KAAK,CAAC,MAAK;AAC9B,cAAI,UACF;YACE;YACA,UAAU;YACV,cAAc,OAAA,KAAK;aAErB,KAAK;AAEP,cAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,QAAQ;QAC7B,CAAC;MACH;IACF;AA1BA,YAAA,gBAAA;AA4BA,aAAgB,cAAc,KAAe;AAC3C,YAAM,EAAC,KAAK,QAAQ,SAAS,GAAE,IAAI;AAEnC,UAAI,CAAC,MAAM,QAAQ,MAAM;AAAG,cAAM,IAAI,MAAM,0BAA0B;AACtE,YAAM,cAAc,OAAO,KAAK,CAAC,SAAmB,GAAA,OAAA,mBAAkB,IAAI,GAAG,CAAC;AAC9E,UAAI,eAAe,CAAC,GAAG,KAAK;AAAa;AAEzC,YAAM,QAAQ,IAAI,IAAI,SAAS,KAAK;AACpC,YAAM,WAAW,IAAI,KAAK,QAAQ;AAElC,UAAI,MAAM,MACR,OAAO,QAAQ,CAAC,MAAiB,MAAa;AAC5C,cAAM,SAAS,IAAI,UACjB;UACE;UACA,YAAY;UACZ,eAAe;WAEjB,QAAQ;AAEV,YAAI,OAAO,QAAO,GAAA,UAAA,KAAI,KAAK,OAAO,QAAQ,EAAE;AAC5C,cAAM,SAAS,IAAI,oBAAoB,QAAQ,QAAQ;AAGvD,YAAI,CAAC;AAAQ,cAAI,IAAG,GAAA,UAAA,KAAI,KAAK,CAAC;MAChC,CAAC,CAAC;AAGJ,UAAI,OACF,OACA,MAAM,IAAI,MAAK,GACf,MAAM,IAAI,MAAM,IAAI,CAAC;IAEzB;AAjCA,YAAA,gBAAA;;;;;;;;;;AC5HA,QAAA,YAAA;AACA,QAAA,UAAA;AAEA,QAAA,SAAA;AACA,QAAA,WAAA;AAIA,aAAgB,iBAAiB,KAAiB,KAA2B;AAC3E,YAAM,EAAC,KAAK,SAAS,QAAQ,cAAc,GAAE,IAAI;AACjD,YAAM,cAAc,IAAI,MAAM,KAAK,GAAG,MAAM,QAAQ,cAAc,EAAE;AACpE,YAAM,YAAY,WAAW,KAAK,SAAS,WAAW;AACtD,UAAI,GAAG,KAAK,mBAAmB;AAAO,WAAG,KAAK,eAAe,aAAa,IAAI;AAE9E,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,UAAI,UACF;QACE,QAAQ;QACR,YAAY,UAAA;QACZ,eAAe,GAAG,GAAG,aAAa,IAAI,OAAO;QAC7C,cAAc;QACd,eAAe;SAEjB,KAAK;AAEP,UAAI,KAAK,OAAO,MAAM,IAAI,MAAM,IAAI,CAAC;IACvC;AAlBA,YAAA,mBAAA;AAoBA,aAAgB,gBAAgB,KAAiB,KAA0B;;AACzE,YAAM,EAAC,KAAK,SAAS,QAAQ,cAAc,OAAO,GAAE,IAAI;AACxD,wBAAkB,IAAI,GAAG;AACzB,YAAMC,YACJ,CAAC,SAAS,IAAI,UAAU,IAAI,QAAQ,KAAK,GAAG,MAAM,QAAQ,cAAc,EAAE,IAAI,IAAI;AACpF,YAAM,cAAc,WAAW,KAAK,SAASA,SAAQ;AACrD,YAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,UAAI,WAAW,OAAO,eAAe;AACrC,UAAI,IAAG,KAAA,IAAI,WAAK,QAAA,OAAA,SAAA,KAAI,KAAK;AAEzB,eAAS,kBAAe;AACtB,YAAI,IAAI,WAAW,OAAO;AACxB,sBAAW;AACX,cAAI,IAAI;AAAW,uBAAW,GAAG;AACjC,qBAAW,MAAM,IAAI,MAAK,CAAE;QAC9B,OAAO;AACL,gBAAM,WAAW,IAAI,QAAQ,cAAa,IAAK,aAAY;AAC3D,cAAI,IAAI;AAAW,uBAAW,GAAG;AACjC,qBAAW,MAAM,QAAQ,KAAK,QAAQ,CAAC;QACzC;MACF;AAEA,eAAS,gBAAa;AACpB,cAAM,WAAW,IAAI,IAAI,YAAY,IAAI;AACzC,YAAI,IACF,MAAM,aAAY,GAAA,UAAA,UAAS,GAC3B,CAAC,MACC,IAAI,OAAO,OAAO,KAAK,EAAE,IACvB,GAAA,UAAA,KAAI,CAAC,eAAe,GAAG,eAAuB,IAC9C,MAAM,IAAI,OAAO,WAAU,GAAA,UAAA,KAAI,CAAC,SAAS,GACzC,MAAM,IAAI,MAAM,CAAC,CAAC,CACnB;AAEL,eAAO;MACT;AAEA,eAAS,eAAY;AACnB,cAAM,gBAAe,GAAA,UAAA,KAAI,WAAW;AACpC,YAAI,OAAO,cAAc,IAAI;AAC7B,oBAAY,UAAA,GAAG;AACf,eAAO;MACT;AAEA,eAAS,YAAY,SAAe,IAAI,SAAQ,GAAA,UAAA,aAAY,UAAA,KAAG;AAC7D,cAAM,UAAU,GAAG,KAAK,cAAc,QAAA,QAAE,OAAO,QAAA,QAAE;AACjD,cAAM,aAAa,EAAG,aAAa,OAAO,CAAC,SAAU,IAAI,WAAW;AACpE,YAAI,OACF,QACA,GAAA,UAAA,KAAI,MAAM,IAAG,GAAA,OAAA,kBAAiB,KAAK,aAAa,SAAS,UAAU,CAAC,IACpE,IAAI,SAAS;MAEjB;AAEA,eAAS,WAAW,QAAkB;;AACpC,YAAI,IAAG,GAAA,UAAA,MAAIC,MAAA,IAAI,WAAK,QAAAA,QAAA,SAAAA,MAAI,KAAK,GAAG,MAAM;MACxC;IACF;AAxDA,YAAA,kBAAA;AA0DA,aAAS,WAAW,KAAe;AACjC,YAAM,EAAC,KAAK,MAAM,GAAE,IAAI;AACxB,UAAI,GAAG,GAAG,YAAY,MAAM,IAAI,OAAO,OAAM,GAAA,UAAA,KAAI,GAAG,UAAU,IAAI,GAAG,kBAAkB,GAAG,CAAC;IAC7F;AAEA,aAAS,QAAQ,KAAiB,MAAU;AAC1C,YAAM,EAAC,IAAG,IAAI;AACd,UAAI,IACF,GAAA,UAAA,mBAAkB,IAAI,KACtB,MAAK;AACH,YACG,OAAO,QAAA,QAAE,UAAS,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,eAAe,IAAI,MAAM,QAAA,QAAE,OAAO,WAAW,IAAI,GAAG,EACnF,OAAO,QAAA,QAAE,SAAQ,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,SAAS;AAC1C,SAAA,GAAA,SAAA,cAAa,GAAG;MAClB,GACA,MAAM,IAAI,MAAK,CAAE;IAErB;AAEA,aAAS,kBAAkB,EAAC,UAAS,GAAiB,KAA0B;AAC9E,UAAI,IAAI,SAAS,CAAC,UAAU;AAAQ,cAAM,IAAI,MAAM,8BAA8B;IACpF;AAEA,aAAS,WAAW,KAAc,SAAiB,QAAiC;AAClF,UAAI,WAAW;AAAW,cAAM,IAAI,MAAM,YAAY,OAAO,qBAAqB;AAClF,aAAO,IAAI,WACT,WACA,OAAO,UAAU,aAAa,EAAC,KAAK,OAAM,IAAI,EAAC,KAAK,QAAQ,OAAM,GAAA,UAAA,WAAU,MAAM,EAAC,CAAC;IAExF;AAEA,aAAgB,gBACd,QACA,YACA,iBAAiB,OAAK;AAGtB,aACE,CAAC,WAAW,UACZ,WAAW,KAAK,CAAC,OACf,OAAO,UACH,MAAM,QAAQ,MAAM,IACpB,OAAO,WACP,UAAU,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,MAAM,IAC5D,OAAO,UAAU,MAAO,kBAAkB,OAAO,UAAU,WAAY;IAGjF;AAhBA,YAAA,kBAAA;AAkBA,aAAgB,qBACd,EAAC,QAAQ,MAAM,MAAAC,OAAM,cAAa,GAClC,KACA,SAAe;AAGf,UAAI,MAAM,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,SAAS,OAAO,IAAI,IAAI,YAAY,SAAS;AACzF,cAAM,IAAI,MAAM,0BAA0B;MAC5C;AAEA,YAAM,OAAO,IAAI;AACjB,UAAI,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,KAAK,CAAC,QAAQ,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,GAAG,CAAC,GAAG;AAC3E,cAAM,IAAI,MAAM,2CAA2C,OAAO,KAAK,KAAK,KAAK,GAAG,CAAC,EAAE;MACzF;AAEA,UAAI,IAAI,gBAAgB;AACtB,cAAM,QAAQ,IAAI,eAAe,OAAO,OAAO,CAAC;AAChD,YAAI,CAAC,OAAO;AACV,gBAAM,MACJ,YAAY,OAAO,+BAA+B,aAAa,QAC/DA,MAAK,WAAW,IAAI,eAAe,MAAM;AAC3C,cAAI,KAAK,mBAAmB;AAAO,YAAAA,MAAK,OAAO,MAAM,GAAG;;AACnD,kBAAM,IAAI,MAAM,GAAG;QAC1B;MACF;IACF;AAzBA,YAAA,uBAAA;;;;;;;;;;AC/IA,QAAA,YAAA;AACA,QAAA,SAAA;AA6CA,aAAgB,aACd,IACA,EAAC,SAAS,YAAY,QAAQ,YAAY,eAAe,aAAY,GAAgB;AAErF,UAAI,YAAY,UAAa,WAAW,QAAW;AACjD,cAAM,IAAI,MAAM,sDAAsD;MACxE;AAEA,UAAI,YAAY,QAAW;AACzB,cAAM,MAAM,GAAG,OAAO,OAAO;AAC7B,eAAO,eAAe,SAClB;UACE,QAAQ;UACR,aAAY,GAAA,UAAA,KAAI,GAAG,UAAU,IAAG,GAAA,UAAA,aAAY,OAAO,CAAC;UACpD,eAAe,GAAG,GAAG,aAAa,IAAI,OAAO;YAE/C;UACE,QAAQ,IAAI,UAAU;UACtB,aAAY,GAAA,UAAA,KAAI,GAAG,UAAU,IAAG,GAAA,UAAA,aAAY,OAAO,CAAC,IAAG,GAAA,UAAA,aAAY,UAAU,CAAC;UAC9E,eAAe,GAAG,GAAG,aAAa,IAAI,OAAO,KAAI,GAAA,OAAA,gBAAe,UAAU,CAAC;;MAEnF;AAEA,UAAI,WAAW,QAAW;AACxB,YAAI,eAAe,UAAa,kBAAkB,UAAa,iBAAiB,QAAW;AACzF,gBAAM,IAAI,MAAM,6EAA6E;QAC/F;AACA,eAAO;UACL;UACA;UACA;UACA;;MAEJ;AAEA,YAAM,IAAI,MAAM,6CAA6C;IAC/D;AApCA,YAAA,eAAA;AAsCA,aAAgB,oBACd,WACA,IACA,EAAC,UAAU,cAAc,QAAQ,MAAM,WAAW,aAAY,GAAgB;AAE9E,UAAI,SAAS,UAAa,aAAa,QAAW;AAChD,cAAM,IAAI,MAAM,qDAAqD;MACvE;AAEA,YAAM,EAAC,IAAG,IAAI;AAEd,UAAI,aAAa,QAAW;AAC1B,cAAM,EAAC,WAAW,aAAa,KAAI,IAAI;AACvC,cAAM,WAAW,IAAI,IAAI,SAAQ,GAAA,UAAA,KAAI,GAAG,IAAI,IAAG,GAAA,UAAA,aAAY,QAAQ,CAAC,IAAI,IAAI;AAC5E,yBAAiB,QAAQ;AACzB,kBAAU,aAAY,GAAA,UAAA,OAAM,SAAS,IAAG,GAAA,OAAA,cAAa,UAAU,QAAQ,KAAK,gBAAgB,CAAC;AAC7F,kBAAU,sBAAqB,GAAA,UAAA,KAAI,QAAQ;AAC3C,kBAAU,cAAc,CAAC,GAAG,aAAa,UAAU,kBAAkB;MACvE;AAEA,UAAI,SAAS,QAAW;AACtB,cAAM,WAAW,gBAAgB,UAAA,OAAO,OAAO,IAAI,IAAI,QAAQ,MAAM,IAAI;AACzE,yBAAiB,QAAQ;AACzB,YAAI,iBAAiB;AAAW,oBAAU,eAAe;MAE3D;AAEA,UAAI;AAAW,kBAAU,YAAY;AAErC,eAAS,iBAAiB,WAAe;AACvC,kBAAU,OAAO;AACjB,kBAAU,YAAY,GAAG,YAAY;AACrC,kBAAU,YAAY,CAAA;AACtB,WAAG,oBAAoB,oBAAI,IAAG;AAC9B,kBAAU,aAAa,GAAG;AAC1B,kBAAU,YAAY,CAAC,GAAG,GAAG,WAAW,SAAS;MACnD;IACF;AArCA,YAAA,sBAAA;AAuCA,aAAgB,oBACd,WACA,EAAC,kBAAkB,aAAa,eAAe,cAAc,UAAS,GAAgB;AAEtF,UAAI,kBAAkB;AAAW,kBAAU,gBAAgB;AAC3D,UAAI,iBAAiB;AAAW,kBAAU,eAAe;AACzD,UAAI,cAAc;AAAW,kBAAU,YAAY;AACnD,gBAAU,mBAAmB;AAC7B,gBAAU,cAAc;IAC1B;AATA,YAAA,sBAAA;;;;;AC7HA;AAAA;AAAA;AAMA,WAAO,UAAU,SAAS,MAAM,GAAG,GAAG;AACpC,UAAI,MAAM,EAAG,QAAO;AAEpB,UAAI,KAAK,KAAK,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU;AAC1D,YAAI,EAAE,gBAAgB,EAAE,YAAa,QAAO;AAE5C,YAAI,QAAQ,GAAG;AACf,YAAI,MAAM,QAAQ,CAAC,GAAG;AACpB,mBAAS,EAAE;AACX,cAAI,UAAU,EAAE,OAAQ,QAAO;AAC/B,eAAK,IAAI,QAAQ,QAAQ;AACvB,gBAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAG,QAAO;AACjC,iBAAO;AAAA,QACT;AAIA,YAAI,EAAE,gBAAgB,OAAQ,QAAO,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE;AAC5E,YAAI,EAAE,YAAY,OAAO,UAAU,QAAS,QAAO,EAAE,QAAQ,MAAM,EAAE,QAAQ;AAC7E,YAAI,EAAE,aAAa,OAAO,UAAU,SAAU,QAAO,EAAE,SAAS,MAAM,EAAE,SAAS;AAEjF,eAAO,OAAO,KAAK,CAAC;AACpB,iBAAS,KAAK;AACd,YAAI,WAAW,OAAO,KAAK,CAAC,EAAE,OAAQ,QAAO;AAE7C,aAAK,IAAI,QAAQ,QAAQ;AACvB,cAAI,CAAC,OAAO,UAAU,eAAe,KAAK,GAAG,KAAK,CAAC,CAAC,EAAG,QAAO;AAEhE,aAAK,IAAI,QAAQ,QAAQ,KAAI;AAC3B,cAAI,MAAM,KAAK,CAAC;AAEhB,cAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,EAAG,QAAO;AAAA,QACrC;AAEA,eAAO;AAAA,MACT;AAGA,aAAO,MAAI,KAAK,MAAI;AAAA,IACtB;AAAA;AAAA;;;AC7CA;AAAA;AAAA;AAEA,QAAI,WAAW,OAAO,UAAU,SAAU,QAAQ,MAAM,IAAI;AAE1D,UAAI,OAAO,QAAQ,YAAY;AAC7B,aAAK;AACL,eAAO,CAAC;AAAA,MACV;AAEA,WAAK,KAAK,MAAM;AAChB,UAAI,MAAO,OAAO,MAAM,aAAc,KAAK,GAAG,OAAO,WAAW;AAAA,MAAC;AACjE,UAAI,OAAO,GAAG,QAAQ,WAAW;AAAA,MAAC;AAElC,gBAAU,MAAM,KAAK,MAAM,QAAQ,IAAI,MAAM;AAAA,IAC/C;AAGA,aAAS,WAAW;AAAA,MAClB,iBAAiB;AAAA,MACjB,OAAO;AAAA,MACP,UAAU;AAAA,MACV,sBAAsB;AAAA,MACtB,eAAe;AAAA,MACf,KAAK;AAAA,MACL,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,IACR;AAEA,aAAS,gBAAgB;AAAA,MACvB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAEA,aAAS,gBAAgB;AAAA,MACvB,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,mBAAmB;AAAA,MACnB,cAAc;AAAA,IAChB;AAEA,aAAS,eAAe;AAAA,MACtB,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,MACV,SAAS;AAAA,MACT,SAAS;AAAA,MACT,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,IACjB;AAGA,aAAS,UAAU,MAAM,KAAK,MAAM,QAAQ,SAAS,YAAY,eAAe,eAAe,cAAc,UAAU;AACrH,UAAI,UAAU,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,MAAM,GAAG;AACjE,YAAI,QAAQ,SAAS,YAAY,eAAe,eAAe,cAAc,QAAQ;AACrF,iBAAS,OAAO,QAAQ;AACtB,cAAI,MAAM,OAAO,GAAG;AACpB,cAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,gBAAI,OAAO,SAAS,eAAe;AACjC,uBAAS,IAAE,GAAG,IAAE,IAAI,QAAQ;AAC1B,0BAAU,MAAM,KAAK,MAAM,IAAI,CAAC,GAAG,UAAU,MAAM,MAAM,MAAM,GAAG,YAAY,SAAS,KAAK,QAAQ,CAAC;AAAA,YACzG;AAAA,UACF,WAAW,OAAO,SAAS,eAAe;AACxC,gBAAI,OAAO,OAAO,OAAO,UAAU;AACjC,uBAAS,QAAQ;AACf,0BAAU,MAAM,KAAK,MAAM,IAAI,IAAI,GAAG,UAAU,MAAM,MAAM,MAAM,cAAc,IAAI,GAAG,YAAY,SAAS,KAAK,QAAQ,IAAI;AAAA,YACjI;AAAA,UACF,WAAW,OAAO,SAAS,YAAa,KAAK,WAAW,EAAE,OAAO,SAAS,eAAgB;AACxF,sBAAU,MAAM,KAAK,MAAM,KAAK,UAAU,MAAM,KAAK,YAAY,SAAS,KAAK,MAAM;AAAA,UACvF;AAAA,QACF;AACA,aAAK,QAAQ,SAAS,YAAY,eAAe,eAAe,cAAc,QAAQ;AAAA,MACxF;AAAA,IACF;AAGA,aAAS,cAAc,KAAK;AAC1B,aAAO,IAAI,QAAQ,MAAM,IAAI,EAAE,QAAQ,OAAO,IAAI;AAAA,IACpD;AAAA;AAAA;;;;;;;;ACzFA,QAAA,SAAA;AACA,QAAA,QAAA;AACA,QAAA,WAAA;AAMA,QAAM,iBAAiB,oBAAI,IAAI;MAC7B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACD;AAED,aAAgB,UAAU,QAAmB,QAA0B,MAAI;AACzE,UAAI,OAAO,UAAU;AAAW,eAAO;AACvC,UAAI,UAAU;AAAM,eAAO,CAAC,OAAO,MAAM;AACzC,UAAI,CAAC;AAAO,eAAO;AACnB,aAAO,UAAU,MAAM,KAAK;IAC9B;AALA,YAAA,YAAA;AAOA,QAAM,eAAe,oBAAI,IAAI;MAC3B;MACA;MACA;MACA;MACA;KACD;AAED,aAAS,OAAO,QAAuB;AACrC,iBAAW,OAAO,QAAQ;AACxB,YAAI,aAAa,IAAI,GAAG;AAAG,iBAAO;AAClC,cAAM,MAAM,OAAO,GAAG;AACtB,YAAI,MAAM,QAAQ,GAAG,KAAK,IAAI,KAAK,MAAM;AAAG,iBAAO;AACnD,YAAI,OAAO,OAAO,YAAY,OAAO,GAAG;AAAG,iBAAO;MACpD;AACA,aAAO;IACT;AAEA,aAAS,UAAU,QAAuB;AACxC,UAAI,QAAQ;AACZ,iBAAW,OAAO,QAAQ;AACxB,YAAI,QAAQ;AAAQ,iBAAO;AAC3B;AACA,YAAI,eAAe,IAAI,GAAG;AAAG;AAC7B,YAAI,OAAO,OAAO,GAAG,KAAK,UAAU;AAClC,WAAA,GAAA,OAAA,UAAS,OAAO,GAAG,GAAG,CAAC,QAAS,SAAS,UAAU,GAAG,CAAE;QAC1D;AACA,YAAI,UAAU;AAAU,iBAAO;MACjC;AACA,aAAO;IACT;AAEA,aAAgB,YAAY,UAAuB,KAAK,IAAI,WAAmB;AAC7E,UAAI,cAAc;AAAO,aAAK,YAAY,EAAE;AAC5C,YAAM,IAAI,SAAS,MAAM,EAAE;AAC3B,aAAO,aAAa,UAAU,CAAC;IACjC;AAJA,YAAA,cAAA;AAMA,aAAgB,aAAa,UAAuB,GAAe;AACjE,YAAM,aAAa,SAAS,UAAU,CAAC;AACvC,aAAO,WAAW,MAAM,GAAG,EAAE,CAAC,IAAI;IACpC;AAHA,YAAA,eAAA;AAKA,QAAM,sBAAsB;AAC5B,aAAgB,YAAY,IAAsB;AAChD,aAAO,KAAK,GAAG,QAAQ,qBAAqB,EAAE,IAAI;IACpD;AAFA,YAAA,cAAA;AAIA,aAAgB,WAAW,UAAuB,QAAgB,IAAU;AAC1E,WAAK,YAAY,EAAE;AACnB,aAAO,SAAS,QAAQ,QAAQ,EAAE;IACpC;AAHA,YAAA,aAAA;AAKA,QAAM,SAAS;AAEf,aAAgB,cAAyB,QAAmB,QAAc;AACxE,UAAI,OAAO,UAAU;AAAW,eAAO,CAAA;AACvC,YAAM,EAAC,UAAU,YAAW,IAAI,KAAK;AACrC,YAAM,QAAQ,YAAY,OAAO,QAAQ,KAAK,MAAM;AACpD,YAAM,UAA0C,EAAC,IAAI,MAAK;AAC1D,YAAM,aAAa,YAAY,aAAa,OAAO,KAAK;AACxD,YAAM,YAAuB,CAAA;AAC7B,YAAM,aAA0B,oBAAI,IAAG;AAEvC,eAAS,QAAQ,EAAC,SAAS,KAAI,GAAG,CAAC,KAAK,SAAS,GAAG,kBAAiB;AACnE,YAAI,kBAAkB;AAAW;AACjC,cAAM,WAAW,aAAa;AAC9B,YAAI,cAAc,QAAQ,aAAa;AACvC,YAAI,OAAO,IAAI,QAAQ,KAAK;AAAU,wBAAc,OAAO,KAAK,MAAM,IAAI,QAAQ,CAAC;AACnF,kBAAU,KAAK,MAAM,IAAI,OAAO;AAChC,kBAAU,KAAK,MAAM,IAAI,cAAc;AACvC,gBAAQ,OAAO,IAAI;AAEnB,iBAAS,OAAkB,KAAW;AAEpC,gBAAM,WAAW,KAAK,KAAK,YAAY;AACvC,gBAAM,YAAY,cAAc,SAAS,aAAa,GAAG,IAAI,GAAG;AAChE,cAAI,WAAW,IAAI,GAAG;AAAG,kBAAM,SAAS,GAAG;AAC3C,qBAAW,IAAI,GAAG;AAClB,cAAI,WAAW,KAAK,KAAK,GAAG;AAC5B,cAAI,OAAO,YAAY;AAAU,uBAAW,KAAK,KAAK,QAAQ;AAC9D,cAAI,OAAO,YAAY,UAAU;AAC/B,6BAAiB,KAAK,SAAS,QAAQ,GAAG;UAC5C,WAAW,QAAQ,YAAY,QAAQ,GAAG;AACxC,gBAAI,IAAI,CAAC,MAAM,KAAK;AAClB,+BAAiB,KAAK,UAAU,GAAG,GAAG,GAAG;AACzC,wBAAU,GAAG,IAAI;YACnB,OAAO;AACL,mBAAK,KAAK,GAAG,IAAI;YACnB;UACF;AACA,iBAAO;QACT;AAEA,iBAAS,UAAqB,QAAe;AAC3C,cAAI,OAAO,UAAU,UAAU;AAC7B,gBAAI,CAAC,OAAO,KAAK,MAAM;AAAG,oBAAM,IAAI,MAAM,mBAAmB,MAAM,GAAG;AACtE,mBAAO,KAAK,MAAM,IAAI,MAAM,EAAE;UAChC;QACF;MACF,CAAC;AAED,aAAO;AAEP,eAAS,iBAAiB,MAAiB,MAA6B,KAAW;AACjF,YAAI,SAAS,UAAa,CAAC,MAAM,MAAM,IAAI;AAAG,gBAAM,SAAS,GAAG;MAClE;AAEA,eAAS,SAAS,KAAW;AAC3B,eAAO,IAAI,MAAM,cAAc,GAAG,oCAAoC;MACxE;IACF;AAxDA,YAAA,gBAAA;;;;;;;;;;ACnFA,QAAA,eAAA;AACA,QAAA,aAAA;AACA,QAAA,kBAAA;AACA,QAAA,aAAA;AACA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AASA,QAAA,WAAA;AASA,aAAgB,qBAAqB,IAAa;AAChD,UAAI,YAAY,EAAE,GAAG;AACnB,sBAAc,EAAE;AAChB,YAAI,kBAAkB,EAAE,GAAG;AACzB,2BAAiB,EAAE;AACnB;QACF;MACF;AACA,uBAAiB,IAAI,OAAM,GAAA,aAAA,sBAAqB,EAAE,CAAC;IACrD;AATA,YAAA,uBAAA;AAWA,aAAS,iBACP,EAAC,KAAK,cAAc,QAAQ,WAAW,KAAI,GAC3C,MAAW;AAEX,UAAI,KAAK,KAAK,KAAK;AACjB,YAAI,KAAK,eAAc,GAAA,UAAA,KAAI,QAAA,QAAE,IAAI,KAAK,QAAA,QAAE,MAAM,IAAI,UAAU,QAAQ,MAAK;AACvE,cAAI,MAAK,GAAA,UAAA,mBAAkB,cAAc,QAAQ,IAAI,CAAC,EAAE;AACxD,+BAAqB,KAAK,IAAI;AAC9B,cAAI,KAAK,IAAI;QACf,CAAC;MACH,OAAO;AACL,YAAI,KAAK,eAAc,GAAA,UAAA,KAAI,QAAA,QAAE,IAAI,KAAK,kBAAkB,IAAI,CAAC,IAAI,UAAU,QAAQ,MACjF,IAAI,KAAK,cAAc,QAAQ,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC;MAEpD;IACF;AAEA,aAAS,kBAAkB,MAAqB;AAC9C,cAAO,GAAA,UAAA,MAAK,QAAA,QAAE,YAAY,QAAQ,QAAA,QAAE,UAAU,KAAK,QAAA,QAAE,kBAAkB,KAAK,QAAA,QAAE,QAAQ,IACpF,QAAA,QAAE,IACJ,GAAG,KAAK,cAAa,GAAA,UAAA,OAAM,QAAA,QAAE,cAAc,QAAQ,UAAA,GAAG;IACxD;AAEA,aAAS,qBAAqB,KAAc,MAAqB;AAC/D,UAAI,GACF,QAAA,QAAE,QACF,MAAK;AACH,YAAI,IAAI,QAAA,QAAE,eAAc,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,YAAY,EAAE;AACxD,YAAI,IAAI,QAAA,QAAE,aAAY,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,UAAU,EAAE;AACpD,YAAI,IAAI,QAAA,QAAE,qBAAoB,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,kBAAkB,EAAE;AACpE,YAAI,IAAI,QAAA,QAAE,WAAU,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,QAAQ,EAAE;AAChD,YAAI,KAAK;AAAY,cAAI,IAAI,QAAA,QAAE,iBAAgB,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,cAAc,EAAE;MACnF,GACA,MAAK;AACH,YAAI,IAAI,QAAA,QAAE,eAAc,GAAA,UAAA,MAAK;AAC7B,YAAI,IAAI,QAAA,QAAE,aAAY,GAAA,UAAA,aAAY;AAClC,YAAI,IAAI,QAAA,QAAE,qBAAoB,GAAA,UAAA,aAAY;AAC1C,YAAI,IAAI,QAAA,QAAE,UAAU,QAAA,QAAE,IAAI;AAC1B,YAAI,KAAK;AAAY,cAAI,IAAI,QAAA,QAAE,iBAAgB,GAAA,UAAA,MAAK;MACtD,CAAC;IAEL;AAEA,aAAS,iBAAiB,IAAgB;AACxC,YAAM,EAAC,QAAQ,MAAM,IAAG,IAAI;AAC5B,uBAAiB,IAAI,MAAK;AACxB,YAAI,KAAK,YAAY,OAAO;AAAU,yBAAe,EAAE;AACvD,uBAAe,EAAE;AACjB,YAAI,IAAI,QAAA,QAAE,SAAS,IAAI;AACvB,YAAI,IAAI,QAAA,QAAE,QAAQ,CAAC;AACnB,YAAI,KAAK;AAAa,yBAAe,EAAE;AACvC,wBAAgB,EAAE;AAClB,sBAAc,EAAE;MAClB,CAAC;AACD;IACF;AAEA,aAAS,eAAe,IAAgB;AAEtC,YAAM,EAAC,KAAK,aAAY,IAAI;AAC5B,SAAG,YAAY,IAAI,MAAM,cAAa,GAAA,UAAA,KAAI,YAAY,YAAY;AAClE,UAAI,IAAG,GAAA,UAAA,KAAI,GAAG,SAAS,iBAAiB,MAAM,IAAI,QAAO,GAAA,UAAA,KAAI,GAAG,SAAS,WAAU,GAAA,UAAA,aAAY,CAAC;AAChG,UAAI,IAAG,GAAA,UAAA,KAAI,GAAG,SAAS,iBAAiB,MAAM,IAAI,QAAO,GAAA,UAAA,KAAI,GAAG,SAAS,WAAU,GAAA,UAAA,aAAY,CAAC;IAClG;AAEA,aAAS,cAAc,QAAmB,MAAqB;AAC7D,YAAM,QAAQ,OAAO,UAAU,YAAY,OAAO,KAAK,QAAQ;AAC/D,aAAO,UAAU,KAAK,KAAK,UAAU,KAAK,KAAK,YAAW,GAAA,UAAA,mBAAkB,KAAK,QAAQ,UAAA;IAC3F;AAGA,aAAS,cAAc,IAAe,OAAW;AAC/C,UAAI,YAAY,EAAE,GAAG;AACnB,sBAAc,EAAE;AAChB,YAAI,kBAAkB,EAAE,GAAG;AACzB,2BAAiB,IAAI,KAAK;AAC1B;QACF;MACF;AACA,OAAA,GAAA,aAAA,mBAAkB,IAAI,KAAK;IAC7B;AAEA,aAAS,kBAAkB,EAAC,QAAQ,MAAAC,MAAI,GAAY;AAClD,UAAI,OAAO,UAAU;AAAW,eAAO,CAAC;AACxC,iBAAW,OAAO;AAAQ,YAAIA,MAAK,MAAM,IAAI,GAAG;AAAG,iBAAO;AAC1D,aAAO;IACT;AAEA,aAAS,YAAY,IAAa;AAChC,aAAO,OAAO,GAAG,UAAU;IAC7B;AAEA,aAAS,iBAAiB,IAAkB,OAAW;AACrD,YAAM,EAAC,QAAQ,KAAK,KAAI,IAAI;AAC5B,UAAI,KAAK,YAAY,OAAO;AAAU,uBAAe,EAAE;AACvD,oBAAc,EAAE;AAChB,uBAAiB,EAAE;AACnB,YAAM,YAAY,IAAI,MAAM,SAAS,QAAA,QAAE,MAAM;AAC7C,sBAAgB,IAAI,SAAS;AAE7B,UAAI,IAAI,QAAO,GAAA,UAAA,KAAI,SAAS,QAAQ,QAAA,QAAE,MAAM,EAAE;IAChD;AAEA,aAAS,cAAc,IAAgB;AACrC,OAAA,GAAA,OAAA,mBAAkB,EAAE;AACpB,2BAAqB,EAAE;IACzB;AAEA,aAAS,gBAAgB,IAAkB,WAAgB;AACzD,UAAI,GAAG,KAAK;AAAK,eAAO,eAAe,IAAI,CAAA,GAAI,OAAO,SAAS;AAC/D,YAAM,SAAQ,GAAA,WAAA,gBAAe,GAAG,MAAM;AACtC,YAAM,gBAAe,GAAA,WAAA,wBAAuB,IAAI,KAAK;AACrD,qBAAe,IAAI,OAAO,CAAC,cAAc,SAAS;IACpD;AAEA,aAAS,qBAAqB,IAAgB;AAC5C,YAAM,EAAC,QAAQ,eAAe,MAAM,MAAAA,MAAI,IAAI;AAC5C,UAAI,OAAO,QAAQ,KAAK,0BAAyB,GAAA,OAAA,sBAAqB,QAAQA,MAAK,KAAK,GAAG;AACzF,QAAAA,MAAK,OAAO,KAAK,6CAA6C,aAAa,GAAG;MAChF;IACF;AAEA,aAAS,eAAe,IAAgB;AACtC,YAAM,EAAC,QAAQ,KAAI,IAAI;AACvB,UAAI,OAAO,YAAY,UAAa,KAAK,eAAe,KAAK,cAAc;AACzE,SAAA,GAAA,OAAA,iBAAgB,IAAI,uCAAuC;MAC7D;IACF;AAEA,aAAS,cAAc,IAAgB;AACrC,YAAM,QAAQ,GAAG,OAAO,GAAG,KAAK,QAAQ;AACxC,UAAI;AAAO,WAAG,UAAS,GAAA,UAAA,YAAW,GAAG,KAAK,aAAa,GAAG,QAAQ,KAAK;IACzE;AAEA,aAAS,iBAAiB,IAAgB;AACxC,UAAI,GAAG,OAAO,UAAU,CAAC,GAAG,UAAU;AAAQ,cAAM,IAAI,MAAM,6BAA6B;IAC7F;AAEA,aAAS,eAAe,EAAC,KAAK,WAAW,QAAQ,eAAe,KAAI,GAAe;AACjF,YAAM,MAAM,OAAO;AACnB,UAAI,KAAK,aAAa,MAAM;AAC1B,YAAI,MAAK,GAAA,UAAA,KAAI,QAAA,QAAE,IAAI,eAAe,GAAG,GAAG;MAC1C,WAAW,OAAO,KAAK,YAAY,YAAY;AAC7C,cAAM,cAAa,GAAA,UAAA,OAAM,aAAa;AACtC,cAAM,WAAW,IAAI,WAAW,QAAQ,EAAC,KAAK,UAAU,KAAI,CAAC;AAC7D,YAAI,MAAK,GAAA,UAAA,KAAI,QAAA,QAAE,IAAI,kBAAkB,GAAG,KAAK,UAAU,KAAK,QAAQ,UAAU;MAChF;IACF;AAEA,aAAS,cAAc,IAAa;AAClC,YAAM,EAAC,KAAK,WAAW,cAAc,iBAAiB,KAAI,IAAI;AAC9D,UAAI,UAAU,QAAQ;AAEpB,YAAI,IACF,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,UACZ,MAAM,IAAI,OAAO,QAAA,QAAE,IAAI,GACvB,MAAM,IAAI,OAAM,GAAA,UAAA,SAAQ,eAAuB,IAAI,QAAA,QAAE,OAAO,GAAG,CAAC;MAEpE,OAAO;AACL,YAAI,QAAO,GAAA,UAAA,KAAI,YAAY,WAAW,QAAA,QAAE,OAAO;AAC/C,YAAI,KAAK;AAAa,0BAAgB,EAAE;AACxC,YAAI,QAAO,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,QAAQ;MACjC;IACF;AAEA,aAAS,gBAAgB,EAAC,KAAK,WAAW,OAAO,MAAK,GAAY;AAChE,UAAI,iBAAiB,UAAA;AAAM,YAAI,QAAO,GAAA,UAAA,KAAI,SAAS,UAAU,KAAK;AAClE,UAAI,iBAAiB,UAAA;AAAM,YAAI,QAAO,GAAA,UAAA,KAAI,SAAS,UAAU,KAAK;IACpE;AAEA,aAAS,eACP,IACA,OACA,YACA,WAAgB;AAEhB,YAAM,EAAC,KAAK,QAAQ,MAAM,WAAW,MAAM,MAAAA,MAAI,IAAI;AACnD,YAAM,EAAC,MAAK,IAAIA;AAChB,UAAI,OAAO,SAAS,KAAK,yBAAyB,EAAC,GAAA,OAAA,sBAAqB,QAAQ,KAAK,IAAI;AACvF,YAAI,MAAM,MAAM,YAAY,IAAI,QAAS,MAAM,IAAI,KAAc,UAAU,CAAC;AAC5E;MACF;AACA,UAAI,CAAC,KAAK;AAAK,yBAAiB,IAAI,KAAK;AACzC,UAAI,MAAM,MAAK;AACb,mBAAW,SAAS,MAAM;AAAO,wBAAc,KAAK;AACpD,sBAAc,MAAM,IAAI;MAC1B,CAAC;AAED,eAAS,cAAc,OAAgB;AACrC,YAAI,EAAC,GAAA,gBAAA,gBAAe,QAAQ,KAAK;AAAG;AACpC,YAAI,MAAM,MAAM;AACd,cAAI,IAAG,GAAA,WAAA,eAAc,MAAM,MAAM,MAAM,KAAK,aAAa,CAAC;AAC1D,0BAAgB,IAAI,KAAK;AACzB,cAAI,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,MAAM,QAAQ,YAAY;AAC/D,gBAAI,KAAI;AACR,aAAA,GAAA,WAAA,iBAAgB,EAAE;UACpB;AACA,cAAI,MAAK;QACX,OAAO;AACL,0BAAgB,IAAI,KAAK;QAC3B;AAEA,YAAI,CAAC;AAAW,cAAI,IAAG,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,QAAQ,aAAa,CAAC,EAAE;MAC7D;IACF;AAEA,aAAS,gBAAgB,IAAkB,OAAgB;AACzD,YAAM,EACJ,KACA,QACA,MAAM,EAAC,YAAW,EAAC,IACjB;AACJ,UAAI;AAAa,SAAA,GAAA,WAAA,gBAAe,IAAI,MAAM,IAAI;AAC9C,UAAI,MAAM,MAAK;AACb,mBAAW,QAAQ,MAAM,OAAO;AAC9B,eAAI,GAAA,gBAAA,eAAc,QAAQ,IAAI,GAAG;AAC/B,wBAAY,IAAI,KAAK,SAAS,KAAK,YAAY,MAAM,IAAI;UAC3D;QACF;MACF,CAAC;IACH;AAEA,aAAS,iBAAiB,IAAkB,OAAiB;AAC3D,UAAI,GAAG,UAAU,QAAQ,CAAC,GAAG,KAAK;AAAa;AAC/C,wBAAkB,IAAI,KAAK;AAC3B,UAAI,CAAC,GAAG,KAAK;AAAiB,2BAAmB,IAAI,KAAK;AAC1D,wBAAkB,IAAI,GAAG,SAAS;IACpC;AAEA,aAAS,kBAAkB,IAAkB,OAAiB;AAC5D,UAAI,CAAC,MAAM;AAAQ;AACnB,UAAI,CAAC,GAAG,UAAU,QAAQ;AACxB,WAAG,YAAY;AACf;MACF;AACA,YAAM,QAAQ,CAAC,MAAK;AAClB,YAAI,CAAC,aAAa,GAAG,WAAW,CAAC,GAAG;AAClC,2BAAiB,IAAI,SAAS,CAAC,6BAA6B,GAAG,UAAU,KAAK,GAAG,CAAC,GAAG;QACvF;MACF,CAAC;AACD,wBAAkB,IAAI,KAAK;IAC7B;AAEA,aAAS,mBAAmB,IAAkB,IAAc;AAC1D,UAAI,GAAG,SAAS,KAAK,EAAE,GAAG,WAAW,KAAK,GAAG,SAAS,MAAM,IAAI;AAC9D,yBAAiB,IAAI,iDAAiD;MACxE;IACF;AAEA,aAAS,kBAAkB,IAAkB,IAAc;AACzD,YAAM,QAAQ,GAAG,KAAK,MAAM;AAC5B,iBAAW,WAAW,OAAO;AAC3B,cAAM,OAAO,MAAM,OAAO;AAC1B,YAAI,OAAO,QAAQ,aAAY,GAAA,gBAAA,eAAc,GAAG,QAAQ,IAAI,GAAG;AAC7D,gBAAM,EAAC,KAAI,IAAI,KAAK;AACpB,cAAI,KAAK,UAAU,CAAC,KAAK,KAAK,CAAC,MAAM,kBAAkB,IAAI,CAAC,CAAC,GAAG;AAC9D,6BAAiB,IAAI,iBAAiB,KAAK,KAAK,GAAG,CAAC,kBAAkB,OAAO,GAAG;UAClF;QACF;MACF;IACF;AAEA,aAAS,kBAAkB,OAAmB,MAAc;AAC1D,aAAO,MAAM,SAAS,IAAI,KAAM,SAAS,YAAY,MAAM,SAAS,SAAS;IAC/E;AAEA,aAAS,aAAa,IAAgB,GAAW;AAC/C,aAAO,GAAG,SAAS,CAAC,KAAM,MAAM,aAAa,GAAG,SAAS,QAAQ;IACnE;AAEA,aAAS,kBAAkB,IAAkB,WAAqB;AAChE,YAAM,KAAiB,CAAA;AACvB,iBAAW,KAAK,GAAG,WAAW;AAC5B,YAAI,aAAa,WAAW,CAAC;AAAG,aAAG,KAAK,CAAC;iBAChC,UAAU,SAAS,SAAS,KAAK,MAAM;AAAU,aAAG,KAAK,SAAS;MAC7E;AACA,SAAG,YAAY;IACjB;AAEA,aAAS,iBAAiB,IAAkB,KAAW;AACrD,YAAM,aAAa,GAAG,UAAU,SAAS,GAAG;AAC5C,aAAO,QAAQ,UAAU;AACzB,OAAA,GAAA,OAAA,iBAAgB,IAAI,KAAK,GAAG,KAAK,WAAW;IAC9C;AAEA,QAAa,aAAb,MAAuB;MAiBrB,YAAY,IAAkB,KAA6B,SAAe;AACxE,SAAA,GAAA,UAAA,sBAAqB,IAAI,KAAK,OAAO;AACrC,aAAK,MAAM,GAAG;AACd,aAAK,YAAY,GAAG;AACpB,aAAK,UAAU;AACf,aAAK,OAAO,GAAG;AACf,aAAK,SAAS,GAAG,OAAO,OAAO;AAC/B,aAAK,QAAQ,IAAI,SAAS,GAAG,KAAK,SAAS,KAAK,UAAU,KAAK,OAAO;AACtE,aAAK,eAAc,GAAA,OAAA,gBAAe,IAAI,KAAK,QAAQ,SAAS,KAAK,KAAK;AACtE,aAAK,aAAa,IAAI;AACtB,aAAK,eAAe,GAAG;AACvB,aAAK,SAAS,CAAA;AACd,aAAK,KAAK;AACV,aAAK,MAAM;AAEX,YAAI,KAAK,OAAO;AACd,eAAK,aAAa,GAAG,IAAI,MAAM,WAAW,QAAQ,KAAK,OAAO,EAAE,CAAC;QACnE,OAAO;AACL,eAAK,aAAa,KAAK;AACvB,cAAI,EAAC,GAAA,UAAA,iBAAgB,KAAK,QAAQ,IAAI,YAAY,IAAI,cAAc,GAAG;AACrE,kBAAM,IAAI,MAAM,GAAG,OAAO,kBAAkB,KAAK,UAAU,IAAI,UAAU,CAAC,EAAE;UAC9E;QACF;AAEA,YAAI,UAAU,MAAM,IAAI,cAAc,IAAI,WAAW,OAAO;AAC1D,eAAK,YAAY,GAAG,IAAI,MAAM,SAAS,QAAA,QAAE,MAAM;QACjD;MACF;MAEA,OAAO,WAAiB,eAA4B,YAAuB;AACzE,aAAK,YAAW,GAAA,UAAA,KAAI,SAAS,GAAG,eAAe,UAAU;MAC3D;MAEA,WAAW,WAAiB,eAA4B,YAAuB;AAC7E,aAAK,IAAI,GAAG,SAAS;AACrB,YAAI;AAAY,qBAAU;;AACrB,eAAK,MAAK;AACf,YAAI,eAAe;AACjB,eAAK,IAAI,KAAI;AACb,wBAAa;AACb,cAAI,KAAK;AAAW,iBAAK,IAAI,MAAK;QACpC,OAAO;AACL,cAAI,KAAK;AAAW,iBAAK,IAAI,MAAK;;AAC7B,iBAAK,IAAI,KAAI;QACpB;MACF;MAEA,KAAK,WAAiB,YAAuB;AAC3C,aAAK,YAAW,GAAA,UAAA,KAAI,SAAS,GAAG,QAAW,UAAU;MACvD;MAEA,KAAK,WAAgB;AACnB,YAAI,cAAc,QAAW;AAC3B,eAAK,MAAK;AACV,cAAI,CAAC,KAAK;AAAW,iBAAK,IAAI,GAAG,KAAK;AACtC;QACF;AACA,aAAK,IAAI,GAAG,SAAS;AACrB,aAAK,MAAK;AACV,YAAI,KAAK;AAAW,eAAK,IAAI,MAAK;;AAC7B,eAAK,IAAI,KAAI;MACpB;MAEA,UAAU,WAAe;AACvB,YAAI,CAAC,KAAK;AAAO,iBAAO,KAAK,KAAK,SAAS;AAC3C,cAAM,EAAC,WAAU,IAAI;AACrB,aAAK,MAAK,GAAA,UAAA,KAAI,UAAU,uBAAsB,GAAA,UAAA,IAAG,KAAK,aAAY,GAAI,SAAS,CAAC,GAAG;MACrF;MAEA,MAAM,QAAkB,aAAgC,YAAuB;AAC7E,YAAI,aAAa;AACf,eAAK,UAAU,WAAW;AAC1B,eAAK,OAAO,QAAQ,UAAU;AAC9B,eAAK,UAAU,CAAA,CAAE;AACjB;QACF;AACA,aAAK,OAAO,QAAQ,UAAU;MAChC;MAEQ,OAAO,QAAkB,YAAuB;AACtD;AAAC,SAAC,SAAS,SAAA,mBAAmB,SAAA,aAAa,MAAM,KAAK,IAAI,OAAO,UAAU;MAC7E;MAEA,aAAU;AACR,SAAA,GAAA,SAAA,aAAY,MAAM,KAAK,IAAI,cAAc,SAAA,iBAAiB;MAC5D;MAEA,QAAK;AACH,YAAI,KAAK,cAAc;AAAW,gBAAM,IAAI,MAAM,yCAAyC;AAC3F,SAAA,GAAA,SAAA,kBAAiB,KAAK,KAAK,KAAK,SAAS;MAC3C;MAEA,GAAG,MAAoB;AACrB,YAAI,CAAC,KAAK;AAAW,eAAK,IAAI,GAAG,IAAI;MACvC;MAEA,UAAU,KAAuB,QAAa;AAC5C,YAAI;AAAQ,iBAAO,OAAO,KAAK,QAAQ,GAAG;;AACrC,eAAK,SAAS;MACrB;MAEA,WAAW,OAAa,WAAuB,aAAmB,UAAA,KAAG;AACnE,aAAK,IAAI,MAAM,MAAK;AAClB,eAAK,WAAW,OAAO,UAAU;AACjC,oBAAS;QACX,CAAC;MACH;MAEA,WAAW,QAAc,UAAA,KAAK,aAAmB,UAAA,KAAG;AAClD,YAAI,CAAC,KAAK;AAAO;AACjB,cAAM,EAAC,KAAK,YAAY,YAAY,IAAG,IAAI;AAC3C,YAAI,IAAG,GAAA,UAAA,KAAG,GAAA,UAAA,KAAI,UAAU,kBAAkB,UAAU,CAAC;AACrD,YAAI,UAAU,UAAA;AAAK,cAAI,OAAO,OAAO,IAAI;AACzC,YAAI,WAAW,UAAU,IAAI,gBAAgB;AAC3C,cAAI,OAAO,KAAK,aAAY,CAAE;AAC9B,eAAK,WAAU;AACf,cAAI,UAAU,UAAA;AAAK,gBAAI,OAAO,OAAO,KAAK;QAC5C;AACA,YAAI,KAAI;MACV;MAEA,eAAY;AACV,cAAM,EAAC,KAAK,YAAY,YAAY,KAAK,GAAE,IAAI;AAC/C,gBAAO,GAAA,UAAA,IAAG,eAAc,GAAI,mBAAkB,CAAE;AAEhD,iBAAS,iBAAc;AACrB,cAAI,WAAW,QAAQ;AAErB,gBAAI,EAAE,sBAAsB,UAAA;AAAO,oBAAM,IAAI,MAAM,0BAA0B;AAC7E,kBAAM,KAAK,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAC,UAAU;AAC/D,oBAAO,GAAA,UAAA,MAAI,GAAA,WAAA,gBAAe,IAAI,YAAY,GAAG,KAAK,eAAe,WAAA,SAAS,KAAK,CAAC;UAClF;AACA,iBAAO,UAAA;QACT;AAEA,iBAAS,qBAAkB;AACzB,cAAI,IAAI,gBAAgB;AACtB,kBAAM,oBAAoB,IAAI,WAAW,iBAAiB,EAAC,KAAK,IAAI,eAAc,CAAC;AACnF,oBAAO,GAAA,UAAA,MAAK,iBAAiB,IAAI,UAAU;UAC7C;AACA,iBAAO,UAAA;QACT;MACF;MAEA,UAAU,MAAqB,OAAW;AACxC,cAAM,aAAY,GAAA,YAAA,cAAa,KAAK,IAAI,IAAI;AAC5C,SAAA,GAAA,YAAA,qBAAoB,WAAW,KAAK,IAAI,IAAI;AAC5C,SAAA,GAAA,YAAA,qBAAoB,WAAW,IAAI;AACnC,cAAM,cAAc,EAAC,GAAG,KAAK,IAAI,GAAG,WAAW,OAAO,QAAW,OAAO,OAAS;AACjF,sBAAc,aAAa,KAAK;AAChC,eAAO;MACT;MAEA,eAAe,WAAsB,QAAoB;AACvD,cAAM,EAAC,IAAI,IAAG,IAAI;AAClB,YAAI,CAAC,GAAG,KAAK;AAAa;AAC1B,YAAI,GAAG,UAAU,QAAQ,UAAU,UAAU,QAAW;AACtD,aAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,UAAU,OAAO,GAAG,OAAO,MAAM;QACxE;AACA,YAAI,GAAG,UAAU,QAAQ,UAAU,UAAU,QAAW;AACtD,aAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,UAAU,OAAO,GAAG,OAAO,MAAM;QACxE;MACF;MAEA,oBAAoB,WAAsB,OAAW;AACnD,cAAM,EAAC,IAAI,IAAG,IAAI;AAClB,YAAI,GAAG,KAAK,gBAAgB,GAAG,UAAU,QAAQ,GAAG,UAAU,OAAO;AACnE,cAAI,GAAG,OAAO,MAAM,KAAK,eAAe,WAAW,UAAA,IAAI,CAAC;AACxD,iBAAO;QACT;MACF;;AA3LF,YAAA,aAAA;AA8LA,aAAS,YACP,IACA,SACA,KACA,UAAmB;AAEnB,YAAM,MAAM,IAAI,WAAW,IAAI,KAAK,OAAO;AAC3C,UAAI,UAAU,KAAK;AACjB,YAAI,KAAK,KAAK,QAAQ;MACxB,WAAW,IAAI,SAAS,IAAI,UAAU;AACpC,SAAA,GAAA,UAAA,iBAAgB,KAAK,GAAG;MAC1B,WAAW,WAAW,KAAK;AACzB,SAAA,GAAA,UAAA,kBAAiB,KAAK,GAAG;MAC3B,WAAW,IAAI,WAAW,IAAI,UAAU;AACtC,SAAA,GAAA,UAAA,iBAAgB,KAAK,GAAG;MAC1B;IACF;AAEA,QAAM,eAAe;AACrB,QAAM,wBAAwB;AAC9B,aAAgB,QACd,OACA,EAAC,WAAW,WAAW,YAAW,GAAY;AAE9C,UAAI;AACJ,UAAI;AACJ,UAAI,UAAU;AAAI,eAAO,QAAA,QAAE;AAC3B,UAAI,MAAM,CAAC,MAAM,KAAK;AACpB,YAAI,CAAC,aAAa,KAAK,KAAK;AAAG,gBAAM,IAAI,MAAM,yBAAyB,KAAK,EAAE;AAC/E,sBAAc;AACd,eAAO,QAAA,QAAE;MACX,OAAO;AACL,cAAM,UAAU,sBAAsB,KAAK,KAAK;AAChD,YAAI,CAAC;AAAS,gBAAM,IAAI,MAAM,yBAAyB,KAAK,EAAE;AAC9D,cAAM,KAAa,CAAC,QAAQ,CAAC;AAC7B,sBAAc,QAAQ,CAAC;AACvB,YAAI,gBAAgB,KAAK;AACvB,cAAI,MAAM;AAAW,kBAAM,IAAI,MAAM,SAAS,kBAAkB,EAAE,CAAC;AACnE,iBAAO,YAAY,YAAY,EAAE;QACnC;AACA,YAAI,KAAK;AAAW,gBAAM,IAAI,MAAM,SAAS,QAAQ,EAAE,CAAC;AACxD,eAAO,UAAU,YAAY,EAAE;AAC/B,YAAI,CAAC;AAAa,iBAAO;MAC3B;AAEA,UAAI,OAAO;AACX,YAAM,WAAW,YAAY,MAAM,GAAG;AACtC,iBAAW,WAAW,UAAU;AAC9B,YAAI,SAAS;AACX,kBAAO,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,cAAY,GAAA,OAAA,qBAAoB,OAAO,CAAC,CAAC;AAC3D,kBAAO,GAAA,UAAA,KAAI,IAAI,OAAO,IAAI;QAC5B;MACF;AACA,aAAO;AAEP,eAAS,SAAS,aAAqB,IAAU;AAC/C,eAAO,iBAAiB,WAAW,IAAI,EAAE,gCAAgC,SAAS;MACpF;IACF;AAtCA,YAAA,UAAA;;;;;;;;;AC7hBA,QAAqB,kBAArB,cAA6C,MAAK;MAKhD,YAAY,QAA8B;AACxC,cAAM,mBAAmB;AACzB,aAAK,SAAS;AACd,aAAK,MAAM,KAAK,aAAa;MAC/B;;AATF,YAAA,UAAA;;;;;;;;;ACFA,QAAA,YAAA;AAGA,QAAqB,kBAArB,cAA6C,MAAK;MAIhD,YAAY,UAAuB,QAAgB,KAAa,KAAY;AAC1E,cAAM,OAAO,2BAA2B,GAAG,YAAY,MAAM,EAAE;AAC/D,aAAK,cAAa,GAAA,UAAA,YAAW,UAAU,QAAQ,GAAG;AAClD,aAAK,iBAAgB,GAAA,UAAA,cAAY,GAAA,UAAA,aAAY,UAAU,KAAK,UAAU,CAAC;MACzE;;AARF,YAAA,UAAA;;;;;;;;;;ACOA,QAAA,YAAA;AACA,QAAA,qBAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,aAAA;AA0DA,QAAa,YAAb,MAAsB;MAkBpB,YAAY,KAAkB;;AATrB,aAAA,OAAmB,CAAA;AACnB,aAAA,iBAA2C,CAAA;AASlD,YAAI;AACJ,YAAI,OAAO,IAAI,UAAU;AAAU,mBAAS,IAAI;AAChD,aAAK,SAAS,IAAI;AAClB,aAAK,WAAW,IAAI;AACpB,aAAK,OAAO,IAAI,QAAQ;AACxB,aAAK,UAAS,KAAA,IAAI,YAAM,QAAA,OAAA,SAAA,MAAI,GAAA,UAAA,aAAY,WAAM,QAAN,WAAM,SAAA,SAAN,OAAS,IAAI,YAAY,KAAK,CAAC;AACvE,aAAK,aAAa,IAAI;AACtB,aAAK,YAAY,IAAI;AACrB,aAAK,OAAO,IAAI;AAChB,aAAK,SAAS,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ;AACtB,aAAK,OAAO,CAAA;MACd;;AA9BF,YAAA,YAAA;AAqCA,aAAgB,cAAyB,KAAc;AAErD,YAAM,OAAO,mBAAmB,KAAK,MAAM,GAAG;AAC9C,UAAI;AAAM,eAAO;AACjB,YAAM,UAAS,GAAA,UAAA,aAAY,KAAK,KAAK,aAAa,IAAI,KAAK,MAAM;AACjE,YAAM,EAAC,KAAK,MAAK,IAAI,KAAK,KAAK;AAC/B,YAAM,EAAC,cAAa,IAAI,KAAK;AAC7B,YAAM,MAAM,IAAI,UAAA,QAAQ,KAAK,OAAO,EAAC,KAAK,OAAO,cAAa,CAAC;AAC/D,UAAI;AACJ,UAAI,IAAI,QAAQ;AACd,2BAAmB,IAAI,WAAW,SAAS;UACzC,KAAK,mBAAA;UACL,OAAM,GAAA,UAAA;SACP;MACH;AAEA,YAAM,eAAe,IAAI,UAAU,UAAU;AAC7C,UAAI,eAAe;AAEnB,YAAM,YAAuB;QAC3B;QACA,WAAW,KAAK,KAAK;QACrB,MAAM,QAAA,QAAE;QACR,YAAY,QAAA,QAAE;QACd,oBAAoB,QAAA,QAAE;QACtB,WAAW,CAAC,QAAA,QAAE,IAAI;QAClB,aAAa,CAAC,UAAA,GAAG;;QACjB,WAAW;QACX,WAAW,CAAA;QACX,mBAAmB,oBAAI,IAAG;QAC1B,cAAc,IAAI,WAChB,UACA,KAAK,KAAK,KAAK,WAAW,OACtB,EAAC,KAAK,IAAI,QAAQ,OAAM,GAAA,UAAA,WAAU,IAAI,MAAM,EAAC,IAC7C,EAAC,KAAK,IAAI,OAAM,CAAC;QAEvB;QACA,iBAAiB;QACjB,QAAQ,IAAI;QACZ,WAAW;QACX;QACA,QAAQ,IAAI,UAAU;QACtB,YAAY,UAAA;QACZ,eAAe,IAAI,eAAe,KAAK,KAAK,MAAM,KAAK;QACvD,YAAW,GAAA,UAAA;QACX,MAAM,KAAK;QACX,MAAM;;AAGR,UAAI;AACJ,UAAI;AACF,aAAK,cAAc,IAAI,GAAG;AAC1B,SAAA,GAAA,WAAA,sBAAqB,SAAS;AAC9B,YAAI,SAAS,KAAK,KAAK,KAAK,QAAQ;AAEpC,cAAM,eAAe,IAAI,SAAQ;AACjC,qBAAa,GAAG,IAAI,UAAU,QAAA,QAAE,KAAK,CAAC,UAAU,YAAY;AAE5D,YAAI,KAAK,KAAK,KAAK;AAAS,uBAAa,KAAK,KAAK,KAAK,QAAQ,YAAY,GAAG;AAE/E,cAAM,eAAe,IAAI,SAAS,GAAG,QAAA,QAAE,IAAI,IAAI,GAAG,QAAA,QAAE,KAAK,IAAI,UAAU;AACvE,cAAMC,YAAgC,aAAa,MAAM,KAAK,MAAM,IAAG,CAAE;AACzE,aAAK,MAAM,MAAM,cAAc,EAAC,KAAKA,UAAQ,CAAC;AAE9C,QAAAA,UAAS,SAAS;AAClB,QAAAA,UAAS,SAAS,IAAI;AACtB,QAAAA,UAAS,YAAY;AACrB,YAAI,IAAI;AAAS,UAAAA,UAAmC,SAAS;AAC7D,YAAI,KAAK,KAAK,KAAK,WAAW,MAAM;AAClC,UAAAA,UAAS,SAAS,EAAC,cAAc,cAAc,aAAa,IAAI,QAAO;QACzE;AACA,YAAI,KAAK,KAAK,aAAa;AACzB,gBAAM,EAAC,OAAO,MAAK,IAAI;AACvB,UAAAA,UAAS,YAAY;YACnB,OAAO,iBAAiB,UAAA,OAAO,SAAY;YAC3C,OAAO,iBAAiB,UAAA,OAAO,SAAY;YAC3C,cAAc,iBAAiB,UAAA;YAC/B,cAAc,iBAAiB,UAAA;;AAEjC,cAAIA,UAAS;AAAQ,YAAAA,UAAS,OAAO,aAAY,GAAA,UAAA,WAAUA,UAAS,SAAS;QAC/E;AACA,YAAI,WAAWA;AACf,eAAO;MACT,SAAS,GAAG;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI;AAAY,eAAK,OAAO,MAAM,0CAA0C,UAAU;AAEtF,cAAM;MACR;AACE,aAAK,cAAc,OAAO,GAAG;MAC/B;IACF;AA5FA,YAAA,gBAAA;AA8FA,aAAgB,WAEd,MACA,QACA,KAAW;;AAEX,aAAM,GAAA,UAAA,YAAW,KAAK,KAAK,aAAa,QAAQ,GAAG;AACnD,YAAM,YAAY,KAAK,KAAK,GAAG;AAC/B,UAAI;AAAW,eAAO;AAEtB,UAAI,OAAO,QAAQ,KAAK,MAAM,MAAM,GAAG;AACvC,UAAI,SAAS,QAAW;AACtB,cAAM,UAAS,KAAA,KAAK,eAAS,QAAA,OAAA,SAAA,SAAA,GAAG,GAAG;AACnC,cAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,YAAI;AAAQ,iBAAO,IAAI,UAAU,EAAC,QAAQ,UAAU,MAAM,OAAM,CAAC;MACnE;AAEA,UAAI,SAAS;AAAW;AACxB,aAAQ,KAAK,KAAK,GAAG,IAAI,gBAAgB,KAAK,MAAM,IAAI;IAC1D;AAnBA,YAAA,aAAA;AAqBA,aAAS,gBAA2B,KAAc;AAChD,WAAI,GAAA,UAAA,WAAU,IAAI,QAAQ,KAAK,KAAK,UAAU;AAAG,eAAO,IAAI;AAC5D,aAAO,IAAI,WAAW,MAAM,cAAc,KAAK,MAAM,GAAG;IAC1D;AAGA,aAAgB,mBAA8B,QAAiB;AAC7D,iBAAW,OAAO,KAAK,eAAe;AACpC,YAAI,cAAc,KAAK,MAAM;AAAG,iBAAO;MACzC;IACF;AAJA,YAAA,qBAAA;AAMA,aAAS,cAAc,IAAe,IAAa;AACjD,aAAO,GAAG,WAAW,GAAG,UAAU,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG;IAC5E;AAIA,aAAS,QAEP,MACA;AAEA,UAAI;AACJ,aAAO,QAAQ,MAAM,KAAK,KAAK,GAAG,MAAM;AAAU,cAAM;AACxD,aAAO,OAAO,KAAK,QAAQ,GAAG,KAAK,cAAc,KAAK,MAAM,MAAM,GAAG;IACvE;AAGA,aAAgB,cAEd,MACA;AAEA,YAAM,IAAI,KAAK,KAAK,YAAY,MAAM,GAAG;AACzC,YAAM,WAAU,GAAA,UAAA,cAAa,KAAK,KAAK,aAAa,CAAC;AACrD,UAAI,UAAS,GAAA,UAAA,aAAY,KAAK,KAAK,aAAa,KAAK,QAAQ,MAAS;AAEtE,UAAI,OAAO,KAAK,KAAK,MAAM,EAAE,SAAS,KAAK,YAAY,QAAQ;AAC7D,eAAO,eAAe,KAAK,MAAM,GAAG,IAAI;MAC1C;AAEA,YAAM,MAAK,GAAA,UAAA,aAAY,OAAO;AAC9B,YAAM,WAAW,KAAK,KAAK,EAAE,KAAK,KAAK,QAAQ,EAAE;AACjD,UAAI,OAAO,YAAY,UAAU;AAC/B,cAAM,MAAM,cAAc,KAAK,MAAM,MAAM,QAAQ;AACnD,YAAI,QAAO,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,YAAW;AAAU;AACrC,eAAO,eAAe,KAAK,MAAM,GAAG,GAAG;MACzC;AAEA,UAAI,QAAO,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,YAAW;AAAU;AAC1C,UAAI,CAAC,SAAS;AAAU,sBAAc,KAAK,MAAM,QAAQ;AACzD,UAAI,QAAO,GAAA,UAAA,aAAY,GAAG,GAAG;AAC3B,cAAM,EAAC,OAAM,IAAI;AACjB,cAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,cAAM,QAAQ,OAAO,QAAQ;AAC7B,YAAI;AAAO,oBAAS,GAAA,UAAA,YAAW,KAAK,KAAK,aAAa,QAAQ,KAAK;AACnE,eAAO,IAAI,UAAU,EAAC,QAAQ,UAAU,MAAM,OAAM,CAAC;MACvD;AACA,aAAO,eAAe,KAAK,MAAM,GAAG,QAAQ;IAC9C;AA/BA,YAAA,gBAAA;AAiCA,QAAM,uBAAuB,oBAAI,IAAI;MACnC;MACA;MACA;MACA;MACA;KACD;AAED,aAAS,eAEP,WACA,EAAC,QAAQ,QAAQ,KAAI,GAAY;;AAEjC,YAAI,KAAA,UAAU,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAG,CAAC,OAAM;AAAK;AACrC,iBAAW,QAAQ,UAAU,SAAS,MAAM,CAAC,EAAE,MAAM,GAAG,GAAG;AACzD,YAAI,OAAO,WAAW;AAAW;AACjC,cAAM,aAAa,QAAO,GAAA,OAAA,kBAAiB,IAAI,CAAC;AAChD,YAAI,eAAe;AAAW;AAC9B,iBAAS;AAET,cAAM,QAAQ,OAAO,WAAW,YAAY,OAAO,KAAK,KAAK,QAAQ;AACrE,YAAI,CAAC,qBAAqB,IAAI,IAAI,KAAK,OAAO;AAC5C,oBAAS,GAAA,UAAA,YAAW,KAAK,KAAK,aAAa,QAAQ,KAAK;QAC1D;MACF;AACA,UAAI;AACJ,UAAI,OAAO,UAAU,aAAa,OAAO,QAAQ,EAAC,GAAA,OAAA,sBAAqB,QAAQ,KAAK,KAAK,GAAG;AAC1F,cAAM,QAAO,GAAA,UAAA,YAAW,KAAK,KAAK,aAAa,QAAQ,OAAO,IAAI;AAClE,cAAM,cAAc,KAAK,MAAM,MAAM,IAAI;MAC3C;AAGA,YAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,YAAM,OAAO,IAAI,UAAU,EAAC,QAAQ,UAAU,MAAM,OAAM,CAAC;AAC3D,UAAI,IAAI,WAAW,IAAI,KAAK;AAAQ,eAAO;AAC3C,aAAO;IACT;;;;;ACnUA;AAAA;AAAA;AAAA,MACE,KAAO;AAAA,MACP,aAAe;AAAA,MACf,MAAQ;AAAA,MACR,UAAY,CAAC,OAAO;AAAA,MACpB,YAAc;AAAA,QACZ,OAAS;AAAA,UACP,MAAQ;AAAA,UACR,OAAS,CAAC,EAAC,QAAU,wBAAuB,GAAG,EAAC,QAAU,eAAc,CAAC;AAAA,QAC3E;AAAA,MACF;AAAA,MACA,sBAAwB;AAAA,IAC1B;AAAA;AAAA;;;ACZA;AAAA;AAAA;AAEA,QAAM,MAAM;AAAA,MACV,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;AC7BA;AAAA;AAAA;AAEA,QAAM,EAAE,IAAI,IAAI;AAEhB,QAAM,WAAW;AAEjB,aAAS,cAAe,MAAM;AAC5B,UAAI,UAAU,MAAM,GAAG,IAAI,GAAG;AAAE,eAAO,EAAE,MAAM,QAAQ,MAAM;AAAA,MAAE;AAC/D,YAAM,UAAU,KAAK,MAAM,QAAQ,KAAK,CAAC;AACzC,YAAM,CAAC,OAAO,IAAI;AAClB,UAAI,SAAS;AACX,eAAO,EAAE,MAAM,kBAAkB,SAAS,GAAG,GAAG,QAAQ,KAAK;AAAA,MAC/D,OAAO;AACL,eAAO,EAAE,MAAM,QAAQ,MAAM;AAAA,MAC/B;AAAA,IACF;AAOA,aAAS,yBAA0B,OAAO,WAAW,OAAO;AAC1D,UAAI,MAAM;AACV,UAAI,QAAQ;AACZ,iBAAW,KAAK,OAAO;AACrB,YAAI,IAAI,CAAC,MAAM,OAAW,QAAO;AACjC,YAAI,MAAM,OAAO,UAAU,KAAM,SAAQ;AACzC,YAAI,CAAC,MAAO,QAAO;AAAA,MACrB;AACA,UAAI,YAAY,IAAI,WAAW,EAAG,OAAM;AACxC,aAAO;AAAA,IACT;AAEA,aAAS,QAAS,OAAO;AACvB,UAAI,aAAa;AACjB,YAAM,SAAS,EAAE,OAAO,OAAO,SAAS,IAAI,MAAM,GAAG;AACrD,YAAM,UAAU,CAAC;AACjB,YAAM,SAAS,CAAC;AAChB,UAAI,SAAS;AACb,UAAI,qBAAqB;AACzB,UAAI,UAAU;AAEd,eAAS,UAAW;AAClB,YAAI,OAAO,QAAQ;AACjB,cAAI,WAAW,OAAO;AACpB,kBAAM,MAAM,yBAAyB,MAAM;AAC3C,gBAAI,QAAQ,QAAW;AACrB,sBAAQ,KAAK,GAAG;AAAA,YAClB,OAAO;AACL,qBAAO,QAAQ;AACf,qBAAO;AAAA,YACT;AAAA,UACF;AACA,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO;AAAA,MACT;AAEA,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAM,SAAS,MAAM,CAAC;AACtB,YAAI,WAAW,OAAO,WAAW,KAAK;AAAE;AAAA,QAAS;AACjD,YAAI,WAAW,KAAK;AAClB,cAAI,uBAAuB,MAAM;AAC/B,sBAAU;AAAA,UACZ;AACA,cAAI,CAAC,QAAQ,GAAG;AAAE;AAAA,UAAM;AACxB;AACA,kBAAQ,KAAK,GAAG;AAChB,cAAI,aAAa,GAAG;AAElB,mBAAO,QAAQ;AACf;AAAA,UACF;AACA,cAAI,IAAI,KAAK,KAAK,MAAM,IAAI,CAAC,MAAM,KAAK;AACtC,iCAAqB;AAAA,UACvB;AACA;AAAA,QACF,WAAW,WAAW,KAAK;AACzB,cAAI,CAAC,QAAQ,GAAG;AAAE;AAAA,UAAM;AAExB,mBAAS;AAAA,QACX,OAAO;AACL,iBAAO,KAAK,MAAM;AAClB;AAAA,QACF;AAAA,MACF;AACA,UAAI,OAAO,QAAQ;AACjB,YAAI,QAAQ;AACV,iBAAO,OAAO,OAAO,KAAK,EAAE;AAAA,QAC9B,WAAW,SAAS;AAClB,kBAAQ,KAAK,OAAO,KAAK,EAAE,CAAC;AAAA,QAC9B,OAAO;AACL,kBAAQ,KAAK,yBAAyB,MAAM,CAAC;AAAA,QAC/C;AAAA,MACF;AACA,aAAO,UAAU,QAAQ,KAAK,EAAE;AAChC,aAAO;AAAA,IACT;AAEA,aAAS,cAAe,MAAM;AAC5B,UAAI,UAAU,MAAM,GAAG,IAAI,GAAG;AAAE,eAAO,EAAE,MAAM,QAAQ,MAAM;AAAA,MAAE;AAC/D,YAAM,OAAO,QAAQ,IAAI;AAEzB,UAAI,CAAC,KAAK,OAAO;AACf,YAAI,UAAU,KAAK;AACnB,YAAI,cAAc,KAAK;AACvB,YAAI,KAAK,MAAM;AACb,qBAAW,MAAM,KAAK;AACtB,yBAAe,QAAQ,KAAK;AAAA,QAC9B;AACA,eAAO,EAAE,MAAM,SAAS,aAAa,QAAQ,KAAK;AAAA,MACpD,OAAO;AACL,eAAO,EAAE,MAAM,QAAQ,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,aAAS,kBAAmB,KAAK,OAAO;AACtC,UAAI,MAAM;AACV,UAAI,OAAO;AACX,YAAM,IAAI,IAAI;AACd,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAM,IAAI,IAAI,CAAC;AACf,YAAI,MAAM,OAAO,MAAM;AACrB,cAAK,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,SAAU,IAAI,MAAM,GAAG;AACvD,mBAAO;AACP,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,cAAI,MAAM,OAAO;AACf,mBAAO;AAAA,UACT,OAAO;AACL,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,UAAW,KAAK,OAAO;AAC9B,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,YAAI,IAAI,CAAC,MAAM,MAAO;AAAA,MACxB;AACA,aAAO;AAAA,IACT;AAEA,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,OAAO;AAEb,aAAS,kBAAmB,OAAO;AACjC,YAAM,SAAS,CAAC;AAEhB,aAAO,MAAM,QAAQ;AACnB,YAAI,MAAM,MAAM,IAAI,GAAG;AACrB,kBAAQ,MAAM,QAAQ,MAAM,EAAE;AAAA,QAChC,WAAW,MAAM,MAAM,IAAI,GAAG;AAC5B,kBAAQ,MAAM,QAAQ,MAAM,GAAG;AAAA,QACjC,WAAW,MAAM,MAAM,IAAI,GAAG;AAC5B,kBAAQ,MAAM,QAAQ,MAAM,GAAG;AAC/B,iBAAO,IAAI;AAAA,QACb,WAAW,UAAU,OAAO,UAAU,MAAM;AAC1C,kBAAQ;AAAA,QACV,OAAO;AACL,gBAAM,KAAK,MAAM,MAAM,IAAI;AAC3B,cAAI,IAAI;AACN,kBAAM,IAAI,GAAG,CAAC;AACd,oBAAQ,MAAM,MAAM,EAAE,MAAM;AAC5B,mBAAO,KAAK,CAAC;AAAA,UACf,OAAO;AACL,kBAAM,IAAI,MAAM,kCAAkC;AAAA,UACpD;AAAA,QACF;AAAA,MACF;AACA,aAAO,OAAO,KAAK,EAAE;AAAA,IACvB;AAEA,aAAS,2BAA4B,YAAY,KAAK;AACpD,YAAM,OAAO,QAAQ,OAAO,SAAS;AACrC,UAAI,WAAW,WAAW,QAAW;AACnC,mBAAW,SAAS,KAAK,WAAW,MAAM;AAAA,MAC5C;AACA,UAAI,WAAW,aAAa,QAAW;AACrC,mBAAW,WAAW,KAAK,WAAW,QAAQ;AAAA,MAChD;AACA,UAAI,WAAW,SAAS,QAAW;AACjC,mBAAW,OAAO,KAAK,WAAW,IAAI;AAAA,MACxC;AACA,UAAI,WAAW,SAAS,QAAW;AACjC,mBAAW,OAAO,KAAK,WAAW,IAAI;AAAA,MACxC;AACA,UAAI,WAAW,UAAU,QAAW;AAClC,mBAAW,QAAQ,KAAK,WAAW,KAAK;AAAA,MAC1C;AACA,UAAI,WAAW,aAAa,QAAW;AACrC,mBAAW,WAAW,KAAK,WAAW,QAAQ;AAAA,MAChD;AACA,aAAO;AAAA,IACT;AAEA,aAAS,mBAAoB,YAAY;AACvC,YAAM,YAAY,CAAC;AAEnB,UAAI,WAAW,aAAa,QAAW;AACrC,kBAAU,KAAK,WAAW,QAAQ;AAClC,kBAAU,KAAK,GAAG;AAAA,MACpB;AAEA,UAAI,WAAW,SAAS,QAAW;AACjC,YAAI,OAAO,SAAS,WAAW,IAAI;AACnC,cAAM,UAAU,cAAc,IAAI;AAElC,YAAI,QAAQ,QAAQ;AAClB,iBAAO,QAAQ;AAAA,QACjB,OAAO;AACL,gBAAM,UAAU,cAAc,QAAQ,IAAI;AAC1C,cAAI,QAAQ,WAAW,MAAM;AAC3B,mBAAO,IAAI,QAAQ,WAAW;AAAA,UAChC,OAAO;AACL,mBAAO,WAAW;AAAA,UACpB;AAAA,QACF;AACA,kBAAU,KAAK,IAAI;AAAA,MACrB;AAEA,UAAI,OAAO,WAAW,SAAS,YAAY,OAAO,WAAW,SAAS,UAAU;AAC9E,kBAAU,KAAK,GAAG;AAClB,kBAAU,KAAK,OAAO,WAAW,IAAI,CAAC;AAAA,MACxC;AAEA,aAAO,UAAU,SAAS,UAAU,KAAK,EAAE,IAAI;AAAA,IACjD;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACnPA;AAAA;AAAA;AAEA,QAAM,WAAW;AACjB,QAAM,UAAU;AAEhB,aAAS,SAAU,cAAc;AAC/B,aAAO,OAAO,aAAa,WAAW,YAAY,aAAa,SAAS,OAAO,aAAa,MAAM,EAAE,YAAY,MAAM;AAAA,IACxH;AAEA,aAAS,UAAW,YAAY;AAC9B,UAAI,CAAC,WAAW,MAAM;AACpB,mBAAW,QAAQ,WAAW,SAAS;AAAA,MACzC;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAe,YAAY;AAClC,YAAM,SAAS,OAAO,WAAW,MAAM,EAAE,YAAY,MAAM;AAG3D,UAAI,WAAW,UAAU,SAAS,MAAM,OAAO,WAAW,SAAS,IAAI;AACrE,mBAAW,OAAO;AAAA,MACpB;AAGA,UAAI,CAAC,WAAW,MAAM;AACpB,mBAAW,OAAO;AAAA,MACpB;AAMA,aAAO;AAAA,IACT;AAEA,aAAS,QAAS,cAAc;AAE9B,mBAAa,SAAS,SAAS,YAAY;AAG3C,mBAAa,gBAAgB,aAAa,QAAQ,QAAQ,aAAa,QAAQ,MAAM,aAAa,QAAQ;AAC1G,mBAAa,OAAO;AACpB,mBAAa,QAAQ;AAErB,aAAO;AAAA,IACT;AAEA,aAAS,YAAa,cAAc;AAElC,UAAI,aAAa,UAAU,SAAS,YAAY,IAAI,MAAM,OAAO,aAAa,SAAS,IAAI;AACzF,qBAAa,OAAO;AAAA,MACtB;AAGA,UAAI,OAAO,aAAa,WAAW,WAAW;AAC5C,qBAAa,SAAU,aAAa,SAAS,QAAQ;AACrD,qBAAa,SAAS;AAAA,MACxB;AAGA,UAAI,aAAa,cAAc;AAC7B,cAAM,CAAC,MAAM,KAAK,IAAI,aAAa,aAAa,MAAM,GAAG;AACzD,qBAAa,OAAQ,QAAQ,SAAS,MAAM,OAAO;AACnD,qBAAa,QAAQ;AACrB,qBAAa,eAAe;AAAA,MAC9B;AAGA,mBAAa,WAAW;AAExB,aAAO;AAAA,IACT;AAEA,aAAS,SAAU,eAAe,SAAS;AACzC,UAAI,CAAC,cAAc,MAAM;AACvB,sBAAc,QAAQ;AACtB,eAAO;AAAA,MACT;AACA,YAAM,UAAU,cAAc,KAAK,MAAM,OAAO;AAChD,UAAI,SAAS;AACX,cAAM,SAAS,QAAQ,UAAU,cAAc,UAAU;AACzD,sBAAc,MAAM,QAAQ,CAAC,EAAE,YAAY;AAC3C,sBAAc,MAAM,QAAQ,CAAC;AAC7B,cAAM,YAAY,GAAG,MAAM,IAAI,QAAQ,OAAO,cAAc,GAAG;AAC/D,cAAM,gBAAgB,QAAQ,SAAS;AACvC,sBAAc,OAAO;AAErB,YAAI,eAAe;AACjB,0BAAgB,cAAc,MAAM,eAAe,OAAO;AAAA,QAC5D;AAAA,MACF,OAAO;AACL,sBAAc,QAAQ,cAAc,SAAS;AAAA,MAC/C;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,aAAc,eAAe,SAAS;AAC7C,YAAM,SAAS,QAAQ,UAAU,cAAc,UAAU;AACzD,YAAM,MAAM,cAAc,IAAI,YAAY;AAC1C,YAAM,YAAY,GAAG,MAAM,IAAI,QAAQ,OAAO,GAAG;AACjD,YAAM,gBAAgB,QAAQ,SAAS;AAEvC,UAAI,eAAe;AACjB,wBAAgB,cAAc,UAAU,eAAe,OAAO;AAAA,MAChE;AAEA,YAAM,gBAAgB;AACtB,YAAM,MAAM,cAAc;AAC1B,oBAAc,OAAO,GAAG,OAAO,QAAQ,GAAG,IAAI,GAAG;AAEjD,cAAQ,aAAa;AACrB,aAAO;AAAA,IACT;AAEA,aAAS,aAAc,eAAe,SAAS;AAC7C,YAAM,iBAAiB;AACvB,qBAAe,OAAO,eAAe;AACrC,qBAAe,MAAM;AAErB,UAAI,CAAC,QAAQ,aAAa,CAAC,eAAe,QAAQ,CAAC,SAAS,KAAK,eAAe,IAAI,IAAI;AACtF,uBAAe,QAAQ,eAAe,SAAS;AAAA,MACjD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAkB,gBAAgB;AACzC,YAAM,gBAAgB;AAEtB,oBAAc,OAAO,eAAe,QAAQ,IAAI,YAAY;AAC5D,aAAO;AAAA,IACT;AAEA,QAAM,OAAO;AAAA,MACX,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,WAAW;AAAA,IACb;AAEA,QAAM,QAAQ;AAAA,MACZ,QAAQ;AAAA,MACR,YAAY,KAAK;AAAA,MACjB,OAAO;AAAA,MACP,WAAW;AAAA,IACb;AAEA,QAAM,KAAK;AAAA,MACT,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,WAAW;AAAA,IACb;AAEA,QAAM,MAAM;AAAA,MACV,QAAQ;AAAA,MACR,YAAY,GAAG;AAAA,MACf,OAAO,GAAG;AAAA,MACV,WAAW,GAAG;AAAA,IAChB;AAEA,QAAM,MAAM;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA,MACX,eAAe;AAAA,IACjB;AAEA,QAAM,UAAU;AAAA,MACd,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA,MACX,eAAe;AAAA,IACjB;AAEA,QAAM,UAAU;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY;AAAA,IACd;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC3LjB;AAAA;AAAA;AAEA,QAAM,EAAE,eAAe,eAAe,mBAAmB,oBAAoB,2BAA2B,IAAI;AAC5G,QAAM,UAAU;AAEhB,aAAS,UAAW,KAAK,SAAS;AAChC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,UAAUC,OAAM,KAAK,OAAO,GAAG,OAAO;AAAA,MAC9C,WAAW,OAAO,QAAQ,UAAU;AAClC,cAAMA,OAAM,UAAU,KAAK,OAAO,GAAG,OAAO;AAAA,MAC9C;AACA,aAAO;AAAA,IACT;AAEA,aAAS,QAAS,SAAS,aAAa,SAAS;AAC/C,YAAM,oBAAoB,OAAO,OAAO,EAAE,QAAQ,OAAO,GAAG,OAAO;AACnE,YAAM,WAAW,kBAAkBA,OAAM,SAAS,iBAAiB,GAAGA,OAAM,aAAa,iBAAiB,GAAG,mBAAmB,IAAI;AACpI,aAAO,UAAU,UAAU,EAAE,GAAG,mBAAmB,YAAY,KAAK,CAAC;AAAA,IACvE;AAEA,aAAS,kBAAmB,MAAM,UAAU,SAAS,mBAAmB;AACtE,YAAM,SAAS,CAAC;AAChB,UAAI,CAAC,mBAAmB;AACtB,eAAOA,OAAM,UAAU,MAAM,OAAO,GAAG,OAAO;AAC9C,mBAAWA,OAAM,UAAU,UAAU,OAAO,GAAG,OAAO;AAAA,MACxD;AACA,gBAAU,WAAW,CAAC;AAEtB,UAAI,CAAC,QAAQ,YAAY,SAAS,QAAQ;AACxC,eAAO,SAAS,SAAS;AAEzB,eAAO,WAAW,SAAS;AAC3B,eAAO,OAAO,SAAS;AACvB,eAAO,OAAO,SAAS;AACvB,eAAO,OAAO,kBAAkB,SAAS,QAAQ,EAAE;AACnD,eAAO,QAAQ,SAAS;AAAA,MAC1B,OAAO;AACL,YAAI,SAAS,aAAa,UAAa,SAAS,SAAS,UAAa,SAAS,SAAS,QAAW;AAEjG,iBAAO,WAAW,SAAS;AAC3B,iBAAO,OAAO,SAAS;AACvB,iBAAO,OAAO,SAAS;AACvB,iBAAO,OAAO,kBAAkB,SAAS,QAAQ,EAAE;AACnD,iBAAO,QAAQ,SAAS;AAAA,QAC1B,OAAO;AACL,cAAI,CAAC,SAAS,MAAM;AAClB,mBAAO,OAAO,KAAK;AACnB,gBAAI,SAAS,UAAU,QAAW;AAChC,qBAAO,QAAQ,SAAS;AAAA,YAC1B,OAAO;AACL,qBAAO,QAAQ,KAAK;AAAA,YACtB;AAAA,UACF,OAAO;AACL,gBAAI,SAAS,KAAK,OAAO,CAAC,MAAM,KAAK;AACnC,qBAAO,OAAO,kBAAkB,SAAS,IAAI;AAAA,YAC/C,OAAO;AACL,mBAAK,KAAK,aAAa,UAAa,KAAK,SAAS,UAAa,KAAK,SAAS,WAAc,CAAC,KAAK,MAAM;AACrG,uBAAO,OAAO,MAAM,SAAS;AAAA,cAC/B,WAAW,CAAC,KAAK,MAAM;AACrB,uBAAO,OAAO,SAAS;AAAA,cACzB,OAAO;AACL,uBAAO,OAAO,KAAK,KAAK,MAAM,GAAG,KAAK,KAAK,YAAY,GAAG,IAAI,CAAC,IAAI,SAAS;AAAA,cAC9E;AACA,qBAAO,OAAO,kBAAkB,OAAO,IAAI;AAAA,YAC7C;AACA,mBAAO,QAAQ,SAAS;AAAA,UAC1B;AAEA,iBAAO,WAAW,KAAK;AACvB,iBAAO,OAAO,KAAK;AACnB,iBAAO,OAAO,KAAK;AAAA,QACrB;AACA,eAAO,SAAS,KAAK;AAAA,MACvB;AAEA,aAAO,WAAW,SAAS;AAE3B,aAAO;AAAA,IACT;AAEA,aAAS,MAAO,MAAM,MAAM,SAAS;AACnC,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,SAAS,IAAI;AACpB,eAAO,UAAU,2BAA2BA,OAAM,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,GAAG,SAAS,YAAY,KAAK,CAAC;AAAA,MAC3G,WAAW,OAAO,SAAS,UAAU;AACnC,eAAO,UAAU,2BAA2B,MAAM,IAAI,GAAG,EAAE,GAAG,SAAS,YAAY,KAAK,CAAC;AAAA,MAC3F;AAEA,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,SAAS,IAAI;AACpB,eAAO,UAAU,2BAA2BA,OAAM,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,GAAG,SAAS,YAAY,KAAK,CAAC;AAAA,MAC3G,WAAW,OAAO,SAAS,UAAU;AACnC,eAAO,UAAU,2BAA2B,MAAM,IAAI,GAAG,EAAE,GAAG,SAAS,YAAY,KAAK,CAAC;AAAA,MAC3F;AAEA,aAAO,KAAK,YAAY,MAAM,KAAK,YAAY;AAAA,IACjD;AAEA,aAAS,UAAW,OAAO,MAAM;AAC/B,YAAM,aAAa;AAAA,QACjB,MAAM,MAAM;AAAA,QACZ,QAAQ,MAAM;AAAA,QACd,UAAU,MAAM;AAAA,QAChB,MAAM,MAAM;AAAA,QACZ,MAAM,MAAM;AAAA,QACZ,OAAO,MAAM;AAAA,QACb,KAAK,MAAM;AAAA,QACX,KAAK,MAAM;AAAA,QACX,MAAM,MAAM;AAAA,QACZ,UAAU,MAAM;AAAA,QAChB,WAAW,MAAM;AAAA,QACjB,cAAc,MAAM;AAAA,QACpB,QAAQ,MAAM;AAAA,QACd,OAAO;AAAA,MACT;AACA,YAAM,UAAU,OAAO,OAAO,CAAC,GAAG,IAAI;AACtC,YAAM,YAAY,CAAC;AAGnB,YAAM,gBAAgB,SAAS,QAAQ,UAAU,WAAW,UAAU,IAAI,YAAY,CAAC;AAGvF,UAAI,iBAAiB,cAAc,UAAW,eAAc,UAAU,YAAY,OAAO;AAEzF,UAAI,WAAW,SAAS,QAAW;AACjC,YAAI,CAAC,QAAQ,YAAY;AACvB,qBAAW,OAAO,OAAO,WAAW,IAAI;AAExC,cAAI,WAAW,WAAW,QAAW;AACnC,uBAAW,OAAO,WAAW,KAAK,MAAM,KAAK,EAAE,KAAK,GAAG;AAAA,UACzD;AAAA,QACF,OAAO;AACL,qBAAW,OAAO,SAAS,WAAW,IAAI;AAAA,QAC5C;AAAA,MACF;AAEA,UAAI,QAAQ,cAAc,YAAY,WAAW,QAAQ;AACvD,kBAAU,KAAK,WAAW,QAAQ,GAAG;AAAA,MACvC;AAEA,YAAM,YAAY,mBAAmB,UAAU;AAC/C,UAAI,cAAc,QAAW;AAC3B,YAAI,QAAQ,cAAc,UAAU;AAClC,oBAAU,KAAK,IAAI;AAAA,QACrB;AAEA,kBAAU,KAAK,SAAS;AAExB,YAAI,WAAW,QAAQ,WAAW,KAAK,OAAO,CAAC,MAAM,KAAK;AACxD,oBAAU,KAAK,GAAG;AAAA,QACpB;AAAA,MACF;AACA,UAAI,WAAW,SAAS,QAAW;AACjC,YAAI,IAAI,WAAW;AAEnB,YAAI,CAAC,QAAQ,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,eAAe;AAC5E,cAAI,kBAAkB,CAAC;AAAA,QACzB;AAEA,YAAI,cAAc,QAAW;AAC3B,cAAI,EAAE,QAAQ,UAAU,MAAM;AAAA,QAChC;AAEA,kBAAU,KAAK,CAAC;AAAA,MAClB;AAEA,UAAI,WAAW,UAAU,QAAW;AAClC,kBAAU,KAAK,KAAK,WAAW,KAAK;AAAA,MACtC;AAEA,UAAI,WAAW,aAAa,QAAW;AACrC,kBAAU,KAAK,KAAK,WAAW,QAAQ;AAAA,MACzC;AACA,aAAO,UAAU,KAAK,EAAE;AAAA,IAC1B;AAEA,QAAM,YAAY,MAAM,KAAK,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,MAAM,8BAA8B,KAAK,OAAO,aAAa,CAAC,CAAC,CAAC;AAEnH,aAAS,gBAAiB,OAAO;AAC/B,UAAI,OAAO;AACX,eAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,EAAE,GAAG;AAChD,eAAO,MAAM,WAAW,CAAC;AACzB,YAAI,OAAO,OAAO,UAAU,IAAI,GAAG;AACjC,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,QAAM,YAAY;AAElB,aAASA,OAAO,KAAK,MAAM;AACzB,YAAM,UAAU,OAAO,OAAO,CAAC,GAAG,IAAI;AACtC,YAAM,SAAS;AAAA,QACb,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,QACP,UAAU;AAAA,MACZ;AACA,YAAM,cAAc,IAAI,QAAQ,GAAG,MAAM;AACzC,UAAI,OAAO;AACX,UAAI,QAAQ,cAAc,SAAU,QAAO,QAAQ,SAAS,QAAQ,SAAS,MAAM,MAAM,OAAO;AAEhG,YAAM,UAAU,IAAI,MAAM,SAAS;AAEnC,UAAI,SAAS;AAEX,eAAO,SAAS,QAAQ,CAAC;AACzB,eAAO,WAAW,QAAQ,CAAC;AAC3B,eAAO,OAAO,QAAQ,CAAC;AACvB,eAAO,OAAO,SAAS,QAAQ,CAAC,GAAG,EAAE;AACrC,eAAO,OAAO,QAAQ,CAAC,KAAK;AAC5B,eAAO,QAAQ,QAAQ,CAAC;AACxB,eAAO,WAAW,QAAQ,CAAC;AAG3B,YAAI,MAAM,OAAO,IAAI,GAAG;AACtB,iBAAO,OAAO,QAAQ,CAAC;AAAA,QACzB;AACA,YAAI,OAAO,MAAM;AACf,gBAAM,aAAa,cAAc,OAAO,IAAI;AAC5C,cAAI,WAAW,WAAW,OAAO;AAC/B,kBAAM,aAAa,cAAc,WAAW,IAAI;AAChD,mBAAO,OAAO,WAAW,KAAK,YAAY;AAC1C,mBAAO,WAAW;AAAA,UACpB,OAAO;AACL,mBAAO,OAAO,WAAW;AACzB,mBAAO;AAAA,UACT;AAAA,QACF;AACA,YAAI,OAAO,WAAW,UAAa,OAAO,aAAa,UAAa,OAAO,SAAS,UAAa,OAAO,SAAS,UAAa,OAAO,UAAU,UAAa,CAAC,OAAO,MAAM;AACxK,iBAAO,YAAY;AAAA,QACrB,WAAW,OAAO,WAAW,QAAW;AACtC,iBAAO,YAAY;AAAA,QACrB,WAAW,OAAO,aAAa,QAAW;AACxC,iBAAO,YAAY;AAAA,QACrB,OAAO;AACL,iBAAO,YAAY;AAAA,QACrB;AAGA,YAAI,QAAQ,aAAa,QAAQ,cAAc,YAAY,QAAQ,cAAc,OAAO,WAAW;AACjG,iBAAO,QAAQ,OAAO,SAAS,kBAAkB,QAAQ,YAAY;AAAA,QACvE;AAGA,cAAM,gBAAgB,SAAS,QAAQ,UAAU,OAAO,UAAU,IAAI,YAAY,CAAC;AAGnF,YAAI,CAAC,QAAQ,mBAAmB,CAAC,iBAAiB,CAAC,cAAc,iBAAiB;AAEhF,cAAI,OAAO,SAAS,QAAQ,cAAe,iBAAiB,cAAc,eAAgB,SAAS,SAAS,gBAAgB,OAAO,IAAI,GAAG;AAExI,gBAAI;AACF,qBAAO,OAAO,IAAI,cAAc,OAAO,KAAK,YAAY,CAAC;AAAA,YAC3D,SAAS,GAAG;AACV,qBAAO,QAAQ,OAAO,SAAS,uDAAuD;AAAA,YACxF;AAAA,UACF;AAAA,QAEF;AAEA,YAAI,CAAC,iBAAkB,iBAAiB,CAAC,cAAc,eAAgB;AACrE,cAAI,eAAe,OAAO,WAAW,QAAW;AAC9C,mBAAO,SAAS,SAAS,OAAO,MAAM;AAAA,UACxC;AACA,cAAI,eAAe,OAAO,SAAS,QAAW;AAC5C,mBAAO,OAAO,SAAS,OAAO,IAAI;AAAA,UACpC;AACA,cAAI,OAAO,MAAM;AACf,mBAAO,OAAO,OAAO,SAAS,OAAO,IAAI,CAAC;AAAA,UAC5C;AACA,cAAI,OAAO,UAAU;AACnB,mBAAO,WAAW,UAAU,mBAAmB,OAAO,QAAQ,CAAC;AAAA,UACjE;AAAA,QACF;AAGA,YAAI,iBAAiB,cAAc,OAAO;AACxC,wBAAc,MAAM,QAAQ,OAAO;AAAA,QACrC;AAAA,MACF,OAAO;AACL,eAAO,QAAQ,OAAO,SAAS;AAAA,MACjC;AACA,aAAO;AAAA,IACT;AAEA,QAAM,UAAU;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAAA;AAAA,IACF;AAEA,WAAO,UAAU;AACjB,WAAO,QAAQ,UAAU;AACzB,WAAO,QAAQ,UAAU;AAAA;AAAA;;;;;;;AC9SzB,QAAA,MAAA;AAGE,QAAY,OAAO;AAErB,YAAA,UAAe;;;;;;;;;;ACuBf,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAU,EAAA,CAAA;AAKlB,QAAA,YAAA;AAAQ,WAAA,eAAA,SAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAC,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAI,EAAA,CAAA;AAAQ,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAO,EAAA,CAAA;AAsBnD,QAAA,qBAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,YAAA;AACA,QAAA,YAAA;AACA,QAAA,aAAA;AACA,QAAA,SAAA;AACA,QAAA,iBAAA;AAEA,QAAA,QAAA;AAEA,QAAM,gBAA8B,CAAC,KAAK,UAAU,IAAI,OAAO,KAAK,KAAK;AACzE,kBAAc,OAAO;AAErB,QAAM,sBAAyC,CAAC,oBAAoB,eAAe,aAAa;AAChG,QAAM,kBAAkB,oBAAI,IAAI;MAC9B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACD;AAyGD,QAAM,iBAA8C;MAClD,eAAe;MACf,QAAQ;MACR,UAAU;MACV,cAAc;MACd,YAAY;MACZ,aAAa;MACb,aAAa;MACb,YAAY;MACZ,gBAAgB;MAChB,gBAAgB;MAChB,aAAa;MACb,gBAAgB;MAChB,OAAO;MACP,WAAW;MACX,WAAW;;AAGb,QAAM,oBAAoD;MACxD,uBAAuB;MACvB,kBAAkB;MAClB,SAAS;;AA0BX,QAAM,iBAAiB;AAGvB,aAAS,gBAAgB,GAAU;;AACjC,YAAM,IAAI,EAAE;AACZ,YAAM,SAAQ,KAAA,EAAE,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE;AACtB,YAAM,WAAW,UAAU,QAAQ,UAAU,SAAY,IAAI,SAAS;AACtE,YAAM,UAAS,MAAA,KAAA,EAAE,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,YAAM,QAAA,OAAA,SAAA,KAAI;AACjC,YAAM,eAAc,KAAA,EAAE,iBAAW,QAAA,OAAA,SAAA,KAAI,MAAA;AACrC,aAAO;QACL,eAAc,MAAA,KAAA,EAAE,kBAAY,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACrC,gBAAe,MAAA,KAAA,EAAE,mBAAa,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACvC,cAAa,MAAA,KAAA,EAAE,iBAAW,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACnC,eAAc,MAAA,KAAA,EAAE,kBAAY,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACrC,iBAAgB,MAAA,KAAA,EAAE,oBAAc,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACzC,MAAM,EAAE,OAAO,EAAC,GAAG,EAAE,MAAM,UAAU,OAAM,IAAI,EAAC,UAAU,OAAM;QAChE,eAAc,KAAA,EAAE,kBAAY,QAAA,OAAA,SAAA,KAAI;QAChC,WAAU,KAAA,EAAE,cAAQ,QAAA,OAAA,SAAA,KAAI;QACxB,OAAM,KAAA,EAAE,UAAI,QAAA,OAAA,SAAA,KAAI;QAChB,WAAU,KAAA,EAAE,cAAQ,QAAA,OAAA,SAAA,KAAI;QACxB,aAAY,KAAA,EAAE,gBAAU,QAAA,OAAA,SAAA,KAAI;QAC5B,WAAU,KAAA,EAAE,cAAQ,QAAA,OAAA,SAAA,KAAI;QACxB,gBAAe,KAAA,EAAE,mBAAa,QAAA,OAAA,SAAA,KAAI;QAClC,iBAAgB,KAAA,EAAE,oBAAc,QAAA,OAAA,SAAA,KAAI;QACpC,kBAAiB,KAAA,EAAE,qBAAe,QAAA,OAAA,SAAA,KAAI;QACtC,gBAAe,KAAA,EAAE,mBAAa,QAAA,OAAA,SAAA,KAAI;QAClC,aAAY,KAAA,EAAE,gBAAU,QAAA,OAAA,SAAA,KAAI;QAC5B;;IAEJ;AAQA,QAAqBC,OAArB,MAAwB;MAkBtB,YAAY,OAAgB,CAAA,GAAE;AAZrB,aAAA,UAAyC,CAAA;AACzC,aAAA,OAA+C,CAAA;AAC/C,aAAA,UAA4C,CAAA;AAE5C,aAAA,gBAAgC,oBAAI,IAAG;AAC/B,aAAA,WAAyD,CAAA;AACzD,aAAA,SAAoC,oBAAI,IAAG;AAO1D,eAAO,KAAK,OAAO,EAAC,GAAG,MAAM,GAAG,gBAAgB,IAAI,EAAC;AACrD,cAAM,EAAC,KAAK,MAAK,IAAI,KAAK,KAAK;AAE/B,aAAK,QAAQ,IAAI,UAAA,WAAW,EAAC,OAAO,CAAA,GAAI,UAAU,iBAAiB,KAAK,MAAK,CAAC;AAC9E,aAAK,SAAS,UAAU,KAAK,MAAM;AACnC,cAAM,YAAY,KAAK;AACvB,aAAK,kBAAkB;AAEvB,aAAK,SAAQ,GAAA,QAAA,UAAQ;AACrB,qBAAa,KAAK,MAAM,gBAAgB,MAAM,eAAe;AAC7D,qBAAa,KAAK,MAAM,mBAAmB,MAAM,cAAc,MAAM;AACrE,aAAK,YAAY,qBAAqB,KAAK,IAAI;AAE/C,YAAI,KAAK;AAAS,4BAAkB,KAAK,IAAI;AAC7C,aAAK,iBAAgB;AACrB,aAAK,sBAAqB;AAC1B,YAAI,KAAK;AAAU,6BAAmB,KAAK,MAAM,KAAK,QAAQ;AAC9D,YAAI,OAAO,KAAK,QAAQ;AAAU,eAAK,cAAc,KAAK,IAAI;AAC9D,0BAAkB,KAAK,IAAI;AAC3B,aAAK,kBAAkB;MACzB;MAEA,mBAAgB;AACd,aAAK,WAAW,QAAQ;MAC1B;MAEA,wBAAqB;AACnB,cAAM,EAAC,OAAO,MAAM,SAAQ,IAAI,KAAK;AACrC,YAAI,iBAA+B;AACnC,YAAI,aAAa,MAAM;AACrB,2BAAiB,EAAC,GAAG,eAAc;AACnC,yBAAe,KAAK,eAAe;AACnC,iBAAO,eAAe;QACxB;AACA,YAAI,QAAQ;AAAO,eAAK,cAAc,gBAAgB,eAAe,QAAQ,GAAG,KAAK;MACvF;MAEA,cAAW;AACT,cAAM,EAAC,MAAM,SAAQ,IAAI,KAAK;AAC9B,eAAQ,KAAK,KAAK,cAAc,OAAO,QAAQ,WAAW,KAAK,QAAQ,KAAK,OAAO;MACrF;MAoBA,SACE,cAEA;AAEA,YAAI;AACJ,YAAI,OAAO,gBAAgB,UAAU;AACnC,cAAI,KAAK,UAAa,YAAY;AAClC,cAAI,CAAC;AAAG,kBAAM,IAAI,MAAM,8BAA8B,YAAY,GAAG;QACvE,OAAO;AACL,cAAI,KAAK,QAAW,YAAY;QAClC;AAEA,cAAM,QAAQ,EAAE,IAAI;AACpB,YAAI,EAAE,YAAY;AAAI,eAAK,SAAS,EAAE;AACtC,eAAO;MACT;MAiBA,QAAqB,QAAmB,OAAe;AACrD,cAAM,MAAM,KAAK,WAAW,QAAQ,KAAK;AACzC,eAAQ,IAAI,YAAY,KAAK,kBAAkB,GAAG;MACpD;MAmBA,aACE,QACA,MAAc;AAEd,YAAI,OAAO,KAAK,KAAK,cAAc,YAAY;AAC7C,gBAAM,IAAI,MAAM,yCAAyC;QAC3D;AACA,cAAM,EAAC,WAAU,IAAI,KAAK;AAC1B,eAAO,gBAAgB,KAAK,MAAM,QAAQ,IAAI;AAE9C,uBAAe,gBAEb,SACA,OAAe;AAEf,gBAAM,eAAe,KAAK,MAAM,QAAQ,OAAO;AAC/C,gBAAM,MAAM,KAAK,WAAW,SAAS,KAAK;AAC1C,iBAAO,IAAI,YAAY,cAAc,KAAK,MAAM,GAAG;QACrD;AAEA,uBAAe,eAA0B,MAAa;AACpD,cAAI,QAAQ,CAAC,KAAK,UAAU,IAAI,GAAG;AACjC,kBAAM,gBAAgB,KAAK,MAAM,EAAC,KAAI,GAAG,IAAI;UAC/C;QACF;AAEA,uBAAe,cAAyB,KAAc;AACpD,cAAI;AACF,mBAAO,KAAK,kBAAkB,GAAG;UACnC,SAAS,GAAG;AACV,gBAAI,EAAE,aAAa,YAAA;AAAkB,oBAAM;AAC3C,wBAAY,KAAK,MAAM,CAAC;AACxB,kBAAM,kBAAkB,KAAK,MAAM,EAAE,aAAa;AAClD,mBAAO,cAAc,KAAK,MAAM,GAAG;UACrC;QACF;AAEA,iBAAS,YAAuB,EAAC,eAAe,KAAK,WAAU,GAAkB;AAC/E,cAAI,KAAK,KAAK,GAAG,GAAG;AAClB,kBAAM,IAAI,MAAM,aAAa,GAAG,kBAAkB,UAAU,qBAAqB;UACnF;QACF;AAEA,uBAAe,kBAA6B,KAAW;AACrD,gBAAM,UAAU,MAAM,YAAY,KAAK,MAAM,GAAG;AAChD,cAAI,CAAC,KAAK,KAAK,GAAG;AAAG,kBAAM,eAAe,KAAK,MAAM,QAAQ,OAAO;AACpE,cAAI,CAAC,KAAK,KAAK,GAAG;AAAG,iBAAK,UAAU,SAAS,KAAK,IAAI;QACxD;AAEA,uBAAe,YAAuB,KAAW;AAC/C,gBAAM,IAAI,KAAK,SAAS,GAAG;AAC3B,cAAI;AAAG,mBAAO;AACd,cAAI;AACF,mBAAO,OAAO,KAAK,SAAS,GAAG,IAAI,WAAW,GAAG;UACnD;AACE,mBAAO,KAAK,SAAS,GAAG;UAC1B;QACF;MACF;;MAGA,UACE,QACA,KACA,OACA,kBAAkB,KAAK,KAAK;AAE5B,YAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,qBAAW,OAAO;AAAQ,iBAAK,UAAU,KAAK,QAAW,OAAO,eAAe;AAC/E,iBAAO;QACT;AACA,YAAI;AACJ,YAAI,OAAO,WAAW,UAAU;AAC9B,gBAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,eAAK,OAAO,QAAQ;AACpB,cAAI,OAAO,UAAa,OAAO,MAAM,UAAU;AAC7C,kBAAM,IAAI,MAAM,UAAU,QAAQ,iBAAiB;UACrD;QACF;AACA,eAAM,GAAA,UAAA,aAAY,OAAO,EAAE;AAC3B,aAAK,aAAa,GAAG;AACrB,aAAK,QAAQ,GAAG,IAAI,KAAK,WAAW,QAAQ,OAAO,KAAK,iBAAiB,IAAI;AAC7E,eAAO;MACT;;;MAIA,cACE,QACA,KACA,kBAAkB,KAAK,KAAK;AAE5B,aAAK,UAAU,QAAQ,KAAK,MAAM,eAAe;AACjD,eAAO;MACT;;MAGA,eAAe,QAAmB,iBAAyB;AACzD,YAAI,OAAO,UAAU;AAAW,iBAAO;AACvC,YAAI;AACJ,kBAAU,OAAO;AACjB,YAAI,YAAY,UAAa,OAAO,WAAW,UAAU;AACvD,gBAAM,IAAI,MAAM,0BAA0B;QAC5C;AACA,kBAAU,WAAW,KAAK,KAAK,eAAe,KAAK,YAAW;AAC9D,YAAI,CAAC,SAAS;AACZ,eAAK,OAAO,KAAK,2BAA2B;AAC5C,eAAK,SAAS;AACd,iBAAO;QACT;AACA,cAAM,QAAQ,KAAK,SAAS,SAAS,MAAM;AAC3C,YAAI,CAAC,SAAS,iBAAiB;AAC7B,gBAAM,UAAU,wBAAwB,KAAK,WAAU;AACvD,cAAI,KAAK,KAAK,mBAAmB;AAAO,iBAAK,OAAO,MAAM,OAAO;;AAC5D,kBAAM,IAAI,MAAM,OAAO;QAC9B;AACA,eAAO;MACT;;;MAIA,UAAuB,QAAc;AACnC,YAAI;AACJ,eAAO,QAAQ,MAAM,UAAU,KAAK,MAAM,MAAM,MAAM;AAAU,mBAAS;AACzE,YAAI,QAAQ,QAAW;AACrB,gBAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,gBAAM,OAAO,IAAI,UAAA,UAAU,EAAC,QAAQ,CAAA,GAAI,SAAQ,CAAC;AACjD,gBAAM,UAAA,cAAc,KAAK,MAAM,MAAM,MAAM;AAC3C,cAAI,CAAC;AAAK;AACV,eAAK,KAAK,MAAM,IAAI;QACtB;AACA,eAAQ,IAAI,YAAY,KAAK,kBAAkB,GAAG;MACpD;;;;;MAMA,aAAa,cAA0C;AACrD,YAAI,wBAAwB,QAAQ;AAClC,eAAK,kBAAkB,KAAK,SAAS,YAAY;AACjD,eAAK,kBAAkB,KAAK,MAAM,YAAY;AAC9C,iBAAO;QACT;AACA,gBAAQ,OAAO,cAAc;UAC3B,KAAK;AACH,iBAAK,kBAAkB,KAAK,OAAO;AACnC,iBAAK,kBAAkB,KAAK,IAAI;AAChC,iBAAK,OAAO,MAAK;AACjB,mBAAO;UACT,KAAK,UAAU;AACb,kBAAM,MAAM,UAAU,KAAK,MAAM,YAAY;AAC7C,gBAAI,OAAO,OAAO;AAAU,mBAAK,OAAO,OAAO,IAAI,MAAM;AACzD,mBAAO,KAAK,QAAQ,YAAY;AAChC,mBAAO,KAAK,KAAK,YAAY;AAC7B,mBAAO;UACT;UACA,KAAK,UAAU;AACb,kBAAM,WAAW;AACjB,iBAAK,OAAO,OAAO,QAAQ;AAC3B,gBAAI,KAAK,aAAa,KAAK,KAAK,QAAQ;AACxC,gBAAI,IAAI;AACN,oBAAK,GAAA,UAAA,aAAY,EAAE;AACnB,qBAAO,KAAK,QAAQ,EAAE;AACtB,qBAAO,KAAK,KAAK,EAAE;YACrB;AACA,mBAAO;UACT;UACA;AACE,kBAAM,IAAI,MAAM,qCAAqC;QACzD;MACF;;MAGA,cAAc,aAAuB;AACnC,mBAAW,OAAO;AAAa,eAAK,WAAW,GAAG;AAClD,eAAO;MACT;MAEA,WACE,UACA;AAEA,YAAI;AACJ,YAAI,OAAO,YAAY,UAAU;AAC/B,oBAAU;AACV,cAAI,OAAO,OAAO,UAAU;AAC1B,iBAAK,OAAO,KAAK,0DAA0D;AAC3E,gBAAI,UAAU;UAChB;QACF,WAAW,OAAO,YAAY,YAAY,QAAQ,QAAW;AAC3D,gBAAM;AACN,oBAAU,IAAI;AACd,cAAI,MAAM,QAAQ,OAAO,KAAK,CAAC,QAAQ,QAAQ;AAC7C,kBAAM,IAAI,MAAM,wDAAwD;UAC1E;QACF,OAAO;AACL,gBAAM,IAAI,MAAM,gCAAgC;QAClD;AAEA,qBAAa,KAAK,MAAM,SAAS,GAAG;AACpC,YAAI,CAAC,KAAK;AACR,WAAA,GAAA,OAAA,UAAS,SAAS,CAAC,QAAQ,QAAQ,KAAK,MAAM,GAAG,CAAC;AAClD,iBAAO;QACT;AACA,0BAAkB,KAAK,MAAM,GAAG;AAChC,cAAM,aAAqC;UACzC,GAAG;UACH,OAAM,GAAA,WAAA,cAAa,IAAI,IAAI;UAC3B,aAAY,GAAA,WAAA,cAAa,IAAI,UAAU;;AAEzC,SAAA,GAAA,OAAA,UACE,SACA,WAAW,KAAK,WAAW,IACvB,CAAC,MAAM,QAAQ,KAAK,MAAM,GAAG,UAAU,IACvC,CAAC,MAAM,WAAW,KAAK,QAAQ,CAAC,MAAM,QAAQ,KAAK,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC;AAEjF,eAAO;MACT;MAEA,WAAW,SAAe;AACxB,cAAM,OAAO,KAAK,MAAM,IAAI,OAAO;AACnC,eAAO,OAAO,QAAQ,WAAW,KAAK,aAAa,CAAC,CAAC;MACvD;;MAGA,cAAc,SAAe;AAE3B,cAAM,EAAC,MAAK,IAAI;AAChB,eAAO,MAAM,SAAS,OAAO;AAC7B,eAAO,MAAM,IAAI,OAAO;AACxB,mBAAW,SAAS,MAAM,OAAO;AAC/B,gBAAM,IAAI,MAAM,MAAM,UAAU,CAAC,SAAS,KAAK,YAAY,OAAO;AAClE,cAAI,KAAK;AAAG,kBAAM,MAAM,OAAO,GAAG,CAAC;QACrC;AACA,eAAO;MACT;;MAGA,UAAU,MAAc,QAAc;AACpC,YAAI,OAAO,UAAU;AAAU,mBAAS,IAAI,OAAO,MAAM;AACzD,aAAK,QAAQ,IAAI,IAAI;AACrB,eAAO;MACT;MAEA,WACE,SAA2C,KAAK,QAChD,EAAC,YAAY,MAAM,UAAU,OAAM,IAAuB,CAAA;AAE1D,YAAI,CAAC,UAAU,OAAO,WAAW;AAAG,iBAAO;AAC3C,eAAO,OACJ,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,EAAE,YAAY,IAAI,EAAE,OAAO,EAAE,EACrD,OAAO,CAAC,MAAM,QAAQ,OAAO,YAAY,GAAG;MACjD;MAEA,gBAAgB,YAA6B,sBAA8B;AACzE,cAAM,QAAQ,KAAK,MAAM;AACzB,qBAAa,KAAK,MAAM,KAAK,UAAU,UAAU,CAAC;AAClD,mBAAW,eAAe,sBAAsB;AAC9C,gBAAM,WAAW,YAAY,MAAM,GAAG,EAAE,MAAM,CAAC;AAC/C,cAAI,WAAW;AACf,qBAAW,OAAO;AAAU,uBAAW,SAAS,GAAG;AAEnD,qBAAW,OAAO,OAAO;AACvB,kBAAM,OAAO,MAAM,GAAG;AACtB,gBAAI,OAAO,QAAQ;AAAU;AAC7B,kBAAM,EAAC,MAAK,IAAI,KAAK;AACrB,kBAAM,SAAS,SAAS,GAAG;AAC3B,gBAAI,SAAS;AAAQ,uBAAS,GAAG,IAAI,aAAa,MAAM;UAC1D;QACF;AAEA,eAAO;MACT;MAEQ,kBAAkB,SAAiD,OAAc;AACvF,mBAAW,UAAU,SAAS;AAC5B,gBAAM,MAAM,QAAQ,MAAM;AAC1B,cAAI,CAAC,SAAS,MAAM,KAAK,MAAM,GAAG;AAChC,gBAAI,OAAO,OAAO,UAAU;AAC1B,qBAAO,QAAQ,MAAM;YACvB,WAAW,OAAO,CAAC,IAAI,MAAM;AAC3B,mBAAK,OAAO,OAAO,IAAI,MAAM;AAC7B,qBAAO,QAAQ,MAAM;YACvB;UACF;QACF;MACF;MAEA,WACE,QACA,MACA,QACAC,kBAAiB,KAAK,KAAK,gBAC3B,YAAY,KAAK,KAAK,eAAa;AAEnC,YAAI;AACJ,cAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,YAAI,OAAO,UAAU,UAAU;AAC7B,eAAK,OAAO,QAAQ;QACtB,OAAO;AACL,cAAI,KAAK,KAAK;AAAK,kBAAM,IAAI,MAAM,uBAAuB;mBACjD,OAAO,UAAU;AAAW,kBAAM,IAAI,MAAM,kCAAkC;QACzF;AACA,YAAI,MAAM,KAAK,OAAO,IAAI,MAAM;AAChC,YAAI,QAAQ;AAAW,iBAAO;AAE9B,kBAAS,GAAA,UAAA,aAAY,MAAM,MAAM;AACjC,cAAM,YAAY,UAAA,cAAc,KAAK,MAAM,QAAQ,MAAM;AACzD,cAAM,IAAI,UAAA,UAAU,EAAC,QAAQ,UAAU,MAAM,QAAQ,UAAS,CAAC;AAC/D,aAAK,OAAO,IAAI,IAAI,QAAQ,GAAG;AAC/B,YAAI,aAAa,CAAC,OAAO,WAAW,GAAG,GAAG;AAExC,cAAI;AAAQ,iBAAK,aAAa,MAAM;AACpC,eAAK,KAAK,MAAM,IAAI;QACtB;AACA,YAAIA;AAAgB,eAAK,eAAe,QAAQ,IAAI;AACpD,eAAO;MACT;MAEQ,aAAa,IAAU;AAC7B,YAAI,KAAK,QAAQ,EAAE,KAAK,KAAK,KAAK,EAAE,GAAG;AACrC,gBAAM,IAAI,MAAM,0BAA0B,EAAE,kBAAkB;QAChE;MACF;MAEQ,kBAAkB,KAAc;AACtC,YAAI,IAAI;AAAM,eAAK,mBAAmB,GAAG;;AACpC,oBAAA,cAAc,KAAK,MAAM,GAAG;AAGjC,YAAI,CAAC,IAAI;AAAU,gBAAM,IAAI,MAAM,0BAA0B;AAC7D,eAAO,IAAI;MACb;MAEQ,mBAAmB,KAAc;AACvC,cAAM,cAAc,KAAK;AACzB,aAAK,OAAO,KAAK;AACjB,YAAI;AACF,oBAAA,cAAc,KAAK,MAAM,GAAG;QAC9B;AACE,eAAK,OAAO;QACd;MACF;;AA9cO,IAAAD,KAAA,kBAAkB,mBAAA;AAClB,IAAAA,KAAA,kBAAkB,YAAA;sBAhBNA;AAqerB,aAAS,aAEP,WACA,SACA,KACAE,OAAwB,SAAO;AAE/B,iBAAW,OAAO,WAAW;AAC3B,cAAM,MAAM;AACZ,YAAI,OAAO;AAAS,eAAK,OAAOA,IAAG,EAAE,GAAG,GAAG,YAAY,GAAG,KAAK,UAAU,GAAG,CAAC,EAAE;MACjF;IACF;AAEA,aAAS,UAAqB,QAAc;AAC1C,gBAAS,GAAA,UAAA,aAAY,MAAM;AAC3B,aAAO,KAAK,QAAQ,MAAM,KAAK,KAAK,KAAK,MAAM;IACjD;AAEA,aAAS,oBAAiB;AACxB,YAAM,cAAc,KAAK,KAAK;AAC9B,UAAI,CAAC;AAAa;AAClB,UAAI,MAAM,QAAQ,WAAW;AAAG,aAAK,UAAU,WAAW;;AACrD,mBAAW,OAAO;AAAa,eAAK,UAAU,YAAY,GAAG,GAAgB,GAAG;IACvF;AAEA,aAAS,oBAAiB;AACxB,iBAAW,QAAQ,KAAK,KAAK,SAAS;AACpC,cAAM,SAAS,KAAK,KAAK,QAAQ,IAAI;AACrC,YAAI;AAAQ,eAAK,UAAU,MAAM,MAAM;MACzC;IACF;AAEA,aAAS,mBAEP,MAAsD;AAEtD,UAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAK,cAAc,IAAI;AACvB;MACF;AACA,WAAK,OAAO,KAAK,kDAAkD;AACnE,iBAAW,WAAW,MAAM;AAC1B,cAAM,MAAM,KAAK,OAAO;AACxB,YAAI,CAAC,IAAI;AAAS,cAAI,UAAU;AAChC,aAAK,WAAW,GAAG;MACrB;IACF;AAEA,aAAS,uBAAoB;AAC3B,YAAM,WAAW,EAAC,GAAG,KAAK,KAAI;AAC9B,iBAAW,OAAO;AAAqB,eAAO,SAAS,GAAG;AAC1D,aAAO;IACT;AAEA,QAAM,SAAS,EAAC,MAAG;IAAI,GAAG,OAAI;IAAI,GAAG,QAAK;IAAI,EAAC;AAE/C,aAAS,UAAU,QAAgC;AACjD,UAAI,WAAW;AAAO,eAAO;AAC7B,UAAI,WAAW;AAAW,eAAO;AACjC,UAAI,OAAO,OAAO,OAAO,QAAQ,OAAO;AAAO,eAAO;AACtD,YAAM,IAAI,MAAM,mDAAmD;IACrE;AAEA,QAAM,eAAe;AAErB,aAAS,aAAwB,SAA4B,KAAuB;AAClF,YAAM,EAAC,MAAK,IAAI;AAChB,OAAA,GAAA,OAAA,UAAS,SAAS,CAAC,QAAO;AACxB,YAAI,MAAM,SAAS,GAAG;AAAG,gBAAM,IAAI,MAAM,WAAW,GAAG,qBAAqB;AAC5E,YAAI,CAAC,aAAa,KAAK,GAAG;AAAG,gBAAM,IAAI,MAAM,WAAW,GAAG,mBAAmB;MAChF,CAAC;AACD,UAAI,CAAC;AAAK;AACV,UAAI,IAAI,SAAS,EAAE,UAAU,OAAO,cAAc,MAAM;AACtD,cAAM,IAAI,MAAM,uDAAuD;MACzE;IACF;AAEA,aAAS,QAEP,SACA,YACA,UAAmB;;AAEnB,YAAM,OAAO,eAAU,QAAV,eAAU,SAAA,SAAV,WAAY;AACzB,UAAI,YAAY;AAAM,cAAM,IAAI,MAAM,6CAA6C;AACnF,YAAM,EAAC,MAAK,IAAI;AAChB,UAAI,YAAY,OAAO,MAAM,OAAO,MAAM,MAAM,KAAK,CAAC,EAAC,MAAM,EAAC,MAAM,MAAM,QAAQ;AAClF,UAAI,CAAC,WAAW;AACd,oBAAY,EAAC,MAAM,UAAU,OAAO,CAAA,EAAE;AACtC,cAAM,MAAM,KAAK,SAAS;MAC5B;AACA,YAAM,SAAS,OAAO,IAAI;AAC1B,UAAI,CAAC;AAAY;AAEjB,YAAM,OAAa;QACjB;QACA,YAAY;UACV,GAAG;UACH,OAAM,GAAA,WAAA,cAAa,WAAW,IAAI;UAClC,aAAY,GAAA,WAAA,cAAa,WAAW,UAAU;;;AAGlD,UAAI,WAAW;AAAQ,sBAAc,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM;;AAC7E,kBAAU,MAAM,KAAK,IAAI;AAC9B,YAAM,IAAI,OAAO,IAAI;AACrB,OAAA,KAAA,WAAW,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAE,QAAQ,CAAC,QAAQ,KAAK,WAAW,GAAG,CAAC;IAC9D;AAEA,aAAS,cAAyB,WAAsB,MAAY,QAAc;AAChF,YAAM,IAAI,UAAU,MAAM,UAAU,CAAC,UAAU,MAAM,YAAY,MAAM;AACvE,UAAI,KAAK,GAAG;AACV,kBAAU,MAAM,OAAO,GAAG,GAAG,IAAI;MACnC,OAAO;AACL,kBAAU,MAAM,KAAK,IAAI;AACzB,aAAK,OAAO,KAAK,QAAQ,MAAM,iBAAiB;MAClD;IACF;AAEA,aAAS,kBAA6B,KAAsB;AAC1D,UAAI,EAAC,WAAU,IAAI;AACnB,UAAI,eAAe;AAAW;AAC9B,UAAI,IAAI,SAAS,KAAK,KAAK;AAAO,qBAAa,aAAa,UAAU;AACtE,UAAI,iBAAiB,KAAK,QAAQ,YAAY,IAAI;IACpD;AAEA,QAAM,WAAW;MACf,MAAM;;AAGR,aAAS,aAAa,QAAiB;AACrC,aAAO,EAAC,OAAO,CAAC,QAAQ,QAAQ,EAAC;IACnC;;;;;;;;;ACx3BA,QAAM,MAA6B;MACjC,SAAS;MACT,OAAI;AACF,cAAM,IAAI,MAAM,sDAAsD;MACxE;;AAGF,YAAA,UAAe;;;;;;;;;;ACPf,QAAA,cAAA;AACA,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,MAAM,GAAE,IAAI;AAChC,cAAM,EAAC,QAAQ,WAAW,KAAK,cAAc,MAAM,MAAAC,MAAI,IAAI;AAC3D,cAAM,EAAC,KAAI,IAAI;AACf,aAAK,SAAS,OAAO,SAAS,SAAS,WAAW,KAAK;AAAQ,iBAAO,YAAW;AACjF,cAAM,WAAW,UAAA,WAAW,KAAKA,OAAM,MAAM,QAAQ,IAAI;AACzD,YAAI,aAAa;AAAW,gBAAM,IAAI,YAAA,QAAgB,GAAG,KAAK,aAAa,QAAQ,IAAI;AACvF,YAAI,oBAAoB,UAAA;AAAW,iBAAO,aAAa,QAAQ;AAC/D,eAAO,gBAAgB,QAAQ;AAE/B,iBAAS,cAAW;AAClB,cAAI,QAAQ;AAAM,mBAAO,QAAQ,KAAK,cAAc,KAAK,IAAI,MAAM;AACnE,gBAAM,WAAW,IAAI,WAAW,QAAQ,EAAC,KAAK,KAAI,CAAC;AACnD,iBAAO,QAAQ,MAAK,GAAA,UAAA,KAAI,QAAQ,aAAa,MAAM,KAAK,MAAM;QAChE;AAEA,iBAAS,aAAa,KAAc;AAClC,gBAAM,IAAI,YAAY,KAAK,GAAG;AAC9B,kBAAQ,KAAK,GAAG,KAAK,IAAI,MAAM;QACjC;AAEA,iBAAS,gBAAgB,KAAc;AACrC,gBAAM,UAAU,IAAI,WAClB,UACA,KAAK,KAAK,WAAW,OAAO,EAAC,KAAK,KAAK,OAAM,GAAA,UAAA,WAAU,GAAG,EAAC,IAAI,EAAC,KAAK,IAAG,CAAC;AAE3E,gBAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,gBAAM,SAAS,IAAI,UACjB;YACE,QAAQ;YACR,WAAW,CAAA;YACX,YAAY,UAAA;YACZ,cAAc;YACd,eAAe;aAEjB,KAAK;AAEP,cAAI,eAAe,MAAM;AACzB,cAAI,GAAG,KAAK;QACd;MACF;;AAGF,aAAgB,YAAY,KAAiB,KAAc;AACzD,YAAM,EAAC,IAAG,IAAI;AACd,aAAO,IAAI,WACP,IAAI,WAAW,YAAY,EAAC,KAAK,IAAI,SAAQ,CAAC,KAC9C,GAAA,UAAA,KAAI,IAAI,WAAW,WAAW,EAAC,KAAK,IAAG,CAAC,CAAC;IAC/C;AALA,YAAA,cAAA;AAOA,aAAgB,QAAQ,KAAiB,GAAS,KAAiB,QAAgB;AACjF,YAAM,EAAC,KAAK,GAAE,IAAI;AAClB,YAAM,EAAC,WAAW,WAAW,KAAK,KAAI,IAAI;AAC1C,YAAM,UAAU,KAAK,cAAc,QAAA,QAAE,OAAO,UAAA;AAC5C,UAAI;AAAQ,qBAAY;;AACnB,oBAAW;AAEhB,eAAS,eAAY;AACnB,YAAI,CAAC,IAAI;AAAQ,gBAAM,IAAI,MAAM,wCAAwC;AACzE,cAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,YAAI,IACF,MAAK;AACH,cAAI,MAAK,GAAA,UAAA,YAAU,GAAA,OAAA,kBAAiB,KAAK,GAAG,OAAO,CAAC,EAAE;AACtD,2BAAiB,CAAC;AAClB,cAAI,CAAC;AAAW,gBAAI,OAAO,OAAO,IAAI;QACxC,GACA,CAAC,MAAK;AACJ,cAAI,IAAG,GAAA,UAAA,OAAM,CAAC,eAAe,GAAG,eAAuB,KAAK,MAAM,IAAI,MAAM,CAAC,CAAC;AAC9E,wBAAc,CAAC;AACf,cAAI,CAAC;AAAW,gBAAI,OAAO,OAAO,KAAK;QACzC,CAAC;AAEH,YAAI,GAAG,KAAK;MACd;AAEA,eAAS,cAAW;AAClB,YAAI,QACF,GAAA,OAAA,kBAAiB,KAAK,GAAG,OAAO,GAChC,MAAM,iBAAiB,CAAC,GACxB,MAAM,cAAc,CAAC,CAAC;MAE1B;AAEA,eAAS,cAAc,QAAY;AACjC,cAAM,QAAO,GAAA,UAAA,KAAI,MAAM;AACvB,YAAI,OAAO,QAAA,QAAE,UAAS,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,eAAe,IAAI,MAAM,QAAA,QAAE,OAAO,WAAW,IAAI,GAAG;AACvF,YAAI,OAAO,QAAA,QAAE,SAAQ,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,SAAS;MAC7C;AAEA,eAAS,iBAAiB,QAAY;;AACpC,YAAI,CAAC,GAAG,KAAK;AAAa;AAC1B,cAAM,gBAAe,KAAA,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAE;AAEpC,YAAI,GAAG,UAAU,MAAM;AACrB,cAAI,gBAAgB,CAAC,aAAa,cAAc;AAC9C,gBAAI,aAAa,UAAU,QAAW;AACpC,iBAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,aAAa,OAAO,GAAG,KAAK;YACnE;UACF,OAAO;AACL,kBAAM,QAAQ,IAAI,IAAI,UAAS,GAAA,UAAA,KAAI,MAAM,kBAAkB;AAC3D,eAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,OAAO,GAAG,OAAO,UAAA,IAAI;UAC5D;QACF;AACA,YAAI,GAAG,UAAU,MAAM;AACrB,cAAI,gBAAgB,CAAC,aAAa,cAAc;AAC9C,gBAAI,aAAa,UAAU,QAAW;AACpC,iBAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,aAAa,OAAO,GAAG,KAAK;YACnE;UACF,OAAO;AACL,kBAAM,QAAQ,IAAI,IAAI,UAAS,GAAA,UAAA,KAAI,MAAM,kBAAkB;AAC3D,eAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,OAAO,GAAG,OAAO,UAAA,IAAI;UAC5D;QACF;MACF;IACF;AAhEA,YAAA,UAAA;AAkEA,YAAA,UAAe;;;;;;;;;AC/Hf,QAAA,OAAA;AACA,QAAA,QAAA;AAEA,QAAM,OAAmB;MACvB;MACA;MACA;MACA;MACA,EAAC,SAAS,WAAU;MACpB;MACA,KAAA;MACA,MAAA;;AAGF,YAAA,UAAe;;;;;;;;;ACbf,QAAA,YAAA;AAEA,QAAM,MAAM,UAAA;AAMZ,QAAM,OAAgE;MACpE,SAAS,EAAC,OAAO,MAAM,IAAI,IAAI,KAAK,MAAM,IAAI,GAAE;MAChD,SAAS,EAAC,OAAO,MAAM,IAAI,IAAI,KAAK,MAAM,IAAI,GAAE;MAChD,kBAAkB,EAAC,OAAO,KAAK,IAAI,IAAI,IAAI,MAAM,IAAI,IAAG;MACxD,kBAAkB,EAAC,OAAO,KAAK,IAAI,IAAI,IAAI,MAAM,IAAI,IAAG;;AAS1D,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,SAAS,WAAU,OAAM,GAAA,UAAA,eAAc,KAAK,OAAc,EAAE,KAAK,IAAI,UAAU;MAC1F,QAAQ,CAAC,EAAC,SAAS,WAAU,OAC3B,GAAA,UAAA,kBAAiB,KAAK,OAAc,EAAE,KAAK,YAAY,UAAU;;AAGrE,QAAM,MAA6B;MACjC,SAAS,OAAO,KAAK,IAAI;MACzB,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,SAAS,MAAM,WAAU,IAAI;AACpC,YAAI,WAAU,GAAA,UAAA,KAAI,IAAI,IAAI,KAAK,OAAc,EAAE,IAAI,IAAI,UAAU,aAAa,IAAI,GAAG;MACvF;;AAGF,YAAA,UAAe;;;;;;;;;ACvCf,QAAA,YAAA;AAQA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,2BAA0B,UAAU;MAC/D,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,kBAAiB,UAAU;;AAGvD,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,YAAY,GAAE,IAAI;AAEpC,cAAM,OAAO,GAAG,KAAK;AACrB,cAAM,MAAM,IAAI,IAAI,KAAK;AACzB,cAAM,UAAU,QACZ,GAAA,UAAA,yBAAwB,GAAG,OAAO,GAAG,UAAU,IAAI,MACnD,GAAA,UAAA,KAAI,GAAG,iBAAiB,GAAG;AAC/B,YAAI,WAAU,GAAA,UAAA,MAAK,UAAU,cAAc,GAAG,MAAM,IAAI,IAAI,UAAU,KAAK,OAAO,IAAI;MACxF;;AAGF,YAAA,UAAe;;;;;;;;;AC/Bf,aAAwB,WAAW,KAAW;AAC5C,YAAM,MAAM,IAAI;AAChB,UAAI,SAAS;AACb,UAAI,MAAM;AACV,UAAI;AACJ,aAAO,MAAM,KAAK;AAChB;AACA,gBAAQ,IAAI,WAAW,KAAK;AAC5B,YAAI,SAAS,SAAU,SAAS,SAAU,MAAM,KAAK;AAEnD,kBAAQ,IAAI,WAAW,GAAG;AAC1B,eAAK,QAAQ,WAAY;AAAQ;QACnC;MACF;AACA,aAAO;IACT;AAfA,YAAA,UAAA;AAiBA,eAAW,OAAO;;;;;;;;;ACjBlB,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,eAAA;AAEA,QAAM,QAAgC;MACpC,QAAQ,EAAC,SAAS,WAAU,GAAC;AAC3B,cAAM,OAAO,YAAY,cAAc,SAAS;AAChD,gBAAO,GAAA,UAAA,qBAAoB,IAAI,SAAS,UAAU;MACpD;MACA,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,aAAY,UAAU;;AAGlD,QAAM,MAA6B;MACjC,SAAS,CAAC,aAAa,WAAW;MAClC,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,SAAS,MAAM,YAAY,GAAE,IAAI;AACxC,cAAM,KAAK,YAAY,cAAc,UAAA,UAAU,KAAK,UAAA,UAAU;AAC9D,cAAM,MACJ,GAAG,KAAK,YAAY,SAAQ,GAAA,UAAA,KAAI,IAAI,aAAY,GAAA,UAAA,MAAI,GAAA,OAAA,SAAQ,IAAI,KAAK,aAAA,OAAU,CAAC,IAAI,IAAI;AAC1F,YAAI,WAAU,GAAA,UAAA,KAAI,GAAG,IAAI,EAAE,IAAI,UAAU,EAAE;MAC7C;;AAGF,YAAA,UAAe;;;;;;;;;AC3Bf,QAAA,SAAA;AACA,QAAA,YAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,2BAA0B,UAAU;MAC/D,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,eAAc,UAAU;;AAGpD,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,MAAM,OAAO,QAAQ,YAAY,GAAE,IAAI;AAE9C,cAAM,IAAI,GAAG,KAAK,gBAAgB,MAAM;AACxC,cAAM,SAAS,SAAQ,GAAA,UAAA,iBAAgB,UAAU,KAAK,CAAC,QAAO,GAAA,OAAA,YAAW,KAAK,MAAM;AACpF,YAAI,WAAU,GAAA,UAAA,MAAK,MAAM,SAAS,IAAI,GAAG;MAC3C;;AAGF,YAAA,UAAe;;;;;;;;;ACzBf,QAAA,YAAA;AAEA,QAAM,QAAgC;MACpC,QAAQ,EAAC,SAAS,WAAU,GAAC;AAC3B,cAAM,OAAO,YAAY,kBAAkB,SAAS;AACpD,gBAAO,GAAA,UAAA,qBAAoB,IAAI,SAAS,UAAU;MACpD;MACA,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,aAAY,UAAU;;AAGlD,QAAM,MAA6B;MACjC,SAAS,CAAC,iBAAiB,eAAe;MAC1C,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,SAAS,MAAM,WAAU,IAAI;AACpC,cAAM,KAAK,YAAY,kBAAkB,UAAA,UAAU,KAAK,UAAA,UAAU;AAClE,YAAI,WAAU,GAAA,UAAA,iBAAgB,IAAI,YAAY,EAAE,IAAI,UAAU,EAAE;MAClE;;AAGF,YAAA,UAAe;;;;;;;;;ACvBf,QAAA,SAAA;AAOA,QAAA,YAAA;AACA,QAAA,SAAA;AAQA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,gBAAe,EAAC,OAAM,GAAA,UAAA,oCAAmC,eAAe;MAC5F,QAAQ,CAAC,EAAC,QAAQ,EAAC,gBAAe,EAAC,OAAM,GAAA,UAAA,uBAAsB,eAAe;;AAGhF,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,YAAY,MAAM,OAAO,GAAE,IAAI;AACnD,cAAM,EAAC,KAAI,IAAI;AACf,YAAI,CAAC,SAAS,OAAO,WAAW;AAAG;AACnC,cAAM,UAAU,OAAO,UAAU,KAAK;AACtC,YAAI,GAAG;AAAW,wBAAa;;AAC1B,0BAAe;AAEpB,YAAI,KAAK,gBAAgB;AACvB,gBAAM,QAAQ,IAAI,aAAa;AAC/B,gBAAM,EAAC,kBAAiB,IAAI,IAAI;AAChC,qBAAW,eAAe,QAAQ;AAChC,iBAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAQ,WAAW,OAAM,UAAa,CAAC,kBAAkB,IAAI,WAAW,GAAG;AAC7E,oBAAM,aAAa,GAAG,UAAU,SAAS,GAAG;AAC5C,oBAAM,MAAM,sBAAsB,WAAW,wBAAwB,UAAU;AAC/E,eAAA,GAAA,OAAA,iBAAgB,IAAI,KAAK,GAAG,KAAK,cAAc;YACjD;UACF;QACF;AAEA,iBAAS,gBAAa;AACpB,cAAI,WAAW,OAAO;AACpB,gBAAI,WAAW,UAAA,KAAK,eAAe;UACrC,OAAO;AACL,uBAAW,QAAQ,QAAQ;AACzB,eAAA,GAAA,OAAA,wBAAuB,KAAK,IAAI;YAClC;UACF;QACF;AAEA,iBAAS,kBAAe;AACtB,gBAAM,UAAU,IAAI,IAAI,SAAS;AACjC,cAAI,WAAW,OAAO;AACpB,kBAAM,QAAQ,IAAI,IAAI,SAAS,IAAI;AACnC,gBAAI,WAAW,OAAO,MAAM,iBAAiB,SAAS,KAAK,CAAC;AAC5D,gBAAI,GAAG,KAAK;UACd,OAAO;AACL,gBAAI,IAAG,GAAA,OAAA,kBAAiB,KAAK,QAAQ,OAAO,CAAC;AAC7C,aAAA,GAAA,OAAA,mBAAkB,KAAK,OAAO;AAC9B,gBAAI,KAAI;UACV;QACF;AAEA,iBAAS,kBAAe;AACtB,cAAI,MAAM,QAAQ,YAAoB,CAAC,SAAQ;AAC7C,gBAAI,UAAU,EAAC,iBAAiB,KAAI,CAAC;AACrC,gBAAI,IAAG,GAAA,OAAA,kBAAiB,KAAK,MAAM,MAAM,KAAK,aAAa,GAAG,MAAM,IAAI,MAAK,CAAE;UACjF,CAAC;QACH;AAEA,iBAAS,iBAAiB,SAAe,OAAW;AAClD,cAAI,UAAU,EAAC,iBAAiB,QAAO,CAAC;AACxC,cAAI,MACF,SACA,YACA,MAAK;AACH,gBAAI,OAAO,QAAO,GAAA,OAAA,gBAAe,KAAK,MAAM,SAAS,KAAK,aAAa,CAAC;AACxE,gBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAK;AACtB,kBAAI,MAAK;AACT,kBAAI,MAAK;YACX,CAAC;UACH,GACA,UAAA,GAAG;QAEP;MACF;;AAGF,YAAA,UAAe;;;;;;;;;AC/Ff,QAAA,YAAA;AAEA,QAAM,QAAgC;MACpC,QAAQ,EAAC,SAAS,WAAU,GAAC;AAC3B,cAAM,OAAO,YAAY,aAAa,SAAS;AAC/C,gBAAO,GAAA,UAAA,qBAAoB,IAAI,SAAS,UAAU;MACpD;MACA,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,aAAY,UAAU;;AAGlD,QAAM,MAA6B;MACjC,SAAS,CAAC,YAAY,UAAU;MAChC,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,SAAS,MAAM,WAAU,IAAI;AACpC,cAAM,KAAK,YAAY,aAAa,UAAA,UAAU,KAAK,UAAA,UAAU;AAC7D,YAAI,WAAU,GAAA,UAAA,KAAI,IAAI,WAAW,EAAE,IAAI,UAAU,EAAE;MACrD;;AAGF,YAAA,UAAe;;;;;;;;;ACxBf,QAAA,QAAA;AAGE,UAAgB,OAAO;AAEzB,YAAA,UAAe;;;;;;;;;ACJf,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,UAAA;AAQA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,GAAG,EAAC,EAAC,OACvB,GAAA,UAAA,+CAA8C,CAAC,QAAQ,CAAC;MAC1D,QAAQ,CAAC,EAAC,QAAQ,EAAC,GAAG,EAAC,EAAC,OAAM,GAAA,UAAA,SAAQ,CAAC,QAAQ,CAAC;;AAGlD,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,OAAO,QAAQ,cAAc,YAAY,GAAE,IAAI;AACjE,YAAI,CAAC,SAAS,CAAC;AAAQ;AACvB,cAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,cAAM,YAAY,aAAa,SAAQ,GAAA,WAAA,gBAAe,aAAa,KAAK,IAAI,CAAA;AAC5E,YAAI,WAAW,OAAO,sBAAqB,GAAA,UAAA,KAAI,UAAU,YAAY;AACrE,YAAI,GAAG,KAAK;AAEZ,iBAAS,sBAAmB;AAC1B,gBAAM,IAAI,IAAI,IAAI,MAAK,GAAA,UAAA,KAAI,IAAI,SAAS;AACxC,gBAAM,IAAI,IAAI,IAAI,GAAG;AACrB,cAAI,UAAU,EAAC,GAAG,EAAC,CAAC;AACpB,cAAI,OAAO,OAAO,IAAI;AACtB,cAAI,IAAG,GAAA,UAAA,KAAI,CAAC,QAAQ,OAAO,YAAW,IAAK,QAAQ,QAAQ,GAAG,CAAC,CAAC;QAClE;AAEA,iBAAS,cAAW;AAClB,iBAAO,UAAU,SAAS,KAAK,CAAC,UAAU,KAAK,CAAC,MAAM,MAAM,YAAY,MAAM,OAAO;QACvF;AAEA,iBAAS,MAAM,GAAS,GAAO;AAC7B,gBAAM,OAAO,IAAI,KAAK,MAAM;AAC5B,gBAAM,aAAY,GAAA,WAAA,gBAAe,WAAW,MAAM,GAAG,KAAK,eAAe,WAAA,SAAS,KAAK;AACvF,gBAAM,UAAU,IAAI,MAAM,YAAW,GAAA,UAAA,MAAK;AAC1C,cAAI,KAAI,GAAA,UAAA,MAAK,CAAC,OAAO,MAAK;AACxB,gBAAI,IAAI,OAAM,GAAA,UAAA,KAAI,IAAI,IAAI,CAAC,GAAG;AAC9B,gBAAI,GAAG,YAAW,GAAA,UAAA,YAAW;AAC7B,gBAAI,UAAU,SAAS;AAAG,kBAAI,IAAG,GAAA,UAAA,YAAW,IAAI,iBAAgB,GAAA,UAAA,KAAI,IAAI,SAAS;AACjF,gBACG,IAAG,GAAA,UAAA,YAAW,OAAO,IAAI,IAAI,iBAAiB,MAAK;AAClD,kBAAI,OAAO,IAAG,GAAA,UAAA,KAAI,OAAO,IAAI,IAAI,GAAG;AACpC,kBAAI,MAAK;AACT,kBAAI,OAAO,OAAO,KAAK,EAAE,MAAK;YAChC,CAAC,EACA,MAAK,GAAA,UAAA,KAAI,OAAO,IAAI,IAAI,OAAO,CAAC,EAAE;UACvC,CAAC;QACH;AAEA,iBAAS,OAAO,GAAS,GAAO;AAC9B,gBAAM,OAAM,GAAA,OAAA,SAAQ,KAAK,QAAA,OAAK;AAC9B,gBAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,cAAI,MAAM,KAAK,EAAE,KAAI,GAAA,UAAA,MAAK,CAAC,OAAO,MAChC,IAAI,KAAI,GAAA,UAAA,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,MAC/B,IAAI,IAAG,GAAA,UAAA,KAAI,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,MAAK;AACnD,gBAAI,MAAK;AACT,gBAAI,OAAO,OAAO,KAAK,EAAE,MAAM,KAAK;UACtC,CAAC,CAAC,CACH;QAEL;MACF;;AAGF,YAAA,UAAe;;;;;;;;;AC5Ef,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,UAAA;AAIA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,oBAAmB,UAAU;;AAGzD,QAAM,MAA6B;MACjC,SAAS;MACT,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,OAAO,YAAY,OAAM,IAAI;AAC/C,YAAI,SAAU,UAAU,OAAO,UAAU,UAAW;AAClD,cAAI,WAAU,GAAA,UAAA,OAAK,GAAA,OAAA,SAAQ,KAAK,QAAA,OAAK,CAAC,IAAI,IAAI,KAAK,UAAU,GAAG;QAClE,OAAO;AACL,cAAI,MAAK,GAAA,UAAA,KAAI,MAAM,QAAQ,IAAI,EAAE;QACnC;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACzBf,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,UAAA;AAIA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,qBAAoB,UAAU;;AAG1D,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,OAAO,QAAQ,YAAY,GAAE,IAAI;AACnD,YAAI,CAAC,SAAS,OAAO,WAAW;AAAG,gBAAM,IAAI,MAAM,gCAAgC;AACnF,cAAM,UAAU,OAAO,UAAU,GAAG,KAAK;AACzC,YAAI;AACJ,cAAM,SAAS,MAAa,QAAG,QAAH,QAAG,SAAH,MAAA,OAAQ,GAAA,OAAA,SAAQ,KAAK,QAAA,OAAK;AAEtD,YAAI;AACJ,YAAI,WAAW,OAAO;AACpB,kBAAQ,IAAI,IAAI,OAAO;AACvB,cAAI,WAAW,OAAO,QAAQ;QAChC,OAAO;AAEL,cAAI,CAAC,MAAM,QAAQ,MAAM;AAAG,kBAAM,IAAI,MAAM,0BAA0B;AACtE,gBAAM,UAAU,IAAI,MAAM,WAAW,UAAU;AAC/C,mBAAQ,GAAA,UAAA,IAAG,GAAG,OAAO,IAAI,CAAC,IAAa,MAAc,UAAU,SAAS,CAAC,CAAC,CAAC;QAC7E;AACA,YAAI,KAAK,KAAK;AAEd,iBAAS,WAAQ;AACf,cAAI,OAAO,OAAO,KAAK;AACvB,cAAI,MAAM,KAAK,YAAoB,CAAC,MAClC,IAAI,IAAG,GAAA,UAAA,KAAI,OAAM,CAAE,IAAI,IAAI,KAAK,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,IAAI,EAAE,MAAK,CAAE,CAAC;QAEhF;AAEA,iBAAS,UAAU,SAAe,GAAS;AACzC,gBAAM,MAAM,OAAO,CAAC;AACpB,iBAAO,OAAO,QAAQ,YAAY,QAAQ,QACtC,GAAA,UAAA,KAAI,OAAM,CAAE,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,QACrC,GAAA,UAAA,KAAI,IAAI,QAAQ,GAAG;QACzB;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACpDf,QAAA,gBAAA;AACA,QAAA,eAAA;AACA,QAAA,gBAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AACA,QAAA,aAAA;AACA,QAAA,eAAA;AACA,QAAA,gBAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AAEA,QAAM,aAAyB;;MAE7B,cAAA;MACA,aAAA;;MAEA,cAAA;MACA,UAAA;;MAEA,kBAAA;MACA,WAAA;;MAEA,aAAA;MACA,cAAA;;MAEA,EAAC,SAAS,QAAQ,YAAY,CAAC,UAAU,OAAO,EAAC;MACjD,EAAC,SAAS,YAAY,YAAY,UAAS;MAC3C,QAAA;MACA,OAAA;;AAGF,YAAA,UAAe;;;;;;;;;;ACzBf,QAAA,YAAA;AACA,QAAA,SAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,IAAG,EAAC,OAAM,GAAA,UAAA,+BAA8B,GAAG;MAC/D,QAAQ,CAAC,EAAC,QAAQ,EAAC,IAAG,EAAC,OAAM,GAAA,UAAA,aAAY,GAAG;;AAG9C,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,WAAW,QAAQ;MAChC,QAAQ;MACR;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,cAAc,GAAE,IAAI;AAC3B,cAAM,EAAC,MAAK,IAAI;AAChB,YAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,WAAA,GAAA,OAAA,iBAAgB,IAAI,sEAAsE;AAC1F;QACF;AACA,gCAAwB,KAAK,KAAK;MACpC;;AAGF,aAAgB,wBAAwB,KAAiB,OAAkB;AACzE,YAAM,EAAC,KAAK,QAAQ,MAAM,SAAS,GAAE,IAAI;AACzC,SAAG,QAAQ;AACX,YAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,SAAS;AAC9C,UAAI,WAAW,OAAO;AACpB,YAAI,UAAU,EAAC,KAAK,MAAM,OAAM,CAAC;AACjC,YAAI,MAAK,GAAA,UAAA,KAAI,GAAG,OAAO,MAAM,MAAM,EAAE;MACvC,WAAW,OAAO,UAAU,YAAY,EAAC,GAAA,OAAA,mBAAkB,IAAI,MAAM,GAAG;AACtE,cAAM,QAAQ,IAAI,IAAI,UAAS,GAAA,UAAA,KAAI,GAAG,OAAO,MAAM,MAAM,EAAE;AAC3D,YAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAM,cAAc,KAAK,CAAC;AAC7C,YAAI,GAAG,KAAK;MACd;AAEA,eAAS,cAAc,OAAW;AAChC,YAAI,SAAS,KAAK,MAAM,QAAQ,KAAK,CAAC,MAAK;AACzC,cAAI,UAAU,EAAC,SAAS,UAAU,GAAG,cAAc,OAAA,KAAK,IAAG,GAAG,KAAK;AACnE,cAAI,CAAC,GAAG;AAAW,gBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAM,IAAI,MAAK,CAAE;QACzD,CAAC;MACH;IACF;AAnBA,YAAA,0BAAA;AAqBA,YAAA,UAAe;;;;;;;;;;ACrDf,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,UAAU,SAAS,SAAS;MACzC,QAAQ;MACR,KAAK,KAAe;AAClB,cAAM,EAAC,QAAQ,GAAE,IAAI;AACrB,YAAI,MAAM,QAAQ,MAAM;AAAG,iBAAO,cAAc,KAAK,mBAAmB,MAAM;AAC9E,WAAG,QAAQ;AACX,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM;AAAG;AACnC,YAAI,IAAG,GAAA,OAAA,eAAc,GAAG,CAAC;MAC3B;;AAGF,aAAgB,cACd,KACA,YACA,SAAsB,IAAI,QAAM;AAEhC,YAAM,EAAC,KAAK,cAAc,MAAM,SAAS,GAAE,IAAI;AAC/C,uBAAiB,YAAY;AAC7B,UAAI,GAAG,KAAK,eAAe,OAAO,UAAU,GAAG,UAAU,MAAM;AAC7D,WAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,OAAO,QAAQ,GAAG,KAAK;MAC9D;AACA,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,SAAS;AAC9C,aAAO,QAAQ,CAAC,KAAgB,MAAa;AAC3C,aAAI,GAAA,OAAA,mBAAkB,IAAI,GAAG;AAAG;AAChC,YAAI,IAAG,GAAA,UAAA,KAAI,GAAG,MAAM,CAAC,IAAI,MACvB,IAAI,UACF;UACE;UACA,YAAY;UACZ,UAAU;WAEZ,KAAK,CACN;AAEH,YAAI,GAAG,KAAK;MACd,CAAC;AAED,eAAS,iBAAiB,KAAoB;AAC5C,cAAM,EAAC,MAAM,cAAa,IAAI;AAC9B,cAAM,IAAI,OAAO;AACjB,cAAM,YAAY,MAAM,IAAI,aAAa,MAAM,IAAI,YAAY,IAAI,UAAU,MAAM;AACnF,YAAI,KAAK,gBAAgB,CAAC,WAAW;AACnC,gBAAM,MAAM,IAAI,OAAO,QAAQ,CAAC,oCAAoC,UAAU,4CAA4C,aAAa;AACvI,WAAA,GAAA,OAAA,iBAAgB,IAAI,KAAK,KAAK,YAAY;QAC5C;MACF;IACF;AApCA,YAAA,gBAAA;AAsCA,YAAA,UAAe;;;;;;;;;ACzDf,QAAA,UAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,OAAO;MACpB,QAAQ;MACR,MAAM,CAAC,SAAQ,GAAA,QAAA,eAAc,KAAK,OAAO;;AAG3C,YAAA,UAAe;;;;;;;;;ACJf,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AACA,QAAA,oBAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,IAAG,EAAC,OAAM,GAAA,UAAA,+BAA8B,GAAG;MAC/D,QAAQ,CAAC,EAAC,QAAQ,EAAC,IAAG,EAAC,OAAM,GAAA,UAAA,aAAY,GAAG;;AAG9C,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,UAAU,SAAS;MAChC,QAAQ;MACR;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,QAAQ,cAAc,GAAE,IAAI;AACnC,cAAM,EAAC,YAAW,IAAI;AACtB,WAAG,QAAQ;AACX,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM;AAAG;AACnC,YAAI;AAAa,WAAA,GAAA,kBAAA,yBAAwB,KAAK,WAAW;;AACpD,cAAI,IAAG,GAAA,OAAA,eAAc,GAAG,CAAC;MAChC;;AAGF,YAAA,UAAe;;;;;;;;;AC5Bf,QAAA,YAAA;AACA,QAAA,SAAA;AAQA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,KAAK,IAAG,EAAC,MAC3B,QAAQ,UACJ,GAAA,UAAA,6BAA4B,GAAG,oBAC/B,GAAA,UAAA,6BAA4B,GAAG,qBAAqB,GAAG;MAC7D,QAAQ,CAAC,EAAC,QAAQ,EAAC,KAAK,IAAG,EAAC,MAC1B,QAAQ,UAAY,GAAA,UAAA,mBAAkB,GAAG,OAAM,GAAA,UAAA,mBAAkB,GAAG,kBAAkB,GAAG;;AAG7F,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,UAAU,SAAS;MAChC,QAAQ;MACR,aAAa;MACb;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,cAAc,MAAM,GAAE,IAAI;AAC9C,YAAI;AACJ,YAAI;AACJ,cAAM,EAAC,aAAa,YAAW,IAAI;AACnC,YAAI,GAAG,KAAK,MAAM;AAChB,gBAAM,gBAAgB,SAAY,IAAI;AACtC,gBAAM;QACR,OAAO;AACL,gBAAM;QACR;AACA,cAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,SAAS;AAC9C,YAAI,UAAU,EAAC,KAAK,IAAG,CAAC;AACxB,YAAI,QAAQ,UAAa,QAAQ,GAAG;AAClC,WAAA,GAAA,OAAA,iBAAgB,IAAI,sEAAsE;AAC1F;QACF;AACA,YAAI,QAAQ,UAAa,MAAM,KAAK;AAClC,WAAA,GAAA,OAAA,iBAAgB,IAAI,iDAAiD;AACrE,cAAI,KAAI;AACR;QACF;AACA,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM,GAAG;AACjC,cAAI,QAAO,GAAA,UAAA,KAAI,GAAG,OAAO,GAAG;AAC5B,cAAI,QAAQ;AAAW,oBAAO,GAAA,UAAA,KAAI,IAAI,OAAO,GAAG,OAAO,GAAG;AAC1D,cAAI,KAAK,IAAI;AACb;QACF;AAEA,WAAG,QAAQ;AACX,cAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAI,QAAQ,UAAa,QAAQ,GAAG;AAClC,wBAAc,OAAO,MAAM,IAAI,GAAG,OAAO,MAAM,IAAI,MAAK,CAAE,CAAC;QAC7D,WAAW,QAAQ,GAAG;AACpB,cAAI,IAAI,OAAO,IAAI;AACnB,cAAI,QAAQ;AAAW,gBAAI,IAAG,GAAA,UAAA,KAAI,IAAI,eAAe,sBAAsB;QAC7E,OAAO;AACL,cAAI,IAAI,OAAO,KAAK;AACpB,iCAAsB;QACxB;AACA,YAAI,OAAO,OAAO,MAAM,IAAI,MAAK,CAAE;AAEnC,iBAAS,yBAAsB;AAC7B,gBAAM,WAAW,IAAI,KAAK,QAAQ;AAClC,gBAAM,QAAQ,IAAI,IAAI,SAAS,CAAC;AAChC,wBAAc,UAAU,MAAM,IAAI,GAAG,UAAU,MAAM,YAAY,KAAK,CAAC,CAAC;QAC1E;AAEA,iBAAS,cAAc,QAAc,OAAiB;AACpD,cAAI,SAAS,KAAK,GAAG,KAAK,CAAC,MAAK;AAC9B,gBAAI,UACF;cACE,SAAS;cACT,UAAU;cACV,cAAc,OAAA,KAAK;cACnB,eAAe;eAEjB,MAAM;AAER,kBAAK;UACP,CAAC;QACH;AAEA,iBAAS,YAAY,OAAW;AAC9B,cAAI,MAAK,GAAA,UAAA,KAAI,KAAK,IAAI;AACtB,cAAI,QAAQ,QAAW;AACrB,gBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,OAAO,GAAG,IAAI,MAAM,IAAI,OAAO,OAAO,IAAI,EAAE,MAAK,CAAE;UACrE,OAAO;AACL,gBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,MAAM,GAAG,IAAI,MAAM,IAAI,OAAO,OAAO,KAAK,EAAE,MAAK,CAAE;AACnE,gBAAI,QAAQ;AAAG,kBAAI,OAAO,OAAO,IAAI;;AAChC,kBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,OAAO,GAAG,IAAI,MAAM,IAAI,OAAO,OAAO,IAAI,CAAC;UAClE;QACF;MACF;;AAGF,YAAA,UAAe;;;;;;;;;;ACpGf,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AAmBa,YAAA,QAAgC;MAC3C,SAAS,CAAC,EAAC,QAAQ,EAAC,UAAU,WAAW,KAAI,EAAC,MAAK;AACjD,cAAM,eAAe,cAAc,IAAI,aAAa;AACpD,gBAAO,GAAA,UAAA,iBAAgB,YAAY,IAAI,IAAI,kBAAkB,QAAQ;MACvE;MACA,QAAQ,CAAC,EAAC,QAAQ,EAAC,UAAU,WAAW,MAAM,gBAAe,EAAC,OAC5D,GAAA,UAAA,gBAAe,QAAQ;uBACJ,eAAe;iBACrB,SAAS;YACd,IAAI;;;AAGhB,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAA,QAAA;MACA,KAAK,KAAe;AAClB,cAAM,CAAC,UAAU,OAAO,IAAI,kBAAkB,GAAG;AACjD,6BAAqB,KAAK,QAAQ;AAClC,2BAAmB,KAAK,OAAO;MACjC;;AAGF,aAAS,kBAAkB,EAAC,OAAM,GAAa;AAC7C,YAAM,eAAqC,CAAA;AAC3C,YAAM,aAAiC,CAAA;AACvC,iBAAW,OAAO,QAAQ;AACxB,YAAI,QAAQ;AAAa;AACzB,cAAM,OAAO,MAAM,QAAQ,OAAO,GAAG,CAAC,IAAI,eAAe;AACzD,aAAK,GAAG,IAAI,OAAO,GAAG;MACxB;AACA,aAAO,CAAC,cAAc,UAAU;IAClC;AAEA,aAAgB,qBACd,KACA,eAA2C,IAAI,QAAM;AAErD,YAAM,EAAC,KAAK,MAAM,GAAE,IAAI;AACxB,UAAI,OAAO,KAAK,YAAY,EAAE,WAAW;AAAG;AAC5C,YAAM,UAAU,IAAI,IAAI,SAAS;AACjC,iBAAW,QAAQ,cAAc;AAC/B,cAAM,OAAO,aAAa,IAAI;AAC9B,YAAI,KAAK,WAAW;AAAG;AACvB,cAAM,eAAc,GAAA,OAAA,gBAAe,KAAK,MAAM,MAAM,GAAG,KAAK,aAAa;AACzE,YAAI,UAAU;UACZ,UAAU;UACV,WAAW,KAAK;UAChB,MAAM,KAAK,KAAK,IAAI;SACrB;AACD,YAAI,GAAG,WAAW;AAChB,cAAI,GAAG,aAAa,MAAK;AACvB,uBAAW,WAAW,MAAM;AAC1B,eAAA,GAAA,OAAA,wBAAuB,KAAK,OAAO;YACrC;UACF,CAAC;QACH,OAAO;AACL,cAAI,IAAG,GAAA,UAAA,KAAI,WAAW,SAAQ,GAAA,OAAA,kBAAiB,KAAK,MAAM,OAAO,CAAC,GAAG;AACrE,WAAA,GAAA,OAAA,mBAAkB,KAAK,OAAO;AAC9B,cAAI,KAAI;QACV;MACF;IACF;AA5BA,YAAA,uBAAA;AA8BA,aAAgB,mBAAmB,KAAiB,aAAwB,IAAI,QAAM;AACpF,YAAM,EAAC,KAAK,MAAM,SAAS,GAAE,IAAI;AACjC,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,iBAAW,QAAQ,YAAY;AAC7B,aAAI,GAAA,OAAA,mBAAkB,IAAI,WAAW,IAAI,CAAc;AAAG;AAC1D,YAAI;WACF,GAAA,OAAA,gBAAe,KAAK,MAAM,MAAM,GAAG,KAAK,aAAa;UACrD,MAAK;AACH,kBAAM,SAAS,IAAI,UAAU,EAAC,SAAS,YAAY,KAAI,GAAG,KAAK;AAC/D,gBAAI,oBAAoB,QAAQ,KAAK;UACvC;UACA,MAAM,IAAI,IAAI,OAAO,IAAI;;;AAE3B,YAAI,GAAG,KAAK;MACd;IACF;AAfA,YAAA,qBAAA;AAiBA,YAAA,UAAe;;;;;;;;;ACxGf,QAAA,YAAA;AACA,QAAA,SAAA;AAIA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,oBAAmB,OAAO,YAAY;;AAG9D,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,UAAU,SAAS;MAChC;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,MAAM,GAAE,IAAI;AAChC,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM;AAAG;AACnC,cAAM,QAAQ,IAAI,KAAK,OAAO;AAE9B,YAAI,MAAM,OAAO,MAAM,CAAC,QAAO;AAC7B,cAAI,UAAU,EAAC,cAAc,IAAG,CAAC;AACjC,cAAI,UACF;YACE,SAAS;YACT,MAAM;YACN,WAAW,CAAC,QAAQ;YACpB,cAAc;YACd,eAAe;aAEjB,KAAK;AAEP,cAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAK;AACtB,gBAAI,MAAM,IAAI;AACd,gBAAI,CAAC,GAAG;AAAW,kBAAI,MAAK;UAC9B,CAAC;QACH,CAAC;AAED,YAAI,GAAG,KAAK;MACd;;AAGF,YAAA,UAAe;;;;;;;;;AC1Cf,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AAEA,QAAA,SAAA;AAQA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,0BAAyB,OAAO,kBAAkB;;AAG1E,QAAM,MAAsD;MAC1D,SAAS;MACT,MAAM,CAAC,QAAQ;MACf,YAAY,CAAC,WAAW,QAAQ;MAChC,gBAAgB;MAChB,aAAa;MACb;MACA,KAAK,KAAG;AACN,cAAM,EAAC,KAAK,QAAQ,cAAc,MAAM,WAAW,GAAE,IAAI;AAEzD,YAAI,CAAC;AAAW,gBAAM,IAAI,MAAM,0BAA0B;AAC1D,cAAM,EAAC,WAAW,KAAI,IAAI;AAC1B,WAAG,QAAQ;AACX,YAAI,KAAK,qBAAqB,UAAS,GAAA,OAAA,mBAAkB,IAAI,MAAM;AAAG;AACtE,cAAM,SAAQ,GAAA,OAAA,qBAAoB,aAAa,UAAU;AACzD,cAAM,YAAW,GAAA,OAAA,qBAAoB,aAAa,iBAAiB;AACnE,kCAAyB;AACzB,YAAI,IAAG,GAAA,UAAA,KAAI,SAAS,QAAQ,QAAA,QAAE,MAAM,EAAE;AAEtC,iBAAS,4BAAyB;AAChC,cAAI,MAAM,OAAO,MAAM,CAAC,QAAa;AACnC,gBAAI,CAAC,MAAM,UAAU,CAAC,SAAS;AAAQ,qCAAuB,GAAG;;AAC5D,kBAAI,GAAG,aAAa,GAAG,GAAG,MAAM,uBAAuB,GAAG,CAAC;UAClE,CAAC;QACH;AAEA,iBAAS,aAAa,KAAS;AAC7B,cAAI;AACJ,cAAI,MAAM,SAAS,GAAG;AAEpB,kBAAM,eAAc,GAAA,OAAA,gBAAe,IAAI,aAAa,YAAY,YAAY;AAC5E,2BAAc,GAAA,OAAA,eAAc,KAAK,aAAqB,GAAG;UAC3D,WAAW,MAAM,QAAQ;AACvB,2BAAc,GAAA,UAAA,IAAG,GAAG,MAAM,IAAI,CAAC,OAAM,GAAA,UAAA,KAAI,GAAG,QAAQ,CAAC,EAAE,CAAC;UAC1D,OAAO;AACL,0BAAc,UAAA;UAChB;AACA,cAAI,SAAS,QAAQ;AACnB,2BAAc,GAAA,UAAA,IAAG,aAAa,GAAG,SAAS,IAAI,CAAC,OAAM,GAAA,UAAA,MAAI,GAAA,OAAA,YAAW,KAAK,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC;UAC7F;AACA,kBAAO,GAAA,UAAA,KAAI,WAAW;QACxB;AAEA,iBAAS,iBAAiB,KAAS;AACjC,cAAI,MAAK,GAAA,UAAA,YAAW,IAAI,IAAI,GAAG,GAAG;QACpC;AAEA,iBAAS,uBAAuB,KAAS;AACvC,cAAI,KAAK,qBAAqB,SAAU,KAAK,oBAAoB,WAAW,OAAQ;AAClF,6BAAiB,GAAG;AACpB;UACF;AAEA,cAAI,WAAW,OAAO;AACpB,gBAAI,UAAU,EAAC,oBAAoB,IAAG,CAAC;AACvC,gBAAI,MAAK;AACT,gBAAI,CAAC;AAAW,kBAAI,MAAK;AACzB;UACF;AAEA,cAAI,OAAO,UAAU,YAAY,EAAC,GAAA,OAAA,mBAAkB,IAAI,MAAM,GAAG;AAC/D,kBAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,gBAAI,KAAK,qBAAqB,WAAW;AACvC,oCAAsB,KAAK,OAAO,KAAK;AACvC,kBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAK;AACtB,oBAAI,MAAK;AACT,iCAAiB,GAAG;cACtB,CAAC;YACH,OAAO;AACL,oCAAsB,KAAK,KAAK;AAChC,kBAAI,CAAC;AAAW,oBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAM,IAAI,MAAK,CAAE;YACtD;UACF;QACF;AAEA,iBAAS,sBAAsB,KAAW,OAAa,QAAc;AACnE,gBAAM,YAA2B;YAC/B,SAAS;YACT,UAAU;YACV,cAAc,OAAA,KAAK;;AAErB,cAAI,WAAW,OAAO;AACpB,mBAAO,OAAO,WAAW;cACvB,eAAe;cACf,cAAc;cACd,WAAW;aACZ;UACH;AACA,cAAI,UAAU,WAAW,KAAK;QAChC;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACpHf,QAAA,aAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AACA,QAAA,yBAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,cAAc,MAAM,GAAE,IAAI;AAC9C,YAAI,GAAG,KAAK,qBAAqB,SAAS,aAAa,yBAAyB,QAAW;AACzF,iCAAA,QAAM,KAAK,IAAI,WAAA,WAAW,IAAI,uBAAA,SAAO,sBAAsB,CAAC;QAC9D;AACA,cAAM,YAAW,GAAA,OAAA,qBAAoB,MAAM;AAC3C,mBAAW,QAAQ,UAAU;AAC3B,aAAG,kBAAkB,IAAI,IAAI;QAC/B;AACA,YAAI,GAAG,KAAK,eAAe,SAAS,UAAU,GAAG,UAAU,MAAM;AAC/D,aAAG,QAAQ,OAAA,eAAe,MAAM,MAAK,GAAA,OAAA,QAAO,QAAQ,GAAG,GAAG,KAAK;QACjE;AACA,cAAM,aAAa,SAAS,OAAO,CAAC,MAAM,EAAC,GAAA,OAAA,mBAAkB,IAAI,OAAO,CAAC,CAAC,CAAC;AAC3E,YAAI,WAAW,WAAW;AAAG;AAC7B,cAAM,QAAQ,IAAI,KAAK,OAAO;AAE9B,mBAAW,QAAQ,YAAY;AAC7B,cAAI,WAAW,IAAI,GAAG;AACpB,gCAAoB,IAAI;UAC1B,OAAO;AACL,gBAAI,IAAG,GAAA,OAAA,gBAAe,KAAK,MAAM,MAAM,GAAG,KAAK,aAAa,CAAC;AAC7D,gCAAoB,IAAI;AACxB,gBAAI,CAAC,GAAG;AAAW,kBAAI,KAAI,EAAG,IAAI,OAAO,IAAI;AAC7C,gBAAI,MAAK;UACX;AACA,cAAI,GAAG,kBAAkB,IAAI,IAAI;AACjC,cAAI,GAAG,KAAK;QACd;AAEA,iBAAS,WAAW,MAAY;AAC9B,iBAAO,GAAG,KAAK,eAAe,CAAC,GAAG,iBAAiB,OAAO,IAAI,EAAE,YAAY;QAC9E;AAEA,iBAAS,oBAAoB,MAAY;AACvC,cAAI,UACF;YACE,SAAS;YACT,YAAY;YACZ,UAAU;aAEZ,KAAK;QAET;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACtDf,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AAGA,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,MAAM,cAAc,GAAE,IAAI;AAC9C,cAAM,EAAC,KAAI,IAAI;AACf,cAAM,YAAW,GAAA,OAAA,qBAAoB,MAAM;AAC3C,cAAM,sBAAsB,SAAS,OAAO,CAAC,OAC3C,GAAA,OAAA,mBAAkB,IAAI,OAAO,CAAC,CAAc,CAAC;AAG/C,YACE,SAAS,WAAW,KACnB,oBAAoB,WAAW,SAAS,WACtC,CAAC,GAAG,KAAK,eAAe,GAAG,UAAU,OACxC;AACA;QACF;AAEA,cAAM,kBACJ,KAAK,gBAAgB,CAAC,KAAK,2BAA2B,aAAa;AACrE,cAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAI,GAAG,UAAU,QAAQ,EAAE,GAAG,iBAAiB,UAAA,OAAO;AACpD,aAAG,SAAQ,GAAA,OAAA,sBAAqB,KAAK,GAAG,KAAK;QAC/C;AACA,cAAM,EAAC,MAAK,IAAI;AAChB,kCAAyB;AAEzB,iBAAS,4BAAyB;AAChC,qBAAW,OAAO,UAAU;AAC1B,gBAAI;AAAiB,sCAAwB,GAAG;AAChD,gBAAI,GAAG,WAAW;AAChB,iCAAmB,GAAG;YACxB,OAAO;AACL,kBAAI,IAAI,OAAO,IAAI;AACnB,iCAAmB,GAAG;AACtB,kBAAI,GAAG,KAAK;YACd;UACF;QACF;AAEA,iBAAS,wBAAwB,KAAW;AAC1C,qBAAW,QAAQ,iBAAiB;AAClC,gBAAI,IAAI,OAAO,GAAG,EAAE,KAAK,IAAI,GAAG;AAC9B,eAAA,GAAA,OAAA,iBACE,IACA,YAAY,IAAI,oBAAoB,GAAG,gCAAgC;YAE3E;UACF;QACF;AAEA,iBAAS,mBAAmB,KAAW;AACrC,cAAI,MAAM,OAAO,MAAM,CAAC,QAAO;AAC7B,gBAAI,IAAG,GAAA,UAAA,MAAI,GAAA,OAAA,YAAW,KAAK,GAAG,CAAC,SAAS,GAAG,KAAK,MAAK;AACnD,oBAAM,cAAc,oBAAoB,SAAS,GAAG;AACpD,kBAAI,CAAC,aAAa;AAChB,oBAAI,UACF;kBACE,SAAS;kBACT,YAAY;kBACZ,UAAU;kBACV,cAAc,OAAA,KAAK;mBAErB,KAAK;cAET;AAEA,kBAAI,GAAG,KAAK,eAAe,UAAU,MAAM;AACzC,oBAAI,QAAO,GAAA,UAAA,KAAI,KAAK,IAAI,GAAG,KAAK,IAAI;cACtC,WAAW,CAAC,eAAe,CAAC,GAAG,WAAW;AAGxC,oBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAM,IAAI,MAAK,CAAE;cACtC;YACF,CAAC;UACH,CAAC;QACH;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACxFf,QAAA,SAAA;AAIA,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY,CAAC,UAAU,SAAS;MAChC,aAAa;MACb,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,GAAE,IAAI;AAC1B,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM,GAAG;AACjC,cAAI,KAAI;AACR;QACF;AAEA,cAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAI,UACF;UACE,SAAS;UACT,eAAe;UACf,cAAc;UACd,WAAW;WAEb,KAAK;AAGP,YAAI,WACF,OACA,MAAM,IAAI,MAAK,GACf,MAAM,IAAI,MAAK,CAAE;MAErB;MACA,OAAO,EAAC,SAAS,oBAAmB;;AAGtC,YAAA,UAAe;;;;;;;;;ACpCf,QAAA,SAAA;AAIA,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,aAAa;MACb,MAAM,OAAA;MACN,OAAO,EAAC,SAAS,+BAA8B;;AAGjD,YAAA,UAAe;;;;;;;;;ACNf,QAAA,YAAA;AACA,QAAA,SAAA;AASA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,sBAAqB,OAAO,OAAO;;AAG3D,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,aAAa;MACb;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,cAAc,GAAE,IAAI;AAExC,YAAI,CAAC,MAAM,QAAQ,MAAM;AAAG,gBAAM,IAAI,MAAM,0BAA0B;AACtE,YAAI,GAAG,KAAK,iBAAiB,aAAa;AAAe;AACzD,cAAM,SAAsB;AAC5B,cAAM,QAAQ,IAAI,IAAI,SAAS,KAAK;AACpC,cAAM,UAAU,IAAI,IAAI,WAAW,IAAI;AACvC,cAAM,WAAW,IAAI,KAAK,QAAQ;AAClC,YAAI,UAAU,EAAC,QAAO,CAAC;AAGvB,YAAI,MAAM,aAAa;AAEvB,YAAI,OACF,OACA,MAAM,IAAI,MAAK,GACf,MAAM,IAAI,MAAM,IAAI,CAAC;AAGvB,iBAAS,gBAAa;AACpB,iBAAO,QAAQ,CAAC,KAAgB,MAAa;AAC3C,gBAAI;AACJ,iBAAI,GAAA,OAAA,mBAAkB,IAAI,GAAG,GAAG;AAC9B,kBAAI,IAAI,UAAU,IAAI;YACxB,OAAO;AACL,uBAAS,IAAI,UACX;gBACE,SAAS;gBACT,YAAY;gBACZ,eAAe;iBAEjB,QAAQ;YAEZ;AAEA,gBAAI,IAAI,GAAG;AACT,kBACG,IAAG,GAAA,UAAA,KAAI,QAAQ,OAAO,KAAK,EAAE,EAC7B,OAAO,OAAO,KAAK,EACnB,OAAO,UAAS,GAAA,UAAA,MAAK,OAAO,KAAK,CAAC,GAAG,EACrC,KAAI;YACT;AAEA,gBAAI,GAAG,UAAU,MAAK;AACpB,kBAAI,OAAO,OAAO,IAAI;AACtB,kBAAI,OAAO,SAAS,CAAC;AACrB,kBAAI;AAAQ,oBAAI,eAAe,QAAQ,UAAA,IAAI;YAC7C,CAAC;UACH,CAAC;QACH;MACF;;AAGF,YAAA,UAAe;;;;;;;;;AC/Ef,QAAA,SAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,GAAE,IAAI;AAE1B,YAAI,CAAC,MAAM,QAAQ,MAAM;AAAG,gBAAM,IAAI,MAAM,0BAA0B;AACtE,cAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,eAAO,QAAQ,CAAC,KAAgB,MAAa;AAC3C,eAAI,GAAA,OAAA,mBAAkB,IAAI,GAAG;AAAG;AAChC,gBAAM,SAAS,IAAI,UAAU,EAAC,SAAS,SAAS,YAAY,EAAC,GAAG,KAAK;AACrE,cAAI,GAAG,KAAK;AACZ,cAAI,eAAe,MAAM;QAC3B,CAAC;MACH;;AAGF,YAAA,UAAe;;;;;;;;;ACbf,QAAA,YAAA;AACA,QAAA,SAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,mBAAkB,OAAO,QAAQ;MACxD,QAAQ,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,sBAAqB,OAAO,QAAQ;;AAG5D,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY,CAAC,UAAU,SAAS;MAChC,aAAa;MACb;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,cAAc,GAAE,IAAI;AAChC,YAAI,aAAa,SAAS,UAAa,aAAa,SAAS,QAAW;AACtE,WAAA,GAAA,OAAA,iBAAgB,IAAI,2CAA2C;QACjE;AACA,cAAM,UAAU,UAAU,IAAI,MAAM;AACpC,cAAM,UAAU,UAAU,IAAI,MAAM;AACpC,YAAI,CAAC,WAAW,CAAC;AAAS;AAE1B,cAAM,QAAQ,IAAI,IAAI,SAAS,IAAI;AACnC,cAAM,WAAW,IAAI,KAAK,QAAQ;AAClC,mBAAU;AACV,YAAI,MAAK;AAET,YAAI,WAAW,SAAS;AACtB,gBAAM,WAAW,IAAI,IAAI,UAAU;AACnC,cAAI,UAAU,EAAC,SAAQ,CAAC;AACxB,cAAI,GAAG,UAAU,eAAe,QAAQ,QAAQ,GAAG,eAAe,QAAQ,QAAQ,CAAC;QACrF,WAAW,SAAS;AAClB,cAAI,GAAG,UAAU,eAAe,MAAM,CAAC;QACzC,OAAO;AACL,cAAI,IAAG,GAAA,UAAA,KAAI,QAAQ,GAAG,eAAe,MAAM,CAAC;QAC9C;AAEA,YAAI,KAAK,OAAO,MAAM,IAAI,MAAM,IAAI,CAAC;AAErC,iBAAS,aAAU;AACjB,gBAAM,SAAS,IAAI,UACjB;YACE,SAAS;YACT,eAAe;YACf,cAAc;YACd,WAAW;aAEb,QAAQ;AAEV,cAAI,eAAe,MAAM;QAC3B;AAEA,iBAAS,eAAe,SAAiB,UAAe;AACtD,iBAAO,MAAK;AACV,kBAAM,SAAS,IAAI,UAAU,EAAC,QAAO,GAAG,QAAQ;AAChD,gBAAI,OAAO,OAAO,QAAQ;AAC1B,gBAAI,oBAAoB,QAAQ,KAAK;AACrC,gBAAI;AAAU,kBAAI,OAAO,WAAU,GAAA,UAAA,KAAI,OAAO,EAAE;;AAC3C,kBAAI,UAAU,EAAC,UAAU,QAAO,CAAC;UACxC;QACF;MACF;;AAGF,aAAS,UAAU,IAAkB,SAAe;AAClD,YAAM,SAAS,GAAG,OAAO,OAAO;AAChC,aAAO,WAAW,UAAa,EAAC,GAAA,OAAA,mBAAkB,IAAI,MAAM;IAC9D;AAEA,YAAA,UAAe;;;;;;;;;AC7Ef,QAAA,SAAA;AAEA,QAAM,MAA6B;MACjC,SAAS,CAAC,QAAQ,MAAM;MACxB,YAAY,CAAC,UAAU,SAAS;MAChC,KAAK,EAAC,SAAS,cAAc,GAAE,GAAa;AAC1C,YAAI,aAAa,OAAO;AAAW,WAAA,GAAA,OAAA,iBAAgB,IAAI,IAAI,OAAO,2BAA2B;MAC/F;;AAGF,YAAA,UAAe;;;;;;;;;ACXf,QAAA,oBAAA;AACA,QAAA,gBAAA;AACA,QAAA,UAAA;AACA,QAAA,cAAA;AACA,QAAA,aAAA;AACA,QAAA,iBAAA;AACA,QAAA,kBAAA;AACA,QAAA,yBAAA;AACA,QAAA,eAAA;AACA,QAAA,sBAAA;AACA,QAAA,QAAA;AACA,QAAA,UAAA;AACA,QAAA,UAAA;AACA,QAAA,UAAA;AACA,QAAA,OAAA;AACA,QAAA,aAAA;AAEA,aAAwB,cAAc,YAAY,OAAK;AACrD,YAAM,aAAa;;QAEjB,MAAA;QACA,QAAA;QACA,QAAA;QACA,QAAA;QACA,KAAA;QACA,WAAA;;QAEA,gBAAA;QACA,uBAAA;QACA,eAAA;QACA,aAAA;QACA,oBAAA;;AAGF,UAAI;AAAW,mBAAW,KAAK,cAAA,SAAa,YAAA,OAAS;;AAChD,mBAAW,KAAK,kBAAA,SAAiB,QAAA,OAAK;AAC3C,iBAAW,KAAK,WAAA,OAAQ;AACxB,aAAO;IACT;AArBA,YAAA,UAAA;;;;;;;;;ACTA,QAAA,YAAA;AAaA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,0BAAyB,UAAU;MAC9D,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,cAAa,UAAU;;AAGnD,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM,CAAC,UAAU,QAAQ;MACzB,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAiB,UAAiB;AACrC,cAAM,EAAC,KAAK,MAAM,OAAO,QAAQ,YAAY,GAAE,IAAI;AACnD,cAAM,EAAC,MAAM,eAAe,WAAW,MAAAC,MAAI,IAAI;AAC/C,YAAI,CAAC,KAAK;AAAiB;AAE3B,YAAI;AAAO,8BAAmB;;AACzB,yBAAc;AAEnB,iBAAS,sBAAmB;AAC1B,gBAAM,OAAO,IAAI,WAAW,WAAW;YACrC,KAAKA,MAAK;YACV,MAAM,KAAK,KAAK;WACjB;AACD,gBAAM,OAAO,IAAI,MAAM,SAAQ,GAAA,UAAA,KAAI,IAAI,IAAI,UAAU,GAAG;AACxD,gBAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,gBAAM,SAAS,IAAI,IAAI,QAAQ;AAE/B,cAAI,IACF,GAAA,UAAA,YAAW,IAAI,qBAAqB,IAAI,uBACxC,MAAM,IAAI,OAAO,QAAO,GAAA,UAAA,KAAI,IAAI,mBAAmB,EAAE,OAAO,SAAQ,GAAA,UAAA,KAAI,IAAI,WAAW,GACvF,MAAM,IAAI,OAAO,QAAO,GAAA,UAAA,YAAW,EAAE,OAAO,QAAQ,IAAI,CAAC;AAE3D,cAAI,WAAU,GAAA,UAAA,IAAG,WAAU,GAAI,WAAU,CAAE,CAAC;AAE5C,mBAAS,aAAU;AACjB,gBAAI,KAAK,iBAAiB;AAAO,qBAAO,UAAA;AACxC,oBAAO,GAAA,UAAA,KAAI,UAAU,QAAQ,MAAM;UACrC;AAEA,mBAAS,aAAU;AACjB,kBAAM,aAAa,UAAU,UACzB,GAAA,UAAA,MAAK,IAAI,kBAAkB,MAAM,IAAI,IAAI,OAAO,MAAM,IAAI,IAAI,QAC9D,GAAA,UAAA,KAAI,MAAM,IAAI,IAAI;AACtB,kBAAM,aAAY,GAAA,UAAA,aAAY,MAAM,oBAAoB,UAAU,MAAM,MAAM,SAAS,IAAI;AAC3F,oBAAO,GAAA,UAAA,KAAI,MAAM,OAAO,MAAM,gBAAgB,KAAK,QAAQ,QAAQ,QAAQ,SAAS;UACtF;QACF;AAEA,iBAAS,iBAAc;AACrB,gBAAM,YAAqCA,MAAK,QAAQ,MAAM;AAC9D,cAAI,CAAC,WAAW;AACd,0BAAa;AACb;UACF;AACA,cAAI,cAAc;AAAM;AACxB,gBAAM,CAAC,SAAS,QAAQ,MAAM,IAAI,UAAU,SAAS;AACrD,cAAI,YAAY;AAAU,gBAAI,KAAK,eAAc,CAAE;AAEnD,mBAAS,gBAAa;AACpB,gBAAI,KAAK,iBAAiB,OAAO;AAC/B,cAAAA,MAAK,OAAO,KAAK,WAAU,CAAE;AAC7B;YACF;AACA,kBAAM,IAAI,MAAM,WAAU,CAAE;AAE5B,qBAAS,aAAU;AACjB,qBAAO,mBAAmB,MAAgB,gCAAgC,aAAa;YACzF;UACF;AAEA,mBAAS,UAAU,QAAmB;AACpC,kBAAM,OACJ,kBAAkB,UACd,GAAA,UAAA,YAAW,MAAM,IACjB,KAAK,KAAK,WACV,GAAA,UAAA,KAAI,KAAK,KAAK,OAAO,IAAG,GAAA,UAAA,aAAY,MAAM,CAAC,KAC3C;AACN,kBAAM,MAAM,IAAI,WAAW,WAAW,EAAC,KAAK,QAAQ,KAAK,QAAQ,KAAI,CAAC;AACtE,gBAAI,OAAO,UAAU,YAAY,EAAE,kBAAkB,SAAS;AAC5D,qBAAO,CAAC,OAAO,QAAQ,UAAU,OAAO,WAAU,GAAA,UAAA,KAAI,GAAG,WAAW;YACtE;AAEA,mBAAO,CAAC,UAAU,QAAQ,GAAG;UAC/B;AAEA,mBAAS,iBAAc;AACrB,gBAAI,OAAO,aAAa,YAAY,EAAE,qBAAqB,WAAW,UAAU,OAAO;AACrF,kBAAI,CAAC,UAAU;AAAQ,sBAAM,IAAI,MAAM,6BAA6B;AACpE,sBAAO,GAAA,UAAA,WAAU,MAAM,IAAI,IAAI;YACjC;AACA,mBAAO,OAAO,UAAU,cAAa,GAAA,UAAA,KAAI,MAAM,IAAI,IAAI,OAAM,GAAA,UAAA,KAAI,MAAM,SAAS,IAAI;UACtF;QACF;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACtHf,QAAA,WAAA;AAEA,QAAM,SAAqB,CAAC,SAAA,OAAa;AAEzC,YAAA,UAAe;;;;;;;;;;ACHF,YAAA,qBAAiC;MAC5C;MACA;MACA;MACA;MACA;MACA;MACA;;AAGW,YAAA,oBAAgC;MAC3C;MACA;MACA;;;;;;;;;;ACdF,QAAA,SAAA;AACA,QAAA,eAAA;AACA,QAAA,eAAA;AACA,QAAA,WAAA;AACA,QAAA,aAAA;AAEA,QAAM,qBAAmC;MACvC,OAAA;MACA,aAAA;OACA,GAAA,aAAA,SAAuB;MACvB,SAAA;MACA,WAAA;MACA,WAAA;;AAGF,YAAA,UAAe;;;;;;;;;;ACdf,QAAY;AAAZ,KAAA,SAAYC,aAAU;AACpB,MAAAA,YAAA,KAAA,IAAA;AACA,MAAAA,YAAA,SAAA,IAAA;IACF,GAHY,eAAU,QAAA,aAAV,aAAU,CAAA,EAAA;;;;;;;;;ACAtB,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,cAAA;AACA,QAAA,SAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,YAAY,QAAO,EAAC,MACtC,eAAe,QAAA,WAAW,MACtB,QAAQ,OAAO,qBACf,iBAAiB,OAAO;MAC9B,QAAQ,CAAC,EAAC,QAAQ,EAAC,YAAY,KAAK,QAAO,EAAC,OAC1C,GAAA,UAAA,aAAY,UAAU,UAAU,OAAO,eAAe,GAAG;;AAG7D,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,QAAQ,cAAc,GAAE,IAAI;AAC9C,cAAM,EAAC,MAAK,IAAI;AAChB,YAAI,CAAC,GAAG,KAAK,eAAe;AAC1B,gBAAM,IAAI,MAAM,8CAA8C;QAChE;AACA,cAAM,UAAU,OAAO;AACvB,YAAI,OAAO,WAAW;AAAU,gBAAM,IAAI,MAAM,sCAAsC;AACtF,YAAI,OAAO;AAAS,gBAAM,IAAI,MAAM,yCAAyC;AAC7E,YAAI,CAAC;AAAO,gBAAM,IAAI,MAAM,uCAAuC;AACnE,cAAM,QAAQ,IAAI,IAAI,SAAS,KAAK;AACpC,cAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,aAAY,OAAO,CAAC,EAAE;AAC9D,YAAI,IACF,GAAA,UAAA,YAAW,GAAG,gBACd,MAAM,gBAAe,GACrB,MAAM,IAAI,MAAM,OAAO,EAAC,YAAY,QAAA,WAAW,KAAK,KAAK,QAAO,CAAC,CAAC;AAEpE,YAAI,GAAG,KAAK;AAEZ,iBAAS,kBAAe;AACtB,gBAAM,UAAU,WAAU;AAC1B,cAAI,GAAG,KAAK;AACZ,qBAAW,YAAY,SAAS;AAC9B,gBAAI,QAAO,GAAA,UAAA,KAAI,GAAG,QAAQ,QAAQ,EAAE;AACpC,gBAAI,OAAO,OAAO,eAAe,QAAQ,QAAQ,CAAC,CAAC;UACrD;AACA,cAAI,KAAI;AACR,cAAI,MAAM,OAAO,EAAC,YAAY,QAAA,WAAW,SAAS,KAAK,QAAO,CAAC;AAC/D,cAAI,MAAK;QACX;AAEA,iBAAS,eAAe,YAAmB;AACzC,gBAAM,SAAS,IAAI,KAAK,OAAO;AAC/B,gBAAM,SAAS,IAAI,UAAU,EAAC,SAAS,SAAS,WAAU,GAAG,MAAM;AACnE,cAAI,eAAe,QAAQ,UAAA,IAAI;AAC/B,iBAAO;QACT;AAEA,iBAAS,aAAU;;AACjB,gBAAM,eAAyC,CAAA;AAC/C,gBAAM,cAAc,YAAY,YAAY;AAC5C,cAAI,cAAc;AAClB,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAI,MAAM,MAAM,CAAC;AACjB,iBAAI,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,SAAQ,EAAC,GAAA,OAAA,sBAAqB,KAAK,GAAG,KAAK,KAAK,GAAG;AAC1D,oBAAM,MAAM,IAAI;AAChB,oBAAM,UAAA,WAAW,KAAK,GAAG,MAAM,GAAG,UAAU,MAAM,GAAG,QAAQ,GAAG;AAChE,kBAAI,eAAe,UAAA;AAAW,sBAAM,IAAI;AACxC,kBAAI,QAAQ;AAAW,sBAAM,IAAI,YAAA,QAAgB,GAAG,KAAK,aAAa,GAAG,QAAQ,GAAG;YACtF;AACA,kBAAM,WAAU,KAAA,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAG,OAAO;AACzC,gBAAI,OAAO,WAAW,UAAU;AAC9B,oBAAM,IAAI,MACR,iFAAiF,OAAO,GAAG;YAE/F;AACA,0BAAc,gBAAgB,eAAe,YAAY,GAAG;AAC5D,wBAAY,SAAS,CAAC;UACxB;AACA,cAAI,CAAC;AAAa,kBAAM,IAAI,MAAM,mBAAmB,OAAO,oBAAoB;AAChF,iBAAO;AAEP,mBAAS,YAAY,EAAC,SAAQ,GAAkB;AAC9C,mBAAO,MAAM,QAAQ,QAAQ,KAAK,SAAS,SAAS,OAAO;UAC7D;AAEA,mBAAS,YAAY,KAAsB,GAAS;AAClD,gBAAI,IAAI,OAAO;AACb,yBAAW,IAAI,OAAO,CAAC;YACzB,WAAW,IAAI,MAAM;AACnB,yBAAW,YAAY,IAAI,MAAM;AAC/B,2BAAW,UAAU,CAAC;cACxB;YACF,OAAO;AACL,oBAAM,IAAI,MAAM,8BAA8B,OAAO,+BAA+B;YACtF;UACF;AAEA,mBAAS,WAAW,UAAmB,GAAS;AAC9C,gBAAI,OAAO,YAAY,YAAY,YAAY,cAAc;AAC3D,oBAAM,IAAI,MAAM,mBAAmB,OAAO,iCAAiC;YAC7E;AACA,yBAAa,QAAQ,IAAI;UAC3B;QACF;MACF;;AAGF,YAAA,UAAe;;;;;AChHf;AAAA;AAAA;AAAA,MACE,SAAW;AAAA,MACX,KAAO;AAAA,MACP,OAAS;AAAA,MACT,aAAe;AAAA,QACb,aAAe;AAAA,UACb,MAAQ;AAAA,UACR,UAAY;AAAA,UACZ,OAAS,EAAC,MAAQ,IAAG;AAAA,QACvB;AAAA,QACA,oBAAsB;AAAA,UACpB,MAAQ;AAAA,UACR,SAAW;AAAA,QACb;AAAA,QACA,4BAA8B;AAAA,UAC5B,OAAS,CAAC,EAAC,MAAQ,mCAAkC,GAAG,EAAC,SAAW,EAAC,CAAC;AAAA,QACxE;AAAA,QACA,aAAe;AAAA,UACb,MAAQ,CAAC,SAAS,WAAW,WAAW,QAAQ,UAAU,UAAU,QAAQ;AAAA,QAC9E;AAAA,QACA,aAAe;AAAA,UACb,MAAQ;AAAA,UACR,OAAS,EAAC,MAAQ,SAAQ;AAAA,UAC1B,aAAe;AAAA,UACf,SAAW,CAAC;AAAA,QACd;AAAA,MACF;AAAA,MACA,MAAQ,CAAC,UAAU,SAAS;AAAA,MAC5B,YAAc;AAAA,QACZ,KAAO;AAAA,UACL,MAAQ;AAAA,UACR,QAAU;AAAA,QACZ;AAAA,QACA,SAAW;AAAA,UACT,MAAQ;AAAA,UACR,QAAU;AAAA,QACZ;AAAA,QACA,MAAQ;AAAA,UACN,MAAQ;AAAA,UACR,QAAU;AAAA,QACZ;AAAA,QACA,UAAY;AAAA,UACV,MAAQ;AAAA,QACV;AAAA,QACA,OAAS;AAAA,UACP,MAAQ;AAAA,QACV;AAAA,QACA,aAAe;AAAA,UACb,MAAQ;AAAA,QACV;AAAA,QACA,SAAW;AAAA,QACX,UAAY;AAAA,UACV,MAAQ;AAAA,UACR,SAAW;AAAA,QACb;AAAA,QACA,UAAY;AAAA,UACV,MAAQ;AAAA,UACR,OAAS;AAAA,QACX;AAAA,QACA,YAAc;AAAA,UACZ,MAAQ;AAAA,UACR,kBAAoB;AAAA,QACtB;AAAA,QACA,SAAW;AAAA,UACT,MAAQ;AAAA,QACV;AAAA,QACA,kBAAoB;AAAA,UAClB,MAAQ;AAAA,QACV;AAAA,QACA,SAAW;AAAA,UACT,MAAQ;AAAA,QACV;AAAA,QACA,kBAAoB;AAAA,UAClB,MAAQ;AAAA,QACV;AAAA,QACA,WAAa,EAAC,MAAQ,mCAAkC;AAAA,QACxD,WAAa,EAAC,MAAQ,2CAA0C;AAAA,QAChE,SAAW;AAAA,UACT,MAAQ;AAAA,UACR,QAAU;AAAA,QACZ;AAAA,QACA,iBAAmB,EAAC,MAAQ,IAAG;AAAA,QAC/B,OAAS;AAAA,UACP,OAAS,CAAC,EAAC,MAAQ,IAAG,GAAG,EAAC,MAAQ,4BAA2B,CAAC;AAAA,UAC9D,SAAW;AAAA,QACb;AAAA,QACA,UAAY,EAAC,MAAQ,mCAAkC;AAAA,QACvD,UAAY,EAAC,MAAQ,2CAA0C;AAAA,QAC/D,aAAe;AAAA,UACb,MAAQ;AAAA,UACR,SAAW;AAAA,QACb;AAAA,QACA,UAAY,EAAC,MAAQ,IAAG;AAAA,QACxB,eAAiB,EAAC,MAAQ,mCAAkC;AAAA,QAC5D,eAAiB,EAAC,MAAQ,2CAA0C;AAAA,QACpE,UAAY,EAAC,MAAQ,4BAA2B;AAAA,QAChD,sBAAwB,EAAC,MAAQ,IAAG;AAAA,QACpC,aAAe;AAAA,UACb,MAAQ;AAAA,UACR,sBAAwB,EAAC,MAAQ,IAAG;AAAA,UACpC,SAAW,CAAC;AAAA,QACd;AAAA,QACA,YAAc;AAAA,UACZ,MAAQ;AAAA,UACR,sBAAwB,EAAC,MAAQ,IAAG;AAAA,UACpC,SAAW,CAAC;AAAA,QACd;AAAA,QACA,mBAAqB;AAAA,UACnB,MAAQ;AAAA,UACR,sBAAwB,EAAC,MAAQ,IAAG;AAAA,UACpC,eAAiB,EAAC,QAAU,QAAO;AAAA,UACnC,SAAW,CAAC;AAAA,QACd;AAAA,QACA,cAAgB;AAAA,UACd,MAAQ;AAAA,UACR,sBAAwB;AAAA,YACtB,OAAS,CAAC,EAAC,MAAQ,IAAG,GAAG,EAAC,MAAQ,4BAA2B,CAAC;AAAA,UAChE;AAAA,QACF;AAAA,QACA,eAAiB,EAAC,MAAQ,IAAG;AAAA,QAC7B,OAAS;AAAA,QACT,MAAQ;AAAA,UACN,MAAQ;AAAA,UACR,OAAS;AAAA,UACT,UAAY;AAAA,UACZ,aAAe;AAAA,QACjB;AAAA,QACA,MAAQ;AAAA,UACN,OAAS;AAAA,YACP,EAAC,MAAQ,4BAA2B;AAAA,YACpC;AAAA,cACE,MAAQ;AAAA,cACR,OAAS,EAAC,MAAQ,4BAA2B;AAAA,cAC7C,UAAY;AAAA,cACZ,aAAe;AAAA,YACjB;AAAA,UACF;AAAA,QACF;AAAA,QACA,QAAU,EAAC,MAAQ,SAAQ;AAAA,QAC3B,kBAAoB,EAAC,MAAQ,SAAQ;AAAA,QACrC,iBAAmB,EAAC,MAAQ,SAAQ;AAAA,QACpC,IAAM,EAAC,MAAQ,IAAG;AAAA,QAClB,MAAQ,EAAC,MAAQ,IAAG;AAAA,QACpB,MAAQ,EAAC,MAAQ,IAAG;AAAA,QACpB,OAAS,EAAC,MAAQ,4BAA2B;AAAA,QAC7C,OAAS,EAAC,MAAQ,4BAA2B;AAAA,QAC7C,OAAS,EAAC,MAAQ,4BAA2B;AAAA,QAC7C,KAAO,EAAC,MAAQ,IAAG;AAAA,MACrB;AAAA,MACA,SAAW;AAAA,IACb;AAAA;AAAA;;;;;;;;ACrJA,QAAA,SAAA;AACA,QAAA,WAAA;AACA,QAAA,kBAAA;AACA,QAAA,mBAAA;AAEA,QAAM,oBAAoB,CAAC,aAAa;AAExC,QAAM,iBAAiB;AAEvB,QAAaC,OAAb,cAAyB,OAAA,QAAO;MAC9B,mBAAgB;AACd,cAAM,iBAAgB;AACtB,iBAAA,QAAmB,QAAQ,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;AACvD,YAAI,KAAK,KAAK;AAAe,eAAK,WAAW,gBAAA,OAAa;MAC5D;MAEA,wBAAqB;AACnB,cAAM,sBAAqB;AAC3B,YAAI,CAAC,KAAK,KAAK;AAAM;AACrB,cAAM,aAAa,KAAK,KAAK,QACzB,KAAK,gBAAgB,kBAAkB,iBAAiB,IACxD;AACJ,aAAK,cAAc,YAAY,gBAAgB,KAAK;AACpD,aAAK,KAAK,+BAA+B,IAAI;MAC/C;MAEA,cAAW;AACT,eAAQ,KAAK,KAAK,cAChB,MAAM,YAAW,MAAO,KAAK,UAAU,cAAc,IAAI,iBAAiB;MAC9E;;AApBF,YAAA,MAAAA;AAuBA,WAAO,UAAU,UAAUA;AAC3B,WAAO,QAAQ,MAAMA;AACrB,WAAO,eAAe,SAAS,cAAc,EAAC,OAAO,KAAI,CAAC;AAE1D,YAAA,UAAeA;AA0Bf,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAU,EAAA,CAAA;AAIlB,QAAA,YAAA;AAAQ,WAAA,eAAA,SAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAC,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAI,EAAA,CAAA;AAAQ,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAO,EAAA,CAAA;AACnD,QAAA,qBAAA;AAAQ,WAAA,eAAA,SAAA,mBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,mBAAA;IAAO,EAAA,CAAA;AACf,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,mBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAO,EAAA,CAAA;;;;;;;;;;ACpEf,QAAsB,cAAtB,MAAiC;;AAAjC,YAAA,cAAA;AAOa,YAAA,aAAa;AAE1B,QAAa,OAAb,cAA0B,YAAW;MAEnC,YAAY,GAAS;AACnB,cAAK;AACL,YAAI,CAAC,QAAA,WAAW,KAAK,CAAC;AAAG,gBAAM,IAAI,MAAM,0CAA0C;AACnF,aAAK,MAAM;MACb;MAEA,WAAQ;AACN,eAAO,KAAK;MACd;MAEA,WAAQ;AACN,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,EAAC,CAAC,KAAK,GAAG,GAAG,EAAC;MACvB;;AAlBF,YAAA,OAAA;AAqBA,QAAa,QAAb,cAA2B,YAAW;MAKpC,YAAY,MAAkC;AAC5C,cAAK;AACL,aAAK,SAAS,OAAO,SAAS,WAAW,CAAC,IAAI,IAAI;MACpD;MAEA,WAAQ;AACN,eAAO,KAAK;MACd;MAEA,WAAQ;AACN,YAAI,KAAK,OAAO,SAAS;AAAG,iBAAO;AACnC,cAAM,OAAO,KAAK,OAAO,CAAC;AAC1B,eAAO,SAAS,MAAM,SAAS;MACjC;MAEA,IAAI,MAAG;;AACL,gBAAO,KAAC,KAAK,UAAI,QAAA,OAAA,SAAA,KAAT,KAAK,OAAS,KAAK,OAAO,OAAO,CAAC,GAAW,MAAgB,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;MACrF;MAEA,IAAI,QAAK;;AACP,gBAAO,KAAC,KAAK,YAAM,QAAA,OAAA,SAAA,KAAX,KAAK,SAAW,KAAK,OAAO,OAAO,CAAC,OAAkB,MAAK;AACjE,cAAI,aAAa;AAAM,kBAAM,EAAE,GAAG,KAAK,MAAM,EAAE,GAAG,KAAK,KAAK;AAC5D,iBAAO;QACT,GAAG,CAAA,CAAE;MACP;;AA7BF,YAAA,QAAA;AAwCa,YAAA,MAAM,IAAI,MAAM,EAAE;AAI/B,aAAgB,EAAE,SAA+B,MAAe;AAC9D,YAAM,OAAmB,CAAC,KAAK,CAAC,CAAC;AACjC,UAAI,IAAI;AACR,aAAO,IAAI,KAAK,QAAQ;AACtB,mBAAW,MAAM,KAAK,CAAC,CAAC;AACxB,aAAK,KAAK,KAAK,EAAE,CAAC,CAAC;MACrB;AACA,aAAO,IAAI,MAAM,IAAI;IACvB;AARA,YAAA,IAAA;AAUA,QAAM,OAAO,IAAI,MAAM,GAAG;AAE1B,aAAgB,IAAI,SAA+B,MAA4B;AAC7E,YAAM,OAAmB,CAAC,cAAc,KAAK,CAAC,CAAC,CAAC;AAChD,UAAI,IAAI;AACR,aAAO,IAAI,KAAK,QAAQ;AACtB,aAAK,KAAK,IAAI;AACd,mBAAW,MAAM,KAAK,CAAC,CAAC;AACxB,aAAK,KAAK,MAAM,cAAc,KAAK,EAAE,CAAC,CAAC,CAAC;MAC1C;AACA,eAAS,IAAI;AACb,aAAO,IAAI,MAAM,IAAI;IACvB;AAVA,YAAA,MAAA;AAYA,aAAgB,WAAW,MAAkB,KAAuB;AAClE,UAAI,eAAe;AAAO,aAAK,KAAK,GAAG,IAAI,MAAM;eACxC,eAAe;AAAM,aAAK,KAAK,GAAG;;AACtC,aAAK,KAAK,YAAY,GAAG,CAAC;IACjC;AAJA,YAAA,aAAA;AAMA,aAAS,SAAS,MAAgB;AAChC,UAAI,IAAI;AACR,aAAO,IAAI,KAAK,SAAS,GAAG;AAC1B,YAAI,KAAK,CAAC,MAAM,MAAM;AACpB,gBAAM,MAAM,eAAe,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;AACnD,cAAI,QAAQ,QAAW;AACrB,iBAAK,OAAO,IAAI,GAAG,GAAG,GAAG;AACzB;UACF;AACA,eAAK,GAAG,IAAI;QACd;AACA;MACF;IACF;AAEA,aAAS,eAAe,GAAa,GAAW;AAC9C,UAAI,MAAM;AAAM,eAAO;AACvB,UAAI,MAAM;AAAM,eAAO;AACvB,UAAI,OAAO,KAAK,UAAU;AACxB,YAAI,aAAa,QAAQ,EAAE,EAAE,SAAS,CAAC,MAAM;AAAK;AAClD,YAAI,OAAO,KAAK;AAAU,iBAAO,GAAG,EAAE,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC;AACtD,YAAI,EAAE,CAAC,MAAM;AAAK,iBAAO,EAAE,MAAM,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC;AACnD;MACF;AACA,UAAI,OAAO,KAAK,YAAY,EAAE,CAAC,MAAM,OAAO,EAAE,aAAa;AAAO,eAAO,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC3F;IACF;AAEA,aAAgB,UAAU,IAAU,IAAQ;AAC1C,aAAO,GAAG,SAAQ,IAAK,KAAK,GAAG,SAAQ,IAAK,KAAK,MAAM,EAAE,GAAG,EAAE;IAChE;AAFA,YAAA,YAAA;AAKA,aAAS,YAAY,GAA+C;AAClE,aAAO,OAAO,KAAK,YAAY,OAAO,KAAK,aAAa,MAAM,OAC1D,IACA,cAAc,MAAM,QAAQ,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,CAAC;IACtD;AAEA,aAAgB,UAAU,GAAU;AAClC,aAAO,IAAI,MAAM,cAAc,CAAC,CAAC;IACnC;AAFA,YAAA,YAAA;AAIA,aAAgB,cAAc,GAAU;AACtC,aAAO,KAAK,UAAU,CAAC,EACpB,QAAQ,WAAW,SAAS,EAC5B,QAAQ,WAAW,SAAS;IACjC;AAJA,YAAA,gBAAA;AAMA,aAAgB,YAAY,KAA2B;AACrD,aAAO,OAAO,OAAO,YAAY,QAAA,WAAW,KAAK,GAAG,IAAI,IAAI,MAAM,IAAI,GAAG,EAAE,IAAI,KAAK,GAAG;IACzF;AAFA,YAAA,cAAA;AAKA,aAAgB,iBAAiB,KAA2B;AAC1D,UAAI,OAAO,OAAO,YAAY,QAAA,WAAW,KAAK,GAAG,GAAG;AAClD,eAAO,IAAI,MAAM,GAAG,GAAG,EAAE;MAC3B;AACA,YAAM,IAAI,MAAM,iCAAiC,GAAG,iCAAiC;IACvF;AALA,YAAA,mBAAA;AAOA,aAAgB,WAAW,IAAU;AACnC,aAAO,IAAI,MAAM,GAAG,SAAQ,CAAE;IAChC;AAFA,YAAA,aAAA;;;;;;;;;;ACtKA,QAAA,SAAA;AAeA,QAAM,aAAN,cAAyB,MAAK;MAE5B,YAAY,MAAoB;AAC9B,cAAM,uBAAuB,IAAI,cAAc;AAC/C,aAAK,QAAQ,KAAK;MACpB;;AAwBF,QAAY;AAAZ,KAAA,SAAYC,iBAAc;AACxB,MAAAA,gBAAAA,gBAAA,SAAA,IAAA,CAAA,IAAA;AACA,MAAAA,gBAAAA,gBAAA,WAAA,IAAA,CAAA,IAAA;IACF,GAHY,mBAAc,QAAA,iBAAd,iBAAc,CAAA,EAAA;AASb,YAAA,WAAW;MACtB,OAAO,IAAI,OAAA,KAAK,OAAO;MACvB,KAAK,IAAI,OAAA,KAAK,KAAK;MACnB,KAAK,IAAI,OAAA,KAAK,KAAK;;AAGrB,QAAa,QAAb,MAAkB;MAKhB,YAAY,EAAC,UAAU,OAAM,IAAkB,CAAA,GAAE;AAJ9B,aAAA,SAA2C,CAAA;AAK5D,aAAK,YAAY;AACjB,aAAK,UAAU;MACjB;MAEA,OAAO,cAA2B;AAChC,eAAO,wBAAwB,OAAA,OAAO,eAAe,KAAK,KAAK,YAAY;MAC7E;MAEA,KAAK,QAAc;AACjB,eAAO,IAAI,OAAA,KAAK,KAAK,SAAS,MAAM,CAAC;MACvC;MAEU,SAAS,QAAc;AAC/B,cAAM,KAAK,KAAK,OAAO,MAAM,KAAK,KAAK,WAAW,MAAM;AACxD,eAAO,GAAG,MAAM,GAAG,GAAG,OAAO;MAC/B;MAEQ,WAAW,QAAc;;AAC/B,cAAI,MAAA,KAAA,KAAK,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,eAAS,QAAA,OAAA,SAAA,SAAA,GAAE,IAAI,MAAM,MAAM,KAAK,aAAa,CAAC,KAAK,UAAU,IAAI,MAAM,GAAI;AAC3F,gBAAM,IAAI,MAAM,oBAAoB,MAAM,gCAAgC;QAC5E;AACA,eAAQ,KAAK,OAAO,MAAM,IAAI,EAAC,QAAQ,OAAO,EAAC;MACjD;;AA5BF,YAAA,QAAA;AAoCA,QAAa,iBAAb,cAAoC,OAAA,KAAI;MAKtC,YAAY,QAAgB,SAAe;AACzC,cAAM,OAAO;AACb,aAAK,SAAS;MAChB;MAEA,SAAS,OAAkB,EAAC,UAAU,UAAS,GAAY;AACzD,aAAK,QAAQ;AACb,aAAK,aAAY,GAAA,OAAA,MAAK,IAAI,OAAA,KAAK,QAAQ,CAAC,IAAI,SAAS;MACvD;;AAbF,YAAA,iBAAA;AAoBA,QAAM,QAAO,GAAA,OAAA;AAEb,QAAa,aAAb,cAAgC,MAAK;MAKnC,YAAY,MAAuB;AACjC,cAAM,IAAI;AALO,aAAA,UAAuB,CAAA;AAMxC,aAAK,SAAS,KAAK;AACnB,aAAK,OAAO,EAAC,GAAG,MAAM,IAAI,KAAK,QAAQ,OAAO,OAAA,IAAG;MACnD;MAEA,MAAG;AACD,eAAO,KAAK;MACd;MAEA,KAAK,QAAc;AACjB,eAAO,IAAI,eAAe,QAAQ,KAAK,SAAS,MAAM,CAAC;MACzD;MAEA,MAAM,cAAuC,OAAgB;;AAC3D,YAAI,MAAM,QAAQ;AAAW,gBAAM,IAAI,MAAM,sCAAsC;AACnF,cAAM,OAAO,KAAK,OAAO,YAAY;AACrC,cAAM,EAAC,OAAM,IAAI;AACjB,cAAM,YAAW,KAAA,MAAM,SAAG,QAAA,OAAA,SAAA,KAAI,MAAM;AACpC,YAAI,KAAK,KAAK,QAAQ,MAAM;AAC5B,YAAI,IAAI;AACN,gBAAM,QAAQ,GAAG,IAAI,QAAQ;AAC7B,cAAI;AAAO,mBAAO;QACpB,OAAO;AACL,eAAK,KAAK,QAAQ,MAAM,IAAI,oBAAI,IAAG;QACrC;AACA,WAAG,IAAI,UAAU,IAAI;AAErB,cAAM,IAAI,KAAK,OAAO,MAAM,MAAM,KAAK,OAAO,MAAM,IAAI,CAAA;AACxD,cAAM,YAAY,EAAE;AACpB,UAAE,SAAS,IAAI,MAAM;AACrB,aAAK,SAAS,OAAO,EAAC,UAAU,QAAQ,UAAS,CAAC;AAClD,eAAO;MACT;MAEA,SAAS,QAAgB,UAAiB;AACxC,cAAM,KAAK,KAAK,QAAQ,MAAM;AAC9B,YAAI,CAAC;AAAI;AACT,eAAO,GAAG,IAAI,QAAQ;MACxB;MAEA,UAAU,WAAiB,SAAuC,KAAK,SAAO;AAC5E,eAAO,KAAK,cAAc,QAAQ,CAAC,SAAwB;AACzD,cAAI,KAAK,cAAc;AAAW,kBAAM,IAAI,MAAM,kBAAkB,IAAI,gBAAgB;AACxF,kBAAO,GAAA,OAAA,KAAI,SAAS,GAAG,KAAK,SAAS;QACvC,CAAC;MACH;MAEA,UACE,SAAuC,KAAK,SAC5C,YACA,SAAiD;AAEjD,eAAO,KAAK,cACV,QACA,CAAC,SAAwB;AACvB,cAAI,KAAK,UAAU;AAAW,kBAAM,IAAI,MAAM,kBAAkB,IAAI,gBAAgB;AACpF,iBAAO,KAAK,MAAM;QACpB,GACA,YACA,OAAO;MAEX;MAEQ,cACN,QACA,WACA,aAA8B,CAAA,GAC9B,SAAiD;AAEjD,YAAI,OAAa,OAAA;AACjB,mBAAW,UAAU,QAAQ;AAC3B,gBAAM,KAAK,OAAO,MAAM;AACxB,cAAI,CAAC;AAAI;AACT,gBAAM,UAAW,WAAW,MAAM,IAAI,WAAW,MAAM,KAAK,oBAAI,IAAG;AACnE,aAAG,QAAQ,CAAC,SAAwB;AAClC,gBAAI,QAAQ,IAAI,IAAI;AAAG;AACvB,oBAAQ,IAAI,MAAM,eAAe,OAAO;AACxC,gBAAI,IAAI,UAAU,IAAI;AACtB,gBAAI,GAAG;AACL,oBAAM,MAAM,KAAK,KAAK,MAAM,QAAA,SAAS,MAAM,QAAA,SAAS;AACpD,sBAAO,GAAA,OAAA,KAAI,IAAI,GAAG,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,EAAE;YACtD,WAAY,IAAI,YAAO,QAAP,YAAO,SAAA,SAAP,QAAU,IAAI,GAAI;AAChC,sBAAO,GAAA,OAAA,KAAI,IAAI,GAAG,CAAC,GAAG,KAAK,KAAK,EAAE;YACpC,OAAO;AACL,oBAAM,IAAI,WAAW,IAAI;YAC3B;AACA,oBAAQ,IAAI,MAAM,eAAe,SAAS;UAC5C,CAAC;QACH;AACA,eAAO;MACT;;AAhGF,YAAA,aAAA;;;;;;;;;;ACpHA,QAAA,SAAA;AACA,QAAA,UAAA;AAEA,QAAA,SAAA;AAAQ,WAAA,eAAA,SAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAC,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAW,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAU,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAI,EAAA,CAAA;AACxE,QAAA,UAAA;AAAQ,WAAA,eAAA,SAAA,SAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAK,EAAA,CAAA;AAAc,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAU,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAc,EAAA,CAAA;AAAkB,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAQ,EAAA,CAAA;AAQlE,YAAA,YAAY;MACvB,IAAI,IAAI,OAAA,MAAM,GAAG;MACjB,KAAK,IAAI,OAAA,MAAM,IAAI;MACnB,IAAI,IAAI,OAAA,MAAM,GAAG;MACjB,KAAK,IAAI,OAAA,MAAM,IAAI;MACnB,IAAI,IAAI,OAAA,MAAM,KAAK;MACnB,KAAK,IAAI,OAAA,MAAM,KAAK;MACpB,KAAK,IAAI,OAAA,MAAM,GAAG;MAClB,IAAI,IAAI,OAAA,MAAM,IAAI;MAClB,KAAK,IAAI,OAAA,MAAM,IAAI;MACnB,KAAK,IAAI,OAAA,MAAM,GAAG;;AAGpB,QAAe,OAAf,MAAmB;MAGjB,gBAAa;AACX,eAAO;MACT;MAEA,cAAc,QAAmB,YAAqB;AACpD,eAAO;MACT;;AAOF,QAAM,MAAN,cAAkB,KAAI;MACpB,YACmB,SACA,MACT,KAAc;AAEtB,cAAK;AAJY,aAAA,UAAA;AACA,aAAA,OAAA;AACT,aAAA,MAAA;MAGV;MAEA,OAAO,EAAC,KAAK,GAAE,GAAY;AACzB,cAAM,UAAU,MAAM,QAAA,SAAS,MAAM,KAAK;AAC1C,cAAM,MAAM,KAAK,QAAQ,SAAY,KAAK,MAAM,KAAK,GAAG;AACxD,eAAO,GAAG,OAAO,IAAI,KAAK,IAAI,GAAG,GAAG,MAAM;MAC5C;MAEA,cAAc,OAAkB,WAAoB;AAClD,YAAI,CAAC,MAAM,KAAK,KAAK,GAAG;AAAG;AAC3B,YAAI,KAAK;AAAK,eAAK,MAAM,aAAa,KAAK,KAAK,OAAO,SAAS;AAChE,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,eAAe,OAAA,cAAc,KAAK,IAAI,QAAQ,CAAA;MAC5D;;AAGF,QAAM,SAAN,cAAqB,KAAI;MACvB,YACW,KACF,KACU,aAAqB;AAEtC,cAAK;AAJI,aAAA,MAAA;AACF,aAAA,MAAA;AACU,aAAA,cAAA;MAGnB;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,GAAG,KAAK,GAAG,MAAM,KAAK,GAAG,MAAM;MACxC;MAEA,cAAc,OAAkB,WAAoB;AAClD,YAAI,KAAK,eAAe,OAAA,QAAQ,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,KAAK;AAAa;AAC3E,aAAK,MAAM,aAAa,KAAK,KAAK,OAAO,SAAS;AAClD,eAAO;MACT;MAEA,IAAI,QAAK;AACP,cAAM,QAAQ,KAAK,eAAe,OAAA,OAAO,CAAA,IAAK,EAAC,GAAG,KAAK,IAAI,MAAK;AAChE,eAAO,aAAa,OAAO,KAAK,GAAG;MACrC;;AAGF,QAAM,WAAN,cAAuB,OAAM;MAC3B,YACE,KACiB,IACjB,KACA,aAAqB;AAErB,cAAM,KAAK,KAAK,WAAW;AAJV,aAAA,KAAA;MAKnB;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,GAAG,KAAK,GAAG,IAAI,KAAK,EAAE,KAAK,KAAK,GAAG,MAAM;MAClD;;AAGF,QAAM,QAAN,cAAoB,KAAI;MAEtB,YAAqB,OAAW;AAC9B,cAAK;AADc,aAAA,QAAA;AADZ,aAAA,QAAmB,CAAA;MAG5B;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,GAAG,KAAK,KAAK,MAAM;MAC5B;;AAGF,QAAM,QAAN,cAAoB,KAAI;MAEtB,YAAqB,OAAY;AAC/B,cAAK;AADc,aAAA,QAAA;AADZ,aAAA,QAAmB,CAAA;MAG5B;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,cAAM,QAAQ,KAAK,QAAQ,IAAI,KAAK,KAAK,KAAK;AAC9C,eAAO,QAAQ,KAAK,MAAM;MAC5B;;AAGF,QAAM,QAAN,cAAoB,KAAI;MACtB,YAAqB,OAAW;AAC9B,cAAK;AADc,aAAA,QAAA;MAErB;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,SAAS,KAAK,KAAK,MAAM;MAClC;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,MAAM;MACpB;;AAGF,QAAM,UAAN,cAAsB,KAAI;MACxB,YAAoB,MAAc;AAChC,cAAK;AADa,aAAA,OAAA;MAEpB;MAEA,OAAO,EAAC,GAAE,GAAY;AACpB,eAAO,GAAG,KAAK,IAAI,MAAM;MAC3B;MAEA,gBAAa;AACX,eAAO,GAAG,KAAK,IAAI,KAAK,OAAO;MACjC;MAEA,cAAc,OAAkB,WAAoB;AAClD,aAAK,OAAO,aAAa,KAAK,MAAM,OAAO,SAAS;AACpD,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,gBAAgB,OAAA,cAAc,KAAK,KAAK,QAAQ,CAAA;MAC9D;;AAGF,QAAe,aAAf,cAAkC,KAAI;MACpC,YAAqB,QAAqB,CAAA,GAAE;AAC1C,cAAK;AADc,aAAA,QAAA;MAErB;MAEA,OAAO,MAAe;AACpB,eAAO,KAAK,MAAM,OAAO,CAAC,MAAM,MAAM,OAAO,EAAE,OAAO,IAAI,GAAG,EAAE;MACjE;MAEA,gBAAa;AACX,cAAM,EAAC,MAAK,IAAI;AAChB,YAAI,IAAI,MAAM;AACd,eAAO,KAAK;AACV,gBAAM,IAAI,MAAM,CAAC,EAAE,cAAa;AAChC,cAAI,MAAM,QAAQ,CAAC;AAAG,kBAAM,OAAO,GAAG,GAAG,GAAG,CAAC;mBACpC;AAAG,kBAAM,CAAC,IAAI;;AAClB,kBAAM,OAAO,GAAG,CAAC;QACxB;AACA,eAAO,MAAM,SAAS,IAAI,OAAO;MACnC;MAEA,cAAc,OAAkB,WAAoB;AAClD,cAAM,EAAC,MAAK,IAAI;AAChB,YAAI,IAAI,MAAM;AACd,eAAO,KAAK;AAEV,gBAAM,IAAI,MAAM,CAAC;AACjB,cAAI,EAAE,cAAc,OAAO,SAAS;AAAG;AACvC,wBAAc,OAAO,EAAE,KAAK;AAC5B,gBAAM,OAAO,GAAG,CAAC;QACnB;AACA,eAAO,MAAM,SAAS,IAAI,OAAO;MACnC;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,MAAM,OAAO,CAAC,OAAkB,MAAM,SAAS,OAAO,EAAE,KAAK,GAAG,CAAA,CAAE;MAChF;;AAOF,QAAe,YAAf,cAAiC,WAAU;MACzC,OAAO,MAAe;AACpB,eAAO,MAAM,KAAK,KAAK,MAAM,OAAO,IAAI,IAAI,MAAM,KAAK;MACzD;;AAGF,QAAM,OAAN,cAAmB,WAAU;;AAE7B,QAAM,OAAN,cAAmB,UAAS;;AACV,SAAA,OAAO;AAGzB,QAAM,KAAN,MAAM,YAAW,UAAS;MAGxB,YACU,WACR,OAAmB;AAEnB,cAAM,KAAK;AAHH,aAAA,YAAA;MAIV;MAEA,OAAO,MAAe;AACpB,YAAI,OAAO,MAAM,KAAK,SAAS,MAAM,MAAM,OAAO,IAAI;AACtD,YAAI,KAAK;AAAM,kBAAQ,UAAU,KAAK,KAAK,OAAO,IAAI;AACtD,eAAO;MACT;MAEA,gBAAa;AACX,cAAM,cAAa;AACnB,cAAM,OAAO,KAAK;AAClB,YAAI,SAAS;AAAM,iBAAO,KAAK;AAC/B,YAAI,IAAI,KAAK;AACb,YAAI,GAAG;AACL,gBAAM,KAAK,EAAE,cAAa;AAC1B,cAAI,KAAK,OAAO,MAAM,QAAQ,EAAE,IAAI,IAAI,KAAK,EAAE,IAAK;QACtD;AACA,YAAI,GAAG;AACL,cAAI,SAAS;AAAO,mBAAO,aAAa,MAAK,IAAI,EAAE;AACnD,cAAI,KAAK,MAAM;AAAQ,mBAAO;AAC9B,iBAAO,IAAI,IAAG,IAAI,IAAI,GAAG,aAAa,MAAK,CAAC,CAAC,IAAI,EAAE,KAAK;QAC1D;AACA,YAAI,SAAS,SAAS,CAAC,KAAK,MAAM;AAAQ,iBAAO;AACjD,eAAO;MACT;MAEA,cAAc,OAAkB,WAAoB;;AAClD,aAAK,QAAO,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,cAAc,OAAO,SAAS;AACrD,YAAI,EAAE,MAAM,cAAc,OAAO,SAAS,KAAK,KAAK;AAAO;AAC3D,aAAK,YAAY,aAAa,KAAK,WAAW,OAAO,SAAS;AAC9D,eAAO;MACT;MAEA,IAAI,QAAK;AACP,cAAM,QAAQ,MAAM;AACpB,qBAAa,OAAO,KAAK,SAAS;AAClC,YAAI,KAAK;AAAM,mBAAS,OAAO,KAAK,KAAK,KAAK;AAC9C,eAAO;MACT;;AA7CgB,OAAA,OAAO;AAoDzB,QAAe,MAAf,cAA2B,UAAS;;AAClB,QAAA,OAAO;AAGzB,QAAM,UAAN,cAAsB,IAAG;MACvB,YAAoB,WAAe;AACjC,cAAK;AADa,aAAA,YAAA;MAEpB;MAEA,OAAO,MAAe;AACpB,eAAO,OAAO,KAAK,SAAS,MAAM,MAAM,OAAO,IAAI;MACrD;MAEA,cAAc,OAAkB,WAAoB;AAClD,YAAI,CAAC,MAAM,cAAc,OAAO,SAAS;AAAG;AAC5C,aAAK,YAAY,aAAa,KAAK,WAAW,OAAO,SAAS;AAC9D,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,SAAS,MAAM,OAAO,KAAK,UAAU,KAAK;MACnD;;AAGF,QAAM,WAAN,cAAuB,IAAG;MACxB,YACmB,SACA,MACA,MACA,IAAY;AAE7B,cAAK;AALY,aAAA,UAAA;AACA,aAAA,OAAA;AACA,aAAA,OAAA;AACA,aAAA,KAAA;MAGnB;MAEA,OAAO,MAAe;AACpB,cAAM,UAAU,KAAK,MAAM,QAAA,SAAS,MAAM,KAAK;AAC/C,cAAM,EAAC,MAAM,MAAM,GAAE,IAAI;AACzB,eAAO,OAAO,OAAO,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE,KAAK,IAAI,QAAQ,MAAM,OAAO,IAAI;MACxF;MAEA,IAAI,QAAK;AACP,cAAM,QAAQ,aAAa,MAAM,OAAO,KAAK,IAAI;AACjD,eAAO,aAAa,OAAO,KAAK,EAAE;MACpC;;AAGF,QAAM,UAAN,cAAsB,IAAG;MACvB,YACmB,MACA,SACA,MACT,UAAc;AAEtB,cAAK;AALY,aAAA,OAAA;AACA,aAAA,UAAA;AACA,aAAA,OAAA;AACT,aAAA,WAAA;MAGV;MAEA,OAAO,MAAe;AACpB,eAAO,OAAO,KAAK,OAAO,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,QAAQ,MAAM,MAAM,OAAO,IAAI;MAC9F;MAEA,cAAc,OAAkB,WAAoB;AAClD,YAAI,CAAC,MAAM,cAAc,OAAO,SAAS;AAAG;AAC5C,aAAK,WAAW,aAAa,KAAK,UAAU,OAAO,SAAS;AAC5D,eAAO;MACT;MAEA,IAAI,QAAK;AACP,eAAO,SAAS,MAAM,OAAO,KAAK,SAAS,KAAK;MAClD;;AAGF,QAAM,OAAN,cAAmB,UAAS;MAE1B,YACS,MACA,MACA,OAAe;AAEtB,cAAK;AAJE,aAAA,OAAA;AACA,aAAA,OAAA;AACA,aAAA,QAAA;MAGT;MAEA,OAAO,MAAe;AACpB,cAAM,SAAS,KAAK,QAAQ,WAAW;AACvC,eAAO,GAAG,MAAM,YAAY,KAAK,IAAI,IAAI,KAAK,IAAI,MAAM,MAAM,OAAO,IAAI;MAC3E;;AAZgB,SAAA,OAAO;AAezB,QAAM,SAAN,cAAqB,WAAU;MAG7B,OAAO,MAAe;AACpB,eAAO,YAAY,MAAM,OAAO,IAAI;MACtC;;AAJgB,WAAA,OAAO;AAOzB,QAAM,MAAN,cAAkB,UAAS;MAIzB,OAAO,MAAe;AACpB,YAAI,OAAO,QAAQ,MAAM,OAAO,IAAI;AACpC,YAAI,KAAK;AAAO,kBAAQ,KAAK,MAAM,OAAO,IAAI;AAC9C,YAAI,KAAK;AAAS,kBAAQ,KAAK,QAAQ,OAAO,IAAI;AAClD,eAAO;MACT;MAEA,gBAAa;;AACX,cAAM,cAAa;AACnB,SAAA,KAAA,KAAK,WAAK,QAAA,OAAA,SAAA,SAAA,GAAE,cAAa;AACzB,SAAA,KAAA,KAAK,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,cAAa;AAC3B,eAAO;MACT;MAEA,cAAc,OAAkB,WAAoB;;AAClD,cAAM,cAAc,OAAO,SAAS;AACpC,SAAA,KAAA,KAAK,WAAK,QAAA,OAAA,SAAA,SAAA,GAAE,cAAc,OAAO,SAAS;AAC1C,SAAA,KAAA,KAAK,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,cAAc,OAAO,SAAS;AAC5C,eAAO;MACT;MAEA,IAAI,QAAK;AACP,cAAM,QAAQ,MAAM;AACpB,YAAI,KAAK;AAAO,mBAAS,OAAO,KAAK,MAAM,KAAK;AAChD,YAAI,KAAK;AAAS,mBAAS,OAAO,KAAK,QAAQ,KAAK;AACpD,eAAO;MACT;;AAOF,QAAM,QAAN,cAAoB,UAAS;MAE3B,YAAqB,OAAW;AAC9B,cAAK;AADc,aAAA,QAAA;MAErB;MAEA,OAAO,MAAe;AACpB,eAAO,SAAS,KAAK,KAAK,MAAM,MAAM,OAAO,IAAI;MACnD;;AAPgB,UAAA,OAAO;AAUzB,QAAM,UAAN,cAAsB,UAAS;MAE7B,OAAO,MAAe;AACpB,eAAO,YAAY,MAAM,OAAO,IAAI;MACtC;;AAHgB,YAAA,OAAO;AAiCzB,QAAa,UAAb,MAAoB;MASlB,YAAY,UAAsB,OAAuB,CAAA,GAAE;AANlD,aAAA,UAA0B,CAAA;AAElB,aAAA,eAAyB,CAAA;AACzB,aAAA,aAAwB,CAAA;AAIvC,aAAK,OAAO,EAAC,GAAG,MAAM,IAAI,KAAK,QAAQ,OAAO,GAAE;AAChD,aAAK,YAAY;AACjB,aAAK,SAAS,IAAI,QAAA,MAAM,EAAC,QAAQ,SAAQ,CAAC;AAC1C,aAAK,SAAS,CAAC,IAAI,KAAI,CAAE;MAC3B;MAEA,WAAQ;AACN,eAAO,KAAK,MAAM,OAAO,KAAK,IAAI;MACpC;;MAGA,KAAK,QAAc;AACjB,eAAO,KAAK,OAAO,KAAK,MAAM;MAChC;;MAGA,UAAU,QAAc;AACtB,eAAO,KAAK,UAAU,KAAK,MAAM;MACnC;;MAGA,WAAW,cAAuC,OAAgB;AAChE,cAAM,OAAO,KAAK,UAAU,MAAM,cAAc,KAAK;AACrD,cAAM,KAAK,KAAK,QAAQ,KAAK,MAAM,MAAM,KAAK,QAAQ,KAAK,MAAM,IAAI,oBAAI,IAAG;AAC5E,WAAG,IAAI,IAAI;AACX,eAAO;MACT;MAEA,cAAc,QAAgB,UAAiB;AAC7C,eAAO,KAAK,UAAU,SAAS,QAAQ,QAAQ;MACjD;;;MAIA,UAAU,WAAe;AACvB,eAAO,KAAK,UAAU,UAAU,WAAW,KAAK,OAAO;MACzD;MAEA,YAAS;AACP,eAAO,KAAK,UAAU,UAAU,KAAK,OAAO;MAC9C;MAEQ,KACN,SACA,cACA,KACA,UAAkB;AAElB,cAAM,OAAO,KAAK,OAAO,OAAO,YAAY;AAC5C,YAAI,QAAQ,UAAa;AAAU,eAAK,WAAW,KAAK,GAAG,IAAI;AAC/D,aAAK,UAAU,IAAI,IAAI,SAAS,MAAM,GAAG,CAAC;AAC1C,eAAO;MACT;;MAGA,MAAM,cAA6B,KAAe,WAAmB;AACnE,eAAO,KAAK,KAAK,QAAA,SAAS,OAAO,cAAc,KAAK,SAAS;MAC/D;;MAGA,IAAI,cAA6B,KAAgB,WAAmB;AAClE,eAAO,KAAK,KAAK,QAAA,SAAS,KAAK,cAAc,KAAK,SAAS;MAC7D;;MAGA,IAAI,cAA6B,KAAgB,WAAmB;AAClE,eAAO,KAAK,KAAK,QAAA,SAAS,KAAK,cAAc,KAAK,SAAS;MAC7D;;MAGA,OAAO,KAAW,KAAe,aAAqB;AACpD,eAAO,KAAK,UAAU,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC;MACzD;;MAGA,IAAI,KAAW,KAAa;AAC1B,eAAO,KAAK,UAAU,IAAI,SAAS,KAAK,QAAA,UAAU,KAAK,GAAG,CAAC;MAC7D;;MAGA,KAAK,GAAmB;AACtB,YAAI,OAAO,KAAK;AAAY,YAAC;iBACpB,MAAM,OAAA;AAAK,eAAK,UAAU,IAAI,QAAQ,CAAC,CAAC;AACjD,eAAO;MACT;;MAGA,UAAU,WAA+C;AACvD,cAAM,OAAmB,CAAC,GAAG;AAC7B,mBAAW,CAAC,KAAK,KAAK,KAAK,WAAW;AACpC,cAAI,KAAK,SAAS;AAAG,iBAAK,KAAK,GAAG;AAClC,eAAK,KAAK,GAAG;AACb,cAAI,QAAQ,SAAS,KAAK,KAAK,KAAK;AAClC,iBAAK,KAAK,GAAG;AACb,aAAA,GAAA,OAAA,YAAW,MAAM,KAAK;UACxB;QACF;AACA,aAAK,KAAK,GAAG;AACb,eAAO,IAAI,OAAA,MAAM,IAAI;MACvB;;MAGA,GAAG,WAA2B,UAAkB,UAAgB;AAC9D,aAAK,WAAW,IAAI,GAAG,SAAS,CAAC;AAEjC,YAAI,YAAY,UAAU;AACxB,eAAK,KAAK,QAAQ,EAAE,KAAI,EAAG,KAAK,QAAQ,EAAE,MAAK;QACjD,WAAW,UAAU;AACnB,eAAK,KAAK,QAAQ,EAAE,MAAK;QAC3B,WAAW,UAAU;AACnB,gBAAM,IAAI,MAAM,0CAA0C;QAC5D;AACA,eAAO;MACT;;MAGA,OAAO,WAAyB;AAC9B,eAAO,KAAK,UAAU,IAAI,GAAG,SAAS,CAAC;MACzC;;MAGA,OAAI;AACF,eAAO,KAAK,UAAU,IAAI,KAAI,CAAE;MAClC;;MAGA,QAAK;AACH,eAAO,KAAK,cAAc,IAAI,IAAI;MACpC;MAEQ,KAAK,MAAW,SAAe;AACrC,aAAK,WAAW,IAAI;AACpB,YAAI;AAAS,eAAK,KAAK,OAAO,EAAE,OAAM;AACtC,eAAO;MACT;;MAGA,IAAI,WAAiB,SAAe;AAClC,eAAO,KAAK,KAAK,IAAI,QAAQ,SAAS,GAAG,OAAO;MAClD;;MAGA,SACE,cACA,MACA,IACA,SACA,UAAgB,KAAK,KAAK,MAAM,QAAA,SAAS,MAAM,QAAA,SAAS,KAAG;AAE3D,cAAM,OAAO,KAAK,OAAO,OAAO,YAAY;AAC5C,eAAO,KAAK,KAAK,IAAI,SAAS,SAAS,MAAM,MAAM,EAAE,GAAG,MAAM,QAAQ,IAAI,CAAC;MAC7E;;MAGA,MACE,cACA,UACA,SACA,UAAgB,QAAA,SAAS,OAAK;AAE9B,cAAM,OAAO,KAAK,OAAO,OAAO,YAAY;AAC5C,YAAI,KAAK,KAAK,KAAK;AACjB,gBAAM,MAAM,oBAAoB,OAAA,OAAO,WAAW,KAAK,IAAI,QAAQ,QAAQ;AAC3E,iBAAO,KAAK,SAAS,MAAM,IAAG,GAAA,OAAA,KAAI,GAAG,WAAW,CAAC,MAAK;AACpD,iBAAK,IAAI,OAAM,GAAA,OAAA,KAAI,GAAG,IAAI,CAAC,GAAG;AAC9B,oBAAQ,IAAI;UACd,CAAC;QACH;AACA,eAAO,KAAK,KAAK,IAAI,QAAQ,MAAM,SAAS,MAAM,QAAQ,GAAG,MAAM,QAAQ,IAAI,CAAC;MAClF;;;MAIA,MACE,cACA,KACA,SACA,UAAgB,KAAK,KAAK,MAAM,QAAA,SAAS,MAAM,QAAA,SAAS,OAAK;AAE7D,YAAI,KAAK,KAAK,eAAe;AAC3B,iBAAO,KAAK,MAAM,eAAc,GAAA,OAAA,iBAAgB,GAAG,KAAK,OAAO;QACjE;AACA,cAAM,OAAO,KAAK,OAAO,OAAO,YAAY;AAC5C,eAAO,KAAK,KAAK,IAAI,QAAQ,MAAM,SAAS,MAAM,GAAG,GAAG,MAAM,QAAQ,IAAI,CAAC;MAC7E;;MAGA,SAAM;AACJ,eAAO,KAAK,cAAc,GAAG;MAC/B;;MAGA,MAAM,OAAW;AACf,eAAO,KAAK,UAAU,IAAI,MAAM,KAAK,CAAC;MACxC;;MAGA,MAAM,OAAY;AAChB,eAAO,KAAK,UAAU,IAAI,MAAM,KAAK,CAAC;MACxC;;MAGA,OAAO,OAAuB;AAC5B,cAAM,OAAO,IAAI,OAAM;AACvB,aAAK,WAAW,IAAI;AACpB,aAAK,KAAK,KAAK;AACf,YAAI,KAAK,MAAM,WAAW;AAAG,gBAAM,IAAI,MAAM,wCAAwC;AACrF,eAAO,KAAK,cAAc,MAAM;MAClC;;MAGA,IAAI,SAAgB,WAA+B,aAAmB;AACpE,YAAI,CAAC,aAAa,CAAC;AAAa,gBAAM,IAAI,MAAM,8CAA8C;AAC9F,cAAM,OAAO,IAAI,IAAG;AACpB,aAAK,WAAW,IAAI;AACpB,aAAK,KAAK,OAAO;AACjB,YAAI,WAAW;AACb,gBAAM,QAAQ,KAAK,KAAK,GAAG;AAC3B,eAAK,YAAY,KAAK,QAAQ,IAAI,MAAM,KAAK;AAC7C,oBAAU,KAAK;QACjB;AACA,YAAI,aAAa;AACf,eAAK,YAAY,KAAK,UAAU,IAAI,QAAO;AAC3C,eAAK,KAAK,WAAW;QACvB;AACA,eAAO,KAAK,cAAc,OAAO,OAAO;MAC1C;;MAGA,MAAM,OAAW;AACf,eAAO,KAAK,UAAU,IAAI,MAAM,KAAK,CAAC;MACxC;;MAGA,MAAM,MAAc,WAAkB;AACpC,aAAK,aAAa,KAAK,KAAK,OAAO,MAAM;AACzC,YAAI;AAAM,eAAK,KAAK,IAAI,EAAE,SAAS,SAAS;AAC5C,eAAO;MACT;;MAGA,SAAS,WAAkB;AACzB,cAAM,MAAM,KAAK,aAAa,IAAG;AACjC,YAAI,QAAQ;AAAW,gBAAM,IAAI,MAAM,sCAAsC;AAC7E,cAAM,UAAU,KAAK,OAAO,SAAS;AACrC,YAAI,UAAU,KAAM,cAAc,UAAa,YAAY,WAAY;AACrE,gBAAM,IAAI,MAAM,mCAAmC,OAAO,OAAO,SAAS,WAAW;QACvF;AACA,aAAK,OAAO,SAAS;AACrB,eAAO;MACT;;MAGA,KAAK,MAAY,OAAa,OAAA,KAAK,OAAiB,UAAgB;AAClE,aAAK,WAAW,IAAI,KAAK,MAAM,MAAM,KAAK,CAAC;AAC3C,YAAI;AAAU,eAAK,KAAK,QAAQ,EAAE,QAAO;AACzC,eAAO;MACT;;MAGA,UAAO;AACL,eAAO,KAAK,cAAc,IAAI;MAChC;MAEA,SAAS,IAAI,GAAC;AACZ,eAAO,MAAM,GAAG;AACd,eAAK,MAAM,cAAa;AACxB,eAAK,MAAM,cAAc,KAAK,MAAM,OAAO,KAAK,UAAU;QAC5D;MACF;MAEQ,UAAU,MAAc;AAC9B,aAAK,UAAU,MAAM,KAAK,IAAI;AAC9B,eAAO;MACT;MAEQ,WAAW,MAAoB;AACrC,aAAK,UAAU,MAAM,KAAK,IAAI;AAC9B,aAAK,OAAO,KAAK,IAAI;MACvB;MAEQ,cAAc,IAAsB,IAAqB;AAC/D,cAAM,IAAI,KAAK;AACf,YAAI,aAAa,MAAO,MAAM,aAAa,IAAK;AAC9C,eAAK,OAAO,IAAG;AACf,iBAAO;QACT;AACA,cAAM,IAAI,MAAM,0BAA0B,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,GAAG;MACrF;MAEQ,UAAU,MAAe;AAC/B,cAAM,IAAI,KAAK;AACf,YAAI,EAAE,aAAa,KAAK;AACtB,gBAAM,IAAI,MAAM,8BAA8B;QAChD;AACA,aAAK,YAAY,EAAE,OAAO;AAC1B,eAAO;MACT;MAEA,IAAY,QAAK;AACf,eAAO,KAAK,OAAO,CAAC;MACtB;MAEA,IAAY,YAAS;AACnB,cAAM,KAAK,KAAK;AAChB,eAAO,GAAG,GAAG,SAAS,CAAC;MACzB;MAEA,IAAY,UAAU,MAAgB;AACpC,cAAM,KAAK,KAAK;AAChB,WAAG,GAAG,SAAS,CAAC,IAAI;MACtB;;AAjUF,YAAA,UAAA;AAwUA,aAAS,SAAS,OAAkB,MAAe;AACjD,iBAAW,KAAK;AAAM,cAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,KAAK,CAAC,KAAK;AAC/D,aAAO;IACT;AAEA,aAAS,aAAa,OAAkB,MAAc;AACpD,aAAO,gBAAgB,OAAA,cAAc,SAAS,OAAO,KAAK,KAAK,IAAI;IACrE;AAGA,aAAS,aAAa,MAAgB,OAAkB,WAAoB;AAC1E,UAAI,gBAAgB,OAAA;AAAM,eAAO,YAAY,IAAI;AACjD,UAAI,CAAC,YAAY,IAAI;AAAG,eAAO;AAC/B,aAAO,IAAI,OAAA,MACT,KAAK,OAAO,OAAO,CAAC,OAAmB,MAAwB;AAC7D,YAAI,aAAa,OAAA;AAAM,cAAI,YAAY,CAAC;AACxC,YAAI,aAAa,OAAA;AAAO,gBAAM,KAAK,GAAG,EAAE,MAAM;;AACzC,gBAAM,KAAK,CAAC;AACjB,eAAO;MACT,GAAG,CAAA,CAAE,CAAC;AAGR,eAAS,YAAY,GAAO;AAC1B,cAAM,IAAI,UAAU,EAAE,GAAG;AACzB,YAAI,MAAM,UAAa,MAAM,EAAE,GAAG,MAAM;AAAG,iBAAO;AAClD,eAAO,MAAM,EAAE,GAAG;AAClB,eAAO;MACT;AAEA,eAAS,YAAY,GAAW;AAC9B,eACE,aAAa,OAAA,SACb,EAAE,OAAO,KACP,CAAC,MAAM,aAAa,OAAA,QAAQ,MAAM,EAAE,GAAG,MAAM,KAAK,UAAU,EAAE,GAAG,MAAM,MAAS;MAGtF;IACF;AAEA,aAAS,cAAc,OAAkB,MAAe;AACtD,iBAAW,KAAK;AAAM,cAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,KAAK,CAAC,KAAK;IACjE;AAGA,aAAgB,IAAI,GAAkB;AACpC,aAAO,OAAO,KAAK,aAAa,OAAO,KAAK,YAAY,MAAM,OAAO,CAAC,KAAI,GAAA,OAAA,MAAK,IAAI,CAAC,CAAC;IACvF;AAFA,YAAA,MAAA;AAIA,QAAM,UAAU,QAAQ,QAAA,UAAU,GAAG;AAGrC,aAAgB,OAAO,MAAY;AACjC,aAAO,KAAK,OAAO,OAAO;IAC5B;AAFA,YAAA,MAAA;AAIA,QAAM,SAAS,QAAQ,QAAA,UAAU,EAAE;AAGnC,aAAgB,MAAM,MAAY;AAChC,aAAO,KAAK,OAAO,MAAM;IAC3B;AAFA,YAAA,KAAA;AAMA,aAAS,QAAQ,IAAQ;AACvB,aAAO,CAAC,GAAG,MAAO,MAAM,OAAA,MAAM,IAAI,MAAM,OAAA,MAAM,KAAI,GAAA,OAAA,KAAI,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC;IAC9E;AAEA,aAAS,IAAI,GAAO;AAClB,aAAO,aAAa,OAAA,OAAO,KAAI,GAAA,OAAA,MAAK,CAAC;IACvC;;;;;;;;;;ACj1BA,QAAA,YAAA;AACA,QAAA,SAAA;AAIA,aAAgB,OAAkC,KAAQ;AACxD,YAAM,OAA0B,CAAA;AAChC,iBAAW,QAAQ;AAAK,aAAK,IAAI,IAAI;AACrC,aAAO;IACT;AAJA,YAAA,SAAA;AAMA,aAAgB,kBAAkB,IAAe,QAAiB;AAChE,UAAI,OAAO,UAAU;AAAW,eAAO;AACvC,UAAI,OAAO,KAAK,MAAM,EAAE,WAAW;AAAG,eAAO;AAC7C,wBAAkB,IAAI,MAAM;AAC5B,aAAO,CAAC,eAAe,QAAQ,GAAG,KAAK,MAAM,GAAG;IAClD;AALA,YAAA,oBAAA;AAOA,aAAgB,kBAAkB,IAAe,SAAoB,GAAG,QAAM;AAC5E,YAAM,EAAC,MAAM,MAAAC,MAAI,IAAI;AACrB,UAAI,CAAC,KAAK;AAAc;AACxB,UAAI,OAAO,WAAW;AAAW;AACjC,YAAM,QAAQA,MAAK,MAAM;AACzB,iBAAW,OAAO,QAAQ;AACxB,YAAI,CAAC,MAAM,GAAG;AAAG,0BAAgB,IAAI,qBAAqB,GAAG,GAAG;MAClE;IACF;AARA,YAAA,oBAAA;AAUA,aAAgB,eACd,QACA,OAAyC;AAEzC,UAAI,OAAO,UAAU;AAAW,eAAO,CAAC;AACxC,iBAAW,OAAO;AAAQ,YAAI,MAAM,GAAG;AAAG,iBAAO;AACjD,aAAO;IACT;AAPA,YAAA,iBAAA;AASA,aAAgB,qBAAqB,QAAmB,OAAsB;AAC5E,UAAI,OAAO,UAAU;AAAW,eAAO,CAAC;AACxC,iBAAW,OAAO;AAAQ,YAAI,QAAQ,UAAU,MAAM,IAAI,GAAG;AAAG,iBAAO;AACvE,aAAO;IACT;AAJA,YAAA,uBAAA;AAMA,aAAgB,eACd,EAAC,cAAc,WAAU,GACzB,QACA,SACA,OAAsB;AAEtB,UAAI,CAAC,OAAO;AACV,YAAI,OAAO,UAAU,YAAY,OAAO,UAAU;AAAW,iBAAO;AACpE,YAAI,OAAO,UAAU;AAAU,kBAAO,GAAA,UAAA,KAAI,MAAM;MAClD;AACA,cAAO,GAAA,UAAA,KAAI,YAAY,GAAG,UAAU,IAAG,GAAA,UAAA,aAAY,OAAO,CAAC;IAC7D;AAXA,YAAA,iBAAA;AAaA,aAAgB,iBAAiB,KAAW;AAC1C,aAAO,oBAAoB,mBAAmB,GAAG,CAAC;IACpD;AAFA,YAAA,mBAAA;AAIA,aAAgB,eAAe,KAAoB;AACjD,aAAO,mBAAmB,kBAAkB,GAAG,CAAC;IAClD;AAFA,YAAA,iBAAA;AAIA,aAAgB,kBAAkB,KAAoB;AACpD,UAAI,OAAO,OAAO;AAAU,eAAO,GAAG,GAAG;AACzC,aAAO,IAAI,QAAQ,MAAM,IAAI,EAAE,QAAQ,OAAO,IAAI;IACpD;AAHA,YAAA,oBAAA;AAKA,aAAgB,oBAAoB,KAAW;AAC7C,aAAO,IAAI,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;IACnD;AAFA,YAAA,sBAAA;AAIA,aAAgB,SAAY,IAAaC,IAAiB;AACxD,UAAI,MAAM,QAAQ,EAAE,GAAG;AACrB,mBAAW,KAAK;AAAI,UAAAA,GAAE,CAAC;MACzB,OAAO;AACL,QAAAA,GAAE,EAAE;MACN;IACF;AANA,YAAA,WAAA;AAwBA,aAAS,mBAA4C,EACnD,YACA,aACA,aACA,aAAY,GACS;AACrB,aAAO,CAAC,KAAK,MAAM,IAAI,WAAU;AAC/B,cAAM,MACJ,OAAO,SACH,OACA,cAAc,UAAA,QACb,gBAAgB,UAAA,OAAO,WAAW,KAAK,MAAM,EAAE,IAAI,YAAY,KAAK,MAAM,EAAE,GAAG,MAChF,gBAAgB,UAAA,QACf,YAAY,KAAK,IAAI,IAAI,GAAG,QAC7B,YAAY,MAAM,EAAE;AAC1B,eAAO,WAAW,UAAA,QAAQ,EAAE,eAAe,UAAA,QAAQ,aAAa,KAAK,GAAG,IAAI;MAC9E;IACF;AAOa,YAAA,iBAAiC;MAC5C,OAAO,mBAAmB;QACxB,YAAY,CAAC,KAAK,MAAM,OACtB,IAAI,IAAG,GAAA,UAAA,KAAI,EAAE,gBAAgB,IAAI,kBAAkB,MAAK;AACtD,cAAI,IACF,GAAA,UAAA,KAAI,IAAI,aACR,MAAM,IAAI,OAAO,IAAI,IAAI,GACzB,MAAM,IAAI,OAAO,KAAI,GAAA,UAAA,KAAI,EAAE,QAAQ,EAAE,MAAK,GAAA,UAAA,mBAAkB,EAAE,KAAK,IAAI,GAAG,CAAC;QAE/E,CAAC;QACH,aAAa,CAAC,KAAK,MAAM,OACvB,IAAI,IAAG,GAAA,UAAA,KAAI,EAAE,aAAa,MAAK;AAC7B,cAAI,SAAS,MAAM;AACjB,gBAAI,OAAO,IAAI,IAAI;UACrB,OAAO;AACL,gBAAI,OAAO,KAAI,GAAA,UAAA,KAAI,EAAE,QAAQ;AAC7B,yBAAa,KAAK,IAAI,IAAI;UAC5B;QACF,CAAC;QACH,aAAa,CAAC,MAAM,OAAQ,SAAS,OAAO,OAAO,EAAC,GAAG,MAAM,GAAG,GAAE;QAClE,cAAc;OACf;MACD,OAAO,mBAAmB;QACxB,YAAY,CAAC,KAAK,MAAM,OACtB,IAAI,IAAG,GAAA,UAAA,KAAI,EAAE,gBAAgB,IAAI,kBAAkB,MACjD,IAAI,OAAO,KAAI,GAAA,UAAA,KAAI,IAAI,sBAAsB,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,IAAI,EAAE,CAAC;QAElF,aAAa,CAAC,KAAK,MAAM,OACvB,IAAI,IAAG,GAAA,UAAA,KAAI,EAAE,aAAa,MACxB,IAAI,OAAO,IAAI,SAAS,OAAO,QAAO,GAAA,UAAA,KAAI,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,IAAI,EAAE,CAAC;QAE/E,aAAa,CAAC,MAAM,OAAQ,SAAS,OAAO,OAAO,KAAK,IAAI,MAAM,EAAE;QACpE,cAAc,CAAC,KAAK,UAAU,IAAI,IAAI,SAAS,KAAK;OACrD;;AAGH,aAAgB,qBAAqB,KAAc,IAAwB;AACzE,UAAI,OAAO;AAAM,eAAO,IAAI,IAAI,SAAS,IAAI;AAC7C,YAAM,QAAQ,IAAI,IAAI,UAAS,GAAA,UAAA,MAAK;AACpC,UAAI,OAAO;AAAW,qBAAa,KAAK,OAAO,EAAE;AACjD,aAAO;IACT;AALA,YAAA,uBAAA;AAOA,aAAgB,aAAa,KAAc,OAAa,IAA0B;AAChF,aAAO,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,IAAI,QAAO,GAAA,UAAA,KAAI,KAAK,IAAG,GAAA,UAAA,aAAY,CAAC,CAAC,IAAI,IAAI,CAAC;IAC/E;AAFA,YAAA,eAAA;AAIA,QAAM,WAAoC,CAAA;AAE1C,aAAgB,QAAQ,KAAcA,IAAiB;AACrD,aAAO,IAAI,WAAW,QAAQ;QAC5B,KAAKA;QACL,MAAM,SAASA,GAAE,IAAI,MAAM,SAASA,GAAE,IAAI,IAAI,IAAI,OAAA,MAAMA,GAAE,IAAI;OAC/D;IACH;AALA,YAAA,UAAA;AAOA,QAAY;AAAZ,KAAA,SAAYC,OAAI;AACd,MAAAA,MAAAA,MAAA,KAAA,IAAA,CAAA,IAAA;AACA,MAAAA,MAAAA,MAAA,KAAA,IAAA,CAAA,IAAA;IACF,GAHY,SAAI,QAAA,OAAJ,OAAI,CAAA,EAAA;AAKhB,aAAgB,aACd,UACA,cACA,kBAA0B;AAG1B,UAAI,oBAAoB,UAAA,MAAM;AAC5B,cAAM,WAAW,iBAAiB,KAAK;AACvC,eAAO,mBACH,YACE,GAAA,UAAA,WAAU,QAAQ,YAClB,GAAA,UAAA,YAAW,QAAQ,YACrB,YACA,GAAA,UAAA,WAAU,QAAQ,MAClB,GAAA,UAAA,WAAU,QAAQ;MACxB;AACA,aAAO,oBAAmB,GAAA,UAAA,aAAY,QAAQ,EAAE,SAAQ,IAAK,MAAM,kBAAkB,QAAQ;IAC/F;AAjBA,YAAA,eAAA;AAmBA,aAAgB,gBACd,IACA,KACA,OAAwB,GAAG,KAAK,cAAY;AAE5C,UAAI,CAAC;AAAM;AACX,YAAM,gBAAgB,GAAG;AACzB,UAAI,SAAS;AAAM,cAAM,IAAI,MAAM,GAAG;AACtC,SAAG,KAAK,OAAO,KAAK,GAAG;IACzB;AATA,YAAA,kBAAA;;;;;;;;;AC3MA,QAAA,YAAA;AAEA,QAAM,QAAQ;;MAEZ,MAAM,IAAI,UAAA,KAAK,MAAM;;;MAErB,QAAQ,IAAI,UAAA,KAAK,QAAQ;;MACzB,cAAc,IAAI,UAAA,KAAK,cAAc;MACrC,YAAY,IAAI,UAAA,KAAK,YAAY;MACjC,oBAAoB,IAAI,UAAA,KAAK,oBAAoB;MACjD,UAAU,IAAI,UAAA,KAAK,UAAU;;MAC7B,gBAAgB,IAAI,UAAA,KAAK,gBAAgB;;;MAEzC,SAAS,IAAI,UAAA,KAAK,SAAS;;MAC3B,QAAQ,IAAI,UAAA,KAAK,QAAQ;;MACzB,MAAM,IAAI,UAAA,KAAK,MAAM;;MAErB,MAAM,IAAI,UAAA,KAAK,MAAM;MACrB,OAAO,IAAI,UAAA,KAAK,OAAO;;MAEvB,MAAM,IAAI,UAAA,KAAK,MAAM;MACrB,SAAS,IAAI,UAAA,KAAK,SAAS;MAC3B,SAAS,IAAI,UAAA,KAAK,SAAS;MAC3B,UAAU,IAAI,UAAA,KAAK,UAAU;;AAG/B,YAAA,UAAe;;;;;;;;;;ACxBf,QAAA,YAAA;AAEA,QAAA,SAAA;AACA,QAAA,UAAA;AAEa,YAAA,eAAuC;MAClD,SAAS,CAAC,EAAC,QAAO,OAAM,GAAA,UAAA,kBAAiB,OAAO;;AAGrC,YAAA,oBAA4C;MACvD,SAAS,CAAC,EAAC,SAAS,WAAU,MAC5B,cACI,GAAA,UAAA,QAAO,OAAO,qBAAqB,UAAU,cAC7C,GAAA,UAAA,QAAO,OAAO;;AAStB,aAAgB,YACd,KACA,QAAgC,QAAA,cAChC,YACA,mBAA2B;AAE3B,YAAM,EAAC,GAAE,IAAI;AACb,YAAM,EAAC,KAAK,eAAe,UAAS,IAAI;AACxC,YAAM,SAAS,gBAAgB,KAAK,OAAO,UAAU;AACrD,UAAI,sBAAiB,QAAjB,sBAAiB,SAAjB,oBAAsB,iBAAiB,WAAY;AACrD,iBAAS,KAAK,MAAM;MACtB,OAAO;AACL,qBAAa,KAAI,GAAA,UAAA,MAAK,MAAM,GAAG;MACjC;IACF;AAdA,YAAA,cAAA;AAgBA,aAAgB,iBACd,KACA,QAAgC,QAAA,cAChC,YAAuB;AAEvB,YAAM,EAAC,GAAE,IAAI;AACb,YAAM,EAAC,KAAK,eAAe,UAAS,IAAI;AACxC,YAAM,SAAS,gBAAgB,KAAK,OAAO,UAAU;AACrD,eAAS,KAAK,MAAM;AACpB,UAAI,EAAE,iBAAiB,YAAY;AACjC,qBAAa,IAAI,QAAA,QAAE,OAAO;MAC5B;IACF;AAZA,YAAA,mBAAA;AAcA,aAAgB,iBAAiB,KAAc,WAAe;AAC5D,UAAI,OAAO,QAAA,QAAE,QAAQ,SAAS;AAC9B,UAAI,IAAG,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,aAAa,MAC/B,IAAI,GACF,WACA,MAAM,IAAI,QAAO,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,WAAW,SAAS,GAClD,MAAM,IAAI,OAAO,QAAA,QAAE,SAAS,IAAI,CAAC,CAClC;IAEL;AATA,YAAA,mBAAA;AAWA,aAAgB,aAAa,EAC3B,KACA,SACA,aACA,MACA,WACA,GAAE,GACc;AAEhB,UAAI,cAAc;AAAW,cAAM,IAAI,MAAM,0BAA0B;AACvE,YAAM,MAAM,IAAI,KAAK,KAAK;AAC1B,UAAI,SAAS,KAAK,WAAW,QAAA,QAAE,QAAQ,CAAC,MAAK;AAC3C,YAAI,MAAM,MAAK,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,IAAI,CAAC,GAAG;AACpC,YAAI,IAAG,GAAA,UAAA,KAAI,GAAG,+BAA+B,MAC3C,IAAI,QAAO,GAAA,UAAA,KAAI,GAAG,kBAAiB,GAAA,UAAA,WAAU,QAAA,QAAE,cAAc,GAAG,SAAS,CAAC,CAAC;AAE7E,YAAI,QAAO,GAAA,UAAA,KAAI,GAAG,gBAAe,GAAA,UAAA,OAAM,GAAG,aAAa,IAAI,OAAO,EAAE;AACpE,YAAI,GAAG,KAAK,SAAS;AACnB,cAAI,QAAO,GAAA,UAAA,KAAI,GAAG,WAAW,WAAW;AACxC,cAAI,QAAO,GAAA,UAAA,KAAI,GAAG,SAAS,IAAI;QACjC;MACF,CAAC;IACH;AAtBA,YAAA,eAAA;AAwBA,aAAS,SAAS,KAAc,QAAY;AAC1C,YAAM,MAAM,IAAI,MAAM,OAAO,MAAM;AACnC,UAAI,IACF,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,aACb,MAAM,IAAI,OAAO,QAAA,QAAE,UAAS,GAAA,UAAA,MAAK,GAAG,GAAG,IACvC,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,SAAS,GAAG,GAAG;AAE9B,UAAI,MAAK,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI;IAC3B;AAEA,aAAS,aAAa,IAAe,MAAU;AAC7C,YAAM,EAAC,KAAK,cAAc,UAAS,IAAI;AACvC,UAAI,UAAU,QAAQ;AACpB,YAAI,OAAM,GAAA,UAAA,SAAQ,GAAG,eAAuB,IAAI,IAAI,GAAG;MACzD,OAAO;AACL,YAAI,QAAO,GAAA,UAAA,KAAI,YAAY,WAAW,IAAI;AAC1C,YAAI,OAAO,KAAK;MAClB;IACF;AAEA,QAAM,IAAI;MACR,SAAS,IAAI,UAAA,KAAK,SAAS;MAC3B,YAAY,IAAI,UAAA,KAAK,YAAY;;MACjC,QAAQ,IAAI,UAAA,KAAK,QAAQ;MACzB,cAAc,IAAI,UAAA,KAAK,cAAc;MACrC,SAAS,IAAI,UAAA,KAAK,SAAS;MAC3B,QAAQ,IAAI,UAAA,KAAK,QAAQ;MACzB,cAAc,IAAI,UAAA,KAAK,cAAc;;AAGvC,aAAS,gBACP,KACA,OACA,YAAuB;AAEvB,YAAM,EAAC,aAAY,IAAI,IAAI;AAC3B,UAAI,iBAAiB;AAAO,gBAAO,GAAA,UAAA;AACnC,aAAO,YAAY,KAAK,OAAO,UAAU;IAC3C;AAEA,aAAS,YACP,KACA,OACA,aAAyB,CAAA,GAAE;AAE3B,YAAM,EAAC,KAAK,GAAE,IAAI;AAClB,YAAM,YAAyC;QAC7C,kBAAkB,IAAI,UAAU;QAChC,gBAAgB,KAAK,UAAU;;AAEjC,sBAAgB,KAAK,OAAO,SAAS;AACrC,aAAO,IAAI,OAAO,GAAG,SAAS;IAChC;AAEA,aAAS,kBAAkB,EAAC,UAAS,GAAc,EAAC,aAAY,GAAa;AAC3E,YAAM,WAAW,gBACb,GAAA,UAAA,OAAM,SAAS,IAAG,GAAA,OAAA,cAAa,cAAc,OAAA,KAAK,GAAG,CAAC,KACtD;AACJ,aAAO,CAAC,QAAA,QAAE,eAAc,GAAA,UAAA,WAAU,QAAA,QAAE,cAAc,QAAQ,CAAC;IAC7D;AAEA,aAAS,gBACP,EAAC,SAAS,IAAI,EAAC,cAAa,EAAC,GAC7B,EAAC,YAAY,aAAY,GAAa;AAEtC,UAAI,UAAU,eAAe,iBAAgB,GAAA,UAAA,OAAM,aAAa,IAAI,OAAO;AAC3E,UAAI,YAAY;AACd,mBAAU,GAAA,UAAA,OAAM,OAAO,IAAG,GAAA,OAAA,cAAa,YAAY,OAAA,KAAK,GAAG,CAAC;MAC9D;AACA,aAAO,CAAC,EAAE,YAAY,OAAO;IAC/B;AAEA,aAAS,gBACP,KACA,EAAC,QAAQ,QAAO,GAChB,WAAsC;AAEtC,YAAM,EAAC,SAAS,MAAM,aAAa,GAAE,IAAI;AACzC,YAAM,EAAC,MAAM,cAAc,cAAc,WAAU,IAAI;AACvD,gBAAU,KACR,CAAC,EAAE,SAAS,OAAO,GACnB,CAAC,EAAE,QAAQ,OAAO,UAAU,aAAa,OAAO,GAAG,IAAI,WAAU,GAAA,UAAA,MAAK,CAAC;AAEzE,UAAI,KAAK,UAAU;AACjB,kBAAU,KAAK,CAAC,EAAE,SAAS,OAAO,WAAW,aAAa,QAAQ,GAAG,IAAI,OAAO,CAAC;MACnF;AACA,UAAI,KAAK,SAAS;AAChB,kBAAU,KACR,CAAC,EAAE,QAAQ,WAAW,GACtB,CAAC,EAAE,eAAc,GAAA,UAAA,KAAI,YAAY,GAAG,UAAU,EAAE,GAChD,CAAC,QAAA,QAAE,MAAM,IAAI,CAAC;MAElB;AACA,UAAI;AAAc,kBAAU,KAAK,CAAC,EAAE,cAAc,YAAY,CAAC;IACjE;;;;;;;;;;ACrLA,QAAA,WAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AAEA,QAAM,YAAoC;MACxC,SAAS;;AAGX,aAAgB,qBAAqB,IAAa;AAChD,YAAM,EAAC,KAAK,QAAQ,aAAY,IAAI;AACpC,UAAI,WAAW,OAAO;AACpB,yBAAiB,IAAI,KAAK;MAC5B,WAAW,OAAO,UAAU,YAAY,OAAO,WAAW,MAAM;AAC9D,YAAI,OAAO,QAAA,QAAE,IAAI;MACnB,OAAO;AACL,YAAI,QAAO,GAAA,UAAA,KAAI,YAAY,WAAW,IAAI;AAC1C,YAAI,OAAO,IAAI;MACjB;IACF;AAVA,YAAA,uBAAA;AAYA,aAAgB,kBAAkB,IAAe,OAAW;AAC1D,YAAM,EAAC,KAAK,OAAM,IAAI;AACtB,UAAI,WAAW,OAAO;AACpB,YAAI,IAAI,OAAO,KAAK;AACpB,yBAAiB,EAAE;MACrB,OAAO;AACL,YAAI,IAAI,OAAO,IAAI;MACrB;IACF;AARA,YAAA,oBAAA;AAUA,aAAS,iBAAiB,IAAe,mBAA2B;AAClE,YAAM,EAAC,KAAK,KAAI,IAAI;AAEpB,YAAM,MAAuB;QAC3B;QACA,SAAS;QACT;QACA,QAAQ;QACR,YAAY;QACZ,aAAa;QACb,QAAQ,CAAA;QACR;;AAEF,OAAA,GAAA,SAAA,aAAY,KAAK,WAAW,QAAW,iBAAiB;IAC1D;;;;;;;;;;AC5CA,QAAM,aAAa,CAAC,UAAU,UAAU,WAAW,WAAW,QAAQ,UAAU,OAAO;AAIvF,QAAM,YAAyB,IAAI,IAAI,UAAU;AAEjD,aAAgB,WAAW,GAAU;AACnC,aAAO,OAAO,KAAK,YAAY,UAAU,IAAI,CAAC;IAChD;AAFA,YAAA,aAAA;AA2BA,aAAgB,WAAQ;AACtB,YAAM,SAAsE;QAC1E,QAAQ,EAAC,MAAM,UAAU,OAAO,CAAA,EAAE;QAClC,QAAQ,EAAC,MAAM,UAAU,OAAO,CAAA,EAAE;QAClC,OAAO,EAAC,MAAM,SAAS,OAAO,CAAA,EAAE;QAChC,QAAQ,EAAC,MAAM,UAAU,OAAO,CAAA,EAAE;;AAEpC,aAAO;QACL,OAAO,EAAC,GAAG,QAAQ,SAAS,MAAM,SAAS,MAAM,MAAM,KAAI;QAC3D,OAAO,CAAC,EAAC,OAAO,CAAA,EAAE,GAAG,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,MAAM;QAC9E,MAAM,EAAC,OAAO,CAAA,EAAE;QAChB,KAAK,CAAA;QACL,UAAU,CAAA;;IAEd;AAdA,YAAA,WAAA;;;;;;;;;;AC/BA,aAAgB,sBACd,EAAC,QAAQ,MAAAC,MAAI,GACb,MAAc;AAEd,YAAM,QAAQA,MAAK,MAAM,MAAM,IAAI;AACnC,aAAO,SAAS,UAAU,QAAQ,eAAe,QAAQ,KAAK;IAChE;AANA,YAAA,wBAAA;AAQA,aAAgB,eAAe,QAAyB,OAAgB;AACtE,aAAO,MAAM,MAAM,KAAK,CAAC,SAAS,cAAc,QAAQ,IAAI,CAAC;IAC/D;AAFA,YAAA,iBAAA;AAIA,aAAgB,cAAc,QAAyB,MAAU;;AAC/D,aACE,OAAO,KAAK,OAAO,MAAM,YACzB,KAAA,KAAK,WAAW,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAE,KAAK,CAAC,QAAQ,OAAO,GAAG,MAAM,MAAS;IAEvE;AALA,YAAA,gBAAA;;;;;;;;;;ACTA,QAAA,UAAA;AACA,QAAA,kBAAA;AACA,QAAA,WAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AAEA,QAAY;AAAZ,KAAA,SAAYC,WAAQ;AAClB,MAAAA,UAAAA,UAAA,SAAA,IAAA,CAAA,IAAA;AACA,MAAAA,UAAAA,UAAA,OAAA,IAAA,CAAA,IAAA;IACF,GAHY,aAAQ,QAAA,WAAR,WAAQ,CAAA,EAAA;AAKpB,aAAgB,eAAe,QAAuB;AACpD,YAAM,QAAQ,aAAa,OAAO,IAAI;AACtC,YAAM,UAAU,MAAM,SAAS,MAAM;AACrC,UAAI,SAAS;AACX,YAAI,OAAO,aAAa;AAAO,gBAAM,IAAI,MAAM,wCAAwC;MACzF,OAAO;AACL,YAAI,CAAC,MAAM,UAAU,OAAO,aAAa,QAAW;AAClD,gBAAM,IAAI,MAAM,0CAA0C;QAC5D;AACA,YAAI,OAAO,aAAa;AAAM,gBAAM,KAAK,MAAM;MACjD;AACA,aAAO;IACT;AAZA,YAAA,iBAAA;AAeA,aAAgB,aAAa,IAAuB;AAClD,YAAM,QAAmB,MAAM,QAAQ,EAAE,IAAI,KAAK,KAAK,CAAC,EAAE,IAAI,CAAA;AAC9D,UAAI,MAAM,MAAM,QAAA,UAAU;AAAG,eAAO;AACpC,YAAM,IAAI,MAAM,0CAA0C,MAAM,KAAK,GAAG,CAAC;IAC3E;AAJA,YAAA,eAAA;AAMA,aAAgB,uBAAuB,IAAkB,OAAiB;AACxE,YAAM,EAAC,KAAK,MAAM,KAAI,IAAI;AAC1B,YAAM,WAAW,cAAc,OAAO,KAAK,WAAW;AACtD,YAAM,aACJ,MAAM,SAAS,KACf,EAAE,SAAS,WAAW,KAAK,MAAM,WAAW,MAAK,GAAA,gBAAA,uBAAsB,IAAI,MAAM,CAAC,CAAC;AACrF,UAAI,YAAY;AACd,cAAM,YAAY,eAAe,OAAO,MAAM,KAAK,eAAe,SAAS,KAAK;AAChF,YAAI,GAAG,WAAW,MAAK;AACrB,cAAI,SAAS;AAAQ,uBAAW,IAAI,OAAO,QAAQ;;AAC9C,4BAAgB,EAAE;QACzB,CAAC;MACH;AACA,aAAO;IACT;AAdA,YAAA,yBAAA;AAgBA,QAAM,YAA2B,oBAAI,IAAI,CAAC,UAAU,UAAU,WAAW,WAAW,MAAM,CAAC;AAC3F,aAAS,cAAc,OAAmB,aAA+B;AACvE,aAAO,cACH,MAAM,OAAO,CAAC,MAAM,UAAU,IAAI,CAAC,KAAM,gBAAgB,WAAW,MAAM,OAAQ,IAClF,CAAA;IACN;AAEA,aAAS,WAAW,IAAkB,OAAmB,UAAoB;AAC3E,YAAM,EAAC,KAAK,MAAM,KAAI,IAAI;AAC1B,YAAM,WAAW,IAAI,IAAI,aAAY,GAAA,UAAA,YAAW,IAAI,EAAE;AACtD,YAAM,UAAU,IAAI,IAAI,YAAW,GAAA,UAAA,aAAY;AAC/C,UAAI,KAAK,gBAAgB,SAAS;AAChC,YAAI,IAAG,GAAA,UAAA,KAAI,QAAQ,iCAAiC,IAAI,QAAQ,IAAI,gBAAgB,MAClF,IACG,OAAO,OAAM,GAAA,UAAA,KAAI,IAAI,KAAK,EAC1B,OAAO,WAAU,GAAA,UAAA,YAAW,IAAI,EAAE,EAClC,GAAG,eAAe,OAAO,MAAM,KAAK,aAAa,GAAG,MAAM,IAAI,OAAO,SAAS,IAAI,CAAC,CAAC;MAE3F;AACA,UAAI,IAAG,GAAA,UAAA,KAAI,OAAO,gBAAgB;AAClC,iBAAW,KAAK,UAAU;AACxB,YAAI,UAAU,IAAI,CAAC,KAAM,MAAM,WAAW,KAAK,gBAAgB,SAAU;AACvE,6BAAmB,CAAC;QACtB;MACF;AACA,UAAI,KAAI;AACR,sBAAgB,EAAE;AAClB,UAAI,MAAK;AAET,UAAI,IAAG,GAAA,UAAA,KAAI,OAAO,kBAAkB,MAAK;AACvC,YAAI,OAAO,MAAM,OAAO;AACxB,yBAAiB,IAAI,OAAO;MAC9B,CAAC;AAED,eAAS,mBAAmB,GAAS;AACnC,gBAAQ,GAAG;UACT,KAAK;AACH,gBACG,QAAO,GAAA,UAAA,KAAI,QAAQ,mBAAmB,QAAQ,eAAe,EAC7D,OAAO,UAAS,GAAA,UAAA,UAAS,IAAI,EAAE,EAC/B,QAAO,GAAA,UAAA,KAAI,IAAI,WAAW,EAC1B,OAAO,UAAS,GAAA,UAAA,MAAK;AACxB;UACF,KAAK;AACH,gBACG,QACC,GAAA,UAAA,KAAI,QAAQ,oBAAoB,IAAI;oBAC5B,QAAQ,mBAAmB,IAAI,OAAO,IAAI,QAAQ,IAAI,GAAG,EAElE,OAAO,UAAS,GAAA,UAAA,MAAK,IAAI,EAAE;AAC9B;UACF,KAAK;AACH,gBACG,QACC,GAAA,UAAA,KAAI,QAAQ,qBAAqB,IAAI;oBAC7B,QAAQ,oBAAoB,IAAI,OAAO,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,EAErF,OAAO,UAAS,GAAA,UAAA,MAAK,IAAI,EAAE;AAC9B;UACF,KAAK;AACH,gBACG,QAAO,GAAA,UAAA,KAAI,IAAI,mBAAmB,IAAI,aAAa,IAAI,WAAW,EAClE,OAAO,SAAS,KAAK,EACrB,QAAO,GAAA,UAAA,KAAI,IAAI,kBAAkB,IAAI,QAAQ,EAC7C,OAAO,SAAS,IAAI;AACvB;UACF,KAAK;AACH,gBAAI,QAAO,GAAA,UAAA,KAAI,IAAI,cAAc,IAAI,aAAa,IAAI,YAAY;AAClE,gBAAI,OAAO,SAAS,IAAI;AACxB;UAEF,KAAK;AACH,gBACG,QACC,GAAA,UAAA,KAAI,QAAQ,oBAAoB,QAAQ;mBACjC,QAAQ,qBAAqB,IAAI,WAAW,EAEpD,OAAO,UAAS,GAAA,UAAA,MAAK,IAAI,GAAG;QACnC;MACF;IACF;AAEA,aAAS,iBAAiB,EAAC,KAAK,YAAY,mBAAkB,GAAiB,MAAU;AAEvF,UAAI,IAAG,GAAA,UAAA,KAAI,UAAU,kBAAkB,MACrC,IAAI,QAAO,GAAA,UAAA,KAAI,UAAU,IAAI,kBAAkB,KAAK,IAAI,CAAC;IAE7D;AAEA,aAAgB,cACd,UACA,MACA,YACA,UAAU,SAAS,SAAO;AAE1B,YAAM,KAAK,YAAY,SAAS,UAAU,UAAA,UAAU,KAAK,UAAA,UAAU;AACnE,UAAI;AACJ,cAAQ,UAAU;QAChB,KAAK;AACH,kBAAO,GAAA,UAAA,KAAI,IAAI,IAAI,EAAE;QACvB,KAAK;AACH,kBAAO,GAAA,UAAA,mBAAkB,IAAI;AAC7B;QACF,KAAK;AACH,kBAAO,GAAA,UAAA,KAAI,IAAI,cAAc,IAAI,kCAAkC,IAAI;AACvE;QACF,KAAK;AACH,iBAAO,SAAQ,GAAA,UAAA,OAAM,IAAI,mBAAmB,IAAI,GAAG;AACnD;QACF,KAAK;AACH,iBAAO,QAAO;AACd;QACF;AACE,kBAAO,GAAA,UAAA,YAAW,IAAI,IAAI,EAAE,IAAI,QAAQ;MAC5C;AACA,aAAO,YAAY,SAAS,UAAU,QAAO,GAAA,UAAA,KAAI,IAAI;AAErD,eAAS,QAAQ,QAAc,UAAA,KAAG;AAChC,gBAAO,GAAA,UAAA,MAAI,GAAA,UAAA,YAAW,IAAI,gBAAgB,OAAO,cAAa,GAAA,UAAA,cAAa,IAAI,MAAM,UAAA,GAAG;MAC1F;IACF;AA/BA,YAAA,gBAAA;AAiCA,aAAgB,eACd,WACA,MACA,YACA,SAAkB;AAElB,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO,cAAc,UAAU,CAAC,GAAG,MAAM,YAAY,OAAO;MAC9D;AACA,UAAI;AACJ,YAAM,SAAQ,GAAA,OAAA,QAAO,SAAS;AAC9B,UAAI,MAAM,SAAS,MAAM,QAAQ;AAC/B,cAAM,UAAS,GAAA,UAAA,YAAW,IAAI;AAC9B,eAAO,MAAM,OAAO,UAAS,GAAA,UAAA,MAAK,IAAI,OAAO,MAAM;AACnD,eAAO,MAAM;AACb,eAAO,MAAM;AACb,eAAO,MAAM;MACf,OAAO;AACL,eAAO,UAAA;MACT;AACA,UAAI,MAAM;AAAQ,eAAO,MAAM;AAC/B,iBAAW,KAAK;AAAO,gBAAO,GAAA,UAAA,KAAI,MAAM,cAAc,GAAe,MAAM,YAAY,OAAO,CAAC;AAC/F,aAAO;IACT;AAvBA,YAAA,iBAAA;AA2BA,QAAM,YAAoC;MACxC,SAAS,CAAC,EAAC,OAAM,MAAM,WAAW,MAAM;MACxC,QAAQ,CAAC,EAAC,QAAQ,YAAW,MAC3B,OAAO,UAAU,YAAW,GAAA,UAAA,YAAW,MAAM,OAAM,GAAA,UAAA,YAAW,WAAW;;AAG7E,aAAgB,gBAAgB,IAAgB;AAC9C,YAAM,MAAM,oBAAoB,EAAE;AAClC,OAAA,GAAA,SAAA,aAAY,KAAK,SAAS;IAC5B;AAHA,YAAA,kBAAA;AAKA,aAAS,oBAAoB,IAAgB;AAC3C,YAAM,EAAC,KAAK,MAAM,OAAM,IAAI;AAC5B,YAAM,cAAa,GAAA,OAAA,gBAAe,IAAI,QAAQ,MAAM;AACpD,aAAO;QACL;QACA,SAAS;QACT;QACA,QAAQ,OAAO;QACf;QACA,aAAa;QACb,cAAc;QACd,QAAQ,CAAA;QACR;;IAEJ;;;;;;;;;;ACpOA,QAAA,YAAA;AACA,QAAA,SAAA;AAEA,aAAgB,eAAe,IAAkB,IAAW;AAC1D,YAAM,EAAC,YAAY,MAAK,IAAI,GAAG;AAC/B,UAAI,OAAO,YAAY,YAAY;AACjC,mBAAW,OAAO,YAAY;AAC5B,wBAAc,IAAI,KAAK,WAAW,GAAG,EAAE,OAAO;QAChD;MACF,WAAW,OAAO,WAAW,MAAM,QAAQ,KAAK,GAAG;AACjD,cAAM,QAAQ,CAAC,KAAK,MAAc,cAAc,IAAI,GAAG,IAAI,OAAO,CAAC;MACrE;IACF;AATA,YAAA,iBAAA;AAWA,aAAS,cAAc,IAAkB,MAAuB,cAAqB;AACnF,YAAM,EAAC,KAAK,eAAe,MAAM,KAAI,IAAI;AACzC,UAAI,iBAAiB;AAAW;AAChC,YAAM,aAAY,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,aAAY,IAAI,CAAC;AAC9C,UAAI,eAAe;AACjB,SAAA,GAAA,OAAA,iBAAgB,IAAI,2BAA2B,SAAS,EAAE;AAC1D;MACF;AAEA,UAAI,aAAY,GAAA,UAAA,KAAI,SAAS;AAC7B,UAAI,KAAK,gBAAgB,SAAS;AAChC,qBAAY,GAAA,UAAA,KAAI,SAAS,OAAO,SAAS,gBAAgB,SAAS;MACpE;AAGA,UAAI,GAAG,YAAW,GAAA,UAAA,KAAI,SAAS,OAAM,GAAA,UAAA,WAAU,YAAY,CAAC,EAAE;IAChE;;;;;;;;;;AC5BA,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AACA,aAAgB,uBAAuB,KAAiB,MAAY;AAClE,YAAM,EAAC,KAAK,MAAM,GAAE,IAAI;AACxB,UAAI,GAAG,iBAAiB,KAAK,MAAM,MAAM,GAAG,KAAK,aAAa,GAAG,MAAK;AACpE,YAAI,UAAU,EAAC,kBAAiB,GAAA,UAAA,KAAI,IAAI,GAAE,GAAG,IAAI;AACjD,YAAI,MAAK;MACX,CAAC;IACH;AANA,YAAA,yBAAA;AAQA,aAAgB,iBACd,EAAC,KAAK,MAAM,IAAI,EAAC,KAAI,EAAC,GACtB,YACA,SAAa;AAEb,cAAO,GAAA,UAAA,IACL,GAAG,WAAW,IAAI,CAAC,UACjB,GAAA,UAAA,KAAI,iBAAiB,KAAK,MAAM,MAAM,KAAK,aAAa,IAAG,GAAA,UAAA,KAAI,OAAO,MAAM,IAAI,EAAE,CAAC,CACpF;IAEL;AAVA,YAAA,mBAAA;AAYA,aAAgB,kBAAkB,KAAiB,SAAa;AAC9D,UAAI,UAAU,EAAC,iBAAiB,QAAO,GAAG,IAAI;AAC9C,UAAI,MAAK;IACX;AAHA,YAAA,oBAAA;AAKA,aAAgB,YAAY,KAAY;AACtC,aAAO,IAAI,WAAW,QAAQ;;QAE5B,KAAK,OAAO,UAAU;QACtB,OAAM,GAAA,UAAA;OACP;IACH;AANA,YAAA,cAAA;AAQA,aAAgB,cAAc,KAAc,MAAY,UAAuB;AAC7E,cAAO,GAAA,UAAA,KAAI,YAAY,GAAG,CAAC,SAAS,IAAI,KAAK,QAAQ;IACvD;AAFA,YAAA,gBAAA;AAIA,aAAgB,eACd,KACA,MACA,UACA,eAAuB;AAEvB,YAAM,QAAO,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,aAAY,QAAQ,CAAC;AAC7C,aAAO,iBAAgB,GAAA,UAAA,KAAI,IAAI,OAAO,cAAc,KAAK,MAAM,QAAQ,CAAC,KAAK;IAC/E;AARA,YAAA,iBAAA;AAUA,aAAgB,iBACd,KACA,MACA,UACA,eAAuB;AAEvB,YAAM,QAAO,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,aAAY,QAAQ,CAAC;AAC7C,aAAO,iBAAgB,GAAA,UAAA,IAAG,OAAM,GAAA,UAAA,KAAI,cAAc,KAAK,MAAM,QAAQ,CAAC,CAAC,IAAI;IAC7E;AARA,YAAA,mBAAA;AAUA,aAAgB,oBAAoB,WAAqB;AACvD,aAAO,YAAY,OAAO,KAAK,SAAS,EAAE,OAAO,CAAC,MAAM,MAAM,WAAW,IAAI,CAAA;IAC/E;AAFA,YAAA,sBAAA;AAIA,aAAgB,iBAAiB,IAAe,WAAoB;AAClE,aAAO,oBAAoB,SAAS,EAAE,OACpC,CAAC,MAAM,EAAC,GAAA,OAAA,mBAAkB,IAAI,UAAU,CAAC,CAAc,CAAC;IAE5D;AAJA,YAAA,mBAAA;AAMA,aAAgB,iBACd,EAAC,YAAY,MAAM,IAAI,EAAC,KAAK,cAAc,YAAY,UAAS,GAAG,GAAE,GACrE,MACA,SACA,YAAoB;AAEpB,YAAM,gBAAgB,cAAa,GAAA,UAAA,KAAI,UAAU,KAAK,IAAI,KAAK,YAAY,GAAG,UAAU,KAAK;AAC7F,YAAM,SAAkC;QACtC,CAAC,QAAA,QAAE,eAAc,GAAA,UAAA,WAAU,QAAA,QAAE,cAAc,SAAS,CAAC;QACrD,CAAC,QAAA,QAAE,YAAY,GAAG,UAAU;QAC5B,CAAC,QAAA,QAAE,oBAAoB,GAAG,kBAAkB;QAC5C,CAAC,QAAA,QAAE,UAAU,QAAA,QAAE,QAAQ;;AAEzB,UAAI,GAAG,KAAK;AAAY,eAAO,KAAK,CAAC,QAAA,QAAE,gBAAgB,QAAA,QAAE,cAAc,CAAC;AACxE,YAAM,QAAO,GAAA,UAAA,KAAI,aAAa,KAAK,IAAI,OAAO,GAAG,MAAM,CAAC;AACxD,aAAO,YAAY,UAAA,OAAM,GAAA,UAAA,KAAI,IAAI,SAAS,OAAO,KAAK,IAAI,OAAM,GAAA,UAAA,KAAI,IAAI,IAAI,IAAI;IAClF;AAhBA,YAAA,mBAAA;AAkBA,QAAM,aAAY,GAAA,UAAA;AAElB,aAAgB,WAAW,EAAC,KAAK,IAAI,EAAC,KAAI,EAAC,GAAe,SAAe;AACvE,YAAM,IAAI,KAAK,gBAAgB,MAAM;AACrC,YAAM,EAAC,OAAM,IAAI,KAAK;AACtB,YAAM,KAAK,OAAO,SAAS,CAAC;AAE5B,aAAO,IAAI,WAAW,WAAW;QAC/B,KAAK,GAAG,SAAQ;QAChB,KAAK;QACL,OAAM,GAAA,UAAA,KAAI,OAAO,SAAS,eAAe,aAAY,GAAA,OAAA,SAAQ,KAAK,MAAM,CAAC,IAAI,OAAO,KAAK,CAAC;OAC3F;IACH;AAVA,YAAA,aAAA;AAYA,aAAgB,cAAc,KAAe;AAC3C,YAAM,EAAC,KAAK,MAAM,SAAS,GAAE,IAAI;AACjC,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,UAAI,GAAG,WAAW;AAChB,cAAM,WAAW,IAAI,IAAI,SAAS,IAAI;AACtC,sBAAc,MAAM,IAAI,OAAO,UAAU,KAAK,CAAC;AAC/C,eAAO;MACT;AACA,UAAI,IAAI,OAAO,IAAI;AACnB,oBAAc,MAAM,IAAI,MAAK,CAAE;AAC/B,aAAO;AAEP,eAAS,cAAc,UAAoB;AACzC,cAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,SAAS;AAC9C,YAAI,SAAS,KAAK,GAAG,KAAK,CAAC,MAAK;AAC9B,cAAI,UACF;YACE;YACA,UAAU;YACV,cAAc,OAAA,KAAK;aAErB,KAAK;AAEP,cAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,QAAQ;QAC7B,CAAC;MACH;IACF;AA1BA,YAAA,gBAAA;AA4BA,aAAgB,cAAc,KAAe;AAC3C,YAAM,EAAC,KAAK,QAAQ,SAAS,GAAE,IAAI;AAEnC,UAAI,CAAC,MAAM,QAAQ,MAAM;AAAG,cAAM,IAAI,MAAM,0BAA0B;AACtE,YAAM,cAAc,OAAO,KAAK,CAAC,SAAmB,GAAA,OAAA,mBAAkB,IAAI,GAAG,CAAC;AAC9E,UAAI,eAAe,CAAC,GAAG,KAAK;AAAa;AAEzC,YAAM,QAAQ,IAAI,IAAI,SAAS,KAAK;AACpC,YAAM,WAAW,IAAI,KAAK,QAAQ;AAElC,UAAI,MAAM,MACR,OAAO,QAAQ,CAAC,MAAiB,MAAa;AAC5C,cAAM,SAAS,IAAI,UACjB;UACE;UACA,YAAY;UACZ,eAAe;WAEjB,QAAQ;AAEV,YAAI,OAAO,QAAO,GAAA,UAAA,KAAI,KAAK,OAAO,QAAQ,EAAE;AAC5C,cAAM,SAAS,IAAI,oBAAoB,QAAQ,QAAQ;AAGvD,YAAI,CAAC;AAAQ,cAAI,IAAG,GAAA,UAAA,KAAI,KAAK,CAAC;MAChC,CAAC,CAAC;AAGJ,UAAI,OACF,OACA,MAAM,IAAI,MAAK,GACf,MAAM,IAAI,MAAM,IAAI,CAAC;IAEzB;AAjCA,YAAA,gBAAA;;;;;;;;;;AC5HA,QAAA,YAAA;AACA,QAAA,UAAA;AAEA,QAAA,SAAA;AACA,QAAA,WAAA;AAIA,aAAgB,iBAAiB,KAAiB,KAA2B;AAC3E,YAAM,EAAC,KAAK,SAAS,QAAQ,cAAc,GAAE,IAAI;AACjD,YAAM,cAAc,IAAI,MAAM,KAAK,GAAG,MAAM,QAAQ,cAAc,EAAE;AACpE,YAAM,YAAY,WAAW,KAAK,SAAS,WAAW;AACtD,UAAI,GAAG,KAAK,mBAAmB;AAAO,WAAG,KAAK,eAAe,aAAa,IAAI;AAE9E,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,UAAI,UACF;QACE,QAAQ;QACR,YAAY,UAAA;QACZ,eAAe,GAAG,GAAG,aAAa,IAAI,OAAO;QAC7C,cAAc;QACd,eAAe;SAEjB,KAAK;AAEP,UAAI,KAAK,OAAO,MAAM,IAAI,MAAM,IAAI,CAAC;IACvC;AAlBA,YAAA,mBAAA;AAoBA,aAAgB,gBAAgB,KAAiB,KAA0B;;AACzE,YAAM,EAAC,KAAK,SAAS,QAAQ,cAAc,OAAO,GAAE,IAAI;AACxD,wBAAkB,IAAI,GAAG;AACzB,YAAMC,YACJ,CAAC,SAAS,IAAI,UAAU,IAAI,QAAQ,KAAK,GAAG,MAAM,QAAQ,cAAc,EAAE,IAAI,IAAI;AACpF,YAAM,cAAc,WAAW,KAAK,SAASA,SAAQ;AACrD,YAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,UAAI,WAAW,OAAO,eAAe;AACrC,UAAI,IAAG,KAAA,IAAI,WAAK,QAAA,OAAA,SAAA,KAAI,KAAK;AAEzB,eAAS,kBAAe;AACtB,YAAI,IAAI,WAAW,OAAO;AACxB,sBAAW;AACX,cAAI,IAAI;AAAW,uBAAW,GAAG;AACjC,qBAAW,MAAM,IAAI,MAAK,CAAE;QAC9B,OAAO;AACL,gBAAM,WAAW,IAAI,QAAQ,cAAa,IAAK,aAAY;AAC3D,cAAI,IAAI;AAAW,uBAAW,GAAG;AACjC,qBAAW,MAAM,QAAQ,KAAK,QAAQ,CAAC;QACzC;MACF;AAEA,eAAS,gBAAa;AACpB,cAAM,WAAW,IAAI,IAAI,YAAY,IAAI;AACzC,YAAI,IACF,MAAM,aAAY,GAAA,UAAA,UAAS,GAC3B,CAAC,MACC,IAAI,OAAO,OAAO,KAAK,EAAE,IACvB,GAAA,UAAA,KAAI,CAAC,eAAe,GAAG,eAAuB,IAC9C,MAAM,IAAI,OAAO,WAAU,GAAA,UAAA,KAAI,CAAC,SAAS,GACzC,MAAM,IAAI,MAAM,CAAC,CAAC,CACnB;AAEL,eAAO;MACT;AAEA,eAAS,eAAY;AACnB,cAAM,gBAAe,GAAA,UAAA,KAAI,WAAW;AACpC,YAAI,OAAO,cAAc,IAAI;AAC7B,oBAAY,UAAA,GAAG;AACf,eAAO;MACT;AAEA,eAAS,YAAY,SAAe,IAAI,SAAQ,GAAA,UAAA,aAAY,UAAA,KAAG;AAC7D,cAAM,UAAU,GAAG,KAAK,cAAc,QAAA,QAAE,OAAO,QAAA,QAAE;AACjD,cAAM,aAAa,EAAG,aAAa,OAAO,CAAC,SAAU,IAAI,WAAW;AACpE,YAAI,OACF,QACA,GAAA,UAAA,KAAI,MAAM,IAAG,GAAA,OAAA,kBAAiB,KAAK,aAAa,SAAS,UAAU,CAAC,IACpE,IAAI,SAAS;MAEjB;AAEA,eAAS,WAAW,QAAkB;;AACpC,YAAI,IAAG,GAAA,UAAA,MAAIC,MAAA,IAAI,WAAK,QAAAA,QAAA,SAAAA,MAAI,KAAK,GAAG,MAAM;MACxC;IACF;AAxDA,YAAA,kBAAA;AA0DA,aAAS,WAAW,KAAe;AACjC,YAAM,EAAC,KAAK,MAAM,GAAE,IAAI;AACxB,UAAI,GAAG,GAAG,YAAY,MAAM,IAAI,OAAO,OAAM,GAAA,UAAA,KAAI,GAAG,UAAU,IAAI,GAAG,kBAAkB,GAAG,CAAC;IAC7F;AAEA,aAAS,QAAQ,KAAiB,MAAU;AAC1C,YAAM,EAAC,IAAG,IAAI;AACd,UAAI,IACF,GAAA,UAAA,mBAAkB,IAAI,KACtB,MAAK;AACH,YACG,OAAO,QAAA,QAAE,UAAS,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,eAAe,IAAI,MAAM,QAAA,QAAE,OAAO,WAAW,IAAI,GAAG,EACnF,OAAO,QAAA,QAAE,SAAQ,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,SAAS;AAC1C,SAAA,GAAA,SAAA,cAAa,GAAG;MAClB,GACA,MAAM,IAAI,MAAK,CAAE;IAErB;AAEA,aAAS,kBAAkB,EAAC,UAAS,GAAiB,KAA0B;AAC9E,UAAI,IAAI,SAAS,CAAC,UAAU;AAAQ,cAAM,IAAI,MAAM,8BAA8B;IACpF;AAEA,aAAS,WAAW,KAAc,SAAiB,QAAiC;AAClF,UAAI,WAAW;AAAW,cAAM,IAAI,MAAM,YAAY,OAAO,qBAAqB;AAClF,aAAO,IAAI,WACT,WACA,OAAO,UAAU,aAAa,EAAC,KAAK,OAAM,IAAI,EAAC,KAAK,QAAQ,OAAM,GAAA,UAAA,WAAU,MAAM,EAAC,CAAC;IAExF;AAEA,aAAgB,gBACd,QACA,YACA,iBAAiB,OAAK;AAGtB,aACE,CAAC,WAAW,UACZ,WAAW,KAAK,CAAC,OACf,OAAO,UACH,MAAM,QAAQ,MAAM,IACpB,OAAO,WACP,UAAU,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,MAAM,IAC5D,OAAO,UAAU,MAAO,kBAAkB,OAAO,UAAU,WAAY;IAGjF;AAhBA,YAAA,kBAAA;AAkBA,aAAgB,qBACd,EAAC,QAAQ,MAAM,MAAAC,OAAM,cAAa,GAClC,KACA,SAAe;AAGf,UAAI,MAAM,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,SAAS,OAAO,IAAI,IAAI,YAAY,SAAS;AACzF,cAAM,IAAI,MAAM,0BAA0B;MAC5C;AAEA,YAAM,OAAO,IAAI;AACjB,UAAI,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,KAAK,CAAC,QAAQ,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,GAAG,CAAC,GAAG;AAC3E,cAAM,IAAI,MAAM,2CAA2C,OAAO,KAAK,KAAK,KAAK,GAAG,CAAC,EAAE;MACzF;AAEA,UAAI,IAAI,gBAAgB;AACtB,cAAM,QAAQ,IAAI,eAAe,OAAO,OAAO,CAAC;AAChD,YAAI,CAAC,OAAO;AACV,gBAAM,MACJ,YAAY,OAAO,+BAA+B,aAAa,QAC/DA,MAAK,WAAW,IAAI,eAAe,MAAM;AAC3C,cAAI,KAAK,mBAAmB;AAAO,YAAAA,MAAK,OAAO,MAAM,GAAG;;AACnD,kBAAM,IAAI,MAAM,GAAG;QAC1B;MACF;IACF;AAzBA,YAAA,uBAAA;;;;;;;;;;AC/IA,QAAA,YAAA;AACA,QAAA,SAAA;AA6CA,aAAgB,aACd,IACA,EAAC,SAAS,YAAY,QAAQ,YAAY,eAAe,aAAY,GAAgB;AAErF,UAAI,YAAY,UAAa,WAAW,QAAW;AACjD,cAAM,IAAI,MAAM,sDAAsD;MACxE;AAEA,UAAI,YAAY,QAAW;AACzB,cAAM,MAAM,GAAG,OAAO,OAAO;AAC7B,eAAO,eAAe,SAClB;UACE,QAAQ;UACR,aAAY,GAAA,UAAA,KAAI,GAAG,UAAU,IAAG,GAAA,UAAA,aAAY,OAAO,CAAC;UACpD,eAAe,GAAG,GAAG,aAAa,IAAI,OAAO;YAE/C;UACE,QAAQ,IAAI,UAAU;UACtB,aAAY,GAAA,UAAA,KAAI,GAAG,UAAU,IAAG,GAAA,UAAA,aAAY,OAAO,CAAC,IAAG,GAAA,UAAA,aAAY,UAAU,CAAC;UAC9E,eAAe,GAAG,GAAG,aAAa,IAAI,OAAO,KAAI,GAAA,OAAA,gBAAe,UAAU,CAAC;;MAEnF;AAEA,UAAI,WAAW,QAAW;AACxB,YAAI,eAAe,UAAa,kBAAkB,UAAa,iBAAiB,QAAW;AACzF,gBAAM,IAAI,MAAM,6EAA6E;QAC/F;AACA,eAAO;UACL;UACA;UACA;UACA;;MAEJ;AAEA,YAAM,IAAI,MAAM,6CAA6C;IAC/D;AApCA,YAAA,eAAA;AAsCA,aAAgB,oBACd,WACA,IACA,EAAC,UAAU,cAAc,QAAQ,MAAM,WAAW,aAAY,GAAgB;AAE9E,UAAI,SAAS,UAAa,aAAa,QAAW;AAChD,cAAM,IAAI,MAAM,qDAAqD;MACvE;AAEA,YAAM,EAAC,IAAG,IAAI;AAEd,UAAI,aAAa,QAAW;AAC1B,cAAM,EAAC,WAAW,aAAa,KAAI,IAAI;AACvC,cAAM,WAAW,IAAI,IAAI,SAAQ,GAAA,UAAA,KAAI,GAAG,IAAI,IAAG,GAAA,UAAA,aAAY,QAAQ,CAAC,IAAI,IAAI;AAC5E,yBAAiB,QAAQ;AACzB,kBAAU,aAAY,GAAA,UAAA,OAAM,SAAS,IAAG,GAAA,OAAA,cAAa,UAAU,QAAQ,KAAK,gBAAgB,CAAC;AAC7F,kBAAU,sBAAqB,GAAA,UAAA,KAAI,QAAQ;AAC3C,kBAAU,cAAc,CAAC,GAAG,aAAa,UAAU,kBAAkB;MACvE;AAEA,UAAI,SAAS,QAAW;AACtB,cAAM,WAAW,gBAAgB,UAAA,OAAO,OAAO,IAAI,IAAI,QAAQ,MAAM,IAAI;AACzE,yBAAiB,QAAQ;AACzB,YAAI,iBAAiB;AAAW,oBAAU,eAAe;MAE3D;AAEA,UAAI;AAAW,kBAAU,YAAY;AAErC,eAAS,iBAAiB,WAAe;AACvC,kBAAU,OAAO;AACjB,kBAAU,YAAY,GAAG,YAAY;AACrC,kBAAU,YAAY,CAAA;AACtB,WAAG,oBAAoB,oBAAI,IAAG;AAC9B,kBAAU,aAAa,GAAG;AAC1B,kBAAU,YAAY,CAAC,GAAG,GAAG,WAAW,SAAS;MACnD;IACF;AArCA,YAAA,sBAAA;AAuCA,aAAgB,oBACd,WACA,EAAC,kBAAkB,aAAa,eAAe,cAAc,UAAS,GAAgB;AAEtF,UAAI,kBAAkB;AAAW,kBAAU,gBAAgB;AAC3D,UAAI,iBAAiB;AAAW,kBAAU,eAAe;AACzD,UAAI,cAAc;AAAW,kBAAU,YAAY;AACnD,gBAAU,mBAAmB;AAC7B,gBAAU,cAAc;IAC1B;AATA,YAAA,sBAAA;;;;;AC7HA,IAAAC,gCAAA;AAAA;AAAA;AAEA,QAAI,WAAW,OAAO,UAAU,SAAU,QAAQ,MAAM,IAAI;AAE1D,UAAI,OAAO,QAAQ,YAAY;AAC7B,aAAK;AACL,eAAO,CAAC;AAAA,MACV;AAEA,WAAK,KAAK,MAAM;AAChB,UAAI,MAAO,OAAO,MAAM,aAAc,KAAK,GAAG,OAAO,WAAW;AAAA,MAAC;AACjE,UAAI,OAAO,GAAG,QAAQ,WAAW;AAAA,MAAC;AAElC,gBAAU,MAAM,KAAK,MAAM,QAAQ,IAAI,MAAM;AAAA,IAC/C;AAGA,aAAS,WAAW;AAAA,MAClB,iBAAiB;AAAA,MACjB,OAAO;AAAA,MACP,UAAU;AAAA,MACV,sBAAsB;AAAA,MACtB,eAAe;AAAA,MACf,KAAK;AAAA,MACL,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,IACR;AAEA,aAAS,gBAAgB;AAAA,MACvB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAEA,aAAS,gBAAgB;AAAA,MACvB,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,mBAAmB;AAAA,MACnB,cAAc;AAAA,IAChB;AAEA,aAAS,eAAe;AAAA,MACtB,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,MACV,SAAS;AAAA,MACT,SAAS;AAAA,MACT,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,IACjB;AAGA,aAAS,UAAU,MAAM,KAAK,MAAM,QAAQ,SAAS,YAAY,eAAe,eAAe,cAAc,UAAU;AACrH,UAAI,UAAU,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,MAAM,GAAG;AACjE,YAAI,QAAQ,SAAS,YAAY,eAAe,eAAe,cAAc,QAAQ;AACrF,iBAAS,OAAO,QAAQ;AACtB,cAAI,MAAM,OAAO,GAAG;AACpB,cAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,gBAAI,OAAO,SAAS,eAAe;AACjC,uBAAS,IAAE,GAAG,IAAE,IAAI,QAAQ;AAC1B,0BAAU,MAAM,KAAK,MAAM,IAAI,CAAC,GAAG,UAAU,MAAM,MAAM,MAAM,GAAG,YAAY,SAAS,KAAK,QAAQ,CAAC;AAAA,YACzG;AAAA,UACF,WAAW,OAAO,SAAS,eAAe;AACxC,gBAAI,OAAO,OAAO,OAAO,UAAU;AACjC,uBAAS,QAAQ;AACf,0BAAU,MAAM,KAAK,MAAM,IAAI,IAAI,GAAG,UAAU,MAAM,MAAM,MAAM,cAAc,IAAI,GAAG,YAAY,SAAS,KAAK,QAAQ,IAAI;AAAA,YACjI;AAAA,UACF,WAAW,OAAO,SAAS,YAAa,KAAK,WAAW,EAAE,OAAO,SAAS,eAAgB;AACxF,sBAAU,MAAM,KAAK,MAAM,KAAK,UAAU,MAAM,KAAK,YAAY,SAAS,KAAK,MAAM;AAAA,UACvF;AAAA,QACF;AACA,aAAK,QAAQ,SAAS,YAAY,eAAe,eAAe,cAAc,QAAQ;AAAA,MACxF;AAAA,IACF;AAGA,aAAS,cAAc,KAAK;AAC1B,aAAO,IAAI,QAAQ,MAAM,IAAI,EAAE,QAAQ,OAAO,IAAI;AAAA,IACpD;AAAA;AAAA;;;;;;;;ACzFA,QAAA,SAAA;AACA,QAAA,QAAA;AACA,QAAA,WAAA;AAMA,QAAM,iBAAiB,oBAAI,IAAI;MAC7B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACD;AAED,aAAgB,UAAU,QAAmB,QAA0B,MAAI;AACzE,UAAI,OAAO,UAAU;AAAW,eAAO;AACvC,UAAI,UAAU;AAAM,eAAO,CAAC,OAAO,MAAM;AACzC,UAAI,CAAC;AAAO,eAAO;AACnB,aAAO,UAAU,MAAM,KAAK;IAC9B;AALA,YAAA,YAAA;AAOA,QAAM,eAAe,oBAAI,IAAI;MAC3B;MACA;MACA;MACA;MACA;KACD;AAED,aAAS,OAAO,QAAuB;AACrC,iBAAW,OAAO,QAAQ;AACxB,YAAI,aAAa,IAAI,GAAG;AAAG,iBAAO;AAClC,cAAM,MAAM,OAAO,GAAG;AACtB,YAAI,MAAM,QAAQ,GAAG,KAAK,IAAI,KAAK,MAAM;AAAG,iBAAO;AACnD,YAAI,OAAO,OAAO,YAAY,OAAO,GAAG;AAAG,iBAAO;MACpD;AACA,aAAO;IACT;AAEA,aAAS,UAAU,QAAuB;AACxC,UAAI,QAAQ;AACZ,iBAAW,OAAO,QAAQ;AACxB,YAAI,QAAQ;AAAQ,iBAAO;AAC3B;AACA,YAAI,eAAe,IAAI,GAAG;AAAG;AAC7B,YAAI,OAAO,OAAO,GAAG,KAAK,UAAU;AAClC,WAAA,GAAA,OAAA,UAAS,OAAO,GAAG,GAAG,CAAC,QAAS,SAAS,UAAU,GAAG,CAAE;QAC1D;AACA,YAAI,UAAU;AAAU,iBAAO;MACjC;AACA,aAAO;IACT;AAEA,aAAgB,YAAY,UAAuB,KAAK,IAAI,WAAmB;AAC7E,UAAI,cAAc;AAAO,aAAK,YAAY,EAAE;AAC5C,YAAM,IAAI,SAAS,MAAM,EAAE;AAC3B,aAAO,aAAa,UAAU,CAAC;IACjC;AAJA,YAAA,cAAA;AAMA,aAAgB,aAAa,UAAuB,GAAe;AACjE,YAAM,aAAa,SAAS,UAAU,CAAC;AACvC,aAAO,WAAW,MAAM,GAAG,EAAE,CAAC,IAAI;IACpC;AAHA,YAAA,eAAA;AAKA,QAAM,sBAAsB;AAC5B,aAAgB,YAAY,IAAsB;AAChD,aAAO,KAAK,GAAG,QAAQ,qBAAqB,EAAE,IAAI;IACpD;AAFA,YAAA,cAAA;AAIA,aAAgB,WAAW,UAAuB,QAAgB,IAAU;AAC1E,WAAK,YAAY,EAAE;AACnB,aAAO,SAAS,QAAQ,QAAQ,EAAE;IACpC;AAHA,YAAA,aAAA;AAKA,QAAM,SAAS;AAEf,aAAgB,cAAyB,QAAmB,QAAc;AACxE,UAAI,OAAO,UAAU;AAAW,eAAO,CAAA;AACvC,YAAM,EAAC,UAAU,YAAW,IAAI,KAAK;AACrC,YAAM,QAAQ,YAAY,OAAO,QAAQ,KAAK,MAAM;AACpD,YAAM,UAA0C,EAAC,IAAI,MAAK;AAC1D,YAAM,aAAa,YAAY,aAAa,OAAO,KAAK;AACxD,YAAM,YAAuB,CAAA;AAC7B,YAAM,aAA0B,oBAAI,IAAG;AAEvC,eAAS,QAAQ,EAAC,SAAS,KAAI,GAAG,CAAC,KAAK,SAAS,GAAG,kBAAiB;AACnE,YAAI,kBAAkB;AAAW;AACjC,cAAM,WAAW,aAAa;AAC9B,YAAI,cAAc,QAAQ,aAAa;AACvC,YAAI,OAAO,IAAI,QAAQ,KAAK;AAAU,wBAAc,OAAO,KAAK,MAAM,IAAI,QAAQ,CAAC;AACnF,kBAAU,KAAK,MAAM,IAAI,OAAO;AAChC,kBAAU,KAAK,MAAM,IAAI,cAAc;AACvC,gBAAQ,OAAO,IAAI;AAEnB,iBAAS,OAAkB,KAAW;AAEpC,gBAAM,WAAW,KAAK,KAAK,YAAY;AACvC,gBAAM,YAAY,cAAc,SAAS,aAAa,GAAG,IAAI,GAAG;AAChE,cAAI,WAAW,IAAI,GAAG;AAAG,kBAAM,SAAS,GAAG;AAC3C,qBAAW,IAAI,GAAG;AAClB,cAAI,WAAW,KAAK,KAAK,GAAG;AAC5B,cAAI,OAAO,YAAY;AAAU,uBAAW,KAAK,KAAK,QAAQ;AAC9D,cAAI,OAAO,YAAY,UAAU;AAC/B,6BAAiB,KAAK,SAAS,QAAQ,GAAG;UAC5C,WAAW,QAAQ,YAAY,QAAQ,GAAG;AACxC,gBAAI,IAAI,CAAC,MAAM,KAAK;AAClB,+BAAiB,KAAK,UAAU,GAAG,GAAG,GAAG;AACzC,wBAAU,GAAG,IAAI;YACnB,OAAO;AACL,mBAAK,KAAK,GAAG,IAAI;YACnB;UACF;AACA,iBAAO;QACT;AAEA,iBAAS,UAAqB,QAAe;AAC3C,cAAI,OAAO,UAAU,UAAU;AAC7B,gBAAI,CAAC,OAAO,KAAK,MAAM;AAAG,oBAAM,IAAI,MAAM,mBAAmB,MAAM,GAAG;AACtE,mBAAO,KAAK,MAAM,IAAI,MAAM,EAAE;UAChC;QACF;MACF,CAAC;AAED,aAAO;AAEP,eAAS,iBAAiB,MAAiB,MAA6B,KAAW;AACjF,YAAI,SAAS,UAAa,CAAC,MAAM,MAAM,IAAI;AAAG,gBAAM,SAAS,GAAG;MAClE;AAEA,eAAS,SAAS,KAAW;AAC3B,eAAO,IAAI,MAAM,cAAc,GAAG,oCAAoC;MACxE;IACF;AAxDA,YAAA,gBAAA;;;;;;;;;;ACnFA,QAAA,eAAA;AACA,QAAA,aAAA;AACA,QAAA,kBAAA;AACA,QAAA,aAAA;AACA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AASA,QAAA,WAAA;AASA,aAAgB,qBAAqB,IAAa;AAChD,UAAI,YAAY,EAAE,GAAG;AACnB,sBAAc,EAAE;AAChB,YAAI,kBAAkB,EAAE,GAAG;AACzB,2BAAiB,EAAE;AACnB;QACF;MACF;AACA,uBAAiB,IAAI,OAAM,GAAA,aAAA,sBAAqB,EAAE,CAAC;IACrD;AATA,YAAA,uBAAA;AAWA,aAAS,iBACP,EAAC,KAAK,cAAc,QAAQ,WAAW,KAAI,GAC3C,MAAW;AAEX,UAAI,KAAK,KAAK,KAAK;AACjB,YAAI,KAAK,eAAc,GAAA,UAAA,KAAI,QAAA,QAAE,IAAI,KAAK,QAAA,QAAE,MAAM,IAAI,UAAU,QAAQ,MAAK;AACvE,cAAI,MAAK,GAAA,UAAA,mBAAkB,cAAc,QAAQ,IAAI,CAAC,EAAE;AACxD,+BAAqB,KAAK,IAAI;AAC9B,cAAI,KAAK,IAAI;QACf,CAAC;MACH,OAAO;AACL,YAAI,KAAK,eAAc,GAAA,UAAA,KAAI,QAAA,QAAE,IAAI,KAAK,kBAAkB,IAAI,CAAC,IAAI,UAAU,QAAQ,MACjF,IAAI,KAAK,cAAc,QAAQ,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC;MAEpD;IACF;AAEA,aAAS,kBAAkB,MAAqB;AAC9C,cAAO,GAAA,UAAA,MAAK,QAAA,QAAE,YAAY,QAAQ,QAAA,QAAE,UAAU,KAAK,QAAA,QAAE,kBAAkB,KAAK,QAAA,QAAE,QAAQ,IACpF,QAAA,QAAE,IACJ,GAAG,KAAK,cAAa,GAAA,UAAA,OAAM,QAAA,QAAE,cAAc,QAAQ,UAAA,GAAG;IACxD;AAEA,aAAS,qBAAqB,KAAc,MAAqB;AAC/D,UAAI,GACF,QAAA,QAAE,QACF,MAAK;AACH,YAAI,IAAI,QAAA,QAAE,eAAc,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,YAAY,EAAE;AACxD,YAAI,IAAI,QAAA,QAAE,aAAY,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,UAAU,EAAE;AACpD,YAAI,IAAI,QAAA,QAAE,qBAAoB,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,kBAAkB,EAAE;AACpE,YAAI,IAAI,QAAA,QAAE,WAAU,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,QAAQ,EAAE;AAChD,YAAI,KAAK;AAAY,cAAI,IAAI,QAAA,QAAE,iBAAgB,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,IAAI,QAAA,QAAE,cAAc,EAAE;MACnF,GACA,MAAK;AACH,YAAI,IAAI,QAAA,QAAE,eAAc,GAAA,UAAA,MAAK;AAC7B,YAAI,IAAI,QAAA,QAAE,aAAY,GAAA,UAAA,aAAY;AAClC,YAAI,IAAI,QAAA,QAAE,qBAAoB,GAAA,UAAA,aAAY;AAC1C,YAAI,IAAI,QAAA,QAAE,UAAU,QAAA,QAAE,IAAI;AAC1B,YAAI,KAAK;AAAY,cAAI,IAAI,QAAA,QAAE,iBAAgB,GAAA,UAAA,MAAK;MACtD,CAAC;IAEL;AAEA,aAAS,iBAAiB,IAAgB;AACxC,YAAM,EAAC,QAAQ,MAAM,IAAG,IAAI;AAC5B,uBAAiB,IAAI,MAAK;AACxB,YAAI,KAAK,YAAY,OAAO;AAAU,yBAAe,EAAE;AACvD,uBAAe,EAAE;AACjB,YAAI,IAAI,QAAA,QAAE,SAAS,IAAI;AACvB,YAAI,IAAI,QAAA,QAAE,QAAQ,CAAC;AACnB,YAAI,KAAK;AAAa,yBAAe,EAAE;AACvC,wBAAgB,EAAE;AAClB,sBAAc,EAAE;MAClB,CAAC;AACD;IACF;AAEA,aAAS,eAAe,IAAgB;AAEtC,YAAM,EAAC,KAAK,aAAY,IAAI;AAC5B,SAAG,YAAY,IAAI,MAAM,cAAa,GAAA,UAAA,KAAI,YAAY,YAAY;AAClE,UAAI,IAAG,GAAA,UAAA,KAAI,GAAG,SAAS,iBAAiB,MAAM,IAAI,QAAO,GAAA,UAAA,KAAI,GAAG,SAAS,WAAU,GAAA,UAAA,aAAY,CAAC;AAChG,UAAI,IAAG,GAAA,UAAA,KAAI,GAAG,SAAS,iBAAiB,MAAM,IAAI,QAAO,GAAA,UAAA,KAAI,GAAG,SAAS,WAAU,GAAA,UAAA,aAAY,CAAC;IAClG;AAEA,aAAS,cAAc,QAAmB,MAAqB;AAC7D,YAAM,QAAQ,OAAO,UAAU,YAAY,OAAO,KAAK,QAAQ;AAC/D,aAAO,UAAU,KAAK,KAAK,UAAU,KAAK,KAAK,YAAW,GAAA,UAAA,mBAAkB,KAAK,QAAQ,UAAA;IAC3F;AAGA,aAAS,cAAc,IAAe,OAAW;AAC/C,UAAI,YAAY,EAAE,GAAG;AACnB,sBAAc,EAAE;AAChB,YAAI,kBAAkB,EAAE,GAAG;AACzB,2BAAiB,IAAI,KAAK;AAC1B;QACF;MACF;AACA,OAAA,GAAA,aAAA,mBAAkB,IAAI,KAAK;IAC7B;AAEA,aAAS,kBAAkB,EAAC,QAAQ,MAAAC,MAAI,GAAY;AAClD,UAAI,OAAO,UAAU;AAAW,eAAO,CAAC;AACxC,iBAAW,OAAO;AAAQ,YAAIA,MAAK,MAAM,IAAI,GAAG;AAAG,iBAAO;AAC1D,aAAO;IACT;AAEA,aAAS,YAAY,IAAa;AAChC,aAAO,OAAO,GAAG,UAAU;IAC7B;AAEA,aAAS,iBAAiB,IAAkB,OAAW;AACrD,YAAM,EAAC,QAAQ,KAAK,KAAI,IAAI;AAC5B,UAAI,KAAK,YAAY,OAAO;AAAU,uBAAe,EAAE;AACvD,oBAAc,EAAE;AAChB,uBAAiB,EAAE;AACnB,YAAM,YAAY,IAAI,MAAM,SAAS,QAAA,QAAE,MAAM;AAC7C,sBAAgB,IAAI,SAAS;AAE7B,UAAI,IAAI,QAAO,GAAA,UAAA,KAAI,SAAS,QAAQ,QAAA,QAAE,MAAM,EAAE;IAChD;AAEA,aAAS,cAAc,IAAgB;AACrC,OAAA,GAAA,OAAA,mBAAkB,EAAE;AACpB,2BAAqB,EAAE;IACzB;AAEA,aAAS,gBAAgB,IAAkB,WAAgB;AACzD,UAAI,GAAG,KAAK;AAAK,eAAO,eAAe,IAAI,CAAA,GAAI,OAAO,SAAS;AAC/D,YAAM,SAAQ,GAAA,WAAA,gBAAe,GAAG,MAAM;AACtC,YAAM,gBAAe,GAAA,WAAA,wBAAuB,IAAI,KAAK;AACrD,qBAAe,IAAI,OAAO,CAAC,cAAc,SAAS;IACpD;AAEA,aAAS,qBAAqB,IAAgB;AAC5C,YAAM,EAAC,QAAQ,eAAe,MAAM,MAAAA,MAAI,IAAI;AAC5C,UAAI,OAAO,QAAQ,KAAK,0BAAyB,GAAA,OAAA,sBAAqB,QAAQA,MAAK,KAAK,GAAG;AACzF,QAAAA,MAAK,OAAO,KAAK,6CAA6C,aAAa,GAAG;MAChF;IACF;AAEA,aAAS,eAAe,IAAgB;AACtC,YAAM,EAAC,QAAQ,KAAI,IAAI;AACvB,UAAI,OAAO,YAAY,UAAa,KAAK,eAAe,KAAK,cAAc;AACzE,SAAA,GAAA,OAAA,iBAAgB,IAAI,uCAAuC;MAC7D;IACF;AAEA,aAAS,cAAc,IAAgB;AACrC,YAAM,QAAQ,GAAG,OAAO,GAAG,KAAK,QAAQ;AACxC,UAAI;AAAO,WAAG,UAAS,GAAA,UAAA,YAAW,GAAG,KAAK,aAAa,GAAG,QAAQ,KAAK;IACzE;AAEA,aAAS,iBAAiB,IAAgB;AACxC,UAAI,GAAG,OAAO,UAAU,CAAC,GAAG,UAAU;AAAQ,cAAM,IAAI,MAAM,6BAA6B;IAC7F;AAEA,aAAS,eAAe,EAAC,KAAK,WAAW,QAAQ,eAAe,KAAI,GAAe;AACjF,YAAM,MAAM,OAAO;AACnB,UAAI,KAAK,aAAa,MAAM;AAC1B,YAAI,MAAK,GAAA,UAAA,KAAI,QAAA,QAAE,IAAI,eAAe,GAAG,GAAG;MAC1C,WAAW,OAAO,KAAK,YAAY,YAAY;AAC7C,cAAM,cAAa,GAAA,UAAA,OAAM,aAAa;AACtC,cAAM,WAAW,IAAI,WAAW,QAAQ,EAAC,KAAK,UAAU,KAAI,CAAC;AAC7D,YAAI,MAAK,GAAA,UAAA,KAAI,QAAA,QAAE,IAAI,kBAAkB,GAAG,KAAK,UAAU,KAAK,QAAQ,UAAU;MAChF;IACF;AAEA,aAAS,cAAc,IAAa;AAClC,YAAM,EAAC,KAAK,WAAW,cAAc,iBAAiB,KAAI,IAAI;AAC9D,UAAI,UAAU,QAAQ;AAEpB,YAAI,IACF,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,UACZ,MAAM,IAAI,OAAO,QAAA,QAAE,IAAI,GACvB,MAAM,IAAI,OAAM,GAAA,UAAA,SAAQ,eAAuB,IAAI,QAAA,QAAE,OAAO,GAAG,CAAC;MAEpE,OAAO;AACL,YAAI,QAAO,GAAA,UAAA,KAAI,YAAY,WAAW,QAAA,QAAE,OAAO;AAC/C,YAAI,KAAK;AAAa,0BAAgB,EAAE;AACxC,YAAI,QAAO,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,QAAQ;MACjC;IACF;AAEA,aAAS,gBAAgB,EAAC,KAAK,WAAW,OAAO,MAAK,GAAY;AAChE,UAAI,iBAAiB,UAAA;AAAM,YAAI,QAAO,GAAA,UAAA,KAAI,SAAS,UAAU,KAAK;AAClE,UAAI,iBAAiB,UAAA;AAAM,YAAI,QAAO,GAAA,UAAA,KAAI,SAAS,UAAU,KAAK;IACpE;AAEA,aAAS,eACP,IACA,OACA,YACA,WAAgB;AAEhB,YAAM,EAAC,KAAK,QAAQ,MAAM,WAAW,MAAM,MAAAA,MAAI,IAAI;AACnD,YAAM,EAAC,MAAK,IAAIA;AAChB,UAAI,OAAO,SAAS,KAAK,yBAAyB,EAAC,GAAA,OAAA,sBAAqB,QAAQ,KAAK,IAAI;AACvF,YAAI,MAAM,MAAM,YAAY,IAAI,QAAS,MAAM,IAAI,KAAc,UAAU,CAAC;AAC5E;MACF;AACA,UAAI,CAAC,KAAK;AAAK,yBAAiB,IAAI,KAAK;AACzC,UAAI,MAAM,MAAK;AACb,mBAAW,SAAS,MAAM;AAAO,wBAAc,KAAK;AACpD,sBAAc,MAAM,IAAI;MAC1B,CAAC;AAED,eAAS,cAAc,OAAgB;AACrC,YAAI,EAAC,GAAA,gBAAA,gBAAe,QAAQ,KAAK;AAAG;AACpC,YAAI,MAAM,MAAM;AACd,cAAI,IAAG,GAAA,WAAA,eAAc,MAAM,MAAM,MAAM,KAAK,aAAa,CAAC;AAC1D,0BAAgB,IAAI,KAAK;AACzB,cAAI,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,MAAM,QAAQ,YAAY;AAC/D,gBAAI,KAAI;AACR,aAAA,GAAA,WAAA,iBAAgB,EAAE;UACpB;AACA,cAAI,MAAK;QACX,OAAO;AACL,0BAAgB,IAAI,KAAK;QAC3B;AAEA,YAAI,CAAC;AAAW,cAAI,IAAG,GAAA,UAAA,KAAI,QAAA,QAAE,MAAM,QAAQ,aAAa,CAAC,EAAE;MAC7D;IACF;AAEA,aAAS,gBAAgB,IAAkB,OAAgB;AACzD,YAAM,EACJ,KACA,QACA,MAAM,EAAC,YAAW,EAAC,IACjB;AACJ,UAAI;AAAa,SAAA,GAAA,WAAA,gBAAe,IAAI,MAAM,IAAI;AAC9C,UAAI,MAAM,MAAK;AACb,mBAAW,QAAQ,MAAM,OAAO;AAC9B,eAAI,GAAA,gBAAA,eAAc,QAAQ,IAAI,GAAG;AAC/B,wBAAY,IAAI,KAAK,SAAS,KAAK,YAAY,MAAM,IAAI;UAC3D;QACF;MACF,CAAC;IACH;AAEA,aAAS,iBAAiB,IAAkB,OAAiB;AAC3D,UAAI,GAAG,UAAU,QAAQ,CAAC,GAAG,KAAK;AAAa;AAC/C,wBAAkB,IAAI,KAAK;AAC3B,UAAI,CAAC,GAAG,KAAK;AAAiB,2BAAmB,IAAI,KAAK;AAC1D,wBAAkB,IAAI,GAAG,SAAS;IACpC;AAEA,aAAS,kBAAkB,IAAkB,OAAiB;AAC5D,UAAI,CAAC,MAAM;AAAQ;AACnB,UAAI,CAAC,GAAG,UAAU,QAAQ;AACxB,WAAG,YAAY;AACf;MACF;AACA,YAAM,QAAQ,CAAC,MAAK;AAClB,YAAI,CAAC,aAAa,GAAG,WAAW,CAAC,GAAG;AAClC,2BAAiB,IAAI,SAAS,CAAC,6BAA6B,GAAG,UAAU,KAAK,GAAG,CAAC,GAAG;QACvF;MACF,CAAC;AACD,wBAAkB,IAAI,KAAK;IAC7B;AAEA,aAAS,mBAAmB,IAAkB,IAAc;AAC1D,UAAI,GAAG,SAAS,KAAK,EAAE,GAAG,WAAW,KAAK,GAAG,SAAS,MAAM,IAAI;AAC9D,yBAAiB,IAAI,iDAAiD;MACxE;IACF;AAEA,aAAS,kBAAkB,IAAkB,IAAc;AACzD,YAAM,QAAQ,GAAG,KAAK,MAAM;AAC5B,iBAAW,WAAW,OAAO;AAC3B,cAAM,OAAO,MAAM,OAAO;AAC1B,YAAI,OAAO,QAAQ,aAAY,GAAA,gBAAA,eAAc,GAAG,QAAQ,IAAI,GAAG;AAC7D,gBAAM,EAAC,KAAI,IAAI,KAAK;AACpB,cAAI,KAAK,UAAU,CAAC,KAAK,KAAK,CAAC,MAAM,kBAAkB,IAAI,CAAC,CAAC,GAAG;AAC9D,6BAAiB,IAAI,iBAAiB,KAAK,KAAK,GAAG,CAAC,kBAAkB,OAAO,GAAG;UAClF;QACF;MACF;IACF;AAEA,aAAS,kBAAkB,OAAmB,MAAc;AAC1D,aAAO,MAAM,SAAS,IAAI,KAAM,SAAS,YAAY,MAAM,SAAS,SAAS;IAC/E;AAEA,aAAS,aAAa,IAAgB,GAAW;AAC/C,aAAO,GAAG,SAAS,CAAC,KAAM,MAAM,aAAa,GAAG,SAAS,QAAQ;IACnE;AAEA,aAAS,kBAAkB,IAAkB,WAAqB;AAChE,YAAM,KAAiB,CAAA;AACvB,iBAAW,KAAK,GAAG,WAAW;AAC5B,YAAI,aAAa,WAAW,CAAC;AAAG,aAAG,KAAK,CAAC;iBAChC,UAAU,SAAS,SAAS,KAAK,MAAM;AAAU,aAAG,KAAK,SAAS;MAC7E;AACA,SAAG,YAAY;IACjB;AAEA,aAAS,iBAAiB,IAAkB,KAAW;AACrD,YAAM,aAAa,GAAG,UAAU,SAAS,GAAG;AAC5C,aAAO,QAAQ,UAAU;AACzB,OAAA,GAAA,OAAA,iBAAgB,IAAI,KAAK,GAAG,KAAK,WAAW;IAC9C;AAEA,QAAa,aAAb,MAAuB;MAiBrB,YAAY,IAAkB,KAA6B,SAAe;AACxE,SAAA,GAAA,UAAA,sBAAqB,IAAI,KAAK,OAAO;AACrC,aAAK,MAAM,GAAG;AACd,aAAK,YAAY,GAAG;AACpB,aAAK,UAAU;AACf,aAAK,OAAO,GAAG;AACf,aAAK,SAAS,GAAG,OAAO,OAAO;AAC/B,aAAK,QAAQ,IAAI,SAAS,GAAG,KAAK,SAAS,KAAK,UAAU,KAAK,OAAO;AACtE,aAAK,eAAc,GAAA,OAAA,gBAAe,IAAI,KAAK,QAAQ,SAAS,KAAK,KAAK;AACtE,aAAK,aAAa,IAAI;AACtB,aAAK,eAAe,GAAG;AACvB,aAAK,SAAS,CAAA;AACd,aAAK,KAAK;AACV,aAAK,MAAM;AAEX,YAAI,KAAK,OAAO;AACd,eAAK,aAAa,GAAG,IAAI,MAAM,WAAW,QAAQ,KAAK,OAAO,EAAE,CAAC;QACnE,OAAO;AACL,eAAK,aAAa,KAAK;AACvB,cAAI,EAAC,GAAA,UAAA,iBAAgB,KAAK,QAAQ,IAAI,YAAY,IAAI,cAAc,GAAG;AACrE,kBAAM,IAAI,MAAM,GAAG,OAAO,kBAAkB,KAAK,UAAU,IAAI,UAAU,CAAC,EAAE;UAC9E;QACF;AAEA,YAAI,UAAU,MAAM,IAAI,cAAc,IAAI,WAAW,OAAO;AAC1D,eAAK,YAAY,GAAG,IAAI,MAAM,SAAS,QAAA,QAAE,MAAM;QACjD;MACF;MAEA,OAAO,WAAiB,eAA4B,YAAuB;AACzE,aAAK,YAAW,GAAA,UAAA,KAAI,SAAS,GAAG,eAAe,UAAU;MAC3D;MAEA,WAAW,WAAiB,eAA4B,YAAuB;AAC7E,aAAK,IAAI,GAAG,SAAS;AACrB,YAAI;AAAY,qBAAU;;AACrB,eAAK,MAAK;AACf,YAAI,eAAe;AACjB,eAAK,IAAI,KAAI;AACb,wBAAa;AACb,cAAI,KAAK;AAAW,iBAAK,IAAI,MAAK;QACpC,OAAO;AACL,cAAI,KAAK;AAAW,iBAAK,IAAI,MAAK;;AAC7B,iBAAK,IAAI,KAAI;QACpB;MACF;MAEA,KAAK,WAAiB,YAAuB;AAC3C,aAAK,YAAW,GAAA,UAAA,KAAI,SAAS,GAAG,QAAW,UAAU;MACvD;MAEA,KAAK,WAAgB;AACnB,YAAI,cAAc,QAAW;AAC3B,eAAK,MAAK;AACV,cAAI,CAAC,KAAK;AAAW,iBAAK,IAAI,GAAG,KAAK;AACtC;QACF;AACA,aAAK,IAAI,GAAG,SAAS;AACrB,aAAK,MAAK;AACV,YAAI,KAAK;AAAW,eAAK,IAAI,MAAK;;AAC7B,eAAK,IAAI,KAAI;MACpB;MAEA,UAAU,WAAe;AACvB,YAAI,CAAC,KAAK;AAAO,iBAAO,KAAK,KAAK,SAAS;AAC3C,cAAM,EAAC,WAAU,IAAI;AACrB,aAAK,MAAK,GAAA,UAAA,KAAI,UAAU,uBAAsB,GAAA,UAAA,IAAG,KAAK,aAAY,GAAI,SAAS,CAAC,GAAG;MACrF;MAEA,MAAM,QAAkB,aAAgC,YAAuB;AAC7E,YAAI,aAAa;AACf,eAAK,UAAU,WAAW;AAC1B,eAAK,OAAO,QAAQ,UAAU;AAC9B,eAAK,UAAU,CAAA,CAAE;AACjB;QACF;AACA,aAAK,OAAO,QAAQ,UAAU;MAChC;MAEQ,OAAO,QAAkB,YAAuB;AACtD;AAAC,SAAC,SAAS,SAAA,mBAAmB,SAAA,aAAa,MAAM,KAAK,IAAI,OAAO,UAAU;MAC7E;MAEA,aAAU;AACR,SAAA,GAAA,SAAA,aAAY,MAAM,KAAK,IAAI,cAAc,SAAA,iBAAiB;MAC5D;MAEA,QAAK;AACH,YAAI,KAAK,cAAc;AAAW,gBAAM,IAAI,MAAM,yCAAyC;AAC3F,SAAA,GAAA,SAAA,kBAAiB,KAAK,KAAK,KAAK,SAAS;MAC3C;MAEA,GAAG,MAAoB;AACrB,YAAI,CAAC,KAAK;AAAW,eAAK,IAAI,GAAG,IAAI;MACvC;MAEA,UAAU,KAAuB,QAAa;AAC5C,YAAI;AAAQ,iBAAO,OAAO,KAAK,QAAQ,GAAG;;AACrC,eAAK,SAAS;MACrB;MAEA,WAAW,OAAa,WAAuB,aAAmB,UAAA,KAAG;AACnE,aAAK,IAAI,MAAM,MAAK;AAClB,eAAK,WAAW,OAAO,UAAU;AACjC,oBAAS;QACX,CAAC;MACH;MAEA,WAAW,QAAc,UAAA,KAAK,aAAmB,UAAA,KAAG;AAClD,YAAI,CAAC,KAAK;AAAO;AACjB,cAAM,EAAC,KAAK,YAAY,YAAY,IAAG,IAAI;AAC3C,YAAI,IAAG,GAAA,UAAA,KAAG,GAAA,UAAA,KAAI,UAAU,kBAAkB,UAAU,CAAC;AACrD,YAAI,UAAU,UAAA;AAAK,cAAI,OAAO,OAAO,IAAI;AACzC,YAAI,WAAW,UAAU,IAAI,gBAAgB;AAC3C,cAAI,OAAO,KAAK,aAAY,CAAE;AAC9B,eAAK,WAAU;AACf,cAAI,UAAU,UAAA;AAAK,gBAAI,OAAO,OAAO,KAAK;QAC5C;AACA,YAAI,KAAI;MACV;MAEA,eAAY;AACV,cAAM,EAAC,KAAK,YAAY,YAAY,KAAK,GAAE,IAAI;AAC/C,gBAAO,GAAA,UAAA,IAAG,eAAc,GAAI,mBAAkB,CAAE;AAEhD,iBAAS,iBAAc;AACrB,cAAI,WAAW,QAAQ;AAErB,gBAAI,EAAE,sBAAsB,UAAA;AAAO,oBAAM,IAAI,MAAM,0BAA0B;AAC7E,kBAAM,KAAK,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAC,UAAU;AAC/D,oBAAO,GAAA,UAAA,MAAI,GAAA,WAAA,gBAAe,IAAI,YAAY,GAAG,KAAK,eAAe,WAAA,SAAS,KAAK,CAAC;UAClF;AACA,iBAAO,UAAA;QACT;AAEA,iBAAS,qBAAkB;AACzB,cAAI,IAAI,gBAAgB;AACtB,kBAAM,oBAAoB,IAAI,WAAW,iBAAiB,EAAC,KAAK,IAAI,eAAc,CAAC;AACnF,oBAAO,GAAA,UAAA,MAAK,iBAAiB,IAAI,UAAU;UAC7C;AACA,iBAAO,UAAA;QACT;MACF;MAEA,UAAU,MAAqB,OAAW;AACxC,cAAM,aAAY,GAAA,YAAA,cAAa,KAAK,IAAI,IAAI;AAC5C,SAAA,GAAA,YAAA,qBAAoB,WAAW,KAAK,IAAI,IAAI;AAC5C,SAAA,GAAA,YAAA,qBAAoB,WAAW,IAAI;AACnC,cAAM,cAAc,EAAC,GAAG,KAAK,IAAI,GAAG,WAAW,OAAO,QAAW,OAAO,OAAS;AACjF,sBAAc,aAAa,KAAK;AAChC,eAAO;MACT;MAEA,eAAe,WAAsB,QAAoB;AACvD,cAAM,EAAC,IAAI,IAAG,IAAI;AAClB,YAAI,CAAC,GAAG,KAAK;AAAa;AAC1B,YAAI,GAAG,UAAU,QAAQ,UAAU,UAAU,QAAW;AACtD,aAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,UAAU,OAAO,GAAG,OAAO,MAAM;QACxE;AACA,YAAI,GAAG,UAAU,QAAQ,UAAU,UAAU,QAAW;AACtD,aAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,UAAU,OAAO,GAAG,OAAO,MAAM;QACxE;MACF;MAEA,oBAAoB,WAAsB,OAAW;AACnD,cAAM,EAAC,IAAI,IAAG,IAAI;AAClB,YAAI,GAAG,KAAK,gBAAgB,GAAG,UAAU,QAAQ,GAAG,UAAU,OAAO;AACnE,cAAI,GAAG,OAAO,MAAM,KAAK,eAAe,WAAW,UAAA,IAAI,CAAC;AACxD,iBAAO;QACT;MACF;;AA3LF,YAAA,aAAA;AA8LA,aAAS,YACP,IACA,SACA,KACA,UAAmB;AAEnB,YAAM,MAAM,IAAI,WAAW,IAAI,KAAK,OAAO;AAC3C,UAAI,UAAU,KAAK;AACjB,YAAI,KAAK,KAAK,QAAQ;MACxB,WAAW,IAAI,SAAS,IAAI,UAAU;AACpC,SAAA,GAAA,UAAA,iBAAgB,KAAK,GAAG;MAC1B,WAAW,WAAW,KAAK;AACzB,SAAA,GAAA,UAAA,kBAAiB,KAAK,GAAG;MAC3B,WAAW,IAAI,WAAW,IAAI,UAAU;AACtC,SAAA,GAAA,UAAA,iBAAgB,KAAK,GAAG;MAC1B;IACF;AAEA,QAAM,eAAe;AACrB,QAAM,wBAAwB;AAC9B,aAAgB,QACd,OACA,EAAC,WAAW,WAAW,YAAW,GAAY;AAE9C,UAAI;AACJ,UAAI;AACJ,UAAI,UAAU;AAAI,eAAO,QAAA,QAAE;AAC3B,UAAI,MAAM,CAAC,MAAM,KAAK;AACpB,YAAI,CAAC,aAAa,KAAK,KAAK;AAAG,gBAAM,IAAI,MAAM,yBAAyB,KAAK,EAAE;AAC/E,sBAAc;AACd,eAAO,QAAA,QAAE;MACX,OAAO;AACL,cAAM,UAAU,sBAAsB,KAAK,KAAK;AAChD,YAAI,CAAC;AAAS,gBAAM,IAAI,MAAM,yBAAyB,KAAK,EAAE;AAC9D,cAAM,KAAa,CAAC,QAAQ,CAAC;AAC7B,sBAAc,QAAQ,CAAC;AACvB,YAAI,gBAAgB,KAAK;AACvB,cAAI,MAAM;AAAW,kBAAM,IAAI,MAAM,SAAS,kBAAkB,EAAE,CAAC;AACnE,iBAAO,YAAY,YAAY,EAAE;QACnC;AACA,YAAI,KAAK;AAAW,gBAAM,IAAI,MAAM,SAAS,QAAQ,EAAE,CAAC;AACxD,eAAO,UAAU,YAAY,EAAE;AAC/B,YAAI,CAAC;AAAa,iBAAO;MAC3B;AAEA,UAAI,OAAO;AACX,YAAM,WAAW,YAAY,MAAM,GAAG;AACtC,iBAAW,WAAW,UAAU;AAC9B,YAAI,SAAS;AACX,kBAAO,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,cAAY,GAAA,OAAA,qBAAoB,OAAO,CAAC,CAAC;AAC3D,kBAAO,GAAA,UAAA,KAAI,IAAI,OAAO,IAAI;QAC5B;MACF;AACA,aAAO;AAEP,eAAS,SAAS,aAAqB,IAAU;AAC/C,eAAO,iBAAiB,WAAW,IAAI,EAAE,gCAAgC,SAAS;MACpF;IACF;AAtCA,YAAA,UAAA;;;;;;;;;AC7hBA,QAAqB,kBAArB,cAA6C,MAAK;MAKhD,YAAY,QAA8B;AACxC,cAAM,mBAAmB;AACzB,aAAK,SAAS;AACd,aAAK,MAAM,KAAK,aAAa;MAC/B;;AATF,YAAA,UAAA;;;;;;;;;ACFA,QAAA,YAAA;AAGA,QAAqB,kBAArB,cAA6C,MAAK;MAIhD,YAAY,UAAuB,QAAgB,KAAa,KAAY;AAC1E,cAAM,OAAO,2BAA2B,GAAG,YAAY,MAAM,EAAE;AAC/D,aAAK,cAAa,GAAA,UAAA,YAAW,UAAU,QAAQ,GAAG;AAClD,aAAK,iBAAgB,GAAA,UAAA,cAAY,GAAA,UAAA,aAAY,UAAU,KAAK,UAAU,CAAC;MACzE;;AARF,YAAA,UAAA;;;;;;;;;;ACOA,QAAA,YAAA;AACA,QAAA,qBAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,aAAA;AA0DA,QAAa,YAAb,MAAsB;MAkBpB,YAAY,KAAkB;;AATrB,aAAA,OAAmB,CAAA;AACnB,aAAA,iBAA2C,CAAA;AASlD,YAAI;AACJ,YAAI,OAAO,IAAI,UAAU;AAAU,mBAAS,IAAI;AAChD,aAAK,SAAS,IAAI;AAClB,aAAK,WAAW,IAAI;AACpB,aAAK,OAAO,IAAI,QAAQ;AACxB,aAAK,UAAS,KAAA,IAAI,YAAM,QAAA,OAAA,SAAA,MAAI,GAAA,UAAA,aAAY,WAAM,QAAN,WAAM,SAAA,SAAN,OAAS,IAAI,YAAY,KAAK,CAAC;AACvE,aAAK,aAAa,IAAI;AACtB,aAAK,YAAY,IAAI;AACrB,aAAK,OAAO,IAAI;AAChB,aAAK,SAAS,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ;AACtB,aAAK,OAAO,CAAA;MACd;;AA9BF,YAAA,YAAA;AAqCA,aAAgB,cAAyB,KAAc;AAErD,YAAM,OAAO,mBAAmB,KAAK,MAAM,GAAG;AAC9C,UAAI;AAAM,eAAO;AACjB,YAAM,UAAS,GAAA,UAAA,aAAY,KAAK,KAAK,aAAa,IAAI,KAAK,MAAM;AACjE,YAAM,EAAC,KAAK,MAAK,IAAI,KAAK,KAAK;AAC/B,YAAM,EAAC,cAAa,IAAI,KAAK;AAC7B,YAAM,MAAM,IAAI,UAAA,QAAQ,KAAK,OAAO,EAAC,KAAK,OAAO,cAAa,CAAC;AAC/D,UAAI;AACJ,UAAI,IAAI,QAAQ;AACd,2BAAmB,IAAI,WAAW,SAAS;UACzC,KAAK,mBAAA;UACL,OAAM,GAAA,UAAA;SACP;MACH;AAEA,YAAM,eAAe,IAAI,UAAU,UAAU;AAC7C,UAAI,eAAe;AAEnB,YAAM,YAAuB;QAC3B;QACA,WAAW,KAAK,KAAK;QACrB,MAAM,QAAA,QAAE;QACR,YAAY,QAAA,QAAE;QACd,oBAAoB,QAAA,QAAE;QACtB,WAAW,CAAC,QAAA,QAAE,IAAI;QAClB,aAAa,CAAC,UAAA,GAAG;;QACjB,WAAW;QACX,WAAW,CAAA;QACX,mBAAmB,oBAAI,IAAG;QAC1B,cAAc,IAAI,WAChB,UACA,KAAK,KAAK,KAAK,WAAW,OACtB,EAAC,KAAK,IAAI,QAAQ,OAAM,GAAA,UAAA,WAAU,IAAI,MAAM,EAAC,IAC7C,EAAC,KAAK,IAAI,OAAM,CAAC;QAEvB;QACA,iBAAiB;QACjB,QAAQ,IAAI;QACZ,WAAW;QACX;QACA,QAAQ,IAAI,UAAU;QACtB,YAAY,UAAA;QACZ,eAAe,IAAI,eAAe,KAAK,KAAK,MAAM,KAAK;QACvD,YAAW,GAAA,UAAA;QACX,MAAM,KAAK;QACX,MAAM;;AAGR,UAAI;AACJ,UAAI;AACF,aAAK,cAAc,IAAI,GAAG;AAC1B,SAAA,GAAA,WAAA,sBAAqB,SAAS;AAC9B,YAAI,SAAS,KAAK,KAAK,KAAK,QAAQ;AAEpC,cAAM,eAAe,IAAI,SAAQ;AACjC,qBAAa,GAAG,IAAI,UAAU,QAAA,QAAE,KAAK,CAAC,UAAU,YAAY;AAE5D,YAAI,KAAK,KAAK,KAAK;AAAS,uBAAa,KAAK,KAAK,KAAK,QAAQ,YAAY,GAAG;AAE/E,cAAM,eAAe,IAAI,SAAS,GAAG,QAAA,QAAE,IAAI,IAAI,GAAG,QAAA,QAAE,KAAK,IAAI,UAAU;AACvE,cAAMC,YAAgC,aAAa,MAAM,KAAK,MAAM,IAAG,CAAE;AACzE,aAAK,MAAM,MAAM,cAAc,EAAC,KAAKA,UAAQ,CAAC;AAE9C,QAAAA,UAAS,SAAS;AAClB,QAAAA,UAAS,SAAS,IAAI;AACtB,QAAAA,UAAS,YAAY;AACrB,YAAI,IAAI;AAAS,UAAAA,UAAmC,SAAS;AAC7D,YAAI,KAAK,KAAK,KAAK,WAAW,MAAM;AAClC,UAAAA,UAAS,SAAS,EAAC,cAAc,cAAc,aAAa,IAAI,QAAO;QACzE;AACA,YAAI,KAAK,KAAK,aAAa;AACzB,gBAAM,EAAC,OAAO,MAAK,IAAI;AACvB,UAAAA,UAAS,YAAY;YACnB,OAAO,iBAAiB,UAAA,OAAO,SAAY;YAC3C,OAAO,iBAAiB,UAAA,OAAO,SAAY;YAC3C,cAAc,iBAAiB,UAAA;YAC/B,cAAc,iBAAiB,UAAA;;AAEjC,cAAIA,UAAS;AAAQ,YAAAA,UAAS,OAAO,aAAY,GAAA,UAAA,WAAUA,UAAS,SAAS;QAC/E;AACA,YAAI,WAAWA;AACf,eAAO;MACT,SAAS,GAAG;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI;AAAY,eAAK,OAAO,MAAM,0CAA0C,UAAU;AAEtF,cAAM;MACR;AACE,aAAK,cAAc,OAAO,GAAG;MAC/B;IACF;AA5FA,YAAA,gBAAA;AA8FA,aAAgB,WAEd,MACA,QACA,KAAW;;AAEX,aAAM,GAAA,UAAA,YAAW,KAAK,KAAK,aAAa,QAAQ,GAAG;AACnD,YAAM,YAAY,KAAK,KAAK,GAAG;AAC/B,UAAI;AAAW,eAAO;AAEtB,UAAI,OAAO,QAAQ,KAAK,MAAM,MAAM,GAAG;AACvC,UAAI,SAAS,QAAW;AACtB,cAAM,UAAS,KAAA,KAAK,eAAS,QAAA,OAAA,SAAA,SAAA,GAAG,GAAG;AACnC,cAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,YAAI;AAAQ,iBAAO,IAAI,UAAU,EAAC,QAAQ,UAAU,MAAM,OAAM,CAAC;MACnE;AAEA,UAAI,SAAS;AAAW;AACxB,aAAQ,KAAK,KAAK,GAAG,IAAI,gBAAgB,KAAK,MAAM,IAAI;IAC1D;AAnBA,YAAA,aAAA;AAqBA,aAAS,gBAA2B,KAAc;AAChD,WAAI,GAAA,UAAA,WAAU,IAAI,QAAQ,KAAK,KAAK,UAAU;AAAG,eAAO,IAAI;AAC5D,aAAO,IAAI,WAAW,MAAM,cAAc,KAAK,MAAM,GAAG;IAC1D;AAGA,aAAgB,mBAA8B,QAAiB;AAC7D,iBAAW,OAAO,KAAK,eAAe;AACpC,YAAI,cAAc,KAAK,MAAM;AAAG,iBAAO;MACzC;IACF;AAJA,YAAA,qBAAA;AAMA,aAAS,cAAc,IAAe,IAAa;AACjD,aAAO,GAAG,WAAW,GAAG,UAAU,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG;IAC5E;AAIA,aAAS,QAEP,MACA;AAEA,UAAI;AACJ,aAAO,QAAQ,MAAM,KAAK,KAAK,GAAG,MAAM;AAAU,cAAM;AACxD,aAAO,OAAO,KAAK,QAAQ,GAAG,KAAK,cAAc,KAAK,MAAM,MAAM,GAAG;IACvE;AAGA,aAAgB,cAEd,MACA;AAEA,YAAM,IAAI,KAAK,KAAK,YAAY,MAAM,GAAG;AACzC,YAAM,WAAU,GAAA,UAAA,cAAa,KAAK,KAAK,aAAa,CAAC;AACrD,UAAI,UAAS,GAAA,UAAA,aAAY,KAAK,KAAK,aAAa,KAAK,QAAQ,MAAS;AAEtE,UAAI,OAAO,KAAK,KAAK,MAAM,EAAE,SAAS,KAAK,YAAY,QAAQ;AAC7D,eAAO,eAAe,KAAK,MAAM,GAAG,IAAI;MAC1C;AAEA,YAAM,MAAK,GAAA,UAAA,aAAY,OAAO;AAC9B,YAAM,WAAW,KAAK,KAAK,EAAE,KAAK,KAAK,QAAQ,EAAE;AACjD,UAAI,OAAO,YAAY,UAAU;AAC/B,cAAM,MAAM,cAAc,KAAK,MAAM,MAAM,QAAQ;AACnD,YAAI,QAAO,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,YAAW;AAAU;AACrC,eAAO,eAAe,KAAK,MAAM,GAAG,GAAG;MACzC;AAEA,UAAI,QAAO,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,YAAW;AAAU;AAC1C,UAAI,CAAC,SAAS;AAAU,sBAAc,KAAK,MAAM,QAAQ;AACzD,UAAI,QAAO,GAAA,UAAA,aAAY,GAAG,GAAG;AAC3B,cAAM,EAAC,OAAM,IAAI;AACjB,cAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,cAAM,QAAQ,OAAO,QAAQ;AAC7B,YAAI;AAAO,oBAAS,GAAA,UAAA,YAAW,KAAK,KAAK,aAAa,QAAQ,KAAK;AACnE,eAAO,IAAI,UAAU,EAAC,QAAQ,UAAU,MAAM,OAAM,CAAC;MACvD;AACA,aAAO,eAAe,KAAK,MAAM,GAAG,QAAQ;IAC9C;AA/BA,YAAA,gBAAA;AAiCA,QAAM,uBAAuB,oBAAI,IAAI;MACnC;MACA;MACA;MACA;MACA;KACD;AAED,aAAS,eAEP,WACA,EAAC,QAAQ,QAAQ,KAAI,GAAY;;AAEjC,YAAI,KAAA,UAAU,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAG,CAAC,OAAM;AAAK;AACrC,iBAAW,QAAQ,UAAU,SAAS,MAAM,CAAC,EAAE,MAAM,GAAG,GAAG;AACzD,YAAI,OAAO,WAAW;AAAW;AACjC,cAAM,aAAa,QAAO,GAAA,OAAA,kBAAiB,IAAI,CAAC;AAChD,YAAI,eAAe;AAAW;AAC9B,iBAAS;AAET,cAAM,QAAQ,OAAO,WAAW,YAAY,OAAO,KAAK,KAAK,QAAQ;AACrE,YAAI,CAAC,qBAAqB,IAAI,IAAI,KAAK,OAAO;AAC5C,oBAAS,GAAA,UAAA,YAAW,KAAK,KAAK,aAAa,QAAQ,KAAK;QAC1D;MACF;AACA,UAAI;AACJ,UAAI,OAAO,UAAU,aAAa,OAAO,QAAQ,EAAC,GAAA,OAAA,sBAAqB,QAAQ,KAAK,KAAK,GAAG;AAC1F,cAAM,QAAO,GAAA,UAAA,YAAW,KAAK,KAAK,aAAa,QAAQ,OAAO,IAAI;AAClE,cAAM,cAAc,KAAK,MAAM,MAAM,IAAI;MAC3C;AAGA,YAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,YAAM,OAAO,IAAI,UAAU,EAAC,QAAQ,UAAU,MAAM,OAAM,CAAC;AAC3D,UAAI,IAAI,WAAW,IAAI,KAAK;AAAQ,eAAO;AAC3C,aAAO;IACT;;;;;ACnUA,IAAAC,gBAAA;AAAA;AAAA;AAAA,MACE,KAAO;AAAA,MACP,aAAe;AAAA,MACf,MAAQ;AAAA,MACR,UAAY,CAAC,OAAO;AAAA,MACpB,YAAc;AAAA,QACZ,OAAS;AAAA,UACP,MAAQ;AAAA,UACR,OAAS,CAAC,EAAC,QAAU,wBAAuB,GAAG,EAAC,QAAU,eAAc,CAAC;AAAA,QAC3E;AAAA,MACF;AAAA,MACA,sBAAwB;AAAA,IAC1B;AAAA;AAAA;;;;;;;ACZA,QAAA,MAAA;AAGE,QAAY,OAAO;AAErB,YAAA,UAAe;;;;;;;;;;ACuBf,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAU,EAAA,CAAA;AAKlB,QAAA,YAAA;AAAQ,WAAA,eAAA,SAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAC,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAI,EAAA,CAAA;AAAQ,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAO,EAAA,CAAA;AAsBnD,QAAA,qBAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,YAAA;AACA,QAAA,YAAA;AACA,QAAA,aAAA;AACA,QAAA,SAAA;AACA,QAAA,iBAAA;AAEA,QAAA,QAAA;AAEA,QAAM,gBAA8B,CAAC,KAAK,UAAU,IAAI,OAAO,KAAK,KAAK;AACzE,kBAAc,OAAO;AAErB,QAAM,sBAAyC,CAAC,oBAAoB,eAAe,aAAa;AAChG,QAAM,kBAAkB,oBAAI,IAAI;MAC9B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACD;AAyGD,QAAM,iBAA8C;MAClD,eAAe;MACf,QAAQ;MACR,UAAU;MACV,cAAc;MACd,YAAY;MACZ,aAAa;MACb,aAAa;MACb,YAAY;MACZ,gBAAgB;MAChB,gBAAgB;MAChB,aAAa;MACb,gBAAgB;MAChB,OAAO;MACP,WAAW;MACX,WAAW;;AAGb,QAAM,oBAAoD;MACxD,uBAAuB;MACvB,kBAAkB;MAClB,SAAS;;AA0BX,QAAM,iBAAiB;AAGvB,aAAS,gBAAgB,GAAU;;AACjC,YAAM,IAAI,EAAE;AACZ,YAAM,SAAQ,KAAA,EAAE,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE;AACtB,YAAM,WAAW,UAAU,QAAQ,UAAU,SAAY,IAAI,SAAS;AACtE,YAAM,UAAS,MAAA,KAAA,EAAE,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,YAAM,QAAA,OAAA,SAAA,KAAI;AACjC,YAAM,eAAc,KAAA,EAAE,iBAAW,QAAA,OAAA,SAAA,KAAI,MAAA;AACrC,aAAO;QACL,eAAc,MAAA,KAAA,EAAE,kBAAY,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACrC,gBAAe,MAAA,KAAA,EAAE,mBAAa,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACvC,cAAa,MAAA,KAAA,EAAE,iBAAW,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACnC,eAAc,MAAA,KAAA,EAAE,kBAAY,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACrC,iBAAgB,MAAA,KAAA,EAAE,oBAAc,QAAA,OAAA,SAAA,KAAI,OAAC,QAAA,OAAA,SAAA,KAAI;QACzC,MAAM,EAAE,OAAO,EAAC,GAAG,EAAE,MAAM,UAAU,OAAM,IAAI,EAAC,UAAU,OAAM;QAChE,eAAc,KAAA,EAAE,kBAAY,QAAA,OAAA,SAAA,KAAI;QAChC,WAAU,KAAA,EAAE,cAAQ,QAAA,OAAA,SAAA,KAAI;QACxB,OAAM,KAAA,EAAE,UAAI,QAAA,OAAA,SAAA,KAAI;QAChB,WAAU,KAAA,EAAE,cAAQ,QAAA,OAAA,SAAA,KAAI;QACxB,aAAY,KAAA,EAAE,gBAAU,QAAA,OAAA,SAAA,KAAI;QAC5B,WAAU,KAAA,EAAE,cAAQ,QAAA,OAAA,SAAA,KAAI;QACxB,gBAAe,KAAA,EAAE,mBAAa,QAAA,OAAA,SAAA,KAAI;QAClC,iBAAgB,KAAA,EAAE,oBAAc,QAAA,OAAA,SAAA,KAAI;QACpC,kBAAiB,KAAA,EAAE,qBAAe,QAAA,OAAA,SAAA,KAAI;QACtC,gBAAe,KAAA,EAAE,mBAAa,QAAA,OAAA,SAAA,KAAI;QAClC,aAAY,KAAA,EAAE,gBAAU,QAAA,OAAA,SAAA,KAAI;QAC5B;;IAEJ;AAQA,QAAqBC,OAArB,MAAwB;MAkBtB,YAAY,OAAgB,CAAA,GAAE;AAZrB,aAAA,UAAyC,CAAA;AACzC,aAAA,OAA+C,CAAA;AAC/C,aAAA,UAA4C,CAAA;AAE5C,aAAA,gBAAgC,oBAAI,IAAG;AAC/B,aAAA,WAAyD,CAAA;AACzD,aAAA,SAAoC,oBAAI,IAAG;AAO1D,eAAO,KAAK,OAAO,EAAC,GAAG,MAAM,GAAG,gBAAgB,IAAI,EAAC;AACrD,cAAM,EAAC,KAAK,MAAK,IAAI,KAAK,KAAK;AAE/B,aAAK,QAAQ,IAAI,UAAA,WAAW,EAAC,OAAO,CAAA,GAAI,UAAU,iBAAiB,KAAK,MAAK,CAAC;AAC9E,aAAK,SAAS,UAAU,KAAK,MAAM;AACnC,cAAM,YAAY,KAAK;AACvB,aAAK,kBAAkB;AAEvB,aAAK,SAAQ,GAAA,QAAA,UAAQ;AACrB,qBAAa,KAAK,MAAM,gBAAgB,MAAM,eAAe;AAC7D,qBAAa,KAAK,MAAM,mBAAmB,MAAM,cAAc,MAAM;AACrE,aAAK,YAAY,qBAAqB,KAAK,IAAI;AAE/C,YAAI,KAAK;AAAS,4BAAkB,KAAK,IAAI;AAC7C,aAAK,iBAAgB;AACrB,aAAK,sBAAqB;AAC1B,YAAI,KAAK;AAAU,6BAAmB,KAAK,MAAM,KAAK,QAAQ;AAC9D,YAAI,OAAO,KAAK,QAAQ;AAAU,eAAK,cAAc,KAAK,IAAI;AAC9D,0BAAkB,KAAK,IAAI;AAC3B,aAAK,kBAAkB;MACzB;MAEA,mBAAgB;AACd,aAAK,WAAW,QAAQ;MAC1B;MAEA,wBAAqB;AACnB,cAAM,EAAC,OAAO,MAAM,SAAQ,IAAI,KAAK;AACrC,YAAI,iBAA+B;AACnC,YAAI,aAAa,MAAM;AACrB,2BAAiB,EAAC,GAAG,eAAc;AACnC,yBAAe,KAAK,eAAe;AACnC,iBAAO,eAAe;QACxB;AACA,YAAI,QAAQ;AAAO,eAAK,cAAc,gBAAgB,eAAe,QAAQ,GAAG,KAAK;MACvF;MAEA,cAAW;AACT,cAAM,EAAC,MAAM,SAAQ,IAAI,KAAK;AAC9B,eAAQ,KAAK,KAAK,cAAc,OAAO,QAAQ,WAAW,KAAK,QAAQ,KAAK,OAAO;MACrF;MAoBA,SACE,cAEA;AAEA,YAAI;AACJ,YAAI,OAAO,gBAAgB,UAAU;AACnC,cAAI,KAAK,UAAa,YAAY;AAClC,cAAI,CAAC;AAAG,kBAAM,IAAI,MAAM,8BAA8B,YAAY,GAAG;QACvE,OAAO;AACL,cAAI,KAAK,QAAW,YAAY;QAClC;AAEA,cAAM,QAAQ,EAAE,IAAI;AACpB,YAAI,EAAE,YAAY;AAAI,eAAK,SAAS,EAAE;AACtC,eAAO;MACT;MAiBA,QAAqB,QAAmB,OAAe;AACrD,cAAM,MAAM,KAAK,WAAW,QAAQ,KAAK;AACzC,eAAQ,IAAI,YAAY,KAAK,kBAAkB,GAAG;MACpD;MAmBA,aACE,QACA,MAAc;AAEd,YAAI,OAAO,KAAK,KAAK,cAAc,YAAY;AAC7C,gBAAM,IAAI,MAAM,yCAAyC;QAC3D;AACA,cAAM,EAAC,WAAU,IAAI,KAAK;AAC1B,eAAO,gBAAgB,KAAK,MAAM,QAAQ,IAAI;AAE9C,uBAAe,gBAEb,SACA,OAAe;AAEf,gBAAM,eAAe,KAAK,MAAM,QAAQ,OAAO;AAC/C,gBAAM,MAAM,KAAK,WAAW,SAAS,KAAK;AAC1C,iBAAO,IAAI,YAAY,cAAc,KAAK,MAAM,GAAG;QACrD;AAEA,uBAAe,eAA0B,MAAa;AACpD,cAAI,QAAQ,CAAC,KAAK,UAAU,IAAI,GAAG;AACjC,kBAAM,gBAAgB,KAAK,MAAM,EAAC,KAAI,GAAG,IAAI;UAC/C;QACF;AAEA,uBAAe,cAAyB,KAAc;AACpD,cAAI;AACF,mBAAO,KAAK,kBAAkB,GAAG;UACnC,SAAS,GAAG;AACV,gBAAI,EAAE,aAAa,YAAA;AAAkB,oBAAM;AAC3C,wBAAY,KAAK,MAAM,CAAC;AACxB,kBAAM,kBAAkB,KAAK,MAAM,EAAE,aAAa;AAClD,mBAAO,cAAc,KAAK,MAAM,GAAG;UACrC;QACF;AAEA,iBAAS,YAAuB,EAAC,eAAe,KAAK,WAAU,GAAkB;AAC/E,cAAI,KAAK,KAAK,GAAG,GAAG;AAClB,kBAAM,IAAI,MAAM,aAAa,GAAG,kBAAkB,UAAU,qBAAqB;UACnF;QACF;AAEA,uBAAe,kBAA6B,KAAW;AACrD,gBAAM,UAAU,MAAM,YAAY,KAAK,MAAM,GAAG;AAChD,cAAI,CAAC,KAAK,KAAK,GAAG;AAAG,kBAAM,eAAe,KAAK,MAAM,QAAQ,OAAO;AACpE,cAAI,CAAC,KAAK,KAAK,GAAG;AAAG,iBAAK,UAAU,SAAS,KAAK,IAAI;QACxD;AAEA,uBAAe,YAAuB,KAAW;AAC/C,gBAAM,IAAI,KAAK,SAAS,GAAG;AAC3B,cAAI;AAAG,mBAAO;AACd,cAAI;AACF,mBAAO,OAAO,KAAK,SAAS,GAAG,IAAI,WAAW,GAAG;UACnD;AACE,mBAAO,KAAK,SAAS,GAAG;UAC1B;QACF;MACF;;MAGA,UACE,QACA,KACA,OACA,kBAAkB,KAAK,KAAK;AAE5B,YAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,qBAAW,OAAO;AAAQ,iBAAK,UAAU,KAAK,QAAW,OAAO,eAAe;AAC/E,iBAAO;QACT;AACA,YAAI;AACJ,YAAI,OAAO,WAAW,UAAU;AAC9B,gBAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,eAAK,OAAO,QAAQ;AACpB,cAAI,OAAO,UAAa,OAAO,MAAM,UAAU;AAC7C,kBAAM,IAAI,MAAM,UAAU,QAAQ,iBAAiB;UACrD;QACF;AACA,eAAM,GAAA,UAAA,aAAY,OAAO,EAAE;AAC3B,aAAK,aAAa,GAAG;AACrB,aAAK,QAAQ,GAAG,IAAI,KAAK,WAAW,QAAQ,OAAO,KAAK,iBAAiB,IAAI;AAC7E,eAAO;MACT;;;MAIA,cACE,QACA,KACA,kBAAkB,KAAK,KAAK;AAE5B,aAAK,UAAU,QAAQ,KAAK,MAAM,eAAe;AACjD,eAAO;MACT;;MAGA,eAAe,QAAmB,iBAAyB;AACzD,YAAI,OAAO,UAAU;AAAW,iBAAO;AACvC,YAAI;AACJ,kBAAU,OAAO;AACjB,YAAI,YAAY,UAAa,OAAO,WAAW,UAAU;AACvD,gBAAM,IAAI,MAAM,0BAA0B;QAC5C;AACA,kBAAU,WAAW,KAAK,KAAK,eAAe,KAAK,YAAW;AAC9D,YAAI,CAAC,SAAS;AACZ,eAAK,OAAO,KAAK,2BAA2B;AAC5C,eAAK,SAAS;AACd,iBAAO;QACT;AACA,cAAM,QAAQ,KAAK,SAAS,SAAS,MAAM;AAC3C,YAAI,CAAC,SAAS,iBAAiB;AAC7B,gBAAM,UAAU,wBAAwB,KAAK,WAAU;AACvD,cAAI,KAAK,KAAK,mBAAmB;AAAO,iBAAK,OAAO,MAAM,OAAO;;AAC5D,kBAAM,IAAI,MAAM,OAAO;QAC9B;AACA,eAAO;MACT;;;MAIA,UAAuB,QAAc;AACnC,YAAI;AACJ,eAAO,QAAQ,MAAM,UAAU,KAAK,MAAM,MAAM,MAAM;AAAU,mBAAS;AACzE,YAAI,QAAQ,QAAW;AACrB,gBAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,gBAAM,OAAO,IAAI,UAAA,UAAU,EAAC,QAAQ,CAAA,GAAI,SAAQ,CAAC;AACjD,gBAAM,UAAA,cAAc,KAAK,MAAM,MAAM,MAAM;AAC3C,cAAI,CAAC;AAAK;AACV,eAAK,KAAK,MAAM,IAAI;QACtB;AACA,eAAQ,IAAI,YAAY,KAAK,kBAAkB,GAAG;MACpD;;;;;MAMA,aAAa,cAA0C;AACrD,YAAI,wBAAwB,QAAQ;AAClC,eAAK,kBAAkB,KAAK,SAAS,YAAY;AACjD,eAAK,kBAAkB,KAAK,MAAM,YAAY;AAC9C,iBAAO;QACT;AACA,gBAAQ,OAAO,cAAc;UAC3B,KAAK;AACH,iBAAK,kBAAkB,KAAK,OAAO;AACnC,iBAAK,kBAAkB,KAAK,IAAI;AAChC,iBAAK,OAAO,MAAK;AACjB,mBAAO;UACT,KAAK,UAAU;AACb,kBAAM,MAAM,UAAU,KAAK,MAAM,YAAY;AAC7C,gBAAI,OAAO,OAAO;AAAU,mBAAK,OAAO,OAAO,IAAI,MAAM;AACzD,mBAAO,KAAK,QAAQ,YAAY;AAChC,mBAAO,KAAK,KAAK,YAAY;AAC7B,mBAAO;UACT;UACA,KAAK,UAAU;AACb,kBAAM,WAAW;AACjB,iBAAK,OAAO,OAAO,QAAQ;AAC3B,gBAAI,KAAK,aAAa,KAAK,KAAK,QAAQ;AACxC,gBAAI,IAAI;AACN,oBAAK,GAAA,UAAA,aAAY,EAAE;AACnB,qBAAO,KAAK,QAAQ,EAAE;AACtB,qBAAO,KAAK,KAAK,EAAE;YACrB;AACA,mBAAO;UACT;UACA;AACE,kBAAM,IAAI,MAAM,qCAAqC;QACzD;MACF;;MAGA,cAAc,aAAuB;AACnC,mBAAW,OAAO;AAAa,eAAK,WAAW,GAAG;AAClD,eAAO;MACT;MAEA,WACE,UACA;AAEA,YAAI;AACJ,YAAI,OAAO,YAAY,UAAU;AAC/B,oBAAU;AACV,cAAI,OAAO,OAAO,UAAU;AAC1B,iBAAK,OAAO,KAAK,0DAA0D;AAC3E,gBAAI,UAAU;UAChB;QACF,WAAW,OAAO,YAAY,YAAY,QAAQ,QAAW;AAC3D,gBAAM;AACN,oBAAU,IAAI;AACd,cAAI,MAAM,QAAQ,OAAO,KAAK,CAAC,QAAQ,QAAQ;AAC7C,kBAAM,IAAI,MAAM,wDAAwD;UAC1E;QACF,OAAO;AACL,gBAAM,IAAI,MAAM,gCAAgC;QAClD;AAEA,qBAAa,KAAK,MAAM,SAAS,GAAG;AACpC,YAAI,CAAC,KAAK;AACR,WAAA,GAAA,OAAA,UAAS,SAAS,CAAC,QAAQ,QAAQ,KAAK,MAAM,GAAG,CAAC;AAClD,iBAAO;QACT;AACA,0BAAkB,KAAK,MAAM,GAAG;AAChC,cAAM,aAAqC;UACzC,GAAG;UACH,OAAM,GAAA,WAAA,cAAa,IAAI,IAAI;UAC3B,aAAY,GAAA,WAAA,cAAa,IAAI,UAAU;;AAEzC,SAAA,GAAA,OAAA,UACE,SACA,WAAW,KAAK,WAAW,IACvB,CAAC,MAAM,QAAQ,KAAK,MAAM,GAAG,UAAU,IACvC,CAAC,MAAM,WAAW,KAAK,QAAQ,CAAC,MAAM,QAAQ,KAAK,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC;AAEjF,eAAO;MACT;MAEA,WAAW,SAAe;AACxB,cAAM,OAAO,KAAK,MAAM,IAAI,OAAO;AACnC,eAAO,OAAO,QAAQ,WAAW,KAAK,aAAa,CAAC,CAAC;MACvD;;MAGA,cAAc,SAAe;AAE3B,cAAM,EAAC,MAAK,IAAI;AAChB,eAAO,MAAM,SAAS,OAAO;AAC7B,eAAO,MAAM,IAAI,OAAO;AACxB,mBAAW,SAAS,MAAM,OAAO;AAC/B,gBAAM,IAAI,MAAM,MAAM,UAAU,CAAC,SAAS,KAAK,YAAY,OAAO;AAClE,cAAI,KAAK;AAAG,kBAAM,MAAM,OAAO,GAAG,CAAC;QACrC;AACA,eAAO;MACT;;MAGA,UAAU,MAAc,QAAc;AACpC,YAAI,OAAO,UAAU;AAAU,mBAAS,IAAI,OAAO,MAAM;AACzD,aAAK,QAAQ,IAAI,IAAI;AACrB,eAAO;MACT;MAEA,WACE,SAA2C,KAAK,QAChD,EAAC,YAAY,MAAM,UAAU,OAAM,IAAuB,CAAA;AAE1D,YAAI,CAAC,UAAU,OAAO,WAAW;AAAG,iBAAO;AAC3C,eAAO,OACJ,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,EAAE,YAAY,IAAI,EAAE,OAAO,EAAE,EACrD,OAAO,CAAC,MAAM,QAAQ,OAAO,YAAY,GAAG;MACjD;MAEA,gBAAgB,YAA6B,sBAA8B;AACzE,cAAM,QAAQ,KAAK,MAAM;AACzB,qBAAa,KAAK,MAAM,KAAK,UAAU,UAAU,CAAC;AAClD,mBAAW,eAAe,sBAAsB;AAC9C,gBAAM,WAAW,YAAY,MAAM,GAAG,EAAE,MAAM,CAAC;AAC/C,cAAI,WAAW;AACf,qBAAW,OAAO;AAAU,uBAAW,SAAS,GAAG;AAEnD,qBAAW,OAAO,OAAO;AACvB,kBAAM,OAAO,MAAM,GAAG;AACtB,gBAAI,OAAO,QAAQ;AAAU;AAC7B,kBAAM,EAAC,MAAK,IAAI,KAAK;AACrB,kBAAM,SAAS,SAAS,GAAG;AAC3B,gBAAI,SAAS;AAAQ,uBAAS,GAAG,IAAI,aAAa,MAAM;UAC1D;QACF;AAEA,eAAO;MACT;MAEQ,kBAAkB,SAAiD,OAAc;AACvF,mBAAW,UAAU,SAAS;AAC5B,gBAAM,MAAM,QAAQ,MAAM;AAC1B,cAAI,CAAC,SAAS,MAAM,KAAK,MAAM,GAAG;AAChC,gBAAI,OAAO,OAAO,UAAU;AAC1B,qBAAO,QAAQ,MAAM;YACvB,WAAW,OAAO,CAAC,IAAI,MAAM;AAC3B,mBAAK,OAAO,OAAO,IAAI,MAAM;AAC7B,qBAAO,QAAQ,MAAM;YACvB;UACF;QACF;MACF;MAEA,WACE,QACA,MACA,QACAC,kBAAiB,KAAK,KAAK,gBAC3B,YAAY,KAAK,KAAK,eAAa;AAEnC,YAAI;AACJ,cAAM,EAAC,SAAQ,IAAI,KAAK;AACxB,YAAI,OAAO,UAAU,UAAU;AAC7B,eAAK,OAAO,QAAQ;QACtB,OAAO;AACL,cAAI,KAAK,KAAK;AAAK,kBAAM,IAAI,MAAM,uBAAuB;mBACjD,OAAO,UAAU;AAAW,kBAAM,IAAI,MAAM,kCAAkC;QACzF;AACA,YAAI,MAAM,KAAK,OAAO,IAAI,MAAM;AAChC,YAAI,QAAQ;AAAW,iBAAO;AAE9B,kBAAS,GAAA,UAAA,aAAY,MAAM,MAAM;AACjC,cAAM,YAAY,UAAA,cAAc,KAAK,MAAM,QAAQ,MAAM;AACzD,cAAM,IAAI,UAAA,UAAU,EAAC,QAAQ,UAAU,MAAM,QAAQ,UAAS,CAAC;AAC/D,aAAK,OAAO,IAAI,IAAI,QAAQ,GAAG;AAC/B,YAAI,aAAa,CAAC,OAAO,WAAW,GAAG,GAAG;AAExC,cAAI;AAAQ,iBAAK,aAAa,MAAM;AACpC,eAAK,KAAK,MAAM,IAAI;QACtB;AACA,YAAIA;AAAgB,eAAK,eAAe,QAAQ,IAAI;AACpD,eAAO;MACT;MAEQ,aAAa,IAAU;AAC7B,YAAI,KAAK,QAAQ,EAAE,KAAK,KAAK,KAAK,EAAE,GAAG;AACrC,gBAAM,IAAI,MAAM,0BAA0B,EAAE,kBAAkB;QAChE;MACF;MAEQ,kBAAkB,KAAc;AACtC,YAAI,IAAI;AAAM,eAAK,mBAAmB,GAAG;;AACpC,oBAAA,cAAc,KAAK,MAAM,GAAG;AAGjC,YAAI,CAAC,IAAI;AAAU,gBAAM,IAAI,MAAM,0BAA0B;AAC7D,eAAO,IAAI;MACb;MAEQ,mBAAmB,KAAc;AACvC,cAAM,cAAc,KAAK;AACzB,aAAK,OAAO,KAAK;AACjB,YAAI;AACF,oBAAA,cAAc,KAAK,MAAM,GAAG;QAC9B;AACE,eAAK,OAAO;QACd;MACF;;AA9cO,IAAAD,KAAA,kBAAkB,mBAAA;AAClB,IAAAA,KAAA,kBAAkB,YAAA;sBAhBNA;AAqerB,aAAS,aAEP,WACA,SACA,KACAE,OAAwB,SAAO;AAE/B,iBAAW,OAAO,WAAW;AAC3B,cAAM,MAAM;AACZ,YAAI,OAAO;AAAS,eAAK,OAAOA,IAAG,EAAE,GAAG,GAAG,YAAY,GAAG,KAAK,UAAU,GAAG,CAAC,EAAE;MACjF;IACF;AAEA,aAAS,UAAqB,QAAc;AAC1C,gBAAS,GAAA,UAAA,aAAY,MAAM;AAC3B,aAAO,KAAK,QAAQ,MAAM,KAAK,KAAK,KAAK,MAAM;IACjD;AAEA,aAAS,oBAAiB;AACxB,YAAM,cAAc,KAAK,KAAK;AAC9B,UAAI,CAAC;AAAa;AAClB,UAAI,MAAM,QAAQ,WAAW;AAAG,aAAK,UAAU,WAAW;;AACrD,mBAAW,OAAO;AAAa,eAAK,UAAU,YAAY,GAAG,GAAgB,GAAG;IACvF;AAEA,aAAS,oBAAiB;AACxB,iBAAW,QAAQ,KAAK,KAAK,SAAS;AACpC,cAAM,SAAS,KAAK,KAAK,QAAQ,IAAI;AACrC,YAAI;AAAQ,eAAK,UAAU,MAAM,MAAM;MACzC;IACF;AAEA,aAAS,mBAEP,MAAsD;AAEtD,UAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAK,cAAc,IAAI;AACvB;MACF;AACA,WAAK,OAAO,KAAK,kDAAkD;AACnE,iBAAW,WAAW,MAAM;AAC1B,cAAM,MAAM,KAAK,OAAO;AACxB,YAAI,CAAC,IAAI;AAAS,cAAI,UAAU;AAChC,aAAK,WAAW,GAAG;MACrB;IACF;AAEA,aAAS,uBAAoB;AAC3B,YAAM,WAAW,EAAC,GAAG,KAAK,KAAI;AAC9B,iBAAW,OAAO;AAAqB,eAAO,SAAS,GAAG;AAC1D,aAAO;IACT;AAEA,QAAM,SAAS,EAAC,MAAG;IAAI,GAAG,OAAI;IAAI,GAAG,QAAK;IAAI,EAAC;AAE/C,aAAS,UAAU,QAAgC;AACjD,UAAI,WAAW;AAAO,eAAO;AAC7B,UAAI,WAAW;AAAW,eAAO;AACjC,UAAI,OAAO,OAAO,OAAO,QAAQ,OAAO;AAAO,eAAO;AACtD,YAAM,IAAI,MAAM,mDAAmD;IACrE;AAEA,QAAM,eAAe;AAErB,aAAS,aAAwB,SAA4B,KAAuB;AAClF,YAAM,EAAC,MAAK,IAAI;AAChB,OAAA,GAAA,OAAA,UAAS,SAAS,CAAC,QAAO;AACxB,YAAI,MAAM,SAAS,GAAG;AAAG,gBAAM,IAAI,MAAM,WAAW,GAAG,qBAAqB;AAC5E,YAAI,CAAC,aAAa,KAAK,GAAG;AAAG,gBAAM,IAAI,MAAM,WAAW,GAAG,mBAAmB;MAChF,CAAC;AACD,UAAI,CAAC;AAAK;AACV,UAAI,IAAI,SAAS,EAAE,UAAU,OAAO,cAAc,MAAM;AACtD,cAAM,IAAI,MAAM,uDAAuD;MACzE;IACF;AAEA,aAAS,QAEP,SACA,YACA,UAAmB;;AAEnB,YAAM,OAAO,eAAU,QAAV,eAAU,SAAA,SAAV,WAAY;AACzB,UAAI,YAAY;AAAM,cAAM,IAAI,MAAM,6CAA6C;AACnF,YAAM,EAAC,MAAK,IAAI;AAChB,UAAI,YAAY,OAAO,MAAM,OAAO,MAAM,MAAM,KAAK,CAAC,EAAC,MAAM,EAAC,MAAM,MAAM,QAAQ;AAClF,UAAI,CAAC,WAAW;AACd,oBAAY,EAAC,MAAM,UAAU,OAAO,CAAA,EAAE;AACtC,cAAM,MAAM,KAAK,SAAS;MAC5B;AACA,YAAM,SAAS,OAAO,IAAI;AAC1B,UAAI,CAAC;AAAY;AAEjB,YAAM,OAAa;QACjB;QACA,YAAY;UACV,GAAG;UACH,OAAM,GAAA,WAAA,cAAa,WAAW,IAAI;UAClC,aAAY,GAAA,WAAA,cAAa,WAAW,UAAU;;;AAGlD,UAAI,WAAW;AAAQ,sBAAc,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM;;AAC7E,kBAAU,MAAM,KAAK,IAAI;AAC9B,YAAM,IAAI,OAAO,IAAI;AACrB,OAAA,KAAA,WAAW,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAE,QAAQ,CAAC,QAAQ,KAAK,WAAW,GAAG,CAAC;IAC9D;AAEA,aAAS,cAAyB,WAAsB,MAAY,QAAc;AAChF,YAAM,IAAI,UAAU,MAAM,UAAU,CAAC,UAAU,MAAM,YAAY,MAAM;AACvE,UAAI,KAAK,GAAG;AACV,kBAAU,MAAM,OAAO,GAAG,GAAG,IAAI;MACnC,OAAO;AACL,kBAAU,MAAM,KAAK,IAAI;AACzB,aAAK,OAAO,KAAK,QAAQ,MAAM,iBAAiB;MAClD;IACF;AAEA,aAAS,kBAA6B,KAAsB;AAC1D,UAAI,EAAC,WAAU,IAAI;AACnB,UAAI,eAAe;AAAW;AAC9B,UAAI,IAAI,SAAS,KAAK,KAAK;AAAO,qBAAa,aAAa,UAAU;AACtE,UAAI,iBAAiB,KAAK,QAAQ,YAAY,IAAI;IACpD;AAEA,QAAM,WAAW;MACf,MAAM;;AAGR,aAAS,aAAa,QAAiB;AACrC,aAAO,EAAC,OAAO,CAAC,QAAQ,QAAQ,EAAC;IACnC;;;;;;;;;ACx3BA,QAAM,MAA6B;MACjC,SAAS;MACT,OAAI;AACF,cAAM,IAAI,MAAM,sDAAsD;MACxE;;AAGF,YAAA,UAAe;;;;;;;;;;ACPf,QAAA,cAAA;AACA,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,MAAM,GAAE,IAAI;AAChC,cAAM,EAAC,QAAQ,WAAW,KAAK,cAAc,MAAM,MAAAC,MAAI,IAAI;AAC3D,cAAM,EAAC,KAAI,IAAI;AACf,aAAK,SAAS,OAAO,SAAS,SAAS,WAAW,KAAK;AAAQ,iBAAO,YAAW;AACjF,cAAM,WAAW,UAAA,WAAW,KAAKA,OAAM,MAAM,QAAQ,IAAI;AACzD,YAAI,aAAa;AAAW,gBAAM,IAAI,YAAA,QAAgB,GAAG,KAAK,aAAa,QAAQ,IAAI;AACvF,YAAI,oBAAoB,UAAA;AAAW,iBAAO,aAAa,QAAQ;AAC/D,eAAO,gBAAgB,QAAQ;AAE/B,iBAAS,cAAW;AAClB,cAAI,QAAQ;AAAM,mBAAO,QAAQ,KAAK,cAAc,KAAK,IAAI,MAAM;AACnE,gBAAM,WAAW,IAAI,WAAW,QAAQ,EAAC,KAAK,KAAI,CAAC;AACnD,iBAAO,QAAQ,MAAK,GAAA,UAAA,KAAI,QAAQ,aAAa,MAAM,KAAK,MAAM;QAChE;AAEA,iBAAS,aAAa,KAAc;AAClC,gBAAM,IAAI,YAAY,KAAK,GAAG;AAC9B,kBAAQ,KAAK,GAAG,KAAK,IAAI,MAAM;QACjC;AAEA,iBAAS,gBAAgB,KAAc;AACrC,gBAAM,UAAU,IAAI,WAClB,UACA,KAAK,KAAK,WAAW,OAAO,EAAC,KAAK,KAAK,OAAM,GAAA,UAAA,WAAU,GAAG,EAAC,IAAI,EAAC,KAAK,IAAG,CAAC;AAE3E,gBAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,gBAAM,SAAS,IAAI,UACjB;YACE,QAAQ;YACR,WAAW,CAAA;YACX,YAAY,UAAA;YACZ,cAAc;YACd,eAAe;aAEjB,KAAK;AAEP,cAAI,eAAe,MAAM;AACzB,cAAI,GAAG,KAAK;QACd;MACF;;AAGF,aAAgB,YAAY,KAAiB,KAAc;AACzD,YAAM,EAAC,IAAG,IAAI;AACd,aAAO,IAAI,WACP,IAAI,WAAW,YAAY,EAAC,KAAK,IAAI,SAAQ,CAAC,KAC9C,GAAA,UAAA,KAAI,IAAI,WAAW,WAAW,EAAC,KAAK,IAAG,CAAC,CAAC;IAC/C;AALA,YAAA,cAAA;AAOA,aAAgB,QAAQ,KAAiB,GAAS,KAAiB,QAAgB;AACjF,YAAM,EAAC,KAAK,GAAE,IAAI;AAClB,YAAM,EAAC,WAAW,WAAW,KAAK,KAAI,IAAI;AAC1C,YAAM,UAAU,KAAK,cAAc,QAAA,QAAE,OAAO,UAAA;AAC5C,UAAI;AAAQ,qBAAY;;AACnB,oBAAW;AAEhB,eAAS,eAAY;AACnB,YAAI,CAAC,IAAI;AAAQ,gBAAM,IAAI,MAAM,wCAAwC;AACzE,cAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,YAAI,IACF,MAAK;AACH,cAAI,MAAK,GAAA,UAAA,YAAU,GAAA,OAAA,kBAAiB,KAAK,GAAG,OAAO,CAAC,EAAE;AACtD,2BAAiB,CAAC;AAClB,cAAI,CAAC;AAAW,gBAAI,OAAO,OAAO,IAAI;QACxC,GACA,CAAC,MAAK;AACJ,cAAI,IAAG,GAAA,UAAA,OAAM,CAAC,eAAe,GAAG,eAAuB,KAAK,MAAM,IAAI,MAAM,CAAC,CAAC;AAC9E,wBAAc,CAAC;AACf,cAAI,CAAC;AAAW,gBAAI,OAAO,OAAO,KAAK;QACzC,CAAC;AAEH,YAAI,GAAG,KAAK;MACd;AAEA,eAAS,cAAW;AAClB,YAAI,QACF,GAAA,OAAA,kBAAiB,KAAK,GAAG,OAAO,GAChC,MAAM,iBAAiB,CAAC,GACxB,MAAM,cAAc,CAAC,CAAC;MAE1B;AAEA,eAAS,cAAc,QAAY;AACjC,cAAM,QAAO,GAAA,UAAA,KAAI,MAAM;AACvB,YAAI,OAAO,QAAA,QAAE,UAAS,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,eAAe,IAAI,MAAM,QAAA,QAAE,OAAO,WAAW,IAAI,GAAG;AACvF,YAAI,OAAO,QAAA,QAAE,SAAQ,GAAA,UAAA,KAAI,QAAA,QAAE,OAAO,SAAS;MAC7C;AAEA,eAAS,iBAAiB,QAAY;;AACpC,YAAI,CAAC,GAAG,KAAK;AAAa;AAC1B,cAAM,gBAAe,KAAA,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAE;AAEpC,YAAI,GAAG,UAAU,MAAM;AACrB,cAAI,gBAAgB,CAAC,aAAa,cAAc;AAC9C,gBAAI,aAAa,UAAU,QAAW;AACpC,iBAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,aAAa,OAAO,GAAG,KAAK;YACnE;UACF,OAAO;AACL,kBAAM,QAAQ,IAAI,IAAI,UAAS,GAAA,UAAA,KAAI,MAAM,kBAAkB;AAC3D,eAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,OAAO,GAAG,OAAO,UAAA,IAAI;UAC5D;QACF;AACA,YAAI,GAAG,UAAU,MAAM;AACrB,cAAI,gBAAgB,CAAC,aAAa,cAAc;AAC9C,gBAAI,aAAa,UAAU,QAAW;AACpC,iBAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,aAAa,OAAO,GAAG,KAAK;YACnE;UACF,OAAO;AACL,kBAAM,QAAQ,IAAI,IAAI,UAAS,GAAA,UAAA,KAAI,MAAM,kBAAkB;AAC3D,eAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,OAAO,GAAG,OAAO,UAAA,IAAI;UAC5D;QACF;MACF;IACF;AAhEA,YAAA,UAAA;AAkEA,YAAA,UAAe;;;;;;;;;AC/Hf,QAAA,OAAA;AACA,QAAA,QAAA;AAEA,QAAM,OAAmB;MACvB;MACA;MACA;MACA;MACA,EAAC,SAAS,WAAU;MACpB;MACA,KAAA;MACA,MAAA;;AAGF,YAAA,UAAe;;;;;;;;;ACbf,QAAA,YAAA;AAEA,QAAM,MAAM,UAAA;AAMZ,QAAM,OAAgE;MACpE,SAAS,EAAC,OAAO,MAAM,IAAI,IAAI,KAAK,MAAM,IAAI,GAAE;MAChD,SAAS,EAAC,OAAO,MAAM,IAAI,IAAI,KAAK,MAAM,IAAI,GAAE;MAChD,kBAAkB,EAAC,OAAO,KAAK,IAAI,IAAI,IAAI,MAAM,IAAI,IAAG;MACxD,kBAAkB,EAAC,OAAO,KAAK,IAAI,IAAI,IAAI,MAAM,IAAI,IAAG;;AAS1D,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,SAAS,WAAU,OAAM,GAAA,UAAA,eAAc,KAAK,OAAc,EAAE,KAAK,IAAI,UAAU;MAC1F,QAAQ,CAAC,EAAC,SAAS,WAAU,OAC3B,GAAA,UAAA,kBAAiB,KAAK,OAAc,EAAE,KAAK,YAAY,UAAU;;AAGrE,QAAM,MAA6B;MACjC,SAAS,OAAO,KAAK,IAAI;MACzB,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,SAAS,MAAM,WAAU,IAAI;AACpC,YAAI,WAAU,GAAA,UAAA,KAAI,IAAI,IAAI,KAAK,OAAc,EAAE,IAAI,IAAI,UAAU,aAAa,IAAI,GAAG;MACvF;;AAGF,YAAA,UAAe;;;;;;;;;ACvCf,QAAA,YAAA;AAQA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,2BAA0B,UAAU;MAC/D,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,kBAAiB,UAAU;;AAGvD,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,YAAY,GAAE,IAAI;AAEpC,cAAM,OAAO,GAAG,KAAK;AACrB,cAAM,MAAM,IAAI,IAAI,KAAK;AACzB,cAAM,UAAU,QACZ,GAAA,UAAA,yBAAwB,GAAG,OAAO,GAAG,UAAU,IAAI,MACnD,GAAA,UAAA,KAAI,GAAG,iBAAiB,GAAG;AAC/B,YAAI,WAAU,GAAA,UAAA,MAAK,UAAU,cAAc,GAAG,MAAM,IAAI,IAAI,UAAU,KAAK,OAAO,IAAI;MACxF;;AAGF,YAAA,UAAe;;;;;;;;;AC/Bf,aAAwB,WAAW,KAAW;AAC5C,YAAM,MAAM,IAAI;AAChB,UAAI,SAAS;AACb,UAAI,MAAM;AACV,UAAI;AACJ,aAAO,MAAM,KAAK;AAChB;AACA,gBAAQ,IAAI,WAAW,KAAK;AAC5B,YAAI,SAAS,SAAU,SAAS,SAAU,MAAM,KAAK;AAEnD,kBAAQ,IAAI,WAAW,GAAG;AAC1B,eAAK,QAAQ,WAAY;AAAQ;QACnC;MACF;AACA,aAAO;IACT;AAfA,YAAA,UAAA;AAiBA,eAAW,OAAO;;;;;;;;;ACjBlB,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,eAAA;AAEA,QAAM,QAAgC;MACpC,QAAQ,EAAC,SAAS,WAAU,GAAC;AAC3B,cAAM,OAAO,YAAY,cAAc,SAAS;AAChD,gBAAO,GAAA,UAAA,qBAAoB,IAAI,SAAS,UAAU;MACpD;MACA,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,aAAY,UAAU;;AAGlD,QAAM,MAA6B;MACjC,SAAS,CAAC,aAAa,WAAW;MAClC,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,SAAS,MAAM,YAAY,GAAE,IAAI;AACxC,cAAM,KAAK,YAAY,cAAc,UAAA,UAAU,KAAK,UAAA,UAAU;AAC9D,cAAM,MACJ,GAAG,KAAK,YAAY,SAAQ,GAAA,UAAA,KAAI,IAAI,aAAY,GAAA,UAAA,MAAI,GAAA,OAAA,SAAQ,IAAI,KAAK,aAAA,OAAU,CAAC,IAAI,IAAI;AAC1F,YAAI,WAAU,GAAA,UAAA,KAAI,GAAG,IAAI,EAAE,IAAI,UAAU,EAAE;MAC7C;;AAGF,YAAA,UAAe;;;;;;;;;AC3Bf,QAAA,SAAA;AACA,QAAA,YAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,2BAA0B,UAAU;MAC/D,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,eAAc,UAAU;;AAGpD,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,MAAM,OAAO,QAAQ,YAAY,GAAE,IAAI;AAE9C,cAAM,IAAI,GAAG,KAAK,gBAAgB,MAAM;AACxC,cAAM,SAAS,SAAQ,GAAA,UAAA,iBAAgB,UAAU,KAAK,CAAC,QAAO,GAAA,OAAA,YAAW,KAAK,MAAM;AACpF,YAAI,WAAU,GAAA,UAAA,MAAK,MAAM,SAAS,IAAI,GAAG;MAC3C;;AAGF,YAAA,UAAe;;;;;;;;;ACzBf,QAAA,YAAA;AAEA,QAAM,QAAgC;MACpC,QAAQ,EAAC,SAAS,WAAU,GAAC;AAC3B,cAAM,OAAO,YAAY,kBAAkB,SAAS;AACpD,gBAAO,GAAA,UAAA,qBAAoB,IAAI,SAAS,UAAU;MACpD;MACA,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,aAAY,UAAU;;AAGlD,QAAM,MAA6B;MACjC,SAAS,CAAC,iBAAiB,eAAe;MAC1C,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,SAAS,MAAM,WAAU,IAAI;AACpC,cAAM,KAAK,YAAY,kBAAkB,UAAA,UAAU,KAAK,UAAA,UAAU;AAClE,YAAI,WAAU,GAAA,UAAA,iBAAgB,IAAI,YAAY,EAAE,IAAI,UAAU,EAAE;MAClE;;AAGF,YAAA,UAAe;;;;;;;;;ACvBf,QAAA,SAAA;AAOA,QAAA,YAAA;AACA,QAAA,SAAA;AAQA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,gBAAe,EAAC,OAAM,GAAA,UAAA,oCAAmC,eAAe;MAC5F,QAAQ,CAAC,EAAC,QAAQ,EAAC,gBAAe,EAAC,OAAM,GAAA,UAAA,uBAAsB,eAAe;;AAGhF,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,YAAY,MAAM,OAAO,GAAE,IAAI;AACnD,cAAM,EAAC,KAAI,IAAI;AACf,YAAI,CAAC,SAAS,OAAO,WAAW;AAAG;AACnC,cAAM,UAAU,OAAO,UAAU,KAAK;AACtC,YAAI,GAAG;AAAW,wBAAa;;AAC1B,0BAAe;AAEpB,YAAI,KAAK,gBAAgB;AACvB,gBAAM,QAAQ,IAAI,aAAa;AAC/B,gBAAM,EAAC,kBAAiB,IAAI,IAAI;AAChC,qBAAW,eAAe,QAAQ;AAChC,iBAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAQ,WAAW,OAAM,UAAa,CAAC,kBAAkB,IAAI,WAAW,GAAG;AAC7E,oBAAM,aAAa,GAAG,UAAU,SAAS,GAAG;AAC5C,oBAAM,MAAM,sBAAsB,WAAW,wBAAwB,UAAU;AAC/E,eAAA,GAAA,OAAA,iBAAgB,IAAI,KAAK,GAAG,KAAK,cAAc;YACjD;UACF;QACF;AAEA,iBAAS,gBAAa;AACpB,cAAI,WAAW,OAAO;AACpB,gBAAI,WAAW,UAAA,KAAK,eAAe;UACrC,OAAO;AACL,uBAAW,QAAQ,QAAQ;AACzB,eAAA,GAAA,OAAA,wBAAuB,KAAK,IAAI;YAClC;UACF;QACF;AAEA,iBAAS,kBAAe;AACtB,gBAAM,UAAU,IAAI,IAAI,SAAS;AACjC,cAAI,WAAW,OAAO;AACpB,kBAAM,QAAQ,IAAI,IAAI,SAAS,IAAI;AACnC,gBAAI,WAAW,OAAO,MAAM,iBAAiB,SAAS,KAAK,CAAC;AAC5D,gBAAI,GAAG,KAAK;UACd,OAAO;AACL,gBAAI,IAAG,GAAA,OAAA,kBAAiB,KAAK,QAAQ,OAAO,CAAC;AAC7C,aAAA,GAAA,OAAA,mBAAkB,KAAK,OAAO;AAC9B,gBAAI,KAAI;UACV;QACF;AAEA,iBAAS,kBAAe;AACtB,cAAI,MAAM,QAAQ,YAAoB,CAAC,SAAQ;AAC7C,gBAAI,UAAU,EAAC,iBAAiB,KAAI,CAAC;AACrC,gBAAI,IAAG,GAAA,OAAA,kBAAiB,KAAK,MAAM,MAAM,KAAK,aAAa,GAAG,MAAM,IAAI,MAAK,CAAE;UACjF,CAAC;QACH;AAEA,iBAAS,iBAAiB,SAAe,OAAW;AAClD,cAAI,UAAU,EAAC,iBAAiB,QAAO,CAAC;AACxC,cAAI,MACF,SACA,YACA,MAAK;AACH,gBAAI,OAAO,QAAO,GAAA,OAAA,gBAAe,KAAK,MAAM,SAAS,KAAK,aAAa,CAAC;AACxE,gBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAK;AACtB,kBAAI,MAAK;AACT,kBAAI,MAAK;YACX,CAAC;UACH,GACA,UAAA,GAAG;QAEP;MACF;;AAGF,YAAA,UAAe;;;;;;;;;AC/Ff,QAAA,YAAA;AAEA,QAAM,QAAgC;MACpC,QAAQ,EAAC,SAAS,WAAU,GAAC;AAC3B,cAAM,OAAO,YAAY,aAAa,SAAS;AAC/C,gBAAO,GAAA,UAAA,qBAAoB,IAAI,SAAS,UAAU;MACpD;MACA,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,aAAY,UAAU;;AAGlD,QAAM,MAA6B;MACjC,SAAS,CAAC,YAAY,UAAU;MAChC,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,SAAS,MAAM,WAAU,IAAI;AACpC,cAAM,KAAK,YAAY,aAAa,UAAA,UAAU,KAAK,UAAA,UAAU;AAC7D,YAAI,WAAU,GAAA,UAAA,KAAI,IAAI,WAAW,EAAE,IAAI,UAAU,EAAE;MACrD;;AAGF,YAAA,UAAe;;;;;;;;;ACxBf,QAAA,QAAA;AAGE,UAAgB,OAAO;AAEzB,YAAA,UAAe;;;;;;;;;ACJf,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,UAAA;AAQA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,GAAG,EAAC,EAAC,OACvB,GAAA,UAAA,+CAA8C,CAAC,QAAQ,CAAC;MAC1D,QAAQ,CAAC,EAAC,QAAQ,EAAC,GAAG,EAAC,EAAC,OAAM,GAAA,UAAA,SAAQ,CAAC,QAAQ,CAAC;;AAGlD,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,OAAO,QAAQ,cAAc,YAAY,GAAE,IAAI;AACjE,YAAI,CAAC,SAAS,CAAC;AAAQ;AACvB,cAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,cAAM,YAAY,aAAa,SAAQ,GAAA,WAAA,gBAAe,aAAa,KAAK,IAAI,CAAA;AAC5E,YAAI,WAAW,OAAO,sBAAqB,GAAA,UAAA,KAAI,UAAU,YAAY;AACrE,YAAI,GAAG,KAAK;AAEZ,iBAAS,sBAAmB;AAC1B,gBAAM,IAAI,IAAI,IAAI,MAAK,GAAA,UAAA,KAAI,IAAI,SAAS;AACxC,gBAAM,IAAI,IAAI,IAAI,GAAG;AACrB,cAAI,UAAU,EAAC,GAAG,EAAC,CAAC;AACpB,cAAI,OAAO,OAAO,IAAI;AACtB,cAAI,IAAG,GAAA,UAAA,KAAI,CAAC,QAAQ,OAAO,YAAW,IAAK,QAAQ,QAAQ,GAAG,CAAC,CAAC;QAClE;AAEA,iBAAS,cAAW;AAClB,iBAAO,UAAU,SAAS,KAAK,CAAC,UAAU,KAAK,CAAC,MAAM,MAAM,YAAY,MAAM,OAAO;QACvF;AAEA,iBAAS,MAAM,GAAS,GAAO;AAC7B,gBAAM,OAAO,IAAI,KAAK,MAAM;AAC5B,gBAAM,aAAY,GAAA,WAAA,gBAAe,WAAW,MAAM,GAAG,KAAK,eAAe,WAAA,SAAS,KAAK;AACvF,gBAAM,UAAU,IAAI,MAAM,YAAW,GAAA,UAAA,MAAK;AAC1C,cAAI,KAAI,GAAA,UAAA,MAAK,CAAC,OAAO,MAAK;AACxB,gBAAI,IAAI,OAAM,GAAA,UAAA,KAAI,IAAI,IAAI,CAAC,GAAG;AAC9B,gBAAI,GAAG,YAAW,GAAA,UAAA,YAAW;AAC7B,gBAAI,UAAU,SAAS;AAAG,kBAAI,IAAG,GAAA,UAAA,YAAW,IAAI,iBAAgB,GAAA,UAAA,KAAI,IAAI,SAAS;AACjF,gBACG,IAAG,GAAA,UAAA,YAAW,OAAO,IAAI,IAAI,iBAAiB,MAAK;AAClD,kBAAI,OAAO,IAAG,GAAA,UAAA,KAAI,OAAO,IAAI,IAAI,GAAG;AACpC,kBAAI,MAAK;AACT,kBAAI,OAAO,OAAO,KAAK,EAAE,MAAK;YAChC,CAAC,EACA,MAAK,GAAA,UAAA,KAAI,OAAO,IAAI,IAAI,OAAO,CAAC,EAAE;UACvC,CAAC;QACH;AAEA,iBAAS,OAAO,GAAS,GAAO;AAC9B,gBAAM,OAAM,GAAA,OAAA,SAAQ,KAAK,QAAA,OAAK;AAC9B,gBAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,cAAI,MAAM,KAAK,EAAE,KAAI,GAAA,UAAA,MAAK,CAAC,OAAO,MAChC,IAAI,KAAI,GAAA,UAAA,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,MAC/B,IAAI,IAAG,GAAA,UAAA,KAAI,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,MAAK;AACnD,gBAAI,MAAK;AACT,gBAAI,OAAO,OAAO,KAAK,EAAE,MAAM,KAAK;UACtC,CAAC,CAAC,CACH;QAEL;MACF;;AAGF,YAAA,UAAe;;;;;;;;;AC5Ef,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,UAAA;AAIA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,oBAAmB,UAAU;;AAGzD,QAAM,MAA6B;MACjC,SAAS;MACT,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,OAAO,YAAY,OAAM,IAAI;AAC/C,YAAI,SAAU,UAAU,OAAO,UAAU,UAAW;AAClD,cAAI,WAAU,GAAA,UAAA,OAAK,GAAA,OAAA,SAAQ,KAAK,QAAA,OAAK,CAAC,IAAI,IAAI,KAAK,UAAU,GAAG;QAClE,OAAO;AACL,cAAI,MAAK,GAAA,UAAA,KAAI,MAAM,QAAQ,IAAI,EAAE;QACnC;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACzBf,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,UAAA;AAIA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,qBAAoB,UAAU;;AAG1D,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,OAAO,QAAQ,YAAY,GAAE,IAAI;AACnD,YAAI,CAAC,SAAS,OAAO,WAAW;AAAG,gBAAM,IAAI,MAAM,gCAAgC;AACnF,cAAM,UAAU,OAAO,UAAU,GAAG,KAAK;AACzC,YAAI;AACJ,cAAM,SAAS,MAAa,QAAG,QAAH,QAAG,SAAH,MAAA,OAAQ,GAAA,OAAA,SAAQ,KAAK,QAAA,OAAK;AAEtD,YAAI;AACJ,YAAI,WAAW,OAAO;AACpB,kBAAQ,IAAI,IAAI,OAAO;AACvB,cAAI,WAAW,OAAO,QAAQ;QAChC,OAAO;AAEL,cAAI,CAAC,MAAM,QAAQ,MAAM;AAAG,kBAAM,IAAI,MAAM,0BAA0B;AACtE,gBAAM,UAAU,IAAI,MAAM,WAAW,UAAU;AAC/C,mBAAQ,GAAA,UAAA,IAAG,GAAG,OAAO,IAAI,CAAC,IAAa,MAAc,UAAU,SAAS,CAAC,CAAC,CAAC;QAC7E;AACA,YAAI,KAAK,KAAK;AAEd,iBAAS,WAAQ;AACf,cAAI,OAAO,OAAO,KAAK;AACvB,cAAI,MAAM,KAAK,YAAoB,CAAC,MAClC,IAAI,IAAG,GAAA,UAAA,KAAI,OAAM,CAAE,IAAI,IAAI,KAAK,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,IAAI,EAAE,MAAK,CAAE,CAAC;QAEhF;AAEA,iBAAS,UAAU,SAAe,GAAS;AACzC,gBAAM,MAAM,OAAO,CAAC;AACpB,iBAAO,OAAO,QAAQ,YAAY,QAAQ,QACtC,GAAA,UAAA,KAAI,OAAM,CAAE,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,QACrC,GAAA,UAAA,KAAI,IAAI,QAAQ,GAAG;QACzB;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACpDf,QAAA,gBAAA;AACA,QAAA,eAAA;AACA,QAAA,gBAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AACA,QAAA,aAAA;AACA,QAAA,eAAA;AACA,QAAA,gBAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AAEA,QAAM,aAAyB;;MAE7B,cAAA;MACA,aAAA;;MAEA,cAAA;MACA,UAAA;;MAEA,kBAAA;MACA,WAAA;;MAEA,aAAA;MACA,cAAA;;MAEA,EAAC,SAAS,QAAQ,YAAY,CAAC,UAAU,OAAO,EAAC;MACjD,EAAC,SAAS,YAAY,YAAY,UAAS;MAC3C,QAAA;MACA,OAAA;;AAGF,YAAA,UAAe;;;;;;;;;;ACzBf,QAAA,YAAA;AACA,QAAA,SAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,IAAG,EAAC,OAAM,GAAA,UAAA,+BAA8B,GAAG;MAC/D,QAAQ,CAAC,EAAC,QAAQ,EAAC,IAAG,EAAC,OAAM,GAAA,UAAA,aAAY,GAAG;;AAG9C,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,WAAW,QAAQ;MAChC,QAAQ;MACR;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,cAAc,GAAE,IAAI;AAC3B,cAAM,EAAC,MAAK,IAAI;AAChB,YAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,WAAA,GAAA,OAAA,iBAAgB,IAAI,sEAAsE;AAC1F;QACF;AACA,gCAAwB,KAAK,KAAK;MACpC;;AAGF,aAAgB,wBAAwB,KAAiB,OAAkB;AACzE,YAAM,EAAC,KAAK,QAAQ,MAAM,SAAS,GAAE,IAAI;AACzC,SAAG,QAAQ;AACX,YAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,SAAS;AAC9C,UAAI,WAAW,OAAO;AACpB,YAAI,UAAU,EAAC,KAAK,MAAM,OAAM,CAAC;AACjC,YAAI,MAAK,GAAA,UAAA,KAAI,GAAG,OAAO,MAAM,MAAM,EAAE;MACvC,WAAW,OAAO,UAAU,YAAY,EAAC,GAAA,OAAA,mBAAkB,IAAI,MAAM,GAAG;AACtE,cAAM,QAAQ,IAAI,IAAI,UAAS,GAAA,UAAA,KAAI,GAAG,OAAO,MAAM,MAAM,EAAE;AAC3D,YAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAM,cAAc,KAAK,CAAC;AAC7C,YAAI,GAAG,KAAK;MACd;AAEA,eAAS,cAAc,OAAW;AAChC,YAAI,SAAS,KAAK,MAAM,QAAQ,KAAK,CAAC,MAAK;AACzC,cAAI,UAAU,EAAC,SAAS,UAAU,GAAG,cAAc,OAAA,KAAK,IAAG,GAAG,KAAK;AACnE,cAAI,CAAC,GAAG;AAAW,gBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAM,IAAI,MAAK,CAAE;QACzD,CAAC;MACH;IACF;AAnBA,YAAA,0BAAA;AAqBA,YAAA,UAAe;;;;;;;;;;ACrDf,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,UAAU,SAAS,SAAS;MACzC,QAAQ;MACR,KAAK,KAAe;AAClB,cAAM,EAAC,QAAQ,GAAE,IAAI;AACrB,YAAI,MAAM,QAAQ,MAAM;AAAG,iBAAO,cAAc,KAAK,mBAAmB,MAAM;AAC9E,WAAG,QAAQ;AACX,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM;AAAG;AACnC,YAAI,IAAG,GAAA,OAAA,eAAc,GAAG,CAAC;MAC3B;;AAGF,aAAgB,cACd,KACA,YACA,SAAsB,IAAI,QAAM;AAEhC,YAAM,EAAC,KAAK,cAAc,MAAM,SAAS,GAAE,IAAI;AAC/C,uBAAiB,YAAY;AAC7B,UAAI,GAAG,KAAK,eAAe,OAAO,UAAU,GAAG,UAAU,MAAM;AAC7D,WAAG,QAAQ,OAAA,eAAe,MAAM,KAAK,OAAO,QAAQ,GAAG,KAAK;MAC9D;AACA,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,SAAS;AAC9C,aAAO,QAAQ,CAAC,KAAgB,MAAa;AAC3C,aAAI,GAAA,OAAA,mBAAkB,IAAI,GAAG;AAAG;AAChC,YAAI,IAAG,GAAA,UAAA,KAAI,GAAG,MAAM,CAAC,IAAI,MACvB,IAAI,UACF;UACE;UACA,YAAY;UACZ,UAAU;WAEZ,KAAK,CACN;AAEH,YAAI,GAAG,KAAK;MACd,CAAC;AAED,eAAS,iBAAiB,KAAoB;AAC5C,cAAM,EAAC,MAAM,cAAa,IAAI;AAC9B,cAAM,IAAI,OAAO;AACjB,cAAM,YAAY,MAAM,IAAI,aAAa,MAAM,IAAI,YAAY,IAAI,UAAU,MAAM;AACnF,YAAI,KAAK,gBAAgB,CAAC,WAAW;AACnC,gBAAM,MAAM,IAAI,OAAO,QAAQ,CAAC,oCAAoC,UAAU,4CAA4C,aAAa;AACvI,WAAA,GAAA,OAAA,iBAAgB,IAAI,KAAK,KAAK,YAAY;QAC5C;MACF;IACF;AApCA,YAAA,gBAAA;AAsCA,YAAA,UAAe;;;;;;;;;ACzDf,QAAA,UAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,OAAO;MACpB,QAAQ;MACR,MAAM,CAAC,SAAQ,GAAA,QAAA,eAAc,KAAK,OAAO;;AAG3C,YAAA,UAAe;;;;;;;;;ACJf,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AACA,QAAA,oBAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,IAAG,EAAC,OAAM,GAAA,UAAA,+BAA8B,GAAG;MAC/D,QAAQ,CAAC,EAAC,QAAQ,EAAC,IAAG,EAAC,OAAM,GAAA,UAAA,aAAY,GAAG;;AAG9C,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,UAAU,SAAS;MAChC,QAAQ;MACR;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,QAAQ,cAAc,GAAE,IAAI;AACnC,cAAM,EAAC,YAAW,IAAI;AACtB,WAAG,QAAQ;AACX,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM;AAAG;AACnC,YAAI;AAAa,WAAA,GAAA,kBAAA,yBAAwB,KAAK,WAAW;;AACpD,cAAI,IAAG,GAAA,OAAA,eAAc,GAAG,CAAC;MAChC;;AAGF,YAAA,UAAe;;;;;;;;;AC5Bf,QAAA,YAAA;AACA,QAAA,SAAA;AAQA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,KAAK,IAAG,EAAC,MAC3B,QAAQ,UACJ,GAAA,UAAA,6BAA4B,GAAG,oBAC/B,GAAA,UAAA,6BAA4B,GAAG,qBAAqB,GAAG;MAC7D,QAAQ,CAAC,EAAC,QAAQ,EAAC,KAAK,IAAG,EAAC,MAC1B,QAAQ,UAAY,GAAA,UAAA,mBAAkB,GAAG,OAAM,GAAA,UAAA,mBAAkB,GAAG,kBAAkB,GAAG;;AAG7F,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,UAAU,SAAS;MAChC,QAAQ;MACR,aAAa;MACb;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,cAAc,MAAM,GAAE,IAAI;AAC9C,YAAI;AACJ,YAAI;AACJ,cAAM,EAAC,aAAa,YAAW,IAAI;AACnC,YAAI,GAAG,KAAK,MAAM;AAChB,gBAAM,gBAAgB,SAAY,IAAI;AACtC,gBAAM;QACR,OAAO;AACL,gBAAM;QACR;AACA,cAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,SAAS;AAC9C,YAAI,UAAU,EAAC,KAAK,IAAG,CAAC;AACxB,YAAI,QAAQ,UAAa,QAAQ,GAAG;AAClC,WAAA,GAAA,OAAA,iBAAgB,IAAI,sEAAsE;AAC1F;QACF;AACA,YAAI,QAAQ,UAAa,MAAM,KAAK;AAClC,WAAA,GAAA,OAAA,iBAAgB,IAAI,iDAAiD;AACrE,cAAI,KAAI;AACR;QACF;AACA,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM,GAAG;AACjC,cAAI,QAAO,GAAA,UAAA,KAAI,GAAG,OAAO,GAAG;AAC5B,cAAI,QAAQ;AAAW,oBAAO,GAAA,UAAA,KAAI,IAAI,OAAO,GAAG,OAAO,GAAG;AAC1D,cAAI,KAAK,IAAI;AACb;QACF;AAEA,WAAG,QAAQ;AACX,cAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAI,QAAQ,UAAa,QAAQ,GAAG;AAClC,wBAAc,OAAO,MAAM,IAAI,GAAG,OAAO,MAAM,IAAI,MAAK,CAAE,CAAC;QAC7D,WAAW,QAAQ,GAAG;AACpB,cAAI,IAAI,OAAO,IAAI;AACnB,cAAI,QAAQ;AAAW,gBAAI,IAAG,GAAA,UAAA,KAAI,IAAI,eAAe,sBAAsB;QAC7E,OAAO;AACL,cAAI,IAAI,OAAO,KAAK;AACpB,iCAAsB;QACxB;AACA,YAAI,OAAO,OAAO,MAAM,IAAI,MAAK,CAAE;AAEnC,iBAAS,yBAAsB;AAC7B,gBAAM,WAAW,IAAI,KAAK,QAAQ;AAClC,gBAAM,QAAQ,IAAI,IAAI,SAAS,CAAC;AAChC,wBAAc,UAAU,MAAM,IAAI,GAAG,UAAU,MAAM,YAAY,KAAK,CAAC,CAAC;QAC1E;AAEA,iBAAS,cAAc,QAAc,OAAiB;AACpD,cAAI,SAAS,KAAK,GAAG,KAAK,CAAC,MAAK;AAC9B,gBAAI,UACF;cACE,SAAS;cACT,UAAU;cACV,cAAc,OAAA,KAAK;cACnB,eAAe;eAEjB,MAAM;AAER,kBAAK;UACP,CAAC;QACH;AAEA,iBAAS,YAAY,OAAW;AAC9B,cAAI,MAAK,GAAA,UAAA,KAAI,KAAK,IAAI;AACtB,cAAI,QAAQ,QAAW;AACrB,gBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,OAAO,GAAG,IAAI,MAAM,IAAI,OAAO,OAAO,IAAI,EAAE,MAAK,CAAE;UACrE,OAAO;AACL,gBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,MAAM,GAAG,IAAI,MAAM,IAAI,OAAO,OAAO,KAAK,EAAE,MAAK,CAAE;AACnE,gBAAI,QAAQ;AAAG,kBAAI,OAAO,OAAO,IAAI;;AAChC,kBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,OAAO,GAAG,IAAI,MAAM,IAAI,OAAO,OAAO,IAAI,CAAC;UAClE;QACF;MACF;;AAGF,YAAA,UAAe;;;;;;;;;;ACpGf,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AAmBa,YAAA,QAAgC;MAC3C,SAAS,CAAC,EAAC,QAAQ,EAAC,UAAU,WAAW,KAAI,EAAC,MAAK;AACjD,cAAM,eAAe,cAAc,IAAI,aAAa;AACpD,gBAAO,GAAA,UAAA,iBAAgB,YAAY,IAAI,IAAI,kBAAkB,QAAQ;MACvE;MACA,QAAQ,CAAC,EAAC,QAAQ,EAAC,UAAU,WAAW,MAAM,gBAAe,EAAC,OAC5D,GAAA,UAAA,gBAAe,QAAQ;uBACJ,eAAe;iBACrB,SAAS;YACd,IAAI;;;AAGhB,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,OAAA,QAAA;MACA,KAAK,KAAe;AAClB,cAAM,CAAC,UAAU,OAAO,IAAI,kBAAkB,GAAG;AACjD,6BAAqB,KAAK,QAAQ;AAClC,2BAAmB,KAAK,OAAO;MACjC;;AAGF,aAAS,kBAAkB,EAAC,OAAM,GAAa;AAC7C,YAAM,eAAqC,CAAA;AAC3C,YAAM,aAAiC,CAAA;AACvC,iBAAW,OAAO,QAAQ;AACxB,YAAI,QAAQ;AAAa;AACzB,cAAM,OAAO,MAAM,QAAQ,OAAO,GAAG,CAAC,IAAI,eAAe;AACzD,aAAK,GAAG,IAAI,OAAO,GAAG;MACxB;AACA,aAAO,CAAC,cAAc,UAAU;IAClC;AAEA,aAAgB,qBACd,KACA,eAA2C,IAAI,QAAM;AAErD,YAAM,EAAC,KAAK,MAAM,GAAE,IAAI;AACxB,UAAI,OAAO,KAAK,YAAY,EAAE,WAAW;AAAG;AAC5C,YAAM,UAAU,IAAI,IAAI,SAAS;AACjC,iBAAW,QAAQ,cAAc;AAC/B,cAAM,OAAO,aAAa,IAAI;AAC9B,YAAI,KAAK,WAAW;AAAG;AACvB,cAAM,eAAc,GAAA,OAAA,gBAAe,KAAK,MAAM,MAAM,GAAG,KAAK,aAAa;AACzE,YAAI,UAAU;UACZ,UAAU;UACV,WAAW,KAAK;UAChB,MAAM,KAAK,KAAK,IAAI;SACrB;AACD,YAAI,GAAG,WAAW;AAChB,cAAI,GAAG,aAAa,MAAK;AACvB,uBAAW,WAAW,MAAM;AAC1B,eAAA,GAAA,OAAA,wBAAuB,KAAK,OAAO;YACrC;UACF,CAAC;QACH,OAAO;AACL,cAAI,IAAG,GAAA,UAAA,KAAI,WAAW,SAAQ,GAAA,OAAA,kBAAiB,KAAK,MAAM,OAAO,CAAC,GAAG;AACrE,WAAA,GAAA,OAAA,mBAAkB,KAAK,OAAO;AAC9B,cAAI,KAAI;QACV;MACF;IACF;AA5BA,YAAA,uBAAA;AA8BA,aAAgB,mBAAmB,KAAiB,aAAwB,IAAI,QAAM;AACpF,YAAM,EAAC,KAAK,MAAM,SAAS,GAAE,IAAI;AACjC,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,iBAAW,QAAQ,YAAY;AAC7B,aAAI,GAAA,OAAA,mBAAkB,IAAI,WAAW,IAAI,CAAc;AAAG;AAC1D,YAAI;WACF,GAAA,OAAA,gBAAe,KAAK,MAAM,MAAM,GAAG,KAAK,aAAa;UACrD,MAAK;AACH,kBAAM,SAAS,IAAI,UAAU,EAAC,SAAS,YAAY,KAAI,GAAG,KAAK;AAC/D,gBAAI,oBAAoB,QAAQ,KAAK;UACvC;UACA,MAAM,IAAI,IAAI,OAAO,IAAI;;;AAE3B,YAAI,GAAG,KAAK;MACd;IACF;AAfA,YAAA,qBAAA;AAiBA,YAAA,UAAe;;;;;;;;;ACxGf,QAAA,YAAA;AACA,QAAA,SAAA;AAIA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,oBAAmB,OAAO,YAAY;;AAG9D,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY,CAAC,UAAU,SAAS;MAChC;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,MAAM,GAAE,IAAI;AAChC,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM;AAAG;AACnC,cAAM,QAAQ,IAAI,KAAK,OAAO;AAE9B,YAAI,MAAM,OAAO,MAAM,CAAC,QAAO;AAC7B,cAAI,UAAU,EAAC,cAAc,IAAG,CAAC;AACjC,cAAI,UACF;YACE,SAAS;YACT,MAAM;YACN,WAAW,CAAC,QAAQ;YACpB,cAAc;YACd,eAAe;aAEjB,KAAK;AAEP,cAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAK;AACtB,gBAAI,MAAM,IAAI;AACd,gBAAI,CAAC,GAAG;AAAW,kBAAI,MAAK;UAC9B,CAAC;QACH,CAAC;AAED,YAAI,GAAG,KAAK;MACd;;AAGF,YAAA,UAAe;;;;;;;;;AC1Cf,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AAEA,QAAA,SAAA;AAQA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,0BAAyB,OAAO,kBAAkB;;AAG1E,QAAM,MAAsD;MAC1D,SAAS;MACT,MAAM,CAAC,QAAQ;MACf,YAAY,CAAC,WAAW,QAAQ;MAChC,gBAAgB;MAChB,aAAa;MACb;MACA,KAAK,KAAG;AACN,cAAM,EAAC,KAAK,QAAQ,cAAc,MAAM,WAAW,GAAE,IAAI;AAEzD,YAAI,CAAC;AAAW,gBAAM,IAAI,MAAM,0BAA0B;AAC1D,cAAM,EAAC,WAAW,KAAI,IAAI;AAC1B,WAAG,QAAQ;AACX,YAAI,KAAK,qBAAqB,UAAS,GAAA,OAAA,mBAAkB,IAAI,MAAM;AAAG;AACtE,cAAM,SAAQ,GAAA,OAAA,qBAAoB,aAAa,UAAU;AACzD,cAAM,YAAW,GAAA,OAAA,qBAAoB,aAAa,iBAAiB;AACnE,kCAAyB;AACzB,YAAI,IAAG,GAAA,UAAA,KAAI,SAAS,QAAQ,QAAA,QAAE,MAAM,EAAE;AAEtC,iBAAS,4BAAyB;AAChC,cAAI,MAAM,OAAO,MAAM,CAAC,QAAa;AACnC,gBAAI,CAAC,MAAM,UAAU,CAAC,SAAS;AAAQ,qCAAuB,GAAG;;AAC5D,kBAAI,GAAG,aAAa,GAAG,GAAG,MAAM,uBAAuB,GAAG,CAAC;UAClE,CAAC;QACH;AAEA,iBAAS,aAAa,KAAS;AAC7B,cAAI;AACJ,cAAI,MAAM,SAAS,GAAG;AAEpB,kBAAM,eAAc,GAAA,OAAA,gBAAe,IAAI,aAAa,YAAY,YAAY;AAC5E,2BAAc,GAAA,OAAA,eAAc,KAAK,aAAqB,GAAG;UAC3D,WAAW,MAAM,QAAQ;AACvB,2BAAc,GAAA,UAAA,IAAG,GAAG,MAAM,IAAI,CAAC,OAAM,GAAA,UAAA,KAAI,GAAG,QAAQ,CAAC,EAAE,CAAC;UAC1D,OAAO;AACL,0BAAc,UAAA;UAChB;AACA,cAAI,SAAS,QAAQ;AACnB,2BAAc,GAAA,UAAA,IAAG,aAAa,GAAG,SAAS,IAAI,CAAC,OAAM,GAAA,UAAA,MAAI,GAAA,OAAA,YAAW,KAAK,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC;UAC7F;AACA,kBAAO,GAAA,UAAA,KAAI,WAAW;QACxB;AAEA,iBAAS,iBAAiB,KAAS;AACjC,cAAI,MAAK,GAAA,UAAA,YAAW,IAAI,IAAI,GAAG,GAAG;QACpC;AAEA,iBAAS,uBAAuB,KAAS;AACvC,cAAI,KAAK,qBAAqB,SAAU,KAAK,oBAAoB,WAAW,OAAQ;AAClF,6BAAiB,GAAG;AACpB;UACF;AAEA,cAAI,WAAW,OAAO;AACpB,gBAAI,UAAU,EAAC,oBAAoB,IAAG,CAAC;AACvC,gBAAI,MAAK;AACT,gBAAI,CAAC;AAAW,kBAAI,MAAK;AACzB;UACF;AAEA,cAAI,OAAO,UAAU,YAAY,EAAC,GAAA,OAAA,mBAAkB,IAAI,MAAM,GAAG;AAC/D,kBAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,gBAAI,KAAK,qBAAqB,WAAW;AACvC,oCAAsB,KAAK,OAAO,KAAK;AACvC,kBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAK;AACtB,oBAAI,MAAK;AACT,iCAAiB,GAAG;cACtB,CAAC;YACH,OAAO;AACL,oCAAsB,KAAK,KAAK;AAChC,kBAAI,CAAC;AAAW,oBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAM,IAAI,MAAK,CAAE;YACtD;UACF;QACF;AAEA,iBAAS,sBAAsB,KAAW,OAAa,QAAc;AACnE,gBAAM,YAA2B;YAC/B,SAAS;YACT,UAAU;YACV,cAAc,OAAA,KAAK;;AAErB,cAAI,WAAW,OAAO;AACpB,mBAAO,OAAO,WAAW;cACvB,eAAe;cACf,cAAc;cACd,WAAW;aACZ;UACH;AACA,cAAI,UAAU,WAAW,KAAK;QAChC;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACpHf,QAAA,aAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AACA,QAAA,yBAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,cAAc,MAAM,GAAE,IAAI;AAC9C,YAAI,GAAG,KAAK,qBAAqB,SAAS,aAAa,yBAAyB,QAAW;AACzF,iCAAA,QAAM,KAAK,IAAI,WAAA,WAAW,IAAI,uBAAA,SAAO,sBAAsB,CAAC;QAC9D;AACA,cAAM,YAAW,GAAA,OAAA,qBAAoB,MAAM;AAC3C,mBAAW,QAAQ,UAAU;AAC3B,aAAG,kBAAkB,IAAI,IAAI;QAC/B;AACA,YAAI,GAAG,KAAK,eAAe,SAAS,UAAU,GAAG,UAAU,MAAM;AAC/D,aAAG,QAAQ,OAAA,eAAe,MAAM,MAAK,GAAA,OAAA,QAAO,QAAQ,GAAG,GAAG,KAAK;QACjE;AACA,cAAM,aAAa,SAAS,OAAO,CAAC,MAAM,EAAC,GAAA,OAAA,mBAAkB,IAAI,OAAO,CAAC,CAAC,CAAC;AAC3E,YAAI,WAAW,WAAW;AAAG;AAC7B,cAAM,QAAQ,IAAI,KAAK,OAAO;AAE9B,mBAAW,QAAQ,YAAY;AAC7B,cAAI,WAAW,IAAI,GAAG;AACpB,gCAAoB,IAAI;UAC1B,OAAO;AACL,gBAAI,IAAG,GAAA,OAAA,gBAAe,KAAK,MAAM,MAAM,GAAG,KAAK,aAAa,CAAC;AAC7D,gCAAoB,IAAI;AACxB,gBAAI,CAAC,GAAG;AAAW,kBAAI,KAAI,EAAG,IAAI,OAAO,IAAI;AAC7C,gBAAI,MAAK;UACX;AACA,cAAI,GAAG,kBAAkB,IAAI,IAAI;AACjC,cAAI,GAAG,KAAK;QACd;AAEA,iBAAS,WAAW,MAAY;AAC9B,iBAAO,GAAG,KAAK,eAAe,CAAC,GAAG,iBAAiB,OAAO,IAAI,EAAE,YAAY;QAC9E;AAEA,iBAAS,oBAAoB,MAAY;AACvC,cAAI,UACF;YACE,SAAS;YACT,YAAY;YACZ,UAAU;aAEZ,KAAK;QAET;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACtDf,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AAGA,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,MAAM,cAAc,GAAE,IAAI;AAC9C,cAAM,EAAC,KAAI,IAAI;AACf,cAAM,YAAW,GAAA,OAAA,qBAAoB,MAAM;AAC3C,cAAM,sBAAsB,SAAS,OAAO,CAAC,OAC3C,GAAA,OAAA,mBAAkB,IAAI,OAAO,CAAC,CAAc,CAAC;AAG/C,YACE,SAAS,WAAW,KACnB,oBAAoB,WAAW,SAAS,WACtC,CAAC,GAAG,KAAK,eAAe,GAAG,UAAU,OACxC;AACA;QACF;AAEA,cAAM,kBACJ,KAAK,gBAAgB,CAAC,KAAK,2BAA2B,aAAa;AACrE,cAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAI,GAAG,UAAU,QAAQ,EAAE,GAAG,iBAAiB,UAAA,OAAO;AACpD,aAAG,SAAQ,GAAA,OAAA,sBAAqB,KAAK,GAAG,KAAK;QAC/C;AACA,cAAM,EAAC,MAAK,IAAI;AAChB,kCAAyB;AAEzB,iBAAS,4BAAyB;AAChC,qBAAW,OAAO,UAAU;AAC1B,gBAAI;AAAiB,sCAAwB,GAAG;AAChD,gBAAI,GAAG,WAAW;AAChB,iCAAmB,GAAG;YACxB,OAAO;AACL,kBAAI,IAAI,OAAO,IAAI;AACnB,iCAAmB,GAAG;AACtB,kBAAI,GAAG,KAAK;YACd;UACF;QACF;AAEA,iBAAS,wBAAwB,KAAW;AAC1C,qBAAW,QAAQ,iBAAiB;AAClC,gBAAI,IAAI,OAAO,GAAG,EAAE,KAAK,IAAI,GAAG;AAC9B,eAAA,GAAA,OAAA,iBACE,IACA,YAAY,IAAI,oBAAoB,GAAG,gCAAgC;YAE3E;UACF;QACF;AAEA,iBAAS,mBAAmB,KAAW;AACrC,cAAI,MAAM,OAAO,MAAM,CAAC,QAAO;AAC7B,gBAAI,IAAG,GAAA,UAAA,MAAI,GAAA,OAAA,YAAW,KAAK,GAAG,CAAC,SAAS,GAAG,KAAK,MAAK;AACnD,oBAAM,cAAc,oBAAoB,SAAS,GAAG;AACpD,kBAAI,CAAC,aAAa;AAChB,oBAAI,UACF;kBACE,SAAS;kBACT,YAAY;kBACZ,UAAU;kBACV,cAAc,OAAA,KAAK;mBAErB,KAAK;cAET;AAEA,kBAAI,GAAG,KAAK,eAAe,UAAU,MAAM;AACzC,oBAAI,QAAO,GAAA,UAAA,KAAI,KAAK,IAAI,GAAG,KAAK,IAAI;cACtC,WAAW,CAAC,eAAe,CAAC,GAAG,WAAW;AAGxC,oBAAI,IAAG,GAAA,UAAA,KAAI,KAAK,GAAG,MAAM,IAAI,MAAK,CAAE;cACtC;YACF,CAAC;UACH,CAAC;QACH;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACxFf,QAAA,SAAA;AAIA,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY,CAAC,UAAU,SAAS;MAChC,aAAa;MACb,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,GAAE,IAAI;AAC1B,aAAI,GAAA,OAAA,mBAAkB,IAAI,MAAM,GAAG;AACjC,cAAI,KAAI;AACR;QACF;AAEA,cAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAI,UACF;UACE,SAAS;UACT,eAAe;UACf,cAAc;UACd,WAAW;WAEb,KAAK;AAGP,YAAI,WACF,OACA,MAAM,IAAI,MAAK,GACf,MAAM,IAAI,MAAK,CAAE;MAErB;MACA,OAAO,EAAC,SAAS,oBAAmB;;AAGtC,YAAA,UAAe;;;;;;;;;ACpCf,QAAA,SAAA;AAIA,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,aAAa;MACb,MAAM,OAAA;MACN,OAAO,EAAC,SAAS,+BAA8B;;AAGjD,YAAA,UAAe;;;;;;;;;ACNf,QAAA,YAAA;AACA,QAAA,SAAA;AASA,QAAM,QAAgC;MACpC,SAAS;MACT,QAAQ,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,sBAAqB,OAAO,OAAO;;AAG3D,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,aAAa;MACb;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,cAAc,GAAE,IAAI;AAExC,YAAI,CAAC,MAAM,QAAQ,MAAM;AAAG,gBAAM,IAAI,MAAM,0BAA0B;AACtE,YAAI,GAAG,KAAK,iBAAiB,aAAa;AAAe;AACzD,cAAM,SAAsB;AAC5B,cAAM,QAAQ,IAAI,IAAI,SAAS,KAAK;AACpC,cAAM,UAAU,IAAI,IAAI,WAAW,IAAI;AACvC,cAAM,WAAW,IAAI,KAAK,QAAQ;AAClC,YAAI,UAAU,EAAC,QAAO,CAAC;AAGvB,YAAI,MAAM,aAAa;AAEvB,YAAI,OACF,OACA,MAAM,IAAI,MAAK,GACf,MAAM,IAAI,MAAM,IAAI,CAAC;AAGvB,iBAAS,gBAAa;AACpB,iBAAO,QAAQ,CAAC,KAAgB,MAAa;AAC3C,gBAAI;AACJ,iBAAI,GAAA,OAAA,mBAAkB,IAAI,GAAG,GAAG;AAC9B,kBAAI,IAAI,UAAU,IAAI;YACxB,OAAO;AACL,uBAAS,IAAI,UACX;gBACE,SAAS;gBACT,YAAY;gBACZ,eAAe;iBAEjB,QAAQ;YAEZ;AAEA,gBAAI,IAAI,GAAG;AACT,kBACG,IAAG,GAAA,UAAA,KAAI,QAAQ,OAAO,KAAK,EAAE,EAC7B,OAAO,OAAO,KAAK,EACnB,OAAO,UAAS,GAAA,UAAA,MAAK,OAAO,KAAK,CAAC,GAAG,EACrC,KAAI;YACT;AAEA,gBAAI,GAAG,UAAU,MAAK;AACpB,kBAAI,OAAO,OAAO,IAAI;AACtB,kBAAI,OAAO,SAAS,CAAC;AACrB,kBAAI;AAAQ,oBAAI,eAAe,QAAQ,UAAA,IAAI;YAC7C,CAAC;UACH,CAAC;QACH;MACF;;AAGF,YAAA,UAAe;;;;;;;;;AC/Ef,QAAA,SAAA;AAEA,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY;MACZ,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,QAAQ,GAAE,IAAI;AAE1B,YAAI,CAAC,MAAM,QAAQ,MAAM;AAAG,gBAAM,IAAI,MAAM,0BAA0B;AACtE,cAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,eAAO,QAAQ,CAAC,KAAgB,MAAa;AAC3C,eAAI,GAAA,OAAA,mBAAkB,IAAI,GAAG;AAAG;AAChC,gBAAM,SAAS,IAAI,UAAU,EAAC,SAAS,SAAS,YAAY,EAAC,GAAG,KAAK;AACrE,cAAI,GAAG,KAAK;AACZ,cAAI,eAAe,MAAM;QAC3B,CAAC;MACH;;AAGF,YAAA,UAAe;;;;;;;;;ACbf,QAAA,YAAA;AACA,QAAA,SAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,mBAAkB,OAAO,QAAQ;MACxD,QAAQ,CAAC,EAAC,OAAM,OAAM,GAAA,UAAA,sBAAqB,OAAO,QAAQ;;AAG5D,QAAM,MAA6B;MACjC,SAAS;MACT,YAAY,CAAC,UAAU,SAAS;MAChC,aAAa;MACb;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,cAAc,GAAE,IAAI;AAChC,YAAI,aAAa,SAAS,UAAa,aAAa,SAAS,QAAW;AACtE,WAAA,GAAA,OAAA,iBAAgB,IAAI,2CAA2C;QACjE;AACA,cAAM,UAAU,UAAU,IAAI,MAAM;AACpC,cAAM,UAAU,UAAU,IAAI,MAAM;AACpC,YAAI,CAAC,WAAW,CAAC;AAAS;AAE1B,cAAM,QAAQ,IAAI,IAAI,SAAS,IAAI;AACnC,cAAM,WAAW,IAAI,KAAK,QAAQ;AAClC,mBAAU;AACV,YAAI,MAAK;AAET,YAAI,WAAW,SAAS;AACtB,gBAAM,WAAW,IAAI,IAAI,UAAU;AACnC,cAAI,UAAU,EAAC,SAAQ,CAAC;AACxB,cAAI,GAAG,UAAU,eAAe,QAAQ,QAAQ,GAAG,eAAe,QAAQ,QAAQ,CAAC;QACrF,WAAW,SAAS;AAClB,cAAI,GAAG,UAAU,eAAe,MAAM,CAAC;QACzC,OAAO;AACL,cAAI,IAAG,GAAA,UAAA,KAAI,QAAQ,GAAG,eAAe,MAAM,CAAC;QAC9C;AAEA,YAAI,KAAK,OAAO,MAAM,IAAI,MAAM,IAAI,CAAC;AAErC,iBAAS,aAAU;AACjB,gBAAM,SAAS,IAAI,UACjB;YACE,SAAS;YACT,eAAe;YACf,cAAc;YACd,WAAW;aAEb,QAAQ;AAEV,cAAI,eAAe,MAAM;QAC3B;AAEA,iBAAS,eAAe,SAAiB,UAAe;AACtD,iBAAO,MAAK;AACV,kBAAM,SAAS,IAAI,UAAU,EAAC,QAAO,GAAG,QAAQ;AAChD,gBAAI,OAAO,OAAO,QAAQ;AAC1B,gBAAI,oBAAoB,QAAQ,KAAK;AACrC,gBAAI;AAAU,kBAAI,OAAO,WAAU,GAAA,UAAA,KAAI,OAAO,EAAE;;AAC3C,kBAAI,UAAU,EAAC,UAAU,QAAO,CAAC;UACxC;QACF;MACF;;AAGF,aAAS,UAAU,IAAkB,SAAe;AAClD,YAAM,SAAS,GAAG,OAAO,OAAO;AAChC,aAAO,WAAW,UAAa,EAAC,GAAA,OAAA,mBAAkB,IAAI,MAAM;IAC9D;AAEA,YAAA,UAAe;;;;;;;;;AC7Ef,QAAA,SAAA;AAEA,QAAM,MAA6B;MACjC,SAAS,CAAC,QAAQ,MAAM;MACxB,YAAY,CAAC,UAAU,SAAS;MAChC,KAAK,EAAC,SAAS,cAAc,GAAE,GAAa;AAC1C,YAAI,aAAa,OAAO;AAAW,WAAA,GAAA,OAAA,iBAAgB,IAAI,IAAI,OAAO,2BAA2B;MAC/F;;AAGF,YAAA,UAAe;;;;;;;;;ACXf,QAAA,oBAAA;AACA,QAAA,gBAAA;AACA,QAAA,UAAA;AACA,QAAA,cAAA;AACA,QAAA,aAAA;AACA,QAAA,iBAAA;AACA,QAAA,kBAAA;AACA,QAAA,yBAAA;AACA,QAAA,eAAA;AACA,QAAA,sBAAA;AACA,QAAA,QAAA;AACA,QAAA,UAAA;AACA,QAAA,UAAA;AACA,QAAA,UAAA;AACA,QAAA,OAAA;AACA,QAAA,aAAA;AAEA,aAAwB,cAAc,YAAY,OAAK;AACrD,YAAM,aAAa;;QAEjB,MAAA;QACA,QAAA;QACA,QAAA;QACA,QAAA;QACA,KAAA;QACA,WAAA;;QAEA,gBAAA;QACA,uBAAA;QACA,eAAA;QACA,aAAA;QACA,oBAAA;;AAGF,UAAI;AAAW,mBAAW,KAAK,cAAA,SAAa,YAAA,OAAS;;AAChD,mBAAW,KAAK,kBAAA,SAAiB,QAAA,OAAK;AAC3C,iBAAW,KAAK,WAAA,OAAQ;AACxB,aAAO;IACT;AArBA,YAAA,UAAA;;;;;;;;;ACTA,QAAA,YAAA;AAaA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,0BAAyB,UAAU;MAC9D,QAAQ,CAAC,EAAC,WAAU,OAAM,GAAA,UAAA,cAAa,UAAU;;AAGnD,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM,CAAC,UAAU,QAAQ;MACzB,YAAY;MACZ,OAAO;MACP;MACA,KAAK,KAAiB,UAAiB;AACrC,cAAM,EAAC,KAAK,MAAM,OAAO,QAAQ,YAAY,GAAE,IAAI;AACnD,cAAM,EAAC,MAAM,eAAe,WAAW,MAAAC,MAAI,IAAI;AAC/C,YAAI,CAAC,KAAK;AAAiB;AAE3B,YAAI;AAAO,8BAAmB;;AACzB,yBAAc;AAEnB,iBAAS,sBAAmB;AAC1B,gBAAM,OAAO,IAAI,WAAW,WAAW;YACrC,KAAKA,MAAK;YACV,MAAM,KAAK,KAAK;WACjB;AACD,gBAAM,OAAO,IAAI,MAAM,SAAQ,GAAA,UAAA,KAAI,IAAI,IAAI,UAAU,GAAG;AACxD,gBAAM,QAAQ,IAAI,IAAI,OAAO;AAC7B,gBAAM,SAAS,IAAI,IAAI,QAAQ;AAE/B,cAAI,IACF,GAAA,UAAA,YAAW,IAAI,qBAAqB,IAAI,uBACxC,MAAM,IAAI,OAAO,QAAO,GAAA,UAAA,KAAI,IAAI,mBAAmB,EAAE,OAAO,SAAQ,GAAA,UAAA,KAAI,IAAI,WAAW,GACvF,MAAM,IAAI,OAAO,QAAO,GAAA,UAAA,YAAW,EAAE,OAAO,QAAQ,IAAI,CAAC;AAE3D,cAAI,WAAU,GAAA,UAAA,IAAG,WAAU,GAAI,WAAU,CAAE,CAAC;AAE5C,mBAAS,aAAU;AACjB,gBAAI,KAAK,iBAAiB;AAAO,qBAAO,UAAA;AACxC,oBAAO,GAAA,UAAA,KAAI,UAAU,QAAQ,MAAM;UACrC;AAEA,mBAAS,aAAU;AACjB,kBAAM,aAAa,UAAU,UACzB,GAAA,UAAA,MAAK,IAAI,kBAAkB,MAAM,IAAI,IAAI,OAAO,MAAM,IAAI,IAAI,QAC9D,GAAA,UAAA,KAAI,MAAM,IAAI,IAAI;AACtB,kBAAM,aAAY,GAAA,UAAA,aAAY,MAAM,oBAAoB,UAAU,MAAM,MAAM,SAAS,IAAI;AAC3F,oBAAO,GAAA,UAAA,KAAI,MAAM,OAAO,MAAM,gBAAgB,KAAK,QAAQ,QAAQ,QAAQ,SAAS;UACtF;QACF;AAEA,iBAAS,iBAAc;AACrB,gBAAM,YAAqCA,MAAK,QAAQ,MAAM;AAC9D,cAAI,CAAC,WAAW;AACd,0BAAa;AACb;UACF;AACA,cAAI,cAAc;AAAM;AACxB,gBAAM,CAAC,SAAS,QAAQ,MAAM,IAAI,UAAU,SAAS;AACrD,cAAI,YAAY;AAAU,gBAAI,KAAK,eAAc,CAAE;AAEnD,mBAAS,gBAAa;AACpB,gBAAI,KAAK,iBAAiB,OAAO;AAC/B,cAAAA,MAAK,OAAO,KAAK,WAAU,CAAE;AAC7B;YACF;AACA,kBAAM,IAAI,MAAM,WAAU,CAAE;AAE5B,qBAAS,aAAU;AACjB,qBAAO,mBAAmB,MAAgB,gCAAgC,aAAa;YACzF;UACF;AAEA,mBAAS,UAAU,QAAmB;AACpC,kBAAM,OACJ,kBAAkB,UACd,GAAA,UAAA,YAAW,MAAM,IACjB,KAAK,KAAK,WACV,GAAA,UAAA,KAAI,KAAK,KAAK,OAAO,IAAG,GAAA,UAAA,aAAY,MAAM,CAAC,KAC3C;AACN,kBAAM,MAAM,IAAI,WAAW,WAAW,EAAC,KAAK,QAAQ,KAAK,QAAQ,KAAI,CAAC;AACtE,gBAAI,OAAO,UAAU,YAAY,EAAE,kBAAkB,SAAS;AAC5D,qBAAO,CAAC,OAAO,QAAQ,UAAU,OAAO,WAAU,GAAA,UAAA,KAAI,GAAG,WAAW;YACtE;AAEA,mBAAO,CAAC,UAAU,QAAQ,GAAG;UAC/B;AAEA,mBAAS,iBAAc;AACrB,gBAAI,OAAO,aAAa,YAAY,EAAE,qBAAqB,WAAW,UAAU,OAAO;AACrF,kBAAI,CAAC,UAAU;AAAQ,sBAAM,IAAI,MAAM,6BAA6B;AACpE,sBAAO,GAAA,UAAA,WAAU,MAAM,IAAI,IAAI;YACjC;AACA,mBAAO,OAAO,UAAU,cAAa,GAAA,UAAA,KAAI,MAAM,IAAI,IAAI,OAAM,GAAA,UAAA,KAAI,MAAM,SAAS,IAAI;UACtF;QACF;MACF;;AAGF,YAAA,UAAe;;;;;;;;;ACtHf,QAAA,WAAA;AAEA,QAAM,SAAqB,CAAC,SAAA,OAAa;AAEzC,YAAA,UAAe;;;;;;;;;;ACHF,YAAA,qBAAiC;MAC5C;MACA;MACA;MACA;MACA;MACA;MACA;;AAGW,YAAA,oBAAgC;MAC3C;MACA;MACA;;;;;;;;;;ACdF,QAAA,SAAA;AACA,QAAA,eAAA;AACA,QAAA,eAAA;AACA,QAAA,WAAA;AACA,QAAA,aAAA;AAEA,QAAM,qBAAmC;MACvC,OAAA;MACA,aAAA;OACA,GAAA,aAAA,SAAuB;MACvB,SAAA;MACA,WAAA;MACA,WAAA;;AAGF,YAAA,UAAe;;;;;;;;;;ACdf,QAAY;AAAZ,KAAA,SAAYC,aAAU;AACpB,MAAAA,YAAA,KAAA,IAAA;AACA,MAAAA,YAAA,SAAA,IAAA;IACF,GAHY,eAAU,QAAA,aAAV,aAAU,CAAA,EAAA;;;;;;;;;ACAtB,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AACA,QAAA,cAAA;AACA,QAAA,SAAA;AAIA,QAAM,QAAgC;MACpC,SAAS,CAAC,EAAC,QAAQ,EAAC,YAAY,QAAO,EAAC,MACtC,eAAe,QAAA,WAAW,MACtB,QAAQ,OAAO,qBACf,iBAAiB,OAAO;MAC9B,QAAQ,CAAC,EAAC,QAAQ,EAAC,YAAY,KAAK,QAAO,EAAC,OAC1C,GAAA,UAAA,aAAY,UAAU,UAAU,OAAO,eAAe,GAAG;;AAG7D,QAAM,MAA6B;MACjC,SAAS;MACT,MAAM;MACN,YAAY;MACZ;MACA,KAAK,KAAe;AAClB,cAAM,EAAC,KAAK,MAAM,QAAQ,cAAc,GAAE,IAAI;AAC9C,cAAM,EAAC,MAAK,IAAI;AAChB,YAAI,CAAC,GAAG,KAAK,eAAe;AAC1B,gBAAM,IAAI,MAAM,8CAA8C;QAChE;AACA,cAAM,UAAU,OAAO;AACvB,YAAI,OAAO,WAAW;AAAU,gBAAM,IAAI,MAAM,sCAAsC;AACtF,YAAI,OAAO;AAAS,gBAAM,IAAI,MAAM,yCAAyC;AAC7E,YAAI,CAAC;AAAO,gBAAM,IAAI,MAAM,uCAAuC;AACnE,cAAM,QAAQ,IAAI,IAAI,SAAS,KAAK;AACpC,cAAM,MAAM,IAAI,MAAM,QAAO,GAAA,UAAA,KAAI,IAAI,IAAG,GAAA,UAAA,aAAY,OAAO,CAAC,EAAE;AAC9D,YAAI,IACF,GAAA,UAAA,YAAW,GAAG,gBACd,MAAM,gBAAe,GACrB,MAAM,IAAI,MAAM,OAAO,EAAC,YAAY,QAAA,WAAW,KAAK,KAAK,QAAO,CAAC,CAAC;AAEpE,YAAI,GAAG,KAAK;AAEZ,iBAAS,kBAAe;AACtB,gBAAM,UAAU,WAAU;AAC1B,cAAI,GAAG,KAAK;AACZ,qBAAW,YAAY,SAAS;AAC9B,gBAAI,QAAO,GAAA,UAAA,KAAI,GAAG,QAAQ,QAAQ,EAAE;AACpC,gBAAI,OAAO,OAAO,eAAe,QAAQ,QAAQ,CAAC,CAAC;UACrD;AACA,cAAI,KAAI;AACR,cAAI,MAAM,OAAO,EAAC,YAAY,QAAA,WAAW,SAAS,KAAK,QAAO,CAAC;AAC/D,cAAI,MAAK;QACX;AAEA,iBAAS,eAAe,YAAmB;AACzC,gBAAM,SAAS,IAAI,KAAK,OAAO;AAC/B,gBAAM,SAAS,IAAI,UAAU,EAAC,SAAS,SAAS,WAAU,GAAG,MAAM;AACnE,cAAI,eAAe,QAAQ,UAAA,IAAI;AAC/B,iBAAO;QACT;AAEA,iBAAS,aAAU;;AACjB,gBAAM,eAAyC,CAAA;AAC/C,gBAAM,cAAc,YAAY,YAAY;AAC5C,cAAI,cAAc;AAClB,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAI,MAAM,MAAM,CAAC;AACjB,iBAAI,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,SAAQ,EAAC,GAAA,OAAA,sBAAqB,KAAK,GAAG,KAAK,KAAK,GAAG;AAC1D,oBAAM,MAAM,IAAI;AAChB,oBAAM,UAAA,WAAW,KAAK,GAAG,MAAM,GAAG,UAAU,MAAM,GAAG,QAAQ,GAAG;AAChE,kBAAI,eAAe,UAAA;AAAW,sBAAM,IAAI;AACxC,kBAAI,QAAQ;AAAW,sBAAM,IAAI,YAAA,QAAgB,GAAG,KAAK,aAAa,GAAG,QAAQ,GAAG;YACtF;AACA,kBAAM,WAAU,KAAA,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAG,OAAO;AACzC,gBAAI,OAAO,WAAW,UAAU;AAC9B,oBAAM,IAAI,MACR,iFAAiF,OAAO,GAAG;YAE/F;AACA,0BAAc,gBAAgB,eAAe,YAAY,GAAG;AAC5D,wBAAY,SAAS,CAAC;UACxB;AACA,cAAI,CAAC;AAAa,kBAAM,IAAI,MAAM,mBAAmB,OAAO,oBAAoB;AAChF,iBAAO;AAEP,mBAAS,YAAY,EAAC,SAAQ,GAAkB;AAC9C,mBAAO,MAAM,QAAQ,QAAQ,KAAK,SAAS,SAAS,OAAO;UAC7D;AAEA,mBAAS,YAAY,KAAsB,GAAS;AAClD,gBAAI,IAAI,OAAO;AACb,yBAAW,IAAI,OAAO,CAAC;YACzB,WAAW,IAAI,MAAM;AACnB,yBAAW,YAAY,IAAI,MAAM;AAC/B,2BAAW,UAAU,CAAC;cACxB;YACF,OAAO;AACL,oBAAM,IAAI,MAAM,8BAA8B,OAAO,+BAA+B;YACtF;UACF;AAEA,mBAAS,WAAW,UAAmB,GAAS;AAC9C,gBAAI,OAAO,YAAY,YAAY,YAAY,cAAc;AAC3D,oBAAM,IAAI,MAAM,mBAAmB,OAAO,iCAAiC;YAC7E;AACA,yBAAa,QAAQ,IAAI;UAC3B;QACF;MACF;;AAGF,YAAA,UAAe;;;;;AChHf,IAAAC,gCAAA;AAAA;AAAA;AAAA,MACE,SAAW;AAAA,MACX,KAAO;AAAA,MACP,OAAS;AAAA,MACT,aAAe;AAAA,QACb,aAAe;AAAA,UACb,MAAQ;AAAA,UACR,UAAY;AAAA,UACZ,OAAS,EAAC,MAAQ,IAAG;AAAA,QACvB;AAAA,QACA,oBAAsB;AAAA,UACpB,MAAQ;AAAA,UACR,SAAW;AAAA,QACb;AAAA,QACA,4BAA8B;AAAA,UAC5B,OAAS,CAAC,EAAC,MAAQ,mCAAkC,GAAG,EAAC,SAAW,EAAC,CAAC;AAAA,QACxE;AAAA,QACA,aAAe;AAAA,UACb,MAAQ,CAAC,SAAS,WAAW,WAAW,QAAQ,UAAU,UAAU,QAAQ;AAAA,QAC9E;AAAA,QACA,aAAe;AAAA,UACb,MAAQ;AAAA,UACR,OAAS,EAAC,MAAQ,SAAQ;AAAA,UAC1B,aAAe;AAAA,UACf,SAAW,CAAC;AAAA,QACd;AAAA,MACF;AAAA,MACA,MAAQ,CAAC,UAAU,SAAS;AAAA,MAC5B,YAAc;AAAA,QACZ,KAAO;AAAA,UACL,MAAQ;AAAA,UACR,QAAU;AAAA,QACZ;AAAA,QACA,SAAW;AAAA,UACT,MAAQ;AAAA,UACR,QAAU;AAAA,QACZ;AAAA,QACA,MAAQ;AAAA,UACN,MAAQ;AAAA,UACR,QAAU;AAAA,QACZ;AAAA,QACA,UAAY;AAAA,UACV,MAAQ;AAAA,QACV;AAAA,QACA,OAAS;AAAA,UACP,MAAQ;AAAA,QACV;AAAA,QACA,aAAe;AAAA,UACb,MAAQ;AAAA,QACV;AAAA,QACA,SAAW;AAAA,QACX,UAAY;AAAA,UACV,MAAQ;AAAA,UACR,SAAW;AAAA,QACb;AAAA,QACA,UAAY;AAAA,UACV,MAAQ;AAAA,UACR,OAAS;AAAA,QACX;AAAA,QACA,YAAc;AAAA,UACZ,MAAQ;AAAA,UACR,kBAAoB;AAAA,QACtB;AAAA,QACA,SAAW;AAAA,UACT,MAAQ;AAAA,QACV;AAAA,QACA,kBAAoB;AAAA,UAClB,MAAQ;AAAA,QACV;AAAA,QACA,SAAW;AAAA,UACT,MAAQ;AAAA,QACV;AAAA,QACA,kBAAoB;AAAA,UAClB,MAAQ;AAAA,QACV;AAAA,QACA,WAAa,EAAC,MAAQ,mCAAkC;AAAA,QACxD,WAAa,EAAC,MAAQ,2CAA0C;AAAA,QAChE,SAAW;AAAA,UACT,MAAQ;AAAA,UACR,QAAU;AAAA,QACZ;AAAA,QACA,iBAAmB,EAAC,MAAQ,IAAG;AAAA,QAC/B,OAAS;AAAA,UACP,OAAS,CAAC,EAAC,MAAQ,IAAG,GAAG,EAAC,MAAQ,4BAA2B,CAAC;AAAA,UAC9D,SAAW;AAAA,QACb;AAAA,QACA,UAAY,EAAC,MAAQ,mCAAkC;AAAA,QACvD,UAAY,EAAC,MAAQ,2CAA0C;AAAA,QAC/D,aAAe;AAAA,UACb,MAAQ;AAAA,UACR,SAAW;AAAA,QACb;AAAA,QACA,UAAY,EAAC,MAAQ,IAAG;AAAA,QACxB,eAAiB,EAAC,MAAQ,mCAAkC;AAAA,QAC5D,eAAiB,EAAC,MAAQ,2CAA0C;AAAA,QACpE,UAAY,EAAC,MAAQ,4BAA2B;AAAA,QAChD,sBAAwB,EAAC,MAAQ,IAAG;AAAA,QACpC,aAAe;AAAA,UACb,MAAQ;AAAA,UACR,sBAAwB,EAAC,MAAQ,IAAG;AAAA,UACpC,SAAW,CAAC;AAAA,QACd;AAAA,QACA,YAAc;AAAA,UACZ,MAAQ;AAAA,UACR,sBAAwB,EAAC,MAAQ,IAAG;AAAA,UACpC,SAAW,CAAC;AAAA,QACd;AAAA,QACA,mBAAqB;AAAA,UACnB,MAAQ;AAAA,UACR,sBAAwB,EAAC,MAAQ,IAAG;AAAA,UACpC,eAAiB,EAAC,QAAU,QAAO;AAAA,UACnC,SAAW,CAAC;AAAA,QACd;AAAA,QACA,cAAgB;AAAA,UACd,MAAQ;AAAA,UACR,sBAAwB;AAAA,YACtB,OAAS,CAAC,EAAC,MAAQ,IAAG,GAAG,EAAC,MAAQ,4BAA2B,CAAC;AAAA,UAChE;AAAA,QACF;AAAA,QACA,eAAiB,EAAC,MAAQ,IAAG;AAAA,QAC7B,OAAS;AAAA,QACT,MAAQ;AAAA,UACN,MAAQ;AAAA,UACR,OAAS;AAAA,UACT,UAAY;AAAA,UACZ,aAAe;AAAA,QACjB;AAAA,QACA,MAAQ;AAAA,UACN,OAAS;AAAA,YACP,EAAC,MAAQ,4BAA2B;AAAA,YACpC;AAAA,cACE,MAAQ;AAAA,cACR,OAAS,EAAC,MAAQ,4BAA2B;AAAA,cAC7C,UAAY;AAAA,cACZ,aAAe;AAAA,YACjB;AAAA,UACF;AAAA,QACF;AAAA,QACA,QAAU,EAAC,MAAQ,SAAQ;AAAA,QAC3B,kBAAoB,EAAC,MAAQ,SAAQ;AAAA,QACrC,iBAAmB,EAAC,MAAQ,SAAQ;AAAA,QACpC,IAAM,EAAC,MAAQ,IAAG;AAAA,QAClB,MAAQ,EAAC,MAAQ,IAAG;AAAA,QACpB,MAAQ,EAAC,MAAQ,IAAG;AAAA,QACpB,OAAS,EAAC,MAAQ,4BAA2B;AAAA,QAC7C,OAAS,EAAC,MAAQ,4BAA2B;AAAA,QAC7C,OAAS,EAAC,MAAQ,4BAA2B;AAAA,QAC7C,KAAO,EAAC,MAAQ,IAAG;AAAA,MACrB;AAAA,MACA,SAAW;AAAA,IACb;AAAA;AAAA;;;;;;;;ACrJA,QAAA,SAAA;AACA,QAAA,WAAA;AACA,QAAA,kBAAA;AACA,QAAA,mBAAA;AAEA,QAAM,oBAAoB,CAAC,aAAa;AAExC,QAAM,iBAAiB;AAEvB,QAAaC,OAAb,cAAyB,OAAA,QAAO;MAC9B,mBAAgB;AACd,cAAM,iBAAgB;AACtB,iBAAA,QAAmB,QAAQ,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;AACvD,YAAI,KAAK,KAAK;AAAe,eAAK,WAAW,gBAAA,OAAa;MAC5D;MAEA,wBAAqB;AACnB,cAAM,sBAAqB;AAC3B,YAAI,CAAC,KAAK,KAAK;AAAM;AACrB,cAAM,aAAa,KAAK,KAAK,QACzB,KAAK,gBAAgB,kBAAkB,iBAAiB,IACxD;AACJ,aAAK,cAAc,YAAY,gBAAgB,KAAK;AACpD,aAAK,KAAK,+BAA+B,IAAI;MAC/C;MAEA,cAAW;AACT,eAAQ,KAAK,KAAK,cAChB,MAAM,YAAW,MAAO,KAAK,UAAU,cAAc,IAAI,iBAAiB;MAC9E;;AApBF,YAAA,MAAAA;AAuBA,WAAO,UAAU,UAAUA;AAC3B,WAAO,QAAQ,MAAMA;AACrB,WAAO,eAAe,SAAS,cAAc,EAAC,OAAO,KAAI,CAAC;AAE1D,YAAA,UAAeA;AA0Bf,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAU,EAAA,CAAA;AAIlB,QAAA,YAAA;AAAQ,WAAA,eAAA,SAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAC,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAG,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAI,EAAA,CAAA;AAAQ,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAO,EAAA,CAAA;AACnD,QAAA,qBAAA;AAAQ,WAAA,eAAA,SAAA,mBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,mBAAA;IAAO,EAAA,CAAA;AACf,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,mBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAO,EAAA,CAAA;;;;;ACnEf,IAAAC,gBAA8E;;;AQFvE,IAAM,oBAAN,cAAgC,MAAM;AAC7C;AACA,kBAAkB,UAAU,OAAO;AACnC,SAAS,iBAAiB,KAAK;AAC3B,SAAO,mBAAmB,KAAK,GAAG,EAAE,QAAQ,QAAQ,CAAC,GAAG,MAAM;AAC1D,QAAI,OAAO,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,EAAE,YAAY;AACpD,QAAI,KAAK,SAAS,GAAG;AACjB,aAAO,MAAM;AAAA,IACjB;AACA,WAAO,MAAM;AAAA,EACjB,CAAC,CAAC;AACN;AACA,SAAS,gBAAgB,KAAK;AAC1B,MAAI,SAAS,IAAI,QAAQ,MAAM,GAAG,EAAE,QAAQ,MAAM,GAAG;AACrD,UAAQ,OAAO,SAAS,GAAG;AAAA,IACvB,KAAK;AACD;AAAA,IACJ,KAAK;AACD,gBAAU;AACV;AAAA,IACJ,KAAK;AACD,gBAAU;AACV;AAAA,IACJ;AACI,YAAM,IAAI,MAAM,4CAA4C;AAAA,EACpE;AACA,MAAI;AACA,WAAO,iBAAiB,MAAM;AAAA,EAClC,SACO,KAAK;AACR,WAAO,KAAK,MAAM;AAAA,EACtB;AACJ;AACO,SAAS,UAAU,OAAO,SAAS;AACtC,MAAI,OAAO,UAAU,UAAU;AAC3B,UAAM,IAAI,kBAAkB,2CAA2C;AAAA,EAC3E;AACA,cAAY,UAAU,CAAC;AACvB,QAAM,MAAM,QAAQ,WAAW,OAAO,IAAI;AAC1C,QAAM,OAAO,MAAM,MAAM,GAAG,EAAE,GAAG;AACjC,MAAI,OAAO,SAAS,UAAU;AAC1B,UAAM,IAAI,kBAAkB,0CAA0C,MAAM,CAAC,EAAE;AAAA,EACnF;AACA,MAAI;AACJ,MAAI;AACA,cAAU,gBAAgB,IAAI;AAAA,EAClC,SACO,GAAG;AACN,UAAM,IAAI,kBAAkB,qDAAqD,MAAM,CAAC,KAAK,EAAE,OAAO,GAAG;AAAA,EAC7G;AACA,MAAI;AACA,WAAO,KAAK,MAAM,OAAO;AAAA,EAC7B,SACO,GAAG;AACN,UAAM,IAAI,kBAAkB,mDAAmD,MAAM,CAAC,KAAK,EAAE,OAAO,GAAG;AAAA,EAC3G;AACJ;;;ACxDA,IAAO,gBAAQ;;;ACCf,SAAS,SAAS,MAAM;AACtB,SAAO,OAAO,SAAS,YAAY,cAAM,KAAK,IAAI;AACpD;AACA,IAAO,mBAAQ;;;ACHf,SAAS,MAAM,MAAM;AACnB,MAAI,CAAC,iBAAS,IAAI,GAAG;AACnB,UAAM,UAAU,cAAc;AAAA,EAChC;AACA,MAAI;AACJ,MAAI,MAAM,IAAI,WAAW,EAAE;AAG3B,MAAI,CAAC,KAAK,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO;AAClD,MAAI,CAAC,IAAI,MAAM,KAAK;AACpB,MAAI,CAAC,IAAI,MAAM,IAAI;AACnB,MAAI,CAAC,IAAI,IAAI;AAGb,MAAI,CAAC,KAAK,IAAI,SAAS,KAAK,MAAM,GAAG,EAAE,GAAG,EAAE,OAAO;AACnD,MAAI,CAAC,IAAI,IAAI;AAGb,MAAI,CAAC,KAAK,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO;AACpD,MAAI,CAAC,IAAI,IAAI;AAGb,MAAI,CAAC,KAAK,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO;AACpD,MAAI,CAAC,IAAI,IAAI;AAIb,MAAI,EAAE,KAAK,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,KAAK,gBAAgB;AACnE,MAAI,EAAE,IAAI,IAAI,aAAc;AAC5B,MAAI,EAAE,IAAI,MAAM,KAAK;AACrB,MAAI,EAAE,IAAI,MAAM,KAAK;AACrB,MAAI,EAAE,IAAI,MAAM,IAAI;AACpB,MAAI,EAAE,IAAI,IAAI;AACd,SAAO;AACT;AACA,IAAO,gBAAQ;;;AC9Bf,IAAI,YAAY,CAAC;AACjB,KAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAU,MAAM,IAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AAClD;AAFS;AAGF,SAAS,gBAAgB,KAAK,SAAS,GAAG;AAM/C,UAAQ,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,GAAG,YAAY;AACngB;;;ACbA,IAAI;AACJ,IAAI,QAAQ,IAAI,WAAW,EAAE;AACd,SAAR,MAAuB;AAE5B,MAAI,CAAC,iBAAiB;AAEpB,sBAAkB,OAAO,WAAW,eAAe,OAAO,mBAAmB,OAAO,gBAAgB,KAAK,MAAM;AAC/G,QAAI,CAAC,iBAAiB;AACpB,YAAM,IAAI,MAAM,0GAA0G;AAAA,IAC5H;AAAA,EACF;AACA,SAAO,gBAAgB,KAAK;AAC9B;;;ACdA,SAAS,cAAc,KAAK;AAC1B,QAAM,SAAS,mBAAmB,GAAG,CAAC;AAEtC,MAAI,QAAQ,CAAC;AACb,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,UAAM,KAAK,IAAI,WAAW,CAAC,CAAC;AAAA,EAC9B;AACA,SAAO;AACT;AACO,IAAI,MAAM;AACV,IAAIC,OAAM;AACF,SAAR,IAAqB,MAAMC,UAAS,UAAU;AACnD,WAAS,aAAa,OAAO,WAAW,KAAK,QAAQ;AACnD,QAAI;AACJ,QAAI,OAAO,UAAU,UAAU;AAC7B,cAAQ,cAAc,KAAK;AAAA,IAC7B;AACA,QAAI,OAAO,cAAc,UAAU;AACjC,kBAAY,cAAM,SAAS;AAAA,IAC7B;AACA,UAAM,aAAa,eAAe,QAAQ,eAAe,SAAS,SAAS,WAAW,YAAY,IAAI;AACpG,YAAM,UAAU,kEAAkE;AAAA,IACpF;AAKA,QAAI,QAAQ,IAAI,WAAW,KAAK,MAAM,MAAM;AAC5C,UAAM,IAAI,SAAS;AACnB,UAAM,IAAI,OAAO,UAAU,MAAM;AACjC,YAAQ,SAAS,KAAK;AACtB,UAAM,CAAC,IAAI,MAAM,CAAC,IAAI,KAAOA;AAC7B,UAAM,CAAC,IAAI,MAAM,CAAC,IAAI,KAAO;AAC7B,QAAI,KAAK;AACP,eAAS,UAAU;AACnB,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,YAAI,SAAS,CAAC,IAAI,MAAM,CAAC;AAAA,MAC3B;AACA,aAAO;AAAA,IACT;AACA,WAAO,gBAAgB,KAAK;AAAA,EAC9B;AAGA,MAAI;AACF,iBAAa,OAAO;AAAA,EACtB,SAAS,KAAK;AAAA,EAAC;AAGf,eAAa,MAAM;AACnB,eAAa,MAAMD;AACnB,SAAO;AACT;;;AClCA,SAAS,IAAI,OAAO;AAClB,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,MAAM,SAAS,mBAAmB,KAAK,CAAC;AAE5C,YAAQ,IAAI,WAAW,IAAI,MAAM;AACjC,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,YAAM,CAAC,IAAI,IAAI,WAAW,CAAC;AAAA,IAC7B;AAAA,EACF;AACA,SAAO,qBAAqB,WAAW,aAAa,KAAK,GAAG,MAAM,SAAS,CAAC,CAAC;AAC/E;AAKA,SAAS,qBAAqB,OAAO;AACnC,MAAI,SAAS,CAAC;AACd,MAAI,WAAW,MAAM,SAAS;AAC9B,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,UAAU,KAAK,GAAG;AACpC,QAAI,IAAI,MAAM,KAAK,CAAC,MAAM,IAAI,KAAK;AACnC,QAAI,MAAM,SAAS,OAAO,OAAO,MAAM,IAAI,EAAI,IAAI,OAAO,OAAO,IAAI,EAAI,GAAG,EAAE;AAC9E,WAAO,KAAK,GAAG;AAAA,EACjB;AACA,SAAO;AACT;AAKA,SAAS,gBAAgB,cAAc;AACrC,UAAQ,eAAe,OAAO,KAAK,KAAK,KAAK;AAC/C;AAKA,SAAS,WAAW,GAAG,KAAK;AAE1B,IAAE,OAAO,CAAC,KAAK,OAAQ,MAAM;AAC7B,IAAE,gBAAgB,GAAG,IAAI,CAAC,IAAI;AAC9B,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,IAAI;AACrC,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,UAAU;AACzC,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,MAAM;AAC3C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,WAAW;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,UAAU;AAC1C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,QAAQ;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,OAAO;AAC1C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,WAAW;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,UAAU;AAC1C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,QAAQ;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,UAAU;AACzC,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,QAAQ;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,QAAQ,GAAG,IAAI;AACnB,QAAI,QAAQ,GAAG,IAAI;AACnB,QAAI,QAAQ,GAAG,IAAI;AACnB,QAAI,QAAQ,GAAG,IAAI;AAAA,EACrB;AACA,SAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACpB;AAMA,SAAS,aAAa,OAAO;AAC3B,MAAI,MAAM,WAAW,GAAG;AACtB,WAAO,CAAC;AAAA,EACV;AACA,MAAI,UAAU,MAAM,SAAS;AAC7B,MAAI,SAAS,IAAI,YAAY,gBAAgB,OAAO,CAAC;AACrD,WAAS,IAAI,GAAG,IAAI,SAAS,KAAK,GAAG;AACnC,WAAO,KAAK,CAAC,MAAM,MAAM,IAAI,CAAC,IAAI,QAAS,IAAI;AAAA,EACjD;AACA,SAAO;AACT;AAMA,SAAS,QAAQ,GAAG,GAAG;AACrB,MAAI,OAAO,IAAI,UAAW,IAAI;AAC9B,MAAI,OAAO,KAAK,OAAO,KAAK,OAAO,OAAO;AAC1C,SAAO,OAAO,KAAK,MAAM;AAC3B;AAKA,SAAS,cAAc,KAAK,KAAK;AAC/B,SAAO,OAAO,MAAM,QAAQ,KAAK;AACnC;AAKA,SAAS,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAChC,SAAO,QAAQ,cAAc,QAAQ,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3E;AACA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClC,SAAO,OAAO,IAAI,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC7C;AACA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClC,SAAO,OAAO,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC7C;AACA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClC,SAAO,OAAO,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACxC;AACA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClC,SAAO,OAAO,KAAK,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AAC3C;AACA,IAAO,cAAQ;;;AC/Lf,IAAI,KAAK,IAAI,MAAM,IAAM,WAAG;;;ACF5B,IAAI,aAAa,OAAO,WAAW,eAAe,OAAO,cAAc,OAAO,WAAW,KAAK,MAAM;;;ACEpG,SAAS,EAAE,GAAG,GAAG,GAAG,GAAG;AACrB,UAAQ,GAAG;AAAA,IACT,KAAK;AACH,aAAO,IAAI,IAAI,CAAC,IAAI;AAAA,IACtB,KAAK;AACH,aAAO,IAAI,IAAI;AAAA,IACjB,KAAK;AACH,aAAO,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA,IAC7B,KAAK;AACH,aAAO,IAAI,IAAI;AAAA,EACnB;AACF;AACA,SAAS,KAAK,GAAG,GAAG;AAClB,SAAO,KAAK,IAAI,MAAM,KAAK;AAC7B;AACA,SAAS,KAAK,OAAO;AACnB,MAAI,IAAI,CAAC,YAAY,YAAY,YAAY,UAAU;AACvD,MAAI,IAAI,CAAC,YAAY,YAAY,YAAY,WAAY,UAAU;AACnE,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,MAAM,SAAS,mBAAmB,KAAK,CAAC;AAE5C,YAAQ,CAAC;AACT,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,YAAM,KAAK,IAAI,WAAW,CAAC,CAAC;AAAA,IAC9B;AAAA,EACF,WAAW,CAAC,MAAM,QAAQ,KAAK,GAAG;AAEhC,YAAQ,MAAM,UAAU,MAAM,KAAK,KAAK;AAAA,EAC1C;AACA,QAAM,KAAK,GAAI;AACf,MAAI,IAAI,MAAM,SAAS,IAAI;AAC3B,MAAI,IAAI,KAAK,KAAK,IAAI,EAAE;AACxB,MAAI,IAAI,IAAI,MAAM,CAAC;AACnB,WAAS,KAAK,GAAG,KAAK,GAAG,EAAE,IAAI;AAC7B,QAAI,MAAM,IAAI,YAAY,EAAE;AAC5B,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,UAAI,CAAC,IAAI,MAAM,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC;AAAA,IACxI;AACA,MAAE,EAAE,IAAI;AAAA,EACV;AACA,IAAE,IAAI,CAAC,EAAE,EAAE,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,IAAI,GAAG,EAAE;AACtD,IAAE,IAAI,CAAC,EAAE,EAAE,IAAI,KAAK,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;AACtC,IAAE,IAAI,CAAC,EAAE,EAAE,KAAK,MAAM,SAAS,KAAK,IAAI;AACxC,WAAS,MAAM,GAAG,MAAM,GAAG,EAAE,KAAK;AAChC,QAAI,IAAI,IAAI,YAAY,EAAE;AAC1B,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,QAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;AAAA,IACjB;AACA,aAAS,KAAK,IAAI,KAAK,IAAI,EAAE,IAAI;AAC/B,QAAE,EAAE,IAAI,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;AAAA,IACjE;AACA,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,aAAS,MAAM,GAAG,MAAM,IAAI,EAAE,KAAK;AACjC,UAAI,IAAI,KAAK,MAAM,MAAM,EAAE;AAC3B,UAAI,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,MAAM;AAC3D,UAAI;AACJ,UAAI;AACJ,UAAI,KAAK,GAAG,EAAE,MAAM;AACpB,UAAI;AACJ,UAAI;AAAA,IACN;AACA,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AACpB,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AACpB,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AACpB,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AACpB,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AAAA,EACtB;AACA,SAAO,CAAC,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,GAAI;AACjW;AACA,IAAO,eAAQ;;;ACzEf,IAAI,KAAK,IAAI,MAAM,IAAM,YAAI;;;ACoC7B,IAAI,UAAU;AACd,IAAI,WAAW;AACf,IAAI,SAAS;AACb,SAAS,GAAG,SAAS,KAAK,QAAQ;AAChC,YAAU,WAAW,CAAC;AAGtB,MAAI,IAAI,OAAO,UAAU;AACzB,MAAI,IAAI,OAAO,IAAI,WAAW,EAAE;AAGhC,MAAI,OAAO,QAAQ,WAAW,QAAQ,OAAO,KAAK;AAGlD,MAAI,QAAQ,QAAQ,UAAU,SAAY,QAAQ,QAAQ,KAAK,IAAI;AAGnE,MAAI,MAAM,QAAQ,QAAQ,SAAY,QAAQ,MAAM;AAGpD,MAAI,UAAU;AACd,MAAI,SAAS;AAGb,MAAI,QAAQ,UAAU,QAAQ,UAAU,QAAW;AACjD,aAAS;AAGT,QAAI,QAAQ,MAAM;AAChB,gBAAU;AACV,eAAS;AAAA,IACX;AAAA,EACF;AAGA,MAAI,QAAQ,MAAM;AAEhB,QAAI,MAAM,YAAY;AACpB,YAAM;AAAA,IACR;AAGA,cAAU,QAAQ,KAAK;AACvB,aAAS,MAAM;AAAA,EACjB;AAGA,MAAI,YAAY,QAAQ,WAAW,MAAM;AACvC,cAAU,KAAK,CAAC,IAAI;AACpB,cAAU,WAAW,IAAI,KAAK,CAAC;AAC/B,aAAS,KAAK,CAAC,IAAI;AACnB,aAAS,UAAU,IAAI,KAAK,CAAC;AAC7B,aAAS,UAAU,IAAI,KAAK,EAAE,MAAM;AAAA,EACtC;AAGA,MAAI,QAAQ,MAAQ,UAAU,QAAQ,MAAM;AAC1C,QAAI,EAAE,SAAS,QAAS;AACtB,eAAS;AACT,UAAI,EAAE,UAAU,MAAO;AACrB,kBAAU;AAKV;AAAA,MACF;AAAA,IACF;AAAA,EACF,OAAO;AAGL,aAAS;AAAA,EACX;AACA,aAAW;AACX,YAAU;AAGV,IAAE,GAAG,IAAI,SAAS,gBAAgB;AAClC,IAAE,GAAG,IAAI,SAAS,aAAc;AAChC,IAAE,GAAG,IAAI,SAAS,WAAY;AAC9B,IAAE,GAAG,IAAI,SAAS,QAAU;AAC5B,IAAE,GAAG,IAAI,SAAS,MAAQ;AAC1B,IAAE,GAAG,IAAI,SAAS;AAGlB,IAAE,GAAG,IAAI,YAAY,IAAI,KAAO;AAGhC,IAAE,GAAG,IAAI,UAAU;AAGnB,IAAE,GAAG,IAAI,WAAW,KAAK,KAAO;AAGhC,IAAE,GAAG,IAAI,WAAW,IAAI;AAGxB,IAAE,GAAG,IAAI,UAAU,IAAI,MAAO,KAAK,EAAE,IAAI;AAGzC,IAAE,GAAG,IAAI,KAAK,EAAE;AAChB,IAAE,GAAG,IAAI,KAAK,EAAE;AAChB,IAAE,GAAG,IAAI,KAAK,EAAE;AAChB,IAAE,GAAG,IAAI,KAAK,EAAE;AAChB,IAAE,GAAG,IAAI,KAAK,EAAE;AAChB,SAAO,OAAO,gBAAgB,CAAC;AACjC;AACA,IAAO,aAAQ;;;AC9If,mBAAmB;AACnB,IAAM,cAAc,OAAO,IAAI,OAAO;AACtC,IAAM,QAAQ,WAAW,WAAW,MAAM,WAAW,WAAW,IAAI,aAAAE;AACpE,IAAI,aAAAA,QAAO,WAAW,MAAM,QAAQ;AAChC,QAAM,IAAI,MAAM,2DAA2D,aAAAA,QAAO,MAAM,QAAQ,MAAM,MAAM,EAAE;AAClH;AACA,IAAM;AAAA,EAAE;AAAA,EAAW;AAAA,EAAa;AAAA,EAAe;AAAA,EAAU;AAAA,EAAK;AAAA,EAC1D;AAAA,EAAkB;AAAA,EAAe;AAAA,EAAK;AAAO,IAAI;AAGrD,IAAO,yBAAQ;;;SCbC,MAAG;AAAA;SAEH,gBAAgB,IAAI,IAAE;AACpC,MAAI,OAAO;AAAK,WAAO;AACvB,SAAO,WAAA;AACL,QAAI,MAAM,GAAG,MAAM,MAAM,SAAS;AAClC,QAAI,OAAO,OAAO,IAAI,SAAS,YAAY;AACzC,UAAI,OAAO,MAAM,OAAO;AACxB,aAAO,IAAI,KAAK,WAAA;AACd,eAAO,GAAG,MAAM,MAAM,IAAI;OAC3B;;AAEH,WAAO,GAAG,MAAM,MAAM,SAAS;;AAEnC;SAEgB,aAAU;AAExB,MAAI,IAAI,KAAK,IAAG;AAChB,MAAI,OAAO,uCAAuC,QAAQ,SAAS,SAAS,GAAC;AAC3E,QAAI,KAAK,IAAI,KAAK,OAAM,IAAK,MAAM,KAAK;AACxC,QAAI,KAAK,MAAM,IAAI,EAAE;AACrB,YAAQ,MAAM,MAAM,IAAK,IAAI,IAAM,GAAM,SAAS,EAAE;GACrD;AACD,SAAO;AACT;SCzBwB,8BAA8B,IAAI,iBAAe;AACvE,SAAO,SAAS,0BAA0B,UAAQ;AAChD,WAAO,SAAU,MAAM,YAAY,UAAU,QAAM;AACjD,UAAI,GAAG,kBAAiB;AAAI,eAAO,SAAS,MAAM,MAAM,SAAS;AACjE,UAAI,aAAa;AACjB,UAAI,SAAS,eAAe,WAAW,KAAK,SAAU,WAAS;AACzD,eAAO,SAAS,SAAS,KAAK,SAAS,SAAS,EAAE;OACnD,GAAG;AAEN,qBAAa;AACb,qBAAa,WAAW,MAAM,CAAC;AAC/B,YAAI,WAAW,QAAQ,UAAU,MAAM;AACrC,qBAAW,KAAK,UAAU;;AAG9B,UAAI,QAAQ,SAAS,KAAK,MAAM,MAAM,YAAY,UAAU,MAAM;AAElE,UAAI,YAAY;AACd,cAAM,uBAAuB;AAC7B,cAAM,GAAG,YAAY,WAAA;AACnB,cAAI,MAAM,sBAAsB;AAE9B,gBAAI,CAAC,QAAQ;AAGX,kBAAI,gBAAgB;AAAe,6BAAa,gBAAgB,aAAa;AAC7E,8BAAgB,gBAAgB,WAAW,WAAA;AACzC,uBAAO,gBAAgB;AACvB,gCAAgB,MAAM,oBAAoB;iBACzC,EAAE;mBACA;AAIL,kBAAI,kBAAmB,SAAS,oBAAoBC,QAAK;AACvD,uBAAOA,OAAM,SAAS,oBAAoBA,OAAM,MAAM,IAAIA;gBACzD,MAAM;AACT,8BAAgB,uBAAuB,KAAK,IACxC,MAAM,sBACN,gBAAgB,uBAAuB,CAAC;;;SAGjD;AAED,YAAI,MAAM,UAAU,MAAM,OAAO;AAAQ,gBAAM,SAAS,MAAM,OAAO;;AAEvE,aAAO;;;AAGb;SC/CwB,oBAAoB,IAAIC,aAAYC,eAAY;AACtE,SAAO,SAAS,gBAAgB,qBAAmB;AAEjD,QAAID,YAAW,eAAe,GAAG,IAAI,IAAI,qBAAqB;AAE5D,MAAAA,YAAW,eAAe,GAAG,IAAI,IAAI;AAErC,6BAAM,kBAAkB,WAAA;AACtB,QAAAA,YAAW,GAAG,2BAA2B,EAAE,KAAK,GAAG,MAAM,mBAAmB;OAC7E;AAKD,UAAIC;AAAc,QAAAA,cAAa,QAAQ,qCAAqC,GAAG,MAAM,mBAAmB;;;AAG9G;AClBO,IAAM,SAAS;AACf,IAAM,SAAS;AACf,IAAM,SAAS;SCCE,iBAAiB,IAAI,OAAK;AAChD,SAAO,SAAS,aAAa,SAAS,KAAK,OAAK;AAE9C,QAAI,KAAK;AACT,QAAI,YAAY,UAAa,MAAM,OAAO,QAAQ,MAAM;AACtD,gBAAU,KAAK,uBAAM,WAAW,WAAU;AAC1C,UAAI,MAAM,OAAO,QAAQ,SAAS;AAChC,+BAAM,aAAa,KAAK,MAAM,OAAO,QAAQ,SAAS,OAAO;;;AAIjE,QAAI,SAAS;MACX,QAAQ,MAAM,UAAU;MACxB,OAAO,MAAM;MACb,KAAK,YAAY,SAAY,OAAO;MACpC,MAAM;MACN;;AAGF,QAAI,UAAU,GAAG,SAAS,IAAI,MAAM,EAAE,KAAK,SAAU,KAAG;AACtD,YAAM,uBAAuB,KAAK,IAAI,MAAM,sBAAsB,GAAG;AACrE,aAAO;KACR;AAGD,SAAK,YAAY,SAAU,WAAS;AAClC,UAAI,WAAW;AACb,gBAAQ,MAAM,WAAA;AACZ,iBAAO,MAAM;AACb,aAAG,SAAS,IAAI,MAAM;SACvB;;AAGL,SAAK,UAAU,WAAA;AAEb,cAAQ,MAAM,SAAU,KAAG;AAEzB,WAAG,SAAS,OAAO,GAAG;OACvB;;AAGH,WAAO;;AAEX;SC3CwB,iBAAiB,IAAI,WAAS;AACpD,SAAO,SAAS,aAAa,MAAM,SAAS,QAAQ,OAAK;AAKvD,QAAI,uBAAuB,CAAA;AAI3B,QAAI,kBAAkB;AACtB,QAAI,SAAS,uBAAM,UAAU,MAAM;AACnC,aAAS,YAAY,MAAM;AACzB,UAAI,MAAM,KAAK,QAAQ;AACvB,UAAI,OAAO,QAAQ,aAAa;AAC9B,+BAAM,aAAa,QAAQ,QAAQ;AACnC,6BAAqB,QAAQ,IAAI;AACjC,0BAAkB;aACb;AACL,YAAI,eAAe,uBAAM,aAAa,QAAQ,QAAQ;AACtD,YAAI,QAAQ,gBAAgB,KAAK,UAAU,GAAG,MAAM,KAAK,UAAU,YAAY,GAAG;AAChF,iCAAM,aAAa,QAAQ,UAAU,GAAG;AACxC,+BAAqB,QAAQ,IAAI;AACjC,4BAAkB;;;;AAIxB,QAAI,iBAAiB;AACnB,UAAI,SAAS;QACX,QAAQ,MAAM,UAAU;QACxB,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN;QACA,KAAK;;AAEP,UAAI,UAAU,GAAG,SAAS,IAAI,MAAM;AACpC,WAAK,YAAY,WAAA;AACf,gBAAQ,MAAM,SAAU,KAAG;AACzB,gBAAM,uBAAuB,KAAK,IAAI,MAAM,sBAAsB,GAAG;SACtE;;AAEH,WAAK,UAAU,WAAA;AAEb,gBAAQ,MAAM,SAAU,KAAG;AAEzB,aAAG,SAAS,OAAO,GAAG;SACvB;;;;AAIT;SCtDwB,iBAAiB,IAAI,WAAS;AACpD,SAAO,SAAS,aAAa,SAAS,KAAK,OAAK;AAE9C,QAAI,UAAU,GAAG,SAAS,IAAI;MAC5B,QAAQ,MAAM,UAAU;MACxB,OAAO;MACP,KAAK;MACL,MAAM;MACN,QAAQ;KACT,EAAE,KAAK,SAAU,KAAG;AACnB,YAAM,uBAAuB,KAAK,IAAI,MAAM,sBAAsB,GAAG;AACrE,aAAO;KACR,EACI,MAAM,SAAC,GAAC;AACP,cAAQ,IAAI,GAAG;AACf,cAAQ,IAAI,EAAE,KAAK;KACpB;AACL,SAAK,UAAU,WAAA;AAIb,cAAQ,MAAM,SAAU,KAAG;AAEzB,WAAG,SAAS,OAAO,GAAG;OACvB;;;AAGP;SCzBwB,gBAAgB,IAAE;AAIxC,SAAO,SAAS,YAAY,OAAK;AAE/B,QAAI,MAAM,KAAK;AAAY;AAC3B,UAAM,KAAK,aAAa;AAExB,QAAM,YAAY,MAAM;AACxB,UAAM,KAAK,UAAU,EAAE,UAAU,iBAAiB,IAAI,KAAK,CAAC;AAE5D,UAAM,KAAK,UAAU,EAAE,UAAU,iBAAiB,IAAI,SAAS,CAAC;AAEhE,UAAM,KAAK,UAAU,EAAE,UAAU,iBAAiB,IAAI,SAAS,CAAC;;AAEpE;SClBwB,cAAcD,aAAU;AAC9C,SAAO,SAAS,UAAU,OAAK;AAE7B,QAAI,MAAM,OAAO,MAAM,IAAI,QAAQ,mBAAmB,MAAM,GAAG;AAC7D,UAAI,QAAQ,MAAM,IAAI,MAAM,GAAG;AAC/B,UAAI,OAAO,MAAM,CAAC;AAClB,UAAI,SAAS,MAAM,CAAC;AACpB,UAAI,SAAS,kBAAkB;AAC7B,YAAI,MAAM,SAAS,MAAM,UAAU,EAAE;AACrC,YAAI,CAAC,MAAM,GAAG,KAAK,MAAMA,YAAW,eAAe,MAAM,GAAG;AAC1D,UAAAA,YAAW,eAAe,MAAM,IAAI;AACpC,iCAAM,kBAAkB,WAAA;AACtB,YAAAA,YAAW,GAAG,2BAA2B,EAAE,KAAK,QAAQ,GAAG;WAC5D;;iBAEM,KAAK,QAAQ,WAAW,MAAM,GAAG;AAC1C,YAAI,SAAS,SAAS,KAAK,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;AAC5C,YAAI,MAAM,UAAU;AAClB,UAAAA,YAAW,GAAG,iBAAiB,KAAK,QAAQ,MAAM;;iBAE3C,SAAS,aAAa;AAC/B,YAAI,MAAM,UAAU;AAClB,UAAAA,YAAW,GAAG,UAAU,KAAK,MAAM;;;;;AAK7C;SC7BwB,iBAAiB,IAAI,UAAU,aAAW;AAChE,SAAO,SAAS,aAAa,UAAQ;AACnC,WAAO,WAAA;AAIL,aAAO,KAAK,GAAG,UAAU,EAAE,QAAQ,SAAA,WAAS;AAC1C,YAAI,QAAQ,GAAG,WAAW,SAAS;AACnC,YAAI,MAAM,OAAO,YAAY;AAC3B,sBAAY,KAAK;;AAEnB,YAAI,MAAM,SAAS,cAAc;AAC/B,gBAAM,WAAW,QAAQ;;OAE5B;AACD,aAAO,SAAS,MAAM,MAAM,SAAS;;;AAG3C;AChBA,IAAME,YAAU,uBAAM;SAEE,cAAc,IAAIF,aAAY,UAAU,YAAYC,eAAY;AAMtF,MAAI,0BAA0B,CAAA;AAQ9B,KAAG,WAAW,cAAc,SAAU,MAAM,SAAS,iBAAiB,SAAO;AAK3E,cAAU,WAAW,CAAA;AACrB,QAAI,CAAC,WAAW;AACd,aAAO,QAAQ,YACXC,UAAQ,OAAO,IAAI,uBAAM,oBAAmB,CAAE,IAC9CA,UAAQ,QAAO;AAErB,QAAI,MAAM,EAAC,SAAkB,iBAAkC,QAAQ,WAAW,KAAK,IAAI,KAAU;AACrG,2BAAM,OAAO,KAAK,OAAO;AACzB,WAAO,uBAAM,kBAAkB,WAAA;AAC7B,UAAI,SAAS,CAAC,YAAY;AAC1B,UAAI,QAAQ;AAAW,eAAO,KAAK,YAAY;AAC/C,UAAI,UAAU,GAAG,YAAY,MAAM,QAAQ,WAAA;AACzC,YAAI,QAAQ,WAAW;AAErB,iBAAO,GAAG,WAAW,MAAM,IAAI,EAAE,OAAO,eAAe,EAAE,MAAM,SAAA,eAAa;AAC1E,gBAAI;AACF,qBAAO,GAAG,WAAW,IAAI,GAAG;;AAE5B,qBAAO,GAAG,WAAW,MAAM,UAAU,EAAE,MAAM,CAAC,EAAE,MAAM,SAAU,YAAU;AACxE,oBAAI,kBAAkB,WAAW;AACjC,uBAAO,GAAG,WAAW,IAAI,GAAG;eAC7B;WACJ;eACI;AAEL,iBAAO,GAAG,WAAW,IAAI,GAAG;;OAE/B,EAAE,KAAK,SAAA,WAAS;AACf,YAAI,KAAK;AACT,YAAI,QAAQ,WAAW;AACrB,eAAK,IAAIA,UAAQ,SAAU,SAAS,QAAM;AACxC,oCAAwB,UAAU,SAAQ,CAAE,IAAI,EAAC,SAAkB,OAAc;WAClF;;AAEH,YAAID,eAAc;AAChB,UAAAA,cAAa,QAAQ,gCAAgC,GAAG,MAAM,UAAU,SAAQ,CAAE;;AAEpF,QAAAD,YAAW,GAAG,UAAU,KAAK,GAAG,IAAI;AACpC,eAAO;OACR;AAED,UAAI,CAAC,QAAQ,WAAW;AACtB,gBAAQ,MAAM,WAAA;SACb;AACD;aACK;AAEL,eAAO;;KAEV;;AAIH,KAAG,WAAW,mBAAmB,SAAU,MAAM,SAAS,cAAY;AACpE,QAAI,CAAC,WAAW;AAAM;AACtB,QAAI,eAAe,WAAW,KAAK;AACnC,2BAAM,kBAAkB,WAAA;AACtB,SAAG,WAAW,QAAQ,SAAA,OAAK;AACzB,eAAOE,UAAQ,IAAI,MACd,OAAO,SAAA,MAAI;AAAI,iBAAA,KAAK,SAAS,YAAY,gBAAgB,KAAK,OAAO;QAAa,CAAA,EAClF,IAAI,SAAA,MAAI;AAAI,iBAAA,GAAG,WAAW,YAAY,MAAM,SAAS,KAAK,EAAE;QAAC,CAAA,CAAC;OACpE,EAAE,MAAM,WAAA;OACR;KACF;;AAGH,WAAS,2BAAwB;AAE/B,QAAI,CAAC,WAAW;AAAM,aAAOA,UAAQ,OAAO,IAAI,uBAAM,oBAAmB,CAAE;AAE3E,WAAO,uBAAM,kBAAkB,WAAA;AAC7B,aAAO,GAAG,YAAY,MAAM,cAAc,WAAA;AACxC,eAAO,GAAG,WAAW,MAAM,EAAC,iBAAiB,WAAW,KAAK,GAAE,CAAC,EAAE,QAAQ,SAAA,UAAQ;AAChF,mBAAS,QAAQ,SAAA,KAAG;AAAI,mBAAA,eAAe,GAAG;UAAC,CAAA;AAC3C,iBAAO,GAAG,WAAW,MAAM,IAAI,EAAE,MAAM,SAAS,IAAI,SAAA,KAAG;AAAI,mBAAA,IAAI;UAAE,CAAA,CAAC,EAAE,OAAM;SAC3E;OACF;KACF;;AAGH,WAAS,eAAe,KAAG;AACzB,QAAI,IAAI,SAAS,YAAY;AAE3B,UAAI,UAAU,wBAAwB,IAAI,UAAU,SAAQ,CAAE;AAC9D,UAAI,SAAS;AACX,YAAI,IAAI,WAAW;AACjB,kBAAQ,OAAO,IAAI,QAAQ,KAAK;eAC3B;AACL,kBAAQ,QAAQ,IAAI,QAAQ,MAAM;;AAEpC,eAAO,wBAAwB,IAAI,UAAU,SAAQ,CAAE;;WAEpD;AAEL,UAAI,UAAU,SAAU,QAAM;AAC5B,WAAG,WAAW,YAAY,YAAY,EAAC,OAAc,GAAG,IAAI,QAAQ,EAAC,WAAW,IAAI,GAAE,CAAC;;AAEzF,UAAI,SAAS,SAAU,OAAK;AAC1B,WAAG,WAAW,YAAY,YAAY,EAAC,OAAO,MAAM,SAAQ,EAAE,GAAG,IAAI,QAAQ,EAAC,WAAW,MAAM,WAAW,IAAI,GAAE,CAAC;;AAEnH,SAAG,GAAG,QAAQ,KAAK,GAAG;;;AAQ1B,WAAS,YAAY,QAAM;AAEzB,QAAI,WAAW,GAAG,MAAM;AACtB,+BAAwB,EAAG,MAAM,uBAAuB,WAAA;MAAA,CAAO;;;AAInE,SAAO;IACL;IACA;;AAEJ;SC9IwB,wBAAwB,UAAQ;AACtD,SAAO,SAAS,QAAQ,UAAQ;AAE9B,WAAO,UAAU,IAAI;AACrB,WAAO,YAAY,IAAI;AACvB,WAAO,YAAY,IAAI;AACvB,WAAO,qBAAqB,IAAI;AAEhC,aAAS,KAAK,MAAM,QAAQ,QAAQ;AAEpC,WAAO,KAAK,QAAQ,EAAE,QAAQ,SAAS,WAAS;AAC9C,UAAI,SAAS,SAAS,SAAS;AAC/B,UAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,MAAM,GAAG;AAC3C,eAAO,QAAQ,OAAO;AACtB,eAAO,QAAQ,OAAO,OAAO,QAAQ,KAAK,OAAO,CAAC;AAClD,eAAO,QAAQ,UAAU,OAAO,QAAQ,QAAQ,OAAO,CAAC;;KAE3D;AAED,WAAO,KAAK,QAAQ,EAAE,QAAQ,SAAS,WAAS;AAE9C,UAAI,UAAU,QAAQ,GAAG,MAAM,KAAK,UAAU,QAAQ,GAAG,MAAM,GAAG;AAChE,iBAAS,SAAS,EAAE,aAAa;;KAEpC;;AAEL;SCxBwB,iBAAiB,IAAE;AAQzC,MAAM,aAAa;AAEnB,yBAAM,kBAAkB,WAAA;AACtB,WAAO,GAAG,WAAW,QAAQ,YAAY,EAAE,MAAM,SAAA,YAAU;AACzD,aAAO,GAAG,SACL,MAAM,KAAK,EAAE,MAAM,WAAW,UAAU,EACxC,MAAM,UAAU,EAChB,YAAW;KACjB,EAAE,KAAK,SAAA,cAAY;AAClB,UAAI,aAAa,WAAW;AAAG;AAC/B,aAAO,GAAG,SAAS,WAAW,YAAY,EAAE,KAAK,WAAA;AAE/C,YAAI,aAAa,WAAW,YAAY;AAEtC,qBAAW,WAAA;AAAM,mBAAA,GAAG,OAAM,KAAM,iBAAiB,EAAE;UAAC,GAAE,GAAG;;OAE5D;KACF;GACF,EAAE,MAAM,WAAA;GAGR;AACH;ACGA,IAAIC,UAAS;AAMb,IAAI,iBAAiB,uBAAM,YAAY;EACnC,KAAK;EACL,QAAQ;EACR,OAAO;EACP,KAAK;EACL,MAAM;EACN,KAAK;EACL,MAAM;EACN,QAAQ;;CACX;AAGD,IAAI,WAAW,uBAAM;AACrB,IAAID,YAAU,uBAAM;AACpB,IAAI,wBAAwB;AAM5B,SAAS,WAAW,IAAE;AAClB,MAAI,CAAC,WAAW,KAAK,uBAAM,OAAO;AAC9B,UAAM,IAAI,MAAM,kCAAkC;AACtD,MAAI,GAAG,YAAY;AACf,QAAI,GAAG,WAAW,YAAY;AAAa,YAAM,IAAI,MAAM,oCAAoC;AAC/F;;AAGJ,MAAI,eAAe,KACf,yBAAyB,KAGzB,aAAa,KACb,qBAAqB,eAAe;AAExC,MAAID,gBAAe,WAAW;AAM9B,MAAI,WAAW,uBAAM,YAAY;;IAE7B,YAAY;IACZ,MAAM;IACN,eAAe;IACf,iBAAiB;IACjB,KAAK;IACL,UAAU;;IAGV,cAAc;IACd,aAAa;IACb,aAAa;IACb,WAAW;IACX,QAAQ;IACR,uBAAuB;IACvB,qBAAqB,CAAC,EAAE,OAAO,QAAQ,QAAQ,KAAI,CAAE;IACrD,eAAe;MACX,gBAAgB,CAAC,MAAM;MACvB,cAAc;MACd,YAAY;MACZ,mBAAmB;;GAE1B;AAED,KAAG,aAAa,EAAC,SAAS,YAAW;AACrC,KAAG,WAAW,WAAW;AAEzB,MAAM,kBAAkB,oBAAoB,IAAI,YAAYA,aAAY;AACxE,MAAM,4BAA4B,8BAA8B,IAAI,eAAe;AACnF,MAAM,cAAc,gBAAgB,EAAE;AACtC,MAAM,eAAe,iBAAiB,IAAI,UAAU,WAAW;AAE/D,MAAI,aAAa,EAAC,MAAM,KAAI;AAE5B,MAAM,YAAY,cAAc,IAAI,YAAY,UAAU,YAAYA,aAAY;AAClF,MAAM,cAAc,UAAU;AAC9B,MAAM,2BAA2B,UAAU;AAG3C,SAAO,eAAe,IAAI,kBAAkB;IACxC,KAAK,WAAA;AAAa,aAAO,WAAW;IAAK;GAC5C;AAED,MAAI,aAAa,MACb,kBAAkB;AAEtB,MAAI,uBAAM,MAAM;AAGZ,OAAG,QAAQ,CAAC,EAAE,OAAO;MACjB,YAAY;MACZ,UAAU;MACV,YAAY;MACZ,qBAAqB;KACxB;AACD,OAAG,WAAW,WAAW,QAAQ;AACjC,OAAG,SAAS,WAAW,cAAc;AACrC,eAAW,OAAO,IAAI,SAAS;MAC3B,YAAY;MACZ,MAAM;MACN,eAAe,KAAK,IAAG;MACvB,iBAAiB;KACpB;;AAOL,KAAG,QAAQ,UAAU,mBAAmB,SAAS,GAAG,QAAQ,UAAU,kBAAkB,uBAAuB;AAG/G,KAAG,GAAG,aAAa;IACf,SAAS;IACT,SAAS,CAAC,iBAAiB,GAAG;IAC9B,SAAS;GACZ;AAKD,KAAG,qBAAqB,SAAS,GAAG,oBAAoB,yBAAyB;AAKjF,aAAW,eAAe,GAAG,IAAI,IAAI,WAAW,eAAe,GAAG,IAAI,KAAK;AAK3E,KAAG,OAAO,SAAS,GAAG,MAAM,YAAY;AAExC,KAAG,QAAQ,SAAS,GAAG,OAAO,SAAS,WAAS;AAC5C,WAAO,WAAA;AACH,UAAI,GAAG,kBAAiB;AAAI,eAAO,UAAU,MAAM,MAAM,SAAS;AAElE,UAAI,gBAAgB,eAAe;AAC/B,qBAAa,gBAAgB,aAAa;AAC1C,eAAO,gBAAgB;;AAE3B,iBAAW,GAAG,2BAA2B,EAAE,YAAY,2BAA2B;AAClF,iBAAW,GAAG,kBAAkB,EAAE,YAAY,SAAS;AACvD,iBAAW,GAAG,WAAW,EAAE,YAAY,WAAW;AAClD,iBAAW,GAAG,cAAc,EAAE,YAAY,cAAc;AAExD,UAAI,WAAW,QAAQ,WAAW,KAAK,IAAI;AACvC,mBAAW,GAAG,iBAAiB,KAAK,GAAG,MAAM,WAAW,KAAK,EAAE;AAE/D,YAAIA,eAAc;AACd,UAAAA,cAAa,QAAQ,+BAA+B,WAAW,KAAK,GAAG,SAAQ,IAAK,MAAM,GAAG,MAAM,MAAM;;AAE7G,mBAAW,KAAK,kBAAkB;AAClC,mBAAW,KAAK,gBAAgB;AAChC,WAAG,WAAW,IAAI,WAAW,IAAI;AACjC,mBAAW,OAAO;;AAGtB,UAAI;AAAY,qBAAa,UAAU;AACvC,mBAAa;AACb,UAAI;AAAiB,qBAAa,eAAe;AACjD,wBAAkB;AAClB,aAAO,UAAU,MAAM,MAAM,SAAS;;GAE7C;AAGD,KAAG,SAAS,SAAS,GAAG,QAAQ,SAAS,YAAU;AAC/C,WAAO,WAAA;AACH,aAAO,WAAW,MAAM,MAAM,SAAS,EAAE,KAAK,SAAS,QAAM;AAEzD,mBAAW,eAAe,GAAG,IAAI,IAAI;AACrC,eAAO;OACV;;GAER;AAGD,KAAG,GAAG,SAAS,SAAS,iBAAc;AAClC,QAAI,GAAG,kBAAiB;AAAI,aAAO;AAEnC,WAAO,GAAG,MAAM,UAAU,EAAE,QAAQ,KAAK,EAAE,KAAK,SAAS,YAAU;AAG/D,UAAI,iBAAkB,aAAa,WAAW,MAAM;AACpD,iBAAW,OAAO,IAAI,SAAS;QAC3B,YAAY;QACZ,MAAM;QACN,eAAe,KAAK,IAAG;QACvB,iBAAiB;QACjB,UAAU;OACb;AACD,UAAI,WAAW,eAAe,GAAG,IAAI,IAAI,gBAAgB;AAGrD,mBAAW,eAAe,GAAG,IAAI,IAAI;AACrC,+BAAM,kBAAkB,WAAA;AACpB,qBAAW,GAAG,0BAA0B,KAAK,cAAc;SAC9D;;AAGL,aAAO,GAAG,WAAW,IAAI,WAAW,IAAI,EAAE,KAAK,uBAAM,kBAAkB,WAAA;AAEnE,YAAI,+BAA+B;AACnC,eAAO,GAAG,WAAW,QAAQ,UAAU,EAAE,QAAO,EAAG,OAAO,SAAA,cAAY;AAClE,cAAI,aAAa,UAAU;AACvB,gBAAI,aAAa,gBAAgB,KAAK,IAAG,IAAK,cAAc;AAExD,2BAAa,WAAW;mBACrB;AAEH,6CAA+B;;;AAKvC,cAAI,CAAC,WAAW;AAAM;AAItB,cAAI,aAAa,OAAO,WAAW,KAAK,IAAI;AACxC,yBAAa,WAAW,WAAW,KAAK,WAAW;;SAE1D;OACJ,CAAC,EAAE,KAAK,WAAA;AACL,mBAAW,GAAG,6BAA6B,2BAA2B;AACtE,mBAAW,GAAG,gBAAgB,cAAc;AAC5C,mBAAW,GAAG,oBAAoB,SAAS;AAC3C,mBAAW,GAAG,aAAa,WAAW;AAEtC,qBAAa,WAAW,MAAM,UAAU;AAExC,0BAAkB,WAAW,WAAW,kBAAkB;OAC7D,EAAE,KAAK,WAAA;AACJ,gBAAO;OACV;KACJ;KACF,IAAI;AAEP,MAAI,kBAAkB;AAEtB,WAAS,4BAA4B,QAAQ,gBAAc;AACvD,QAAI,WAAW,GAAG,MAAM;AACpB,UAAI,mBAAmB;AAAgB;AACvC,wBAAkB;AAClB,6BAAM,IAAI,WAAA;AACN,oBAA0B,EAAE,MAAM,uBAAuB,WAAA;SAKxD;OACJ;;;AAIT,WAAS,YAAY,gBAAgB,WAAW,YAAU;AAItD,QAAI,CAAC,aAAa,YAAY,kBAAkB;AAI5C,aAAO,YAAY;;AAGvB,QAAI,UAAU;AACd,QAAI,cAAc,WAAW;AAC7B,QAAI,CAAC,aAAa;AACd,aAAOC,UAAQ,OAAO,IAAI,uBAAM,oBAAmB,CAAE;;AAEzD,QAAI,QAAQ;AACZ,QAAI,UAAU,GAAG,SAAS,MAAM,KAAK,EAAE,MAAM,YAAY,UAAU,EAAE,MAAM,KAAK,EAAE,QAAQ,SAAU,SAAO;AACvG,UAAI,QAAQ,SAAS,GAAG;AACpB,YAAI,aAAa,QAAQ,QAAQ,SAAS,CAAC;AAC3C,kBAAW,QAAQ,WAAW;AAC9B,WAAG,GAAG,SAAS,EAAE,KAAK,SAAS,OAAO;AACtC,oBAAY,aAAa,WAAW;iBAC7B,YAAY;AAGnB,WAAG,GAAG,SAAS,EAAE,KAAK,CAAA,GAAI,KAAK;;AAGnC,UAAI,qBAAqB;AACzB,aAAO,GAAG,WAAW,MAAM,KAAK,EAAE,OAAO,YAAY,EAAE,EAAE,OAAO,SAAA,UAAQ;AACpE,6BAAqB;AACrB,iBAAS,gBAAgB,KAAK,IAAG;AACjC,iBAAS,kBAAkB;AAC3B,iBAAS,aAAa,KAAK,IAAI,SAAS,YAAY,YAAY,UAAU;OAC7E,EAAE,KAAK,WAAA;AAAI,eAAA;MAAkB,CAAA;KACjC,EAAE,KAAK,SAAA,oBAAkB;AACtB,UAAI,CAAC,oBAAoB;AAErB,YAAI,uBAAuB;AACvB,gBAAM,IAAI,MAAM,0BAA0B;eACvC;AACH,aAAG,MAAK;AACR,kBAAQ,MAAM,aAAa;AAC3B,cAAIC,QAAO;AAAU,YAAAA,QAAO,SAAS,OAAO,IAAI;AAChD,gBAAM,IAAI,MAAM,aAAa;;;AAMrC,UAAI,WAAW,WAAW,eAAe,GAAG,IAAI,IAAI,YAAY,YAAY;AAGxE,eAAO,YAAY,WAAW,eAAe,GAAG,IAAI,IAAI,aAAa,KAAK,GAAG,OAAO;;KAG3F,EAAE,QAAQ,WAAA;AACP,aAAO,YAAY;KACtB;AAED,QAAI,CAAC,WAAW;AACZ,kBAAY,mBAAmB;;AAEnC,WAAO;;AAeX,WAAS,YAAS;AACd,sBAAkB;AAClB,QAAI,kBAAkB,WAAW,QAAQ,WAAW,KAAK;AACzD,QAAI,CAAC;AAAiB;AACtB,OAAG,YAAY,OAAO,GAAG,YAAY,WAAA;AACjC,SAAG,WAAW,MAAM,EAAC,IAAI,gBAAe,CAAC,EAAE,MAAM,SAAA,aAAW;AACxD,YAAI,CAAC,aAAa;AAEd,cAAI,GAAG,OAAM;AAAI,eAAG,MAAK;AACzB;;AAEJ,oBAAY,gBAAgB,KAAK,IAAG;AACpC,oBAAY,kBAAkB;AAC9B,eAAO,GAAG,WAAW,IAAI,WAAW;OACvC;KACJ,EAAE,MAAM,uBAAuB,WAAA;KAE/B,EAAE,QAAQ,WAAA;AACP,UAAI,WAAW,QAAQ,WAAW,KAAK,OAAO,mBAAmB,GAAG,OAAM,GAAI;AAC1E,0BAAkB,WAAW,WAAW,kBAAkB;;KAEjE;;AAGL,WAAS,OAAI;AACT,iBAAa;AACb,QAAI,kBAAkB,WAAW,QAAQ,WAAW,KAAK;AACzD,QAAI,CAAC;AAAiB;AACtB,2BAAM,IAAI,WAAA;AACN,kBAAY,WAAW,eAAe,GAAG,IAAI,CAAC,EAAE,KAAK,OAAO,EAAE,KAAK,wBAAwB,EAC1F,MAAM,uBAAuB,WAAA;OAK7B,EACA,QAAQ,WAAA;AAEL,YAAI,WAAW,QAAQ,WAAW,KAAK,OAAO,mBAAmB,GAAG,OAAM,GAAI;AAC1E,uBAAa,WAAW,MAAM,UAAU;;OAE/C;KACJ;;AAIL,WAAS,UAAO;AACZ,QAAI,cAAc,WAAW;AAC7B,QAAI,CAAC;AAAa,aAAOD,UAAQ,OAAO,IAAI,uBAAM,oBAAmB,CAAE;AACvE,WAAO,GAAG,YAAY,MAAM,cAAc,YAAY,cAAc,WAAA;AAMhE,UAAI,iBAAiB;AACrB,SAAG,WAAW,MAAM,eAAe,EAAE,MAAM,KAAK,IAAG,IAAK,YAAY,EAAE,OAAO,SAAA,MAAI;AAAI,eAAA,KAAK,SAAS;MAAO,CAAA,EAAE,OAAO,SAAS,MAAI;AAC5H,YAAI,KAAK,mBAAmB,KAAK,kBAAkB,KAAK,IAAG,GAAI;AAE3D,iBAAO,KAAK;AAEZ,cAAID,eAAc;AACd,YAAAA,cAAa,WAAW,+BAA+B,KAAK,KAAK,MAAM,GAAG,IAAI;;AAGlF,cAAI,KAAK,UAAU;AAGf,eAAG,WAAW,OAAO,aAAa,EAAE,UAAU,EAAC,CAAE;AACjD,6BAAiB;;AAIrB,aAAG,WAAW,MAAM,EAAC,iBAAiB,KAAK,GAAE,CAAC,EAAE,OAAO,SAAS,KAAG;AAC/D,gBAAI,IAAI;AACJ,kBAAI,kBAAkB,YAAY;;AAGlC,qBAAO,KAAK;WACnB;mBACM,CAAC,KAAK,iBAAiB;AAE9B,eAAK,kBAAkB,KAAK,IAAG,IAAK;;OAE3C,EAAE,KAAK,WAAA;AAEJ,mBAAW,iBAAiB,EAAE;AAC9B,eAAO,GAAG,GAAG,SAAS,EAAE,KAAK,cAAc;OAC9C;KACJ;;AAGL,WAAS,iBAAc;AAEnB,QAAI,CAAC,WAAW;AAAM;AACtB,4BAAwB;AACxB,eAAW,KAAK,kBAAkB;AAClC,eAAW,KAAK,gBAAgB;AAChC,OAAG,WAAW,IAAI,WAAW,IAAI;AACjC,eAAW,kBAAkB;AAE7B,QAAIA,eAAc;AACd,MAAAA,cAAa,QAAQ,+BAA+B,WAAW,KAAK,GAAG,SAAQ,IAAK,MAAM,GAAG,MAAM,MAAM;;;AAIjH,WAAS,UAAU,QAAQ,QAAM;AAC7B,QAAI,WAAW,GAAG,QAAQ,CAAC,WAAW,iBAAiB;AAInD,6BAAM,IAAI,WAAA;AACN,WAAG,WAAW,OAAO,QAAQ,EAAE,iBAAiB,GAAG,eAAe,EAAC,CAAE,EAAE,KAAK,OAAO;OACtF;;;AAIb;AAMA,WAAW,UAAU;AACrB,WAAW,iBAAiB,CAAA;AAC5B,WAAW,KAAK,uBAAM,OAAO,MAAM,6BAA6B,oBAAoB,aAAa,cAAc;AAC/G,WAAW,aAAa;AAExB,WAAW,mBAAmB;AAE9B,WAAW,aAAa,cAAc,UAAU;AAEhD,WAAW,kBAAkB,WAAA;AACzB,aAAW,GAAG,aAAa,KAAI;AACnC;AAEA,IAAI;AACA,aAAW,mBAAmBE,QAAO;SAChC,IAAG;AAAA;AAKZ,IAAIA,YAAM,QAANA,YAAM,SAAA,SAANA,QAAQ,kBAAkB;AAC1B,EAAAA,QAAO,iBAAiB,WAAW,WAAW,UAAU;AACxD,EAAAA,QAAO,iBAAiB,gBAAgB,WAAW,eAAe;;AAGtE,IAAI,uBAAM,YAAY;AAClB,MAAI,uBAAM,WAAW,YAAY,aAAa;AAC1C,UAAM,IAAI,MAAO,oCAAoC;;OAEtD;AAEH,yBAAM,aAAa;AACnB,yBAAM,OAAO,KAAK,UAAU;;AAGhC,IAAA,mBAAe,uBAAM;;;AClgBrB,IAAI,YAAY,uBAAM;AACtB,SAAS,oBAAoB,IAAI,SAAS;AACtC,SAAO,SAAS,gBAAgB,kBAAkB,cAAc,KAAK,SAAS;AAC1E,QAAI,GAAG,OAAO,GAAG;AAEb,UAAI,CAAC,GAAG;AACJ,cAAM,IAAI,MAAM,wFAAwF;AAC5G,UAAI,GAAG,eAAe,UAAU;AAE5B,eAAO,QAAQ,kBAAkB,cAAc,KAAK,SAAS,GAAG,eAAe,EAAE;AAAA,MACrF,OACK;AAGD,eAAO,GAAG,MAAM,YAAY,EAAE,MAAM,UAAU,EAAE,MAAM,CAAC,EAAE,MAAM,SAAU,YAAY;AAEjF,iBAAO,GAAG,WAAW,YAAY,WAAW;AAAA,YACxC;AAAA,YACA;AAAA,YACA;AAAA,UACJ,GAAG,WAAW,IAAI,EAAE,WAAW,KAAK,CAAC;AAAA,QACzC,CAAC;AAAA,MACL;AAAA,IACJ,WACS,GAAG,cAAc,GAAG;AAEzB,aAAO,UAAU,OAAO,IAAI,uBAAM,oBAAoB,CAAC;AAAA,IAC3D,WACS,GAAG,UAAU,GAAG;AAErB,aAAO,UAAU,OAAO,IAAI,uBAAM,kBAAkB,6DAA6D,CAAC;AAAA,IACtH,OACK;AAGD,UAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,WAAG,GAAG,SAAS,WAAY;AAIvB,iBAAO,GAAG,WAAW,IAAI,EAAE,IAAS,GAAG,SAAU,MAAM;AAInD,gBAAI,iBAAiB,GAAG,SAAS,QAAQ,cAAc,KAAK,OAAO;AACnE,2BAAe,KAAK,SAAS,MAAM;AAEnC,gBAAI,QAAQ,KAAK,uBAAuB;AAKpC;AAAA,YACJ;AAOA,mBAAO;AAAA,UACX,CAAC;AAAA,QACL,CAAC;AAED,WAAG,KAAK,EAAE,MAAM,SAAU,IAAI;AAG1B,iBAAO,IAAI,uBAAM,kBAAkB,6DAA6D,EAAE,CAAC;AAAA,QACvG,CAAC;AAAA,MACL,CAAC;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AAEA,SAAS,qBAAqB,MAAM;AAIhC;AAAA;AAAA,IAAsB,WAAY;AAC9B,eAAS,iBAAiB,QAAQ,YAAY;AAC1C,aAAK,SAAS;AACd,YAAI;AACA,iCAAM,OAAO,MAAM,UAAU;AAAA,MACrC;AACA,uBAAiB,UAAU,OAAO,WAAY;AAE1C,eAAO,uBAAM,IAAI,WAAY;AACzB,iBAAO,KAAK,KAAK;AAAA,QACrB,CAAC;AAAA,MACL;AACA,aAAO;AAAA,IACX,EAAE;AAAA;AACN;AAEA,SAAS,wBAAwB,IAAI,cAAc,KAAK;AACpD,SAAO,SAAS,oBAAoB,SAAS;AACzC,WAAO,GAAG,YAAY,MAAM,GAAG,YAAY,GAAG,UAAU,WAAY;AAChE,UAAI,CAAC;AACD,cAAM,IAAI,MAAM,qBAAqB;AAEzC,aAAO,GAAG,WAAW,MAAM,KAAK,EAAE,iBAAiB,GAAG,EAAE,MAAM,SAAU,MAAM;AAG1E,YAAI,MAAM;AACN,cAAI,mBAAmB,qBAAqB,IAAI;AAEhD,eAAK,cAAc,IAAI,iBAAiB,KAAK,IAAI,KAAK,WAAW;AACjE,eAAK,eAAe;AACpB,eAAK,cAAc;AACnB,aAAG,WAAW,IAAI,IAAI;AAAA,QAC1B,OACK;AAED,iBAAO,IAAI,GAAG,WAAW,SAAS;AAClC,eAAK,aAAa;AAClB,eAAK,wBAAwB;AAC7B,eAAK,sBAAsB,CAAC;AAC5B,eAAK,OAAO;AACZ,eAAK,eAAe;AACpB,eAAK,MAAM;AACX,eAAK,cAAc;AACnB,eAAK,gBAAgB,KAAK,IAAI;AAC9B,eAAK,gBAAgB;AACrB,cAAI,qBAAqB,qBAAqB,IAAI;AAClD,iCAAM,QAAQ,QAAQ,WAAY;AAE9B,gBAAI,QAAQ,kBAAkB;AAC1B,qBAAO,GAAG,SAAS,aAAa,EAAE,QAAQ,SAAU,iBAAiB;AACjE,qBAAK,aAAa;AAAA,cACtB,CAAC;AAAA,UACT,EAAE,CAAC,EAAE,KAAK,WAAY;AAClB,eAAG,WAAW,IAAI,IAAI,EAAE,KAAK,SAAU,QAAQ;AAC3C,mBAAK,cAAc,IAAI,mBAAmB,MAAM;AAChD,iBAAG,WAAW,IAAI,IAAI;AAAA,YAC1B,CAAC;AAAA,UACL,CAAC;AAAA,QACL;AACA,eAAO;AAAA,MACX,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACJ;AAEA,SAAS,YAAY,IAAI;AACrB,SAAO,SAAS,QAAQ,SAAS,IAAI,YAAY;AAC7C,aAAS,WAAW;AAChB,UAAI,CAAC,QAAQ,kBAAkB;AAC3B,gBAAQ,mBAAmB,uBAAM,kBAAkB,WAAY;AAC3D,iBAAO,uBAAM,IAAI,WAAY;AACzB,mBAAO,GAAG;AAAA,UACd,CAAC;AAAA,QACL,CAAC,EAAE,QAAQ,WAAY;AACnB,iBAAO,QAAQ;AAAA,QACnB,CAAC;AAAA,MACL,OACK;AACD,gBAAQ,mBAAmB,QAAQ,iBAAiB,KAAK,WAAY;AACjE,iBAAO,QAAQ,SAAS,IAAI,UAAU;AAAA,QAC1C,CAAC;AAAA,MACL;AACA,aAAO,QAAQ;AAAA,IACnB;AACA,QAAI,CAAC,YAAY;AAEb,UAAI,GAAG,OAAO,GAAG;AACb,eAAO,SAAS;AAAA,MACpB,OACK;AACD,eAAO,uBAAM,QAAQ,OAAO,IAAI,uBAAM,oBAAoB,CAAC;AAAA,MAC/D;AAAA,IACJ,WACS,GAAG,kBAAkB,eAAe,GAAG,eAAe,IAAI;AAE/D,aAAO,SAAS;AAAA,IACpB,OACK;AACD,aAAO,uBAAM,QAAQ,OAAO,IAAI,uBAAM,oBAAoB,CAAC;AAAA,IAC/D;AAAA,EACJ;AACJ;AAEA,SAAS,6BAA6B,IAAI,MAAM;AAC5C,SAAO,SAAS,yBAAyB,SAAS,gBAAgB;AAC9D,WAAO,GAAG,YAAY,OAAO,GAAG,qBAAqB,WAAY;AAC7D,aAAO,GAAG,oBAAoB,QAAQ,QAAQ,IAAI,SAAU,QAAQ;AAChE,YAAI,mBAAmB;AAAA,UACnB,MAAM,KAAK;AAAA,UACX,MAAM,OAAO;AAAA,UACb,OAAO,OAAO;AAAA,UACd,KAAK,OAAO;AAAA,QAChB;AACA,YAAI,OAAO;AACP,2BAAiB,MAAM,OAAO;AAClC,YAAI,OAAO;AACP,2BAAiB,OAAO,OAAO;AACnC,eAAO;AAAA,MACX,CAAC,CAAC;AAAA,IACN,CAAC,EAAE,KAAK,WAAY;AAChB,WAAK,wBAAwB;AAC7B,aAAO,KAAK,KAAK;AAAA,IACrB,CAAC;AAAA,EACL;AACJ;AAGA,IAAIC,UAAS;AACb,IAAIC,UAAS;AACb,IAAIC,UAAS;AAEb,SAAS,WAAW,OAAO,SAAS;AAChC,MAAI,OAAO,QAAQ,IAAI,SAAU,GAAG;AAAE,WAAO,EAAE;AAAA,EAAK,CAAC;AACrD,MAAI,MAAM,CAAC;AAGX,SAAO,MAAM,MAAM,KAAK,EAAE,MAAM,IAAI,EAAE,IAAI,EAAE,KAAK,SAAU,KAAK,QAAQ;AACpE,QAAI,OAAO,aAAa,EAAE,IAAI;AAAA,EAClC,CAAC,EAAE,KAAK,WAAY;AAGhB,QAAI,mBAAmB,QAAQ,OAAO,SAAU,GAAG;AAAE,aAAO,IAAI,eAAe,EAAE,MAAM,EAAE;AAAA,IAAG,CAAC;AAG7F,QAAI,YAAY,iBAAiB,IAAI,SAAU,GAAG;AAC9C,UAAI,OAAO,IAAI,EAAE,MAAM,EAAE;AACzB,aAAO,KAAK,EAAE,IAAI,EAAE,QAAQ,SAAU,SAAS;AAC3C,+BAAM,aAAa,MAAM,SAAS,EAAE,KAAK,OAAO,CAAC;AAAA,MACrD,CAAC;AACD,aAAO;AAAA,IACX,CAAC;AACD,WAAO,MAAM,QAAQ,SAAS;AAAA,EAClC,CAAC;AACL;AAEA,SAAS,iBAAiB,IAAI;AAC1B,SAAO,SAAS,aAAa,SAAS;AAClC,QAAI,mBAAmB,CAAC;AACxB,YAAQ,QAAQ,SAAU,QAAQ;AAC9B,UAAI;AACJ,UAAI,CAAC,iBAAiB,eAAe,OAAO,KAAK,GAAG;AAChD,yBAAiB,OAAO,KAAK,KAAK,KAAK,CAAC,GAAG,GAAGF,OAAM,IAAI,CAAC,GAAG,GAAGE,OAAM,IAAI,CAAC,GAAG,GAAGD,OAAM,IAAI,CAAC,GAAG;AAAA,MAClG;AACA,uBAAiB,OAAO,KAAK,EAAE,OAAO,IAAI,EAAE,KAAK,MAAM;AAAA,IAC3D,CAAC;AACD,QAAI,cAAc,OAAO,KAAK,gBAAgB;AAC9C,QAAI,SAAS,YAAY,IAAI,SAAU,OAAO;AAAE,aAAO,GAAG,MAAM,KAAK;AAAA,IAAG,CAAC;AACzE,WAAO,GAAG,YAAY,MAAM,QAAQ,WAAY;AAC5C,kBAAY,QAAQ,SAAU,YAAY;AACtC,YAAI,QAAQ,GAAG,MAAM,UAAU;AAC/B,YAAI,cAAc,CAAC,MAAM,OAAO,QAAQ;AACxC,YAAI,uBAAuB,iBAAiB,UAAU,EAAED,OAAM;AAC9D,YAAI,uBAAuB,iBAAiB,UAAU,EAAEE,OAAM;AAC9D,YAAI,uBAAuB,iBAAiB,UAAU,EAAED,OAAM;AAC9D,YAAI,qBAAqB,SAAS;AAC9B,gBAAM,QAAQ,qBAAqB,IAAI,SAAU,GAAG;AAAE,mBAAO,EAAE;AAAA,UAAK,CAAC,GAAG,cACpE,qBAAqB,IAAI,SAAU,GAAG;AAAE,mBAAO,EAAE;AAAA,UAAK,CAAC,IAAI,MAAS;AAC5E,YAAI,qBAAqB,SAAS;AAC9B,qBAAW,OAAO,oBAAoB;AAC1C,YAAI,qBAAqB,SAAS;AAC9B,gBAAM,WAAW,qBAAqB,IAAI,SAAU,GAAG;AAAE,mBAAO,EAAE;AAAA,UAAK,CAAC,CAAC;AAAA,MACjF,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACJ;AAEA,SAAS,4BAA4B,IAAI,MAAM;AAC3C,MAAI,eAAe,iBAAiB,EAAE;AACtC,SAAO,SAAS,wBAAwB,SAAS,gBAAgB;AAE7D,QAAI,yBAAyB,GAAG,OAAO,OAAO,SAAU,OAAO;AAAE,aAAO,MAAM,SAAS,cACnF,MAAM,SAAS,yBACf,MAAM,OAAO;AAAA,IAAY,CAAC;AAC9B,WAAO,GAAG,YAAY,OAAO,wBAAwB,WAAY;AAC7D,UAAI,QAAQ,uBAAM;AAClB,UAAI,6BAA6B;AACjC,aAAO,GAAG,SAAS,QAAQ,KAAK,EAAE,KAAK,SAAU,YAAY;AAEzD,qCAA8B,cAAc,WAAW,OAAQ;AAAA,MACnE,CAAC,EAAE,KAAK,WAAY;AAEhB,cAAM,SAAS,KAAK;AAEpB,eAAO,GAAG,oBAAoB,MAAM,MAAM,EAAE,OAAO,KAAK,EAAE,EAAE,QAAQ;AAAA,MACxE,CAAC,EAAE,KAAK,SAAU,oBAAoB;AAClC,eAAO,aAAa,kBAAkB;AAAA,MAC1C,CAAC,EAAE,KAAK,WAAY;AAChB,eAAO,GAAG,oBAAoB,MAAM,MAAM,EAAE,OAAO,KAAK,EAAE,EAAE,OAAO;AAAA,MACvE,CAAC,EAAE,KAAK,WAAY;AAEhB,eAAO,aAAa,OAAO;AAAA,MAC/B,CAAC,EAAE,KAAK,WAAY;AAEhB,eAAO,GAAG,SAAS,QAAQ,KAAK,EAAE,KAAK;AAAA,MAC3C,CAAC,EAAE,KAAK,SAAU,YAAY;AAC1B,YAAI,uBAAwB,cAAc,WAAW,OAAQ;AAE7D,aAAK,wBAAwB;AAC7B,aAAK,oBAAoB,KAAK,EAAE,QAAQ,gBAAgB,OAAO,qBAAqB,CAAC;AACrF,YAAI,KAAK,eAAe,4BAA4B;AAIhD,eAAK,aAAa;AAAA,QACtB;AAEA,YAAI,KAAK,oBAAoB,SAAS,GAAG;AACrC,mBAAS,IAAI,KAAK,oBAAoB,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1D,gBAAI,KAAK,cAAc,KAAK,oBAAoB,CAAC,EAAE,OAAO;AACtD,mBAAK,oBAAoB,OAAO,GAAG,CAAC;AACpC;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAEA,aAAK,KAAK,EAAE,MAAM,SAAU,KAAK;AAC7B,kBAAQ,KAAK,6EAA6E,IAAI,SAAS,IAAI;AAAA,QAC/G,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACJ;AAEA,SAAS,oCAAoC,MAAM;AAE/C,MAAI,KAAK,oBAAoB,WAAW;AACpC,WAAO;AAAA;AAAA,MAEH,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,IACxB;AACJ,WAAS,IAAI,KAAK,oBAAoB,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3D,QAAI,KAAK,cAAc,KAAK,oBAAoB,CAAC,EAAE,OAAO;AAEtD,aAAO;AAAA,QACH,mBAAmB,MAAM,KAAK,oBAAoB,SAAS,IAAI,WAAW,KAAK,oBAAoB,IAAI,CAAC,EAAE;AAAA,QAC1G,oBAAoB,KAAK,oBAAoB,CAAC,EAAE;AAAA,MACpD;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AAAA,IACH,mBAAmB,KAAK,oBAAoB,CAAC,EAAE;AAAA,IAC/C,oBAAoB;AAAA,EACxB;AACJ;AAEA,SAAS,uBAAuB,YAAY,YAAY;AACpD,MAAI,eAAe,uBAAM,UAAU,UAAU;AAC7C,SAAO,KAAK,WAAW,IAAI,EAAE,QAAQ,SAAU,SAAS;AACpD,2BAAM,aAAa,aAAa,KAAK,SAAS,WAAW,KAAK,OAAO,CAAC;AAAA,EAC1E,CAAC;AACD,SAAO;AACX;AAEA,SAAS,uBAAuB,YAAY,YAAY;AACpD,MAAI,eAAe,uBAAM,UAAU,UAAU;AAC7C,SAAO,KAAK,WAAW,IAAI,EAAE,QAAQ,SAAU,SAAS;AAEpD,QAAI,gBAAgB;AACpB,WAAO,KAAK,WAAW,IAAI,EAAE,OAAO,SAAU,YAAY;AAAE,aAAO,QAAQ,QAAQ,aAAa,GAAG,MAAM;AAAA,IAAG,CAAC,EAAE,QAAQ,SAAU,YAAY;AACzI,6BAAM,aAAa,aAAa,KAAK,UAAU,GAAG,QAAQ,OAAO,WAAW,SAAS,CAAC,GAAG,WAAW,KAAK,OAAO,CAAC;AACjH,sBAAgB;AAAA,IACpB,CAAC;AACD,QAAI,CAAC,eAAe;AAEhB,mBAAa,KAAK,OAAO,IAAI,WAAW,KAAK,OAAO;AAAA,IACxD;AAGA,WAAO,KAAK,WAAW,IAAI,EAAE,OAAO,SAAU,SAAS;AAAE,aAAO,QAAQ,QAAQ,UAAU,GAAG,MAAM;AAAA,IAAG,CAAC,EAAE,QAAQ,SAAU,SAAS;AAChI,aAAO,aAAa,KAAK,OAAO;AAAA,IACpC,CAAC;AAAA,EACL,CAAC;AACD,SAAO;AACX;AAEA,SAAS,YAAY,YAAY,YAAY;AACzC,UAAQ,WAAW,MAAM;AAAA,IACrB,KAAKD;AACD,cAAQ,WAAW,MAAM;AAAA,QACrB,KAAKA;AACD,iBAAO;AAAA;AAAA,QACX,KAAKC;AACD,iBAAO,uBAAuB,YAAY,UAAU;AAAA;AAAA,QACxD,KAAKC;AACD,iBAAO;AAAA,MACf;AACA;AAAA,IACJ,KAAKD;AACD,cAAQ,WAAW,MAAM;AAAA,QACrB,KAAKD;AACD,iBAAO;AAAA;AAAA,QACX,KAAKC;AACD,iBAAO,uBAAuB,YAAY,UAAU;AAAA;AAAA,QACxD,KAAKC;AACD,iBAAO;AAAA,MACf;AACA;AAAA,IACJ,KAAKA;AACD,cAAQ,WAAW,MAAM;AAAA,QACrB,KAAKF;AACD,iBAAO;AAAA;AAAA,QACX,KAAKC;AACD,iBAAO;AAAA;AAAA,QACX,KAAKC;AACD,iBAAO;AAAA,MACf;AACA;AAAA,EACR;AACJ;AAEA,SAAS,4BAA4B,IAAI,MAAM,eAAe;AAC1D,SAAO,SAAS,wBAAwB,UAAU,YAAY,aAAa,IAAI;AAE3E,QAAI,YAAY,CAAC;AACjB,QAAI,aAAa;AACjB,QAAI,UAAU;AACd,QAAI,eAAe,KAAK;AACxB,QAAI,eAAe;AACnB,WAAO,GAAG,YAAY,KAAK,GAAG,UAAU,WAAY;AAChD,UAAI,QAAQ,GAAG,SAAS,MAAM,KAAK,EAAE,QAAQ,UAAU,aAAa,OAAO,IAAI;AAC/E,aAAO,MAAM,MAAM,WAAY;AAC3B,YAAI,eAAe,YAAY;AAC3B,oBAAU;AACV,iBAAO;AAAA,QACX;AAAA,MACJ,CAAC,EAAE,KAAK,SAAU,QAAQ;AAEtB,uBAAe,OAAO;AAEtB,YAAI,OAAO,WAAW;AAClB;AAEJ,YAAI,eAAe;AAAA,UACf,MAAM,OAAO;AAAA,UACb,OAAO,OAAO;AAAA,UACd,KAAK,OAAO;AAAA,QAChB;AACA,YAAI,OAAO,SAASF;AAChB,uBAAa,MAAM,OAAO;AAAA,iBACrB,OAAO,SAASC;AACrB,uBAAa,OAAO,OAAO;AAC/B,YAAI,KAAK,OAAO,QAAQ,MAAM,OAAO;AACrC,YAAI,aAAa,UAAU,EAAE;AAC7B,YAAI,CAAC,YAAY;AAEb,oBAAU,EAAE,IAAI;AAChB,YAAE;AAAA,QACN,OACK;AAED,cAAI,aAAa;AACjB,cAAI,eAAe,YAAY,YAAY,UAAU;AACrD,oBAAU,EAAE,IAAI;AAAA,QACpB;AAAA,MACJ,CAAC;AAAA,IACL,CAAC,EAAE,KAAK,WAAY;AAChB,UAAI,UAAU,OAAO,KAAK,SAAS,EAAE,IAAI,SAAU,KAAK;AACpD,eAAO,UAAU,GAAG;AAAA,MACxB,CAAC;AACD,oBAAc,gBAAgB;AAC9B,aAAO,GAAG,SAAS,SAAS,EAAE,YAAY,aAAa,CAAC;AAAA,IAC5D,CAAC;AAAA,EACL;AACJ;AAEA,SAAS,6BAA6B,IAAI,MAAM,uBAAuB,yBAAyB,eAAe,IAAI;AAC/G,SAAO,SAAS,yBAAyB,OAAO,SAAS,YAAY;AAIjE,QAAI,eAAe;AACnB,WAAO,WAAW,MAAM,WAAY;AAChC,UAAI,QAAQ,WAAW,uBAAuB;AAC1C,uBAAe;AACf,eAAO;AAAA,MACX;AAAA,IACJ,CAAC,EAAE,KAAK,SAAU,MAAM,QAAQ;AAC5B,cAAQ,KAAK;AAAA,QACT,MAAMD;AAAA,QACN,OAAO,MAAM;AAAA,QACb,KAAK,OAAO;AAAA,QACZ,KAAK,OAAO;AAAA,MAChB,CAAC;AACD,YAAM,aAAa,OAAO;AAAA,IAC9B,CAAC,EAAE,KAAK,WAAY;AAChB,UAAI,cAAc;AAEd,sBAAc,gBAAgB;AAC9B,eAAO,GAAG,SAAS,MAAM,MAAM,EAAE,eAAe,MAAM,CAAC;AAAA,MAC3D,OACK;AAED,YAAI,MAAM,eAAe,WAAW,GAAG;AAGnC,cAAI,QAAQ,oCAAoC,IAAI;AACpD,iBAAO,wBAAwB,MAAM,mBAAmB,wBAAwB,QAAQ,QAAQ,MAAM,mBAAmB,SAAU,mBAAmB,SAAS,wBAAwB;AACnL,sBAAU,QAAQ,OAAO,iBAAiB;AAC1C,mCAAuB,gBAAgB;AACvC,mBAAO,GAAG,SAAS,MAAM,oBAAoB,SAAS,sBAAsB;AAAA,UAChF,CAAC;AAAA,QACL,OACK;AAED,gBAAM,eAAe,MAAM,eAAe,MAAM;AAChD,iBAAO,yBAAyB,OAAO,SAAS,GAAG,MAAM,MAAM,YAAY,EAAE,QAAQ,KAAK,CAAC;AAAA,QAC/F;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;AAEA,SAAS,2BAA2B,IAAI,eAAe,mBAAmB;AACtE,MAAI,wBAAwB;AAC5B,SAAO,SAAS,uBAAuB,MAAM,IAAI;AAO7C,QAAI,0BAA0B,4BAA4B,IAAI,MAAM,aAAa;AACjF,QAAI,2BAA2B,6BAA6B,IAAI,MAAM,uBAAuB,yBAAyB,eAAe,EAAE;AAGvI,QAAI,KAAK,cAAc,GAAG;AAEtB,UAAI,QAAQ,oCAAoC,IAAI;AACpD,aAAO,wBAAwB,KAAK,YAAY,uBAAuB,MAAM,mBAAmB,SAAU,SAAS,SAAS,wBAAwB;AAChJ,eAAO,GAAG,SAAS,MAAM,oBAAoB,SAAS,sBAAsB;AAAA,MAChF,CAAC;AAAA,IACL,OACK;AAGD,UAAI,KAAK,kBAAkB,MAAM;AAE7B,YAAI,iBAAiB,GAAG,OAAO,OAAO,SAAU,OAAO;AACnD,iBAAO,MAAM,OAAO;AAAA,QACxB,CAAC,EAAE,IAAI,SAAU,OAAO;AACpB,iBAAO,MAAM;AAAA,QACjB,CAAC;AACD,YAAI,eAAe,WAAW;AAC1B,iBAAO,uBAAM,QAAQ,QAAQ,GAAG,CAAC,GAAG,MAAM,OAAO,CAAC,CAAC,CAAC;AACxD,YAAI,gBAAgB;AAAA,UAChB;AAAA,UACA,cAAc,eAAe,MAAM;AAAA,UACnC,YAAY;AAAA,QAChB;AACA,eAAO,GAAG,SAAS,QAAQ,KAAK,EAAE,KAAK,SAAU,YAAY;AACzD,wBAAc,oBAAqB,cAAc,WAAW,OAAQ;AACpE,cAAIG,cAAa,GAAG,MAAM,cAAc,YAAY,EAAE,QAAQ,KAAK;AACnE,iBAAO,yBAAyB,eAAe,CAAC,GAAGA,WAAU;AAAA,QACjE,CAAC;AAAA,MACL,WACS,KAAK,cAAc,YAAY;AACpC,YAAI,aAAa,GAAG,MAAM,KAAK,cAAc,YAAY,EAAE,MAAM,KAAK,EAAE,MAAM,KAAK,cAAc,UAAU;AAC3G,eAAO,yBAAyB,uBAAM,UAAU,KAAK,aAAa,GAAG,CAAC,GAAG,UAAU;AAAA,MACvF,OACK;AACD,YAAI,aAAa,GAAG,MAAM,cAAc,YAAY,EAAE,QAAQ,KAAK;AACnE,eAAO,yBAAyB,uBAAM,UAAU,KAAK,aAAa,GAAG,CAAC,GAAG,UAAU;AAAA,MACvF;AAAA,IACJ;AAAA,EACJ;AACJ;AAEA,IAAI,WAAW;AAAA,EACX,OAAO;AAAA,EACP,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,kBAAkB;AAAA;AACtB;AACA,IAAI,cAAc;AAAA,EACd,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACT;AAEA,IAAIC,aAAY,uBAAM;AACtB,SAAS,oBAAoB,IAAI,kBAAkB,WAAW,SAAS,sBAAsB;AACzF,MAAI,UAAU,YAAY,EAAE;AAC5B,MAAI,gBAAgB,EAAE,eAAe,KAAK;AAC1C,WAAS,aAAa;AAGlB,WAAO,GAAG,kBAAkB,GAAG,eAAe,OAAO;AAAA,EACzD;AACA,SAAO,SAAS,gBAAgB,MAAM,YAAY;AAE9C,QAAI,yBAAyB,2BAA2B,IAAI,eAAe,iBAAiB,iBAAiB;AAC7G,QAAI,MAAM,WAAW;AACrB,aAAS,eAAe,WAAW;AAC/B,UAAI,KAAK,WAAW,WAAW;AAC3B,aAAK,SAAS;AACd,aAAK,KAAK,EAAE,KAAK,WAAY;AACzB,aAAG,SAAS,GAAG,cAAc,KAAK,WAAW,GAAG;AAEhD,aAAG,WAAW,iBAAiB,qBAAqB,EAAE,WAAsB,IAAS,GAAG,KAAK;AAAA,QACjG,CAAC,EAAE,MAAM,uBAAuB,WAAY;AAAA,QAC5C,CAAC;AAAA,MACL;AAAA,IACJ;AACA,eAAW,GAAG,cAAc,SAAU,WAAW;AAC7C,UAAI,CAAC,MAAM,SAAS;AAChB,uBAAe,SAAS;AAAA,IAChC,CAAC;AACD,QAAI;AACJ,mBAAe,SAAS,UAAU;AAClC,WAAO,OAAO;AACd,aAAS,SAAS;AAEd,aAAO,QAAQ,QAAQ,WAAY;AAE/B,eAAO,sCAAsC,MAAM,qBAAqB;AAAA,MAC5E,GAAG,SAAS;AAAA,IAChB;AACA,aAAS,sBAAsB,SAAS,oBAAoB,SAAS,wBAAwB;AAGzF,UAAI,mBAAmB,IAAIA,WAAU,SAAU,SAAS,QAAQ;AAC5D,6BAAqB,IAAI,SAAU,KAAK;AACpC,iBAAO,GAAG;AAAA,QACd;AACA,+BAAM,KAAK,WAAY;AACnB,cAAI;AACA,6BAAiB,KAAK,KAAK,aAAa,KAAK,SAAS,oBAAoB,KAAK,uBAAuB,SAAS,SAAS,oBAAoB,mBAAmB,SAAU,cAAc;AACnL,sBAAQ,YAAY;AAAA,YACxB,GAAG,OAAO;AAAA,UACd,SACO,IAAI;AACP,oBAAQ,IAAI,QAAQ;AAAA,UACxB;AACA,mBAAS,QAAQ,OAAO,OAAO;AAC3B,mBAAO,KAAK;AACZ,gBAAI,WAAW,GAAG;AACd,kBAAI,CAAC,MAAM,KAAK,KAAK,QAAQ,UAAU;AACnC,2BAAW,WAAY;AACnB,sBAAI,WAAW,GAAG;AACd,mCAAe,SAAS,OAAO;AAC/B,2BAAO,EAAE,MAAM,uBAAuB,gBAAgB;AAAA,kBAC1D;AAAA,gBACJ,GAAG,KAAK;AACR,+BAAe,SAAS,gBAAgB;AACxC,oBAAI,yBAAyB,sBAAsB;AAC/C,wCAAsB,WAAW;AACrC,wCAAwB;AAAA,cAC5B,OACK;AACD,iCAAiB,KAAK;AAAA,cAC1B;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AACD,aAAO,iBAAiB,KAAK,WAAY;AAErC,eAAO;AAAA,MACX,CAAC,EAAE,QAAQ,WAAY;AAInB,6BAAqB,IAAI;AAAA,MAC7B,CAAC;AACD,eAAS,oBAAoB;AACzB,eAAO,KAAK,sBAAsB,EAAE,QAAQ,SAAU,SAAS;AAC3D,iCAAM,aAAa,MAAM,SAAS,uBAAuB,OAAO,CAAC;AAAA,QACrE,CAAC;AAGD,yBAAiB,KAAK,sBAAsB;AAC5C,eAAO,KAAK,KAAK;AAAA,MACrB;AAAA,IACJ;AACA,aAAS,iBAAiB,OAAO;AAC7B,iBAAW,WAAW,SAAS,OAAO,KAAK;AAAA,IAC/C;AACA,aAAS,sCAAsCC,OAAM,IAAI;AACrD,aAAO,uBAAuBA,OAAM,SAAS,QAAQ,SAAS,oBAAoB,SAAS,wBAAwB;AAC/G,YAAI,QAAQ,WAAW,KAAK,gBAAgB,0BAA0B,uBAAuB,eAAeA,MAAK,YAAY;AACzH,iBAAO,KAAK,sBAAsB,EAAE,QAAQ,SAAU,SAAS;AAC3D,mCAAM,aAAaA,OAAM,SAAS,uBAAuB,OAAO,CAAC;AAAA,UACrE,CAAC;AACD,UAAAA,MAAK,KAAK,EAAE,MAAM,uBAAuB,WAAY;AAAA,UACrD,CAAC;AACD,iBAAO,uBAAuBA,OAAM,OAAO;AAAA,QAC/C,OACK;AACD,iBAAO,GAAG,SAAS,oBAAoB,SAAS,sBAAsB;AAAA,QAC1E;AAAA,MACJ,CAAC;AAAA,IACL;AACA,aAAS,mBAAmB,eAAe,gBAAgB,SAAqB;AAC5E,UAAI,2BAA2B,6BAA6B,IAAI,IAAI;AACpE,UAAI,0BAA0B,4BAA4B,IAAI,IAAI;AAClE,aAAO,QAAQ,oBAAoB,WAAY;AAC3C,YAAI,CAAC,WAAW;AACZ,iBAAOD,WAAU,OAAO,IAAI,uBAAM,oBAAoB,CAAC;AAE3D,gBAAQ,UAAU,yBAAyB,eAAe,cAAc,IAAI,wBAAwB,eAAe,cAAc,GAC5H,MAAM,SAAU,OAAO;AACxB,2BAAiB,KAAK;AACtB,iBAAOA,WAAU,OAAO,KAAK;AAAA,QACjC,CAAC;AAAA,MACL,GAAG,SAAS;AAAA,IAChB;AAMA,aAAS,uBAAuB,cAAc;AAC1C,UAAI,CAAC,WAAW,GAAG;AACf,YAAI,aAAa;AACb,uBAAa,WAAW;AAC5B;AAAA,MACJ;AACA,8BAAwB;AACxB,iBAAW,GAAG,cAAc,WAAY;AACpC,YAAI,uBAAuB;AACvB,cAAI,sBAAsB,OAAO;AAC7B,gBAAI;AAEA,oCAAsB,WAAW;AAAA,YACrC,SACO,GAAG;AAAA,YACV;AAAA,UACJ;AACA,kCAAwB;AAAA,QAC5B;AAAA,MACJ,CAAC;AACD,UAAI,aAAa,OAAO;AACpB,kCAA0B,YAAY;AAAA,MAC1C,OACK;AACD,iCAAyB;AAAA,MAC7B;AAAA,IACJ;AAEA,aAAS,0BAA0B,cAAc;AAC7C,UAAI,gBACJ;AACA,eAAS,YAAY;AACjB,YAAI,uBAAuB;AACvB,yBAAe,SAAS,OAAO;AAC/B,cAAI;AACA,6BAAiB;AAAA,eAChB;AACD,2BAAe;AAAA,UACnB;AAAA,QACJ;AAAA,MACJ;AACA,SAAG,GAAG,WAAW,SAAS;AAC1B,iBAAW,GAAG,cAAc,WAAY;AACpC,WAAG,GAAG,QAAQ,YAAY,SAAS;AAAA,MACvC,CAAC;AACD,eAAS,iBAAiB;AACtB,YAAI,CAAC;AACD;AACJ,yBAAiB;AACjB,6BAAqB;AACrB,8CAAsC,MAAM,SAAU,SAAS,oBAAoB,SAAS,wBAAwB;AAChH,cAAI,CAAC;AACD;AACJ,cAAI,QAAQ,SAAS,GAAG;AACpB,yBAAa,MAAM,SAAS,oBAAoB,SAAS,SAAS,oBAAoB;AAClF,qBAAO,KAAK,sBAAsB,EAAE,QAAQ,SAAU,SAAS;AAC3D,uCAAM,aAAa,MAAM,SAAS,uBAAuB,OAAO,CAAC;AAAA,cACrE,CAAC;AACD,mBAAK,KAAK,EAAE,MAAM,uBAAuB,WAAY;AAAA,cACrD,CAAC;AAED,6BAAe;AAAA,YACnB,CAAC;AAAA,UACL,OACK;AACD,iCAAqB;AACrB,gBAAI,gBAAgB;AAGhB,6BAAe;AAAA,YACnB,OACK;AACD,6BAAe,SAAS,MAAM;AAAA,YAClC;AAAA,UACJ;AAAA,QACJ,CAAC,EAAE,MAAM,SAAU,IAAI;AACnB,kBAAQ,MAAM,OAAO,OAAO,GAAG,SAAS,2BAA2B,CAAC;AACpE,2BAAiB,EAAE;AAAA,QACvB,CAAC;AAAA,MACL;AACA,qBAAe;AAAA,IACnB;AAEA,aAAS,2BAA2B;AAChC,eAAS,YAAY;AACjB,8CAAsC,MAAM,SAAU,SAAS,oBAAoB,SAAS,wBAAwB;AAChH,2BAAiB,KAAK,KAAK,aAAa,KAAK,SAAS,oBAAoB,KAAK,uBAAuB,SAAS,SAAS,oBAAoB,mBAAmB,WAAW,OAAO;AACjL,mBAAS,oBAAoB;AACzB,mBAAO,KAAK,sBAAsB,EAAE,QAAQ,SAAU,SAAS;AAC3D,qCAAM,aAAa,MAAM,SAAS,uBAAuB,OAAO,CAAC;AAAA,YACrE,CAAC;AACD,iBAAK,KAAK,EAAE,MAAM,uBAAuB,WAAY;AAAA,YACrD,CAAC;AAAA,UACL;AACA,mBAAS,UAAU,cAAc;AAC7B,gBAAI,CAAC,uBAAuB;AAExB;AAAA,YACJ;AACA,oCAAwB;AACxB,gBAAI,SAAS;AAET,wBAAU;AAAA,YACd,OACK;AAED,kBAAI,CAAC,MAAM,aAAa,KAAK,KAAK,aAAa,QAAQ,UAAU;AAE7D,+BAAe,SAAS,MAAM;AAC9B,2BAAW,WAAY;AACnB,sBAAI,uBAAuB;AACvB,mCAAe,SAAS,OAAO;AAC/B,8BAAU;AAAA,kBACd;AAAA,gBACJ,GAAG,aAAa,KAAK;AAAA,cACzB,OACK;AAGD,2BAAW,WAAW,SAAS,OAAO;AAAA,cAC1C;AAAA,YACJ;AAAA,UACJ;AACA,mBAAS,QAAQ,OAAO,OAAO;AAC3B,gBAAI,CAAC,MAAM,KAAK,KAAK,QAAQ,UAAU;AACnC,kBAAI,uBAAuB;AACvB,2BAAW,WAAY;AACnB,sBAAI,uBAAuB;AACvB,mCAAe,SAAS,OAAO;AAC/B,8BAAU;AAAA,kBACd;AAAA,gBACJ,GAAG,KAAK;AACR,+BAAe,SAAS,gBAAgB;AAAA,cAC5C;AAAA,YACJ,OACK;AACD,+BAAiB,KAAK;AAAA,YAC1B;AAAA,UACJ;AAAA,QACJ,CAAC,EAAE,MAAM,gBAAgB;AAAA,MAC7B;AACA,UAAI,cAAc,eAAe;AAC7B,kBAAU;AAAA,MACd,WACS,yBAAyB,CAAC,MAAM,sBAAsB,KAAK,KAAK,sBAAsB,QAAQ,UAAU;AAC7G,uBAAe,SAAS,MAAM;AAC9B,mBAAW,WAAY;AACnB,cAAI,uBAAuB;AACvB,2BAAe,SAAS,OAAO;AAC/B,sBAAU;AAAA,UACd;AAAA,QACJ,GAAG,sBAAsB,KAAK;AAAA,MAClC,OACK;AAGD,mBAAW,WAAW,SAAS,OAAO;AAAA,MAC1C;AAAA,IACJ;AAAA,EACJ;AACJ;AAEA,SAAS,cAAc,IAAI,aAAa;AACpC,SAAO,SAAS,QAAQ,kBAAkB,cAAc,KAAK,SAAS,WAAW;AAE7E,QAAI,eAAe,YAAY,OAAO,SAAU,MAAM;AAClD,aAAO,KAAK,QAAQ;AAAA,IACxB,CAAC;AACD,QAAI,aAAa,SAAS,GAAG;AACzB,UAAI,aAAa,aAAa,CAAC;AAC/B,UAAI,aAAa,CAAC;AAClB,6BAAM,cAAc,WAAW,aAAa,SAAS,UAAU;AAG/D,UAAI,OAAO,KAAK,UAAU,EAAE,WAAW,GAAG;AACtC,eAAO,GAAG,SAAS,WAAW,GAAG,EAC5B,KAAK,WAAY;AAClB,iBAAO,YAAY;AAAA,QACvB,CAAC;AAAA,MACL,OACK;AAGD,eAAO,aAAa,CAAC,EAAE;AAAA,MAC3B;AAAA,IACJ;AACA,aAAS,cAAc;AAGnB,UAAI,uBAAuB,EAAE,GAAG,KAAK;AACrC,UAAI,kBAAkB,oBAAoB,IAAI,kBAAkB,WAAW,SAAS,oBAAoB;AACxG,UAAI,sBAAsB,wBAAwB,IAAI,cAAc,GAAG;AACvE,UAAI,iBAAiB,oBAAoB,OAAO,EAAE,KAAK,SAAU,MAAM;AACnE,eAAO,gBAAgB,MAAME,WAAU;AAAA,MAC3C,CAAC;AACD,UAAI,eAAe;AACnB,UAAIA,cAAa;AAAA,QACb;AAAA,QACA,QAAQ,SAAS;AAAA,QACjB;AAAA,QACA,aAAa;AAAA,QACb,IAAI,uBAAM,OAAO,MAAM,YAAY;AAAA,QACnC,YAAY,SAAU,WAAW,OAAO;AACpC,cAAI,MAAM,YAAY,QAAQA,WAAU;AACxC,cAAI,OAAO;AACP,wBAAY,OAAO,KAAK,CAAC;AAC7B,cAAI,SAAS,qBAAqB;AAC9B,iCAAqB,EAAE,KAAK;AAChC,cAAI,CAAC,cAAc;AACf,YAAAA,YAAW,GAAG,WAAW,KAAK,WAAW,KAAK;AAAA,UAClD;AACA,yBAAe;AAAA,QACnB;AAAA,MACJ;AACA,kBAAY,KAAKA,WAAU;AAC3B,aAAO;AAAA,IACX;AACA,WAAO,YAAY;AAAA,EACvB;AACJ;AAoBA,IAAIC,YAAW,uBAAM;AAArB,IAA+BC,aAAY,uBAAM;AAAjD,IAA0DC,cAAa,uBAAM;AAK7E,SAAS,SAAS,IAAI;AAClB,MAAI,CAAC,WAAW,KAAK,uBAAM,OAAO;AAC9B,UAAM,IAAI,MAAM,kCAAkC;AACtD,MAAI,CAAC,GAAG,cAAe,GAAG,WAAW,YAAY,eAAe,CAAC,WAAW,KAAK,GAAG,WAAW,OAAO;AAClG,UAAM,IAAI,MAAM,6CAA6C;AACjE,MAAI,GAAG,UAAU;AACb,QAAI,GAAG,SAAS,YAAY;AACxB,YAAM,IAAI,MAAM,kCAAkC;AACtD;AAAA,EACJ;AACA,MAAI,cAAc,CAAC;AACnB,MAAI,YAAY,cAAc,IAAI,WAAW;AAC7C,MAAI,kBAAkB,oBAAoB,IAAI,SAAS;AACvD,KAAG,GAAG,WAAW,SAAU,KAAK;AAE5B,2BAAM,IAAI,WAAY;AAClB,UAAI,IAAI,SAAS,WAAW;AAExB,WAAG,SAAS,QAAQ,IAAI,QAAQ,cAAc,IAAI,QAAQ,KAAK,IAAI,QAAQ,OAAO,EAAE,KAAK,IAAI,SAAS,IAAI,MAAM;AAAA,MACpH,WACS,IAAI,SAAS,cAAc;AAChC,WAAG,SAAS,WAAW,IAAI,QAAQ,GAAG,EAAE,KAAK,IAAI,SAAS,IAAI,MAAM;AAAA,MACxE,WACS,IAAI,SAAS,qBAAqB;AAGvC,WAAG,SAAS,GAAG,cAAc,KAAK,IAAI,QAAQ,WAAW,IAAI,QAAQ,GAAG;AAAA,MAC5E;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACD,KAAG,GAAG,WAAW,SAAU,gBAAgB;AAEvC,QAAI,gBAAgB;AAQhB,6BAAM,kBAAkB,WAAY;AAAE,eAAO,uBAAM,IAAI,WAAY;AAC/D,iBAAO,GAAG,WAAW,MAAM,EAAE,MAAM,SAAS,CAAC,EACxC,OAAO,SAAU,MAAM;AAAE,mBAAO,KAAK,WAAW,SAAS;AAAA,UAAS,CAAC,EACnE,QAAQ,SAAU,sBAAsB;AAAE,mBAAOD,WAAU,IAAI,qBAAqB,IAAI,SAAU,MAAM;AACzG,qBAAO,GAAG,SAAS,QAAQ,KAAK,cAAc,KAAK,KAAK,KAAK,WAAW,EAAE,MAAM,SAAU,GAAG;AACzF,wBAAQ,KAAK,wCAAwC,OAAO,KAAK,KAAK,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AAAA,cACpG,CAAC;AAAA,YACL,CAAC,CAAC;AAAA,UAAG,CAAC;AAAA,QACV,CAAC;AAAA,MAAG,CAAC,EAAE,MAAM,uBAAuB,WAAY;AAAA,MAAE,CAAC;AAAA,IACvD;AAAA,EACJ,CAAC;AAMD,KAAG,GAAG,SAAS,SAAS,UAAU;AAE9B,QAAI,GAAG,kBAAkB,GAAG,eAAe,UAAU;AAWjD,SAAG,WACE,MAAM,MAAM,EAAE,OAAO,QAAQ,EAC7B,IAAI,SAAU,MAAM;AAAE,eAAO,KAAK,WAAW,SAAS;AAAA,MAAS,CAAC,EAChE,QAAQ,SAAU,sBAAsB;AAEzC,6BAAqB;AAAA,UAAQ,SAAU,MAAM;AAAE,mBAAO,GAAG,SAAS,QAAQ,KAAK,cAAc,KAAK,KAAK,KAAK,WAAW,EAClH,MAAM,WAAY;AAAA,YAAE,CAAC;AAAA,UAAG;AAAA;AAAA,QAC7B;AAAA,MACJ,CAAC,EAAE,MAAM,uBAAuB,WAAY;AAAA,MAAE,CAAC;AAAA,IACnD;AAAA,EACJ,GAAG,IAAI;AACP,KAAG,WAAW;AAAA,IACV,SAAS;AAAA,EACb;AACA,KAAG,SAAS,YAAY,SAAU,KAAK,IAAI;AACvC,QAAI,GAAG,OAAO,GAAG;AACb,aAAO,uBAAM,IAAI,WAAY;AACzB,eAAO,GAAG,WAAW,MAAM,KAAK,EAAE,OAAO,GAAG,EAAE,MAAM,SAAU,MAAM;AAChE,iBAAO,OAAO,KAAK,SAAS,SAAS;AAAA,QACzC,CAAC;AAAA,MACL,CAAC,EAAE,KAAK,EAAE;AAAA,IACd,OACK;AACD,aAAOA,WAAU,QAAQ,SAAS,SAAS,OAAO,EAAE,KAAK,EAAE;AAAA,IAC/D;AAAA,EACJ;AACA,KAAG,SAAS,aAAa,SAAU,KAAK,IAAI;AACxC,WAAO,GAAG,YAAY,MAAM,GAAG,YAAY,WAAY;AACnD,aAAO,GAAG,WAAW,MAAM,KAAK,EAAE,OAAO,GAAG,EAAE,MAAM,SAAU,MAAM;AAChE,eAAO,KAAK;AAAA,MAChB,CAAC,EAAE,KAAK,EAAE;AAAA,IACd,CAAC;AAAA,EACL;AACA,KAAG,SAAS,OAAO,WAAY;AAC3B,WAAO,GAAG,YAAY,MAAM,GAAG,YAAY,WAAY;AACnD,aAAO,GAAG,WAAW,MAAM,MAAM,EAAE,OAAO,QAAQ,EAAE,QAAQ,SAAU,GAAG;AACrE,eAAO,EAAE,IAAI,SAAU,MAAM;AAAE,iBAAO,KAAK;AAAA,QAAK,CAAC;AAAA,MACrD,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACA,KAAG,SAAS,KAAK,uBAAM,OAAO,IAAI,EAAE,eAAe,OAAO,CAAC;AAC3D,KAAG,SAAS,aAAa,SAAU,KAAK;AACpC,WAAO,uBAAM,kBAAkB,WAAY;AACvC,aAAOA,WAAU,QAAQ,EAAE,KAAK,WAAY;AACxC,YAAI,GAAG,kBAAkB,GAAG,eAAe,UAAU;AACjD,iBAAOA,WAAU,IAAI,YAAY,OAAO,SAAU,MAAM;AAAE,mBAAO,KAAK,QAAQ;AAAA,UAAK,CAAC,EAAE,IAAI,SAAU,MAAM;AACtG,mBAAO,KAAK,WAAW,SAAS,OAAO;AAAA,UAC3C,CAAC,CAAC;AAAA,QACN,OACK;AACD,iBAAO,GAAG,WAAW,MAAM,UAAU,EAAE,MAAM,CAAC,EAAE,MAAM,SAAU,YAAY;AACxE,mBAAO,GAAG,WAAW,YAAY,cAAc,EAAE,IAAS,GAAG,WAAW,IAAI,EAAE,WAAW,KAAK,CAAC;AAAA,UACnG,CAAC;AAAA,QACL;AAAA,MACJ,CAAC,EAAE,KAAK,WAAY;AAChB,eAAO,GAAG,WAAW,MAAM,KAAK,EAAE,OAAO,GAAG,EAAE,OAAO,SAAU,MAAM;AACjE,eAAK,SAAS,SAAS;AAAA,QAC3B,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACA,KAAG,SAAS,UAAU,SAAU,cAAc,KAAK,SAAS;AACxD,cAAU,WAAW,CAAC;AACtB,QAAI,mBAAmB,SAAS,oBAAoB,YAAY;AAChE,QAAI,kBAAkB;AAClB,aAAO,gBAAgB,kBAAkB,cAAc,KAAK,OAAO;AAAA,IACvE,OACK;AACD,aAAOA,WAAU,OAAO,IAAI,MAAM,oBAAoB,eAAe,8DAA8D,CAAC;AAAA,IACxI;AAAA,EACJ;AACA,KAAG,SAAS,SAAS,SAAU,KAAK;AAChC,WAAO,GAAG,SAAS,WAAW,GAAG,EAAE,KAAK,WAAY;AAChD,aAAO,GAAG,YAAY,OAAO,GAAG,YAAY,GAAG,UAAU,GAAG,qBAAqB,WAAY;AAKzF,YAAI;AACJ,eAAO,GAAG,WACL,MAAM,KAAK,EAAE,OAAO,GAAG,EACvB,QAAQ,SAAU,OAAO;AAAE,iBAAO,MAAM,IAAI,SAAU,MAAM;AAAE,mBAAO,KAAK;AAAA,UAAI,CAAC;AAAA,QAAG,CAAC,EACnF,KAAK,SAAU,SAAS;AACzB,4BAAkB;AAElB,iBAAO,GAAG,WAAW,MAAM,IAAI,EAAE,MAAM,OAAO,EAAE,OAAO;AAAA,QAC3D,CAAC,EACI,KAAK,WAAY;AAElB,iBAAO,GAAG,oBAAoB,MAAM,MAAM,EAAE,MAAM,eAAe,EAAE,OAAO;AAAA,QAC9E,CAAC;AAAA,MACL,CAAC,EAAE,KAAK,WAAY;AAKhB,QAAAC,YAAW,iBAAiB,EAAE;AAAA,MAClC,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACA,KAAG,SAAS,kBAAkB,SAAU,KAAK;AACzC,WAAO,GAAG,WAAW,MAAM,KAAK,EAAE,OAAO,GAAG,EAAE,MAAM,SAAU,MAAM;AAChE,aAAO,GAAG,SAAS,MAAM,KAAK,EAAE,MAAM,KAAK,UAAU,EAAE,QAAQ;AAAA,IACnE,CAAC;AAAA,EACL;AACA,KAAG,QAAQF,UAAS,GAAG,OAAO,SAAU,WAAW;AAC/C,WAAO,WAAY;AACf,kBAAY,QAAQ,SAAU,MAAM;AAChC,aAAK,WAAW;AAAA,MACpB,CAAC;AACD,aAAO,UAAU,MAAM,MAAM,SAAS;AAAA,IAC1C;AAAA,EACJ,CAAC;AACD,SAAO,eAAe,GAAG,WAAW,SAAS,WAAW,QAAQ;AAAA,IAC5D,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,OAAO,WAAY;AACf,UAAI,QAAQ;AACZ,aAAO,GAAG,YAAY,OAAO,GAAG,YAAY,WAAY;AACpD,eAAO,GAAG,WAAW,IAAI,KAAK;AAAA,MAClC,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACL;AACA,SAAS,UAAU;AACnB,SAAS,WAAW;AACpB,SAAS,cAAc;AACvB,SAAS,sBAAsB,CAAC;AAChC,SAAS,uBAAuB,SAAU,MAAM,kBAAkB;AAM9D,MAAI,oBAAoB,iBAAiB;AACzC,MAAI,OAAO,sBAAsB,UAAU;AAEvC,QAAI,MAAM,iBAAiB,KAAK,oBAAoB,GAAG;AACnD,YAAM,IAAI,MAAM,qDAAqD;AAAA,IACzE;AAAA,EAEJ,OACK;AAED,qBAAiB,oBAAoB;AAAA,EACzC;AACA,WAAS,oBAAoB,IAAI,IAAI;AACzC;AACA,IAAI,uBAAM,UAAU;AAChB,MAAI,uBAAM,SAAS,YAAY,aAAa;AACxC,UAAM,IAAI,MAAM,kCAAkC;AAAA,EACtD;AACJ,OACK;AAED,yBAAM,WAAW;AACjB,yBAAM,OAAO,KAAK,QAAQ;AAC9B;AACA,IAAI,iBAAiB,uBAAM;;;AhCzrC3B,IAAAG,cAAiC;;;AiCAjC,iBAAgB;AAEhB,IAAM,kBAAkB;EACpB,WAAW;EACX,QAAQ;EACR,cAAc;IACV,cAAc;MACV,QAAQ;IACZ;IACA,aAAa;MACT,QAAQ;IACZ;IACA,WAAW;MACP,QAAQ;MACR,WAAW;IACf;IACA,UAAU;MACN,QAAQ;MACR,iBAAiB;QACb,WAAW;QACX,aAAa;QACb,aAAa;QACb,QAAQ;MACZ;MACA,qBAAqB;QACjB,mBAAmB;UACf,QAAQ;UACR,iBAAiB;YACb,WAAW;YACX,aAAa;YACb,aAAa;YACb,QAAQ;UACZ;UACA,cAAc;YACV,QAAQ;cACJ,QAAQ;YACZ;YACA,QAAQ;cACJ,QAAQ;cACR,QAAQ,CAAC,YAAY;YACzB;YACA,UAAU;cACN,QAAQ;cACR,cAAc;gBACV,QAAQ;kBACJ,QAAQ;kBACR,QAAQ,CAAC,WAAW;gBACxB;gBACA,cAAc;kBACV,QAAQ;gBACZ;gBACA,SAAS;kBACL,QAAQ;gBACZ;gBACA,WAAW;kBACP,QAAQ;gBACZ;cACJ;cACA,MAAM;gBACF,cAAc,EAAE,QAAQ,EAAE,SAAS,YAAY,EAAE;cACrD;cACA,QAAQ;gBACJ,YAAY,CAAC,cAAc,OAAO;cACtC;YACJ;YACA,UAAU;cACN,QAAQ;cACR,iBAAiB;gBACb,WAAW;gBACX,aAAa;gBACb,aAAa;gBACb,QAAQ;cACZ;cACA,qBAAqB;gBACjB,mBAAmB;kBACf,QAAQ;kBACR,cAAc;oBACV,QAAQ;sBACJ,QAAQ;sBACR,QAAQ,CAAC,UAAU,WAAW,UAAU,MAAM;oBAClD;oBACA,WAAW;sBACP,QAAQ;oBACZ;oBACA,YAAY;sBACR,QAAQ;oBACZ;kBACJ;kBACA,YAAY,CAAC,MAAM;gBACvB;cACJ;cACA,wBAAwB;YAC5B;UACJ;UACA,YAAY,CAAC,QAAQ;QACzB;MACJ;MACA,wBAAwB;IAC5B;EACJ;EACA,YAAY,CAAC,cAAc,WAAW,QAAQ;AAClD;AAEA,IAAM,MAAM,IAAI,WAAAC,QAAI;AACpB,IAAM,YAAY,IAAI,QAAQ,eAAe;AAqC7C,SAAS,eAAe,WAAgB,WAAgB;AACpD,QAAM,UAAU,kBAAkB,WAAW,SAAS;AACtD,QAAM,QAAQ,QAAQ,WAAW,IAAI,OAAO;AAC5C,SAAO,EAAE,OAAO,QAAQ;AAC5B;AAQA,SAAS,eAAe,QAA2D;AAC/E,QAAM,IAAI,UAAU,MAAM;AAC1B,SAAO;IACH,OAAO;IACP,QAAQ,UAAU,UAAU,CAAC;EACjC;AACJ;AA0FA,SAAS,kBAAkB,WAAgB,WAAgC;AAEvE,QAAM,UAA0B,CAAC;AAGjC,aAAW,OAAO,WAAW;AACzB,QAAI,QAAQ,YAAY,UAAU,GAAG,MAAM,UAAU,GAAG,GAAG;AACvD,cAAQ,KAAK;QACT,MAAM;QACN,UAAU;QACV,KAAK,UAAU,GAAG;QAClB,KAAK,UAAU,GAAG;MACtB,CAAC;IACL;EACJ;AAEA,aAAW,OAAO,WAAW;AACzB,QAAI,QAAQ,YAAY,CAAC,UAAU,eAAe,GAAG,GAAG;AACpD,cAAQ,KAAK;QACT,MAAM;QACN,UAAU;QACV,KAAK,UAAU,GAAG;MACtB,CAAC;IACL;EACJ;AAGA,aAAW,aAAa,UAAU,QAAQ;AACtC,QAAI,CAAC,UAAU,OAAO,SAAS,GAAG;AAC9B,cAAQ,KAAK;QACT,MAAM;QACN,OAAO;MACX,CAAC;IACL;EACJ;AAGA,aAAW,aAAa,UAAU,QAAQ;AACtC,UAAM,WAAW,UAAU,OAAO,SAAS;AAC3C,UAAM,WAAW,UAAU,OAAO,SAAS;AAE3C,QAAI,CAAC,UAAU;AACX,cAAQ,KAAK;QACT,MAAM;QACN,OAAO;MACX,CAAC;AACD;IACJ;AAGA,eAAW,aAAa,SAAS,QAAQ;AACrC,YAAM,WAAW,SAAS,OAAO,SAAS;AAC1C,YAAM,WAAW,SAAS,OAAO,SAAS;AAE1C,UAAI,CAAC,UAAU;AACX,gBAAQ,KAAK;UACT,MAAM;UACN,OAAO;UACP,OAAO;QACX,CAAC;AACD;MACJ;AAGA,UAAI,SAAS,SAAS,SAAS,MAAM;AACjC,gBAAQ,KAAK;UACT,MAAM;UACN,OAAO;UACP,OAAO;UACP,KAAK,SAAS;UACd,KAAK,SAAS;QAClB,CAAC;MACL;AAGA,UAAI,SAAS,aAAa,SAAS,UAAU;AACzC,gBAAQ,KAAK;UACT,MAAM;UACN,OAAO;UACP,OAAO;UACP,KAAK,SAAS;UACd,KAAK,SAAS;QAClB,CAAC;MACL;IACJ;AAGA,eAAW,aAAa,SAAS,QAAQ;AACrC,UAAI,CAAC,SAAS,OAAO,SAAS,GAAG;AAC7B,gBAAQ,KAAK;UACT,MAAM;UACN,OAAO;UACP,OAAO;QACX,CAAC;MACL;IACJ;EACJ;AAGA,aAAW,aAAa,UAAU,QAAQ;AACtC,UAAM,WAAW,UAAU,OAAO,SAAS;AAC3C,UAAM,WAAW,UAAU,OAAO,SAAS;AAE3C,QAAI,CAAC;AAAU;AAEf,eAAW,aAAa,SAAS,QAAQ;AACrC,YAAM,WAAW,SAAS,OAAO,SAAS;AAC1C,YAAM,WAAW,SAAS,OAAO,SAAS;AAE1C,UAAI,CAAC;AAAU;AAGf,iBAAW,QAAQ,UAAU;AACzB,YAAI,SAAS;AAAQ;AAErB,YAAI,EAAE,QAAQ,WAAW;AACrB,kBAAQ,KAAK;YACT,MAAM;YACN,OAAO;YACP,OAAO;YACP,UAAU;YACV,KAAK,SAAS,IAAI;UACtB,CAAC;QACL,WAAW,KAAK,UAAU,SAAS,IAAI,CAAC,MAAM,KAAK,UAAU,SAAS,IAAI,CAAC,GAAG;AAC1E,kBAAQ,KAAK;YACT,MAAM;YACN,OAAO;YACP,OAAO;YACP,UAAU;YACV,KAAK,SAAS,IAAI;YAClB,KAAK,SAAS,IAAI;UACtB,CAAC;QACL;MACJ;AAGA,iBAAW,QAAQ,UAAU;AACzB,YAAI,SAAS;AAAQ;AACrB,YAAI,EAAE,QAAQ,WAAW;AACrB,kBAAQ,KAAK;YACT,MAAM;YACN,OAAO;YACP,OAAO;YACP,UAAU;YACV,KAAK,SAAS,IAAI;UACtB,CAAC;QACL;MACJ;IACJ;EACJ;AAEA,SAAO;AACX;;;ArCwKQ,yBAAA;;;;SsCjiBQ,cACd,mBAGA,MACA,MAAU;AAGV,MAAI;AACJ,MAAI;AACJ,MAAI,OAAO,sBAAsB,YAAY;AAC3C,WAAO,QAAQ,CAAA;AACf,oBAAgB;EACjB,OAAM;AACL,WAAO,CAAA;AACP,oBAAgB;EACjB;AAGD,MAAM,UAAU,aAAAC,QAAM,OAAO;IAC3B,WAAW;IACX,QAAQ;IACR,OAAO;EACR,CAAA;AAIK,MAAA,KAAqB,aAAAA,QAAM,WAAW,SAAC,GAAM;AAAA,WAAA,IAAI;EAAJ,GAAO,CAAC;AAAnD,KAAA,CAAA;AAAA,MAAE,gBAAa,GAAA,CAAA;AAGvB,MAAM,aAAa,aAAAA,QAAM,QAAQ,WAAA;AAG/B,QAAMC,cACJ,OAAO,sBAAsB,aACzB,kBAAiB,IACjB;AACN,QAAI,CAACA,eAAc,OAAOA,YAAW,cAAc,YAAY;AAC7D,UAAI,sBAAsBA,aAAY;AACpC,cAAM,IAAI,UACR,kFAAkF;MAErF,OAAM;AACL,cAAM,IAAI,UACR,gFAAgF;MAEnF;IACF;AAED,QAAI,CAAC,QAAQ,QAAQ,aACjB,OAAO,WAAW,aACjB;AAEH,UAAI,OAAOA,YAAW,aAAa,cAAcA,YAAW,SAAQ,GAAI;AACtE,YAAI,OAAOA,YAAW,aAAa,YAAY;AAC7C,kBAAQ,QAAQ,SAASA,YAAW,SAAQ;AAC5C,kBAAQ,QAAQ,YAAY;QAC7B,OAAM;AAGL,cAAM,eAAeA,YAAW,UAAU,SAAC,KAAG;AAC5C,oBAAQ,QAAQ,SAAS;AACzB,oBAAQ,QAAQ,YAAY;UAC9B,CAAC;AAED,cAAI,OAAO,iBAAiB,YAAY;AACtC,yBAAY;UACb,OAAM;AACL,yBAAa,YAAW;UACzB;QACF;MACF;IACF;AACD,WAAOA;KACN,IAAI;AAGP,eAAAD,QAAM,cAAc,QAAQ,QAAQ,MAAM;AAG1C,eAAAA,QAAM,UAAU,WAAA;AACd,QAAM,eAAe,WAAW,UAC9B,SAAC,KAAG;AACM,UAAA,UAAY,QAAO;AAC3B,UAAI,QAAQ,UAAU,QAAQ,QAAQ,WAAW,KAAK;AACpD,gBAAQ,QAAQ;AAChB,gBAAQ,SAAS;AACjB,gBAAQ,YAAY;AACpB,sBAAa;MACd;OAEH,SAAC,KAAG;AACM,UAAA,UAAY,QAAO;AAC3B,UAAI,QAAQ,UAAU,KAAK;AACzB,gBAAQ,QAAQ;AAChB,sBAAa;MACd;IACH,CAAC;AAEH,WAAO,OAAO,iBAAiB,aAC3B,eACA,aAAa,YAAY,KAAK,YAAY;KAC7C,IAAI;AAIP,MAAI,QAAQ,QAAQ;AAAO,UAAM,QAAQ,QAAQ;AAGjD,SAAO,QAAQ,QAAQ;AACzB;SC5HgB,aACd,SACA,MACA,eAAwB;AAExB,SAAO,cACL,WAAA;AAAM,WAAA,UAAU,OAAO;EAAjB,GACN,QAAQ,CAAA,GACR,aAAyB;AAE7B;;;ApCrBO,IAAM,aAAa;AAInB,IAAM,MAAM,IAAI,SAAgB;AACnC,MAAI;AACA,QAAI,aAAa,QAAQ,aAAa,MAAM,QAAQ;AAChD,cAAQ,IAAI,WAAW,GAAG,IAAI;IAClC;EACJ,SAAS,GAAG;EAEZ;AACJ;ADTO,IAAM,eAAe,WAAY;AACtC,MAAI,2BAA2B;AAE/B,MAAI,kBAAkB;AAEtB,QAAM,SAAS,qBAAqB,aAAa;IAC/C,MAAM,SACJ,SACA,KACA,SACA,cACA,gBACA,SACA,SACA,oBACA,mBACA,WACA,SACA;AAEA,UAAI,YAAY;AAChB,UAAI,kBAAkB,CAAC;AAGvB,UAAI,KAAK,IAAI,UAAU,GAAG;AAK1B,eAAS,YAAYE,UAASC,eAAcC,UAASC,oBAAmB;AACtE,YAAI,eAAeH,SAAQ,QAAQC,aAAY;AAC/C,UAAE;AACF,wBAAgB,UAAU,SAAS,CAAC,IAAIE;AAcxC,WAAG;UACD,KAAK,UAAU;YACb,MAAM;YACN,SAASH;YACT,SAASE;YACT,cAAcD;YACd;UACF,CAAC;QACH;MACF;AAKA,SAAG,SAAS,SAAU,OAAO;AAK3B,YAAI,2CAA2C,QAAQ,cAAc;AACrE,WAAG;UACD,KAAK,UAAU;YACb,MAAM;YACN,gBAAgB,QAAQ,kBAAkB;YAC1C,WAAW,QAAQ;YACnB,QAAQ,QAAQ;UAClB,CAAC;QACH;MAEF;AAGA,SAAG,UAAU,SAAU,OAAO;AAC5B,WAAG,MAAM;AACT,YAAI,cAAc,KAAK;AACvB,gBAAQ,+BAAO,SAAS,eAAe;MACzC;AAGA,SAAG,UAAU,SAAU,OAAO;AAE5B,gBAAQ,oBAAoB,MAAM,QAAQ,eAAe;MAC3D;AAQA,UAAI,eAAe;AAEnB,SAAG,YAAY,SAAU,OAAO;AAC9B,YAAI;AAWF,cAAI,oBAAoB,KAAK,MAAM,MAAM,IAAI;AAC7C,cAAI,qBAAqB,mBAAmB,EAAE,gBAAgB,aAAa,CAAC;AAE5E,cAAI,kBAAkB,QAAQ,kBAAkB;AAC9C,oBAAQ,iBAAiB,kBAAkB;AAC3C,oBAAQ,KAAK;AAEb,wBAAY,SAAS,cAAc,SAAS,iBAAiB;AAE7D,eAAG;cACD,KAAK,UAAU;gBACb,MAAM;gBACN;cACF,CAAC;YACH;UACF,WAAW,kBAAkB,QAAQ,WAAW;AAC9C;cACE,kBAAkB;cAClB,kBAAkB;cAClB,kBAAkB;YACpB;AACA,gBAAI,gBAAgB,CAAC,kBAAkB,SAAS;AAE9C,wBAAU;;gBAER,OAAO,SACLD,UACAC,eACAC,UACAC,oBACA;AACA;oBACEH;oBACAC;oBACAC;oBACAC;kBACF;gBACF;;gBAEA,YAAY,WAAY;AACtB,qBAAG,MAAM;gBACX;cACF,CAAC;AACD,6BAAe;YACjB;UACF,WAAW,kBAAkB,QAAQ,OAAO;AAC1C,gBAAIC,aAAY,kBAAkB;AAClC,gBAAI,iBAAiB,gBAAgBA,WAAU,SAAS,CAAC;AACzD,2BAAe;AACf,mBAAO,gBAAgBA,WAAU,SAAS,CAAC;UAC7C,WAAW,kBAAkB,QAAQ,SAAS;AAC5C,gBAAIA,aAAY,kBAAkB;AAClC,eAAG,MAAM;AACT,oBAAQ,kBAAkB,SAAS,QAAQ;UAC7C,OAAO;AACL,gBAAI,mBAAmB,iBAAiB;AACxC,eAAG,MAAM;AACT,oBAAQ,mBAAmB,QAAQ;UACrC;QACF,SAAS,GAAG;AACV,aAAG,MAAM;AACT,cAAI,gBAAgB,CAAC;AACrB,kBAAQ,GAAG,QAAQ;QACrB;MACF;IACF;EACF,CAAC;AACH;AEjLA,IAAMC,mBAAkB;EACpB,WAAW;EACX,QAAQ;EACR,cAAc;IACV,cAAc;MACV,QAAQ;IACZ;IACA,aAAa;MACT,QAAQ;IACZ;IACA,WAAW;MACP,QAAQ;MACR,WAAW;IACf;IACA,UAAU;MACN,QAAQ;MACR,qBAAqB;QACjB,mBAAmB;UACf,QAAQ;UACR,cAAc;YACV,QAAQ;cACJ,QAAQ;YACZ;YACA,QAAQ;cACJ,QAAQ;cACR,QAAQ,CAAC,YAAY;YACzB;YACA,UAAU;cACN,QAAQ;cACR,qBAAqB;gBACjB,mBAAmB;kBACf,QAAQ;kBACR,cAAc;oBACV,QAAQ;sBACJ,QAAQ;sBACR,QAAQ,CAAC,UAAU,WAAW,UAAU,MAAM;oBAClD;oBACA,WAAW;sBACP,QAAQ;oBACZ;oBACA,YAAY;sBACR,QAAQ;oBACZ;kBACJ;kBACA,YAAY,CAAC,MAAM;gBACvB;cACJ;cACA,wBAAwB;YAC5B;UACJ;UACA,YAAY,CAAC,QAAQ;QACzB;MACJ;MACA,wBAAwB;IAC5B;EACJ;EACA,YAAY,CAAC,cAAc,WAAW,QAAQ;AAChD;AACF,IAAMC,OAAM,IAAI,YAAAC,QAAI;AACpB,IAAMC,aAAYF,KAAI,QAAQD,gBAAe;AAe7C,SAASI,gBAAe,QAA0D;AAC9E,QAAM,IAAID,WAAU,MAAM;AAC1B,SAAO;IACH,OAAO;IACP,QAAQA,WAAU,UAAU,CAAC;EACjC;AACJ;AAeA,SAAS,aAAa,QAAa,OAAe,MAA2B,gBAAyB,MAAM;AACxG,QAAM,QAAQC,gBAAe,MAAM;AACnC,MAAI,CAAC,MAAM,OAAO;AACd,WAAO,EAAE,OAAO,OAAO,QAAQ,MAAM,QAAQ,SAAS,oBAAoB;EAC9E;AAEA,QAAM,cAAc,OAAO,OAAO,KAAK;AAEvC,MAAI,CAAC,aAAa;AACd,WAAO,EAAE,OAAO,OAAO,QAAQ,CAAC,EAAE,SAAS,SAAS,KAAK,uBAAuB,CAAC,GAAG,SAAS,kBAAkB;EACnH;AAEA,aAAW,CAAC,WAAW,UAAU,KAAK,OAAO,QAAQ,IAAI,GAAG;AACxD,UAAM,cAAc,YAAY,OAAO,SAAS;AAEhD,QAAI,CAAC,aAAa;AACd,aAAO;QACH,OAAO;QACP,QAAQ,CAAC,EAAE,SAAS,SAAS,SAAS,uBAAuB,CAAC;QAC9D,SAAS;MACb;IACJ;AAEA,UAAM,aAAa,YAAY;AAC/B,UAAM,YAAY,OAAO;AAEzB,QACK,eAAe,YAAY,cAAc,YACzC,eAAe,YAAY,cAAc,YACzC,eAAe,aAAa,cAAc,aAC1C,eAAe,UAAU,cAAc,UAC1C;AACE,aAAO;QACH,OAAO;QACP,QAAQ,CAAC;UACL,SAAS,SAAS,SAAS,mBAAmB,UAAU,SAAS,SAAS;QAC9E,CAAC;QACD,SAAS;MACb;IACJ;EACJ;AAEA,MAAI,eAAe;AACf,eAAW,CAAC,WAAW,WAAW,KAAK,OAAO,QAAQ,YAAY,MAAM,GAAG;AACvE,UAAK,YAAuC,YAAY,CAAC,KAAK,SAAS,GAAG;AACtE,eAAO,EAAE,OAAO,OAAO,QAAQ,CAAC,EAAE,SAAS,SAAS,SAAS,eAAe,CAAC,GAAG,SAAS,yBAAyB;MACtH;IACJ;EACJ;AAEA,SAAO,EAAE,OAAO,MAAM,QAAQ,CAAC,EAAE;AACrC;AH3IA,aAAa;AAgBN,IAAM,YAAN,cAAwBC,MAAM;EAGnC,YAAY,MAAc,SAAc;AACtC,UAAM,MAAM,OAAO;AAHrB;AAUE,SAAK,eAAe,QAAQ;AAC5B,SAAK,QAAQ,CAAC,EAAE,OAAO,KAAK,yBAAyB,KAAK,YAAY,CAAC;AAEvE,SAAK,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;AAMzB,SAAK,WAAW,UAAU,MAAM,KAAK,WAAW,UAAU;EAS5D;EAEA,MAAM,QAAQ,EAAE,aAAa,GAA6B;AACxD,UAAM,SAAS,GAAG,UAAU;AAE5B,UAAM,KAAK,gBAAgB;AAE3B,QAAI,wBAAwB;AAC5B,WAAO,KAAK,SAAS,QAAQ,aAAa,QAAQ,EAAE,WAAW,cAAc,QAAQ,KAAK,aAAa,CAAC;EAC1G;EAEA,MAAM,aAAa;AACjB,UAAM,SAAS,GAAG,UAAU;AAE5B,WAAO,KAAK,SAAS,WAAW,MAAM;EACxC;EAEA,MAAc,kBAAkB;AAC9B,QAAI;AACF,YAAM,YAAY,MAAM,KAAK,MAAM,YAAY,EAAE,QAAQ;AACzD,YAAM,iBAAiB,UAAU,OAAO,CAAA,SAAQ,KAAK,SAAS,OAAO;AACrE,UAAI,qBAAqB,cAAc;AAEvC,UAAI,eAAe,SAAS,GAAG;AAG7B,cAAM,gBAAgB,KAAK,IAAI,GAAG,eAAe,IAAI,CAAA,SAAQ,KAAK,EAAE,CAAC;AAErE,cAAM,cAAc,eAAe,KAAK,CAAA,SAAQ,KAAK,OAAO,aAAa;AACzE,YAAI,eAAe,YAAY,aAAa,GAAG;AAC7C,cAAI,wDAAwD;AAC5D;QACF;AAGA,YAAI,oBAAoB,aAAa;AACrC,YAAI,iDAAiD;AAErD,mBAAW,QAAQ,gBAAgB;AACjC,cAAI,yBAAyB,KAAK,IAAI,KAAK,QAAQ;AACnD,gBAAM,KAAK,MAAM,YAAY,EAAE,OAAO,KAAK,IAAI,EAAE,UAAU,KAAK,OAAO,gBAAgB,IAAI,EAAE,CAAC;AAE9F,cAAI,sBAAsB,KAAK,EAAE,OAAO,KAAK,OAAO,gBAAgB,WAAW,GAAG,EAAE;QACtF;AAGA,cAAM,IAAI,QAAQ,CAAA,YAAW,WAAW,SAAS,GAAI,CAAC;AAEtD,YAAI,OAAO,WAAW,aAAa;AACjC,iBAAO,SAAS,OAAO;QACzB;MACF;AAEA,UAAI,oBAAoB;IAC1B,SAAS,OAAO;AACd,cAAQ,MAAM,oCAAoC,KAAK;IACzD;EACF;EAEA,mBAAmB,IAAS;AAC1B,SAAK,SAAS,GAAG,iBAAiB,EAAE;EACtC;EAGA,yBAAyB,QAAa;AACpC,UAAM,SAAS,OAAO,QAAQ,OAAO,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MAAW;AAEtE,YAAM,gBAAgB,OAAO,QAAQ,MAAM,MAAM,EAAE,OAAO,CAAC,CAACC,MAAK,KAAK,MAAW,MAAM,OAAO,EAAE,IAAI,CAAC,CAACA,MAAK,KAAK,MAAW,IAAIA,IAAG,EAAE,EAAE,KAAK,EAAE;AAC7I,aAAO;QACL,CAAC,GAAG,GAAG,OAAO;MAChB;IACF,CAAC;AAED,WAAO,OAAO,OAAO,CAAC,GAAG,GAAG,MAAM;EACpC;EAEA,YAAY;AAMV,WAAO,KAAK;EACd;EAEA,WAAW,MAAc;AAGvB,WAAO;;;;;MAML,KAAK,KAAK,MAAM,IAAI;;MAGpB,KAAK,CAAC,SAAc;AAGlB,cAAM,QAAQ,aAAa,KAAK,cAAc,MAAM,IAAI;AACxD,YAAI,CAAC,MAAM,OAAO;AAChB,cAAI,gBAAgB,KAAK;AACzB,iBAAO,QAAQ,OAAO,EAAE,GAAI,MAAM,CAAC;QACrC;AAEA,eAAO,KAAK,MAAM,IAAI,EAAE,IAAI;UAC1B,IAAI,WAAO;UACX,GAAG;QACL,CAAC;MAEH;MAEA,KAAK,CAAC,SAAc;AAClB,cAAM,QAAQ,aAAa,KAAK,cAAc,MAAM,IAAI;AACxD,YAAI,CAAC,MAAM,OAAO;AAChB,cAAI,gBAAgB,KAAK;AACzB,iBAAO,QAAQ,OAAO,EAAE,GAAI,MAAM,CAAC;QACrC;AAEA,eAAO,KAAK,MAAM,IAAI,EAAE,IAAI;UAC1B,IAAI,WAAO;UACX,GAAG;QACL,CAAC;MACH;MAEA,QAAQ,CAAC,IAAY,SAAc;AACjC,cAAM,QAAQ,aAAa,KAAK,cAAc,MAAM,MAAM,KAAK;AAC/D,YAAI,CAAC,MAAM,OAAO;AAChB,cAAI,gBAAgB,KAAK;AACzB,iBAAO,QAAQ,OAAO,EAAE,GAAI,MAAM,CAAC;QACrC;AAEA,eAAO,KAAK,MAAM,IAAI,EAAE,OAAO,IAAI,IAAI;MACzC;MAEA,QAAQ,CAAC,OAAe;AACtB,eAAO,KAAK,MAAM,IAAI,EAAE,OAAO,EAAE;MACnC;;MAKA,KAAK,OAAO,OAAe;AACzB,eAAO,KAAK,MAAM,IAAI,EAAE,IAAI,EAAE;MAChC;MAEA,QAAQ,YAAY;AAClB,eAAO,KAAK,MAAM,IAAI,EAAE,QAAQ;MAClC;;;MAKA,OAAO,MAAM,KAAK,MAAM,IAAI;MAE5B,QAAQ,CAAC,OAAY,KAAK,MAAM,IAAI,EAAE,OAAO,EAAE,EAAE,QAAQ;IAE3D;EACF;AACF;AItNA,IAAM,UAAU;AAIhB,eAAe,IAAI,EAAE,WAAW,WAAW,WAAW,MAAM,GAAG;AAC3D,QAAM,MAAM,GAAG,OAAO,YAAY,SAAS,OAAO,SAAS,IAAI,SAAS;AACxE,QAAM,WAAW,MAAM,MAAM,KAAK;IAC9B,SAAS;MACL,iBAAiB,UAAU,KAAK;IACpC;EACJ,CAAC;AACD,SAAO,SAAS,KAAK;AACzB;AAEA,eAAeC,KAAI,EAAE,WAAW,WAAW,WAAW,OAAO,MAAM,GAAG;AAClE,QAAM,MAAM,GAAG,OAAO,YAAY,SAAS,OAAO,SAAS,IAAI,SAAS;AACxE,QAAM,WAAW,MAAM,MAAM,KAAK;IAC9B,QAAQ;IACR,SAAS;MACL,gBAAgB;MAChB,iBAAiB,UAAU,KAAK;IACpC;IACA,MAAM,KAAK,UAAU,EAAC,SAAS,MAAK,CAAC;EACzC,CAAC;AACD,SAAO,SAAS,KAAK;AACzB;AAEA,eAAe,OAAO,EAAE,WAAW,WAAW,WAAW,IAAI,OAAO,MAAM,GAAG;AACzE,QAAM,MAAM,GAAG,OAAO,YAAY,SAAS,OAAO,SAAS,IAAI,SAAS,IAAI,EAAE;AAC9E,QAAM,WAAW,MAAM,MAAM,KAAK;IAC9B,QAAQ;IACR,SAAS;MACL,gBAAgB;MAChB,iBAAiB,UAAU,KAAK;IACpC;IACA,MAAM,KAAK,UAAU,EAAC,IAAQ,MAAY,CAAC;EAC/C,CAAC;AACD,SAAO,SAAS,KAAK;AACzB;AAEA,eAAe,aAAa,EAAE,WAAW,WAAW,WAAW,IAAI,MAAM,GAAG;AACxE,QAAM,MAAM,GAAG,OAAO,YAAY,SAAS,OAAO,SAAS,IAAI,SAAS,IAAI,EAAE;AAC9E,QAAM,WAAW,MAAM,MAAM,KAAK;IAC9B,QAAQ;IACR,SAAS;MACL,iBAAiB,UAAU,KAAK;IACpC;EACJ,CAAC;AACD,SAAO,SAAS,KAAK;AACzB;ACjDE,IAAA,UAAW;ANiDN,IAAM,mBAAe,6BAWzB;EACC,SAAS;EACT,aAAa;EACb,YAAY;EACZ,MAAM;EACN,SAAS,MAAM;EAAE;EACjB,QAAQ,MAAM;EAAE;EAChB,UAAU,MAAM,IAAI,QAAQ,MAAM;EAAE,CAAC;EACrC,eAAe,MAAM;EACrB,IAAI,CAAC;EACL,UAAU;;AACd,CAAC;AAcD,eAAe,gBAAgB,QAAa;AACxC,QAAM,YAAY,OAAO;AACzB,MAAI,SAAS;AACb,QAAM,QAAQH,eAAe,MAAM;AAEnC,MAAI,CAAC,MAAM,OAAO;AACd,YAAQ,KAAK,iGAAiG;AAC9G,WAAO;MACH,OAAO;MACP,QAAQ;MACR,QAAQ;IACZ;EACJ;AAEA,QAAM,eAAe,MAAM,MAAM,kCAAkC,SAAS,SAAS,EACpF,KAAK,CAAA,QAAO,IAAI,KAAK,CAAC,EACtB,KAAK,CAAA,SAAQ,KAAK,KAAK,CAAC,EAAE,MAAM,EAChC,MAAM,CAAA,QAAO;AACV,WAAO;MACH,OAAO;MACP,QAAQ;MACR,QAAQ;IACZ;EACJ,CAAC;AAED,MAAI,CAAC,aAAa,SAAS;AACvB,WAAO;MACH,OAAO;MACP,QAAQ;MACR,QAAQ;IACZ;EACJ;AAEA,MAAI,aAAa,UAAU,OAAO,SAAS;AAEvC,YAAQ,KAAK,iFAAiF,OAAO,SAAS,gBAAgB,aAAa,SAAS,qBAAqB;AACzK,WAAO;MACH,OAAO;MACP,QAAQ;MACR,QAAQ;IACZ;EACJ,WAAW,aAAa,UAAU,OAAO,SAAS;AAE9C,YAAQ,KAAK,mFAAmF,OAAO,SAAS,gBAAgB,aAAa,SAAS,qBAAqB;AAC3K,WAAO;MACH,OAAO;MACP,QAAQ;MACR,QAAQ;IACZ;EACJ,WAAW,aAAa,YAAY,OAAO,SAAS;AAChD,UAAM,UAAU,eAAe,QAAQ,YAAY;AACnD,QAAI,QAAQ,OAAO;AACf,aAAO;QACH,OAAO;QACP,QAAQ;QACR,QAAQ;MACZ;IACJ,OAAO;AAEH,cAAQ,KAAK,kFAAkF,OAAO,SAAS,iCAAiC,aAAa,SAAS,qBAAqB;AAC3L,aAAO;QACH,OAAO;QACP,QAAQ;QACR,QAAQ;MACZ;IACJ;EACJ,OAAO;AACH,WAAO;MACH,OAAO;MACP,QAAQ;MACR,QAAQ;IACZ;EACJ;AACJ;AAGA,SAAS,cAAc,YAA4B;AAC/C,UAAQ,YAAY;IAChB,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX;AACI,aAAO;EACf;AACJ;AAQA,eAAe,qBAAuH;AAClI,MAAI;AAEA,UAAM,SAAS,QAAe,SAAS,MAAM;AAE7C,UAAM,WAAW,MAAM,MAAM,+CAA+C,SAAS,SAAS,QAAQ,EAAE;AACxG,QAAI,CAAC,SAAS,IAAI;AACd,YAAM,IAAI,MAAM,kCAAkC;IACtD;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,UAAM,gBAAgB,KAAK;AAE3B,QAAI,kBAAkB,SAAgB;AAClC,cAAQ,KAAK,kCAAkC,eAAe;oCAAuC,aAAa,aAAa;IACnI;AACA,QAAI,QAAQ;AACR,UAAI,gDAAgD;IACxD;AAEA,WAAO;MACH,eAAe,YAAmB;MAClC;MACA,gBAAA;IACJ;EACJ,SAAS,OAAO;AACZ,QAAI,mCAAmC,KAAK;AAC5C,WAAO;MACH,eAAe;MACf,eAAe;MACf,gBAAgB;IACpB;EACJ;AACJ;AAEO,SAAS,cAAc,EAAE,UAAU,YAAY,QAAQ,QAAQ,MAAM,GAAsF;AAC9J,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAS,KAAK;AACpD,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAkB,KAAK;AAC3D,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAuB,IAAI;AACrD,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAe,CAAC,CAAC;AACzC,QAAM,CAAC,eAAe,gBAAgB,QAAI,wBAAkB,KAAK;AACjE,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAkB,KAAK;AAErD,QAAM,CAAC,UAAU,WAAW,QAAI;IAAmB;;EAAgB;AACnE,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAA6B,IAAI;AAE3D,QAAM,cAAU,sBAAyB,IAAI;AAE7C,+BAAU,MAAM;AACZ,aAAS,OAAO,SAAqC;AACjD,UAAI,CAAC,QAAQ,SAAS;AAClB,YAAI,sBAAsB;AAC1B,gBAAQ,UAAU,IAAI,UAAU,WAAW,EAAE,OAAe,CAAC;AAE7D,gBAAQ,QAAQ,SAAS,GAAG,iBAAiB,CAAC,QAAgB,QAAgB;AAC1E,sBAAY,cAAc,MAAM,CAAC;QACrC,CAAC;AAED,gBAAQ,QAAQ,SAAS,UAAU,EAAE,KAAK,CAAC,WAAW;AAClD,sBAAY,cAAc,MAAM,CAAC;QACrC,CAAC;AAED,YAAI,QAAQ,eAAe;AACvB,2BAAiB,IAAI;QACzB,OAAO;AACH,cAAI,kBAAkB;QAC1B;AAEA,mBAAW,IAAI;MAOnB;IACJ;AAEA,mBAAe,cAAc;AACzB,YAAM,QAAQA,eAAe,MAAM;AACnC,UAAI,CAAC,MAAM,OAAO;AACd,YAAI,4BAA4B,MAAM,MAAM;AAC5C,gBAAQ,MAAM,eAAe;AAC7B,YAAI,eAAe;AACnB,cAAM,OAAO,QAAQ,CAACI,QAAO,UAAU;AACnC,cAAI,GAAG,QAAQ,CAAC,KAAKA,OAAM,SAAS,SAASA,OAAM,YAAY,EAAE;AACjE,0BAAgB,GAAG,QAAQ,CAAC,KAAKA,OAAM,OAAO,SAASA,OAAM,YAAY;;QAC7E,CAAC;AACD,gBAAQ,SAAS,eAAe;AAChC,iBAAS;UACL,MAAM;UACN,OAAO;UACP,SAAS;QACb,CAAC;AACD,mBAAW,IAAI;AACf,eAAO;MACX;AAGA,UAAI,eAAe,EAAE,OAAO,MAAM;AAClC,UAAI,OAAO,YAAY,GAAG;AACtB,uBAAe,MAAM,gBAAgB,MAAM;MAC/C;AAEA,UAAI,aAAa,OAAO;AACpB,eAAO,EAAE,eAAe,KAAK,CAAC;MAClC,OAAO;AACH,eAAO,EAAE,eAAe,MAAM,CAAC;MACnC;AAEA,yBAAmB;IACvB;AAEA,QAAI,QAAQ;AACR,kBAAY;IAChB,OAAO;AACH,iBAAW,IAAI;IACnB;EACJ,GAAG,CAAC,CAAC;AAGL,+BAAU,MAAM;AACZ,QAAI,SAAS,QAAQ,WAAW,cAAc,eAAe;AACzD,kBAAY;IAChB;EACJ,GAAG,CAAC,YAAY,aAAa,CAAC;AAE9B,+BAAU,MAAM;;AACZ,iBAAa,QAAQ,eAAe,QAAQ,SAAS,OAAO;AAE5D,QAAI;AACA,UAAI,OAAO,SAAS,OAAO,SAAS,MAAM,GAAG;AACzC,YAAI,QAAO,kBAAO,aAAP,mBAAiB,WAAjB,mBAAyB,MAAM,SAAS,GAAG,MAAM,KAAK;AAEjE,cAAM,QAAQ,aAAa,QAAQ,kBAAkB;AACrD,YAAI,CAAC,SAAS,UAAU,OAAO,SAAS,OAAO,MAAM,QAAQ,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,GAAG;AAC7E,cAAI,kCAAkC;AACtC,yBAAe,IAAI;AAEnB,uBAAa,WAAW,kBAAkB;AAC1C,iBAAO,QAAQ,UAAU,CAAC,GAAG,SAAS,OAAO,GAAG;AAChD;QACJ;AAEA,qBAAa,WAAW,kBAAkB;AAE1C,mBAAW,IAAI;MACnB,OAAO;AACH,YAAI,eAAe,UAAU,aAAa;AAC1C,YAAI,iBAAiB,IAAI;AACrB,mBAAS,KAAK,MAAM,YAAY,CAAC;QACrC,OAAO;AACH,yBAAe,IAAI;QACvB;MACJ;IAGJ,SAAS,GAAG;AACR,UAAI,wBAAwB,CAAC;IACjC;EACJ,GAAG,CAAC,CAAC;AAEL,+BAAU,MAAM;AACZ,mBAAe,UAAU,WAAmB;AACxC,cAAQ,KAAK,eAAe;AAC5B,YAAMC,QAAO,MAAM,MAAM,wCAAwC;QAC7D,QAAQ;QACR,SAAS;UACL,iBAAiB,UAAU,SAAS;QACxC;MACJ,CAAC,EACI,KAAK,CAAA,aAAY,SAAS,KAAK,CAAC,EAChC,MAAM,CAAAD,WAAS,IAAI,UAAUA,MAAK,CAAC;AAExC,UAAIC,MAAK,OAAO;AACZ,YAAI,uBAAuBA,MAAK,KAAK;AAErC;MACJ,OAAO;AAEH,iBAAS,SAAS,eAAe,KAAK,UAAU,KAAK,CAAC;AAEtD,YAAI,OAAO,SAAS,OAAO,SAAS,MAAM,GAAG;AACzC,iBAAO,QAAQ,UAAU,CAAC,GAAG,SAAS,OAAO,GAAG;QACpD;AAEA,gBAAQA,KAAI;AACZ,sBAAc,IAAI;AAElB,uBAAe,IAAI;MACvB;IACJ;AAEA,mBAAe,aAAa;AACxB,UAAI,CAAC,OAAO;AACR,YAAI,4BAA4B;AAEhC,uBAAe,IAAI;AACnB;MACJ;AAEA,YAAM,UAAU,UAAU,+BAAO,YAAY;AAC7C,YAAM,YAAY,QAAQ,OAAO,QAAQ,MAAM,KAAK,IAAI,IAAI;AAE5D,UAAI,WAAW;AACX,YAAI,mCAAmC;AACvC,cAAM,WAAW,MAAM,WAAW,+BAAO,OAAO;AAChD,kBAAU,SAAS,YAAY;MACnC,OAAO;AACH,kBAAU,MAAM,YAAY;MAChC;IACJ;AAEA,QAAI,OAAO;AACP,iBAAW;IACf;EACJ,GAAG,CAAC,KAAK,CAAC;AAEV,QAAM,cAAc,YAAY;AAC5B,UAAM,MAAM,MAAM,SAAS;AAC3B,QAAI,CAAC,KAAK;AACN,UAAI,gBAAgB;AACpB;IACJ;AAEA,QAAI,qBAAqB;AAIzB,YAAQ,QAAQ,QAAQ,EAAE,cAAc,IAAI,CAAC,EACxC,MAAM,CAAC,MAAM;AACV,UAAI,0BAA0B,CAAC;IACnC,CAAC;EACT;AAEA,QAAM,gBAAgB,MAAM;AACxB,QAAI,yBAAyB;AAE7B,UAAM,cAAc,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,CAAC;AAC1D,iBAAa,QAAQ,oBAAoB,WAAW;AAEpD,QAAIC,WAAU;AACdA,gBAAW,cAAc,UAAU;AACnCA,gBAAW,iBAAiB,mBAAmB,OAAO,SAAS,IAAI,CAAC;AACpEA,gBAAW;AACXA,gBAAW;AACXA,gBAAW,UAAU,WAAW;AAEhC,WAAOA;EACX;AAEA,QAAM,SAAS,MAAM;AACjB,QAAI,gBAAgB,cAAc,CAAC;AACnC,UAAM,aAAa,cAAc;AAEjC,WAAO,SAAS,OAAO;EAC3B;AAEA,QAAM,UAAU,MAAM;AAClB,QAAI,cAAc;AAClB,YAAQ,CAAC,CAAC;AACV,kBAAc,KAAK;AACnB,aAAS,IAAI;AACb,aAAS,SAAS;AAClB,iBAAa,WAAW,kBAAkB;AAQ1C,QAAI,QAAQ,SAAS;AACjB,OAAC,YAAY;;AACT,YAAI;AACA,gBAAM,QAAQ,QAAQ,MAAM;AAC5B,gBAAM,QAAQ,QAAQ,OAAO,EAAC,iBAAiB,MAAK,CAAC;AACrD,kBAAQ,UAAU;AAClB,iDAAQ,aAAR,mBAAkB;QACtB,SAASF,QAAO;AACZ,kBAAQ,MAAM,kCAAkCA,MAAK;QACzD;MACJ,GAAG;IACP;EACJ;AAEA,QAAM,WAAW,YAA6B;AAC1C,QAAI,kBAAkB;AAEtB,QAAI,CAAC,OAAO;AACR,UAAI,gBAAgB;AACpB,YAAM,IAAI,MAAM,gBAAgB;IACpC;AAEA,UAAM,UAAU,UAAU,+BAAO,YAAY;AAC7C,UAAM,YAAY,QAAQ,OAAO,QAAQ,MAAM,KAAK,IAAI,IAAI;AAE5D,QAAI,WAAW;AACX,UAAI,mCAAmC;AACvC,YAAM,WAAW,MAAM,WAAW,+BAAO,OAAO;AAChD,cAAO,qCAAU,iBAAgB;IACrC;AAEA,YAAO,+BAAO,iBAAgB;EAClC;AAEA,WAAS,UAAU,MAAc;AAC7B,QAAI,cAAc;AAClB,QAAI,SAAS,UAAU,SAAS,WAAW,IAAI;AAC3C,YAAM,UAAU,SAAS,OAAO,MAAM,GAAG;AACzC,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,cAAM,SAAS,QAAQ,CAAC,EAAE,KAAK;AAC/B,YAAI,OAAO,UAAU,GAAG,KAAK,SAAS,CAAC,MAAO,OAAO,KAAM;AACvD,wBAAc,mBAAmB,OAAO,UAAU,KAAK,SAAS,CAAC,CAAC;AAClE;QACJ;MACJ;IACJ;AACA,WAAO;EACX;AAEA,QAAM,aAAa,OAAO,SAAiB;AACvC,UAAMG,SAAQ,MAAM,MAAM,qCAAqC;MAC3D,QAAQ;MACR,SAAS;QACL,gBAAgB;MACpB;MACA,MAAM,KAAK,UAAU,EAAE,KAAW,CAAC;IACvC,CAAC,EACI,KAAK,CAAA,aAAY,SAAS,KAAK,CAAC,EAChC,MAAM,CAAAH,WAAS,IAAI,UAAUA,MAAK,CAAC;AAExC,QAAIG,OAAM,OAAO;AACb,UAAI,wBAAwBA,OAAM,KAAK;AACvC;IACJ,OAAO;AAEH,eAASA,MAAK;IAClB;AACA,WAAOA;EACX;AAGA,QAAM,MAAM,CAAC,cAAsB;AAC/B,UAAM,cAAc,MAAM;AACtB,UAAI,CAAC,YAAY;AACb,cAAM,IAAI,MAAM,oCAAoC;MACxD;IACJ;AAEA,WAAO;MACH,KAAK,YAAY;AACb,oBAAY;AACZ,cAAM,MAAM,MAAM,SAAS;AAC3B,eAAO,IAAI,EAAE,WAAW,YAAY,WAAW,KAAK,IAAI,WAAsB,OAAO,IAAI,CAAC;MAC9F;MACA,KAAK,OAAO,UAAe;AACvB,oBAAY;AACZ,cAAM,MAAM,MAAM,SAAS;AAC3B,eAAOJ,KAAI,EAAE,WAAW,YAAY,WAAW,KAAK,IAAI,WAAsB,OAAc,OAAO,IAAI,CAAC;MAC5G;MACA,QAAQ,OAAO,IAAY,UAAe;AACtC,oBAAY;AACZ,cAAM,MAAM,MAAM,SAAS;AAC3B,eAAO,OAAO,EAAE,WAAW,YAAY,WAAW,KAAK,IAAI,WAAsB,IAAQ,OAAc,OAAO,IAAI,CAAC;MACvH;MACA,QAAQ,OAAO,OAAe;AAC1B,oBAAY;AACZ,cAAM,MAAM,MAAM,SAAS;AAC3B,eAAO,aAAa,EAAE,WAAW,YAAY,WAAW,KAAK,IAAI,WAAsB,IAAQ,OAAO,IAAI,CAAC;MAC/G;IAEJ;EAEJ;AAEA,QAAM,OAAQ;IACV,YAAY,MAAM;AACd,YAAM,IAAI,MAAM,qEAAqE;IACzF;EACJ;AAEA,aACI,yBAAC,aAAa,UAAb,EAAsB,OAAO;IAC1B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,QAAQ,UAAU,QAAQ,UAAU;IACxC;EACJ,GACK,UAAA;IAAA,aAAS,wBAAC,cAAA,EAAa,MAAA,CAAc;IACrC,WAAW;EAAA,EAAA,CAChB;AAER;AAEA,SAAS,aAAa,EAAE,MAAM,GAA2B;AACrD,aAAO,yBAAC,OAAA,EAAI,OAAO;IACf,UAAU;IACV,KAAK;IACL,MAAM;IACN,OAAO;IACP,iBAAiB;IACjB,QAAQ;IACR,cAAc;IACd,SAAS;IACT,UAAU;IACV,QAAQ;IACR,WAAW;IACX,YAAY;EACf,GACG,UAAA;QAAA,yBAAC,MAAA,EAAG,OAAO,EAAC,UAAU,UAAU,SAAS,IAAG,GAAG,UAAA;MAAA;MAAO,MAAM;IAAA,EAAA,CAAK;QACjE,wBAAC,MAAA,EAAG,OAAO,EAAC,UAAU,UAAU,YAAY,MAAK,GAAI,UAAA,MAAM,MAAA,CAAM;QACjE,wBAAC,KAAA,EAAG,UAAA,MAAM,QAAA,CAAQ;EAAA,EAAA,CACtB;AACJ;AAQO,SAAS,WAAW;AACvB,aAAO,0BAAW,YAAY;AAClC;",
  "names": ["d", "b", "__assign", "override", "asap", "DexieError", "nop", "promisableChain", "_a", "type", "resolve", "reject", "props", "Entity", "cmp", "Table", "task", "trans", "Promise", "keys", "i", "add", "args", "PropModification", "Collection", "count", "direction", "WhereClause", "addRange", "ranges", "Transaction", "p", "db", "tables", "keyPath", "compound", "result", "req", "openCursor", "query", "ev", "hasGetAll", "oldVersion", "tableChange", "version", "Version", "indexedDB", "Dexie", "RangeSet", "mergeRanges", "target", "rangesOverlap", "safari14Workaround", "index", "primaryKey", "dxTrans", "cache", "key", "state", "Observable", "liveQuery", "_Dexie", "Debug.debug", "Debug.setDebug", "remove", "replacePrefix", "UsedValueState", "self", "f", "Type", "self", "DataType", "validate", "_a", "self", "self", "validate", "parse", "Ajv", "validateSchema", "log", "self", "self", "DiscrError", "Ajv", "UsedValueState", "self", "f", "Type", "self", "DataType", "validate", "_a", "self", "require_json_schema_traverse", "self", "validate", "require_data", "Ajv", "validateSchema", "log", "self", "self", "DiscrError", "require_json_schema_draft_07", "Ajv", "import_react", "URL", "version", "_Dexie", "trans", "Observable", "localStorage", "Promise", "global", "CREATE", "UPDATE", "DELETE", "collection", "Promise$2", "node", "activePeer", "override", "Promise$1", "Observable", "import_ajv", "Ajv", "React", "observable", "changes", "baseRevision", "partial", "onChangesAccepted", "requestId", "basicJsonSchema", "ajv", "Ajv", "validator", "validateSchema", "Dexie", "key", "add", "error", "user", "baseUrl", "token"]
}
